{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0","program":"C:\\Users\\EdsoLabs\\.rustup\\toolchains\\stable-x86_64-pc-windows-gnu\\bin\\rls.exe","arguments":["--crate-name","gimli","--edition=2018","C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"endian-reader\"","--cfg","feature=\"fallible-iterator\"","--cfg","feature=\"indexmap\"","--cfg","feature=\"read\"","--cfg","feature=\"stable_deref_trait\"","--cfg","feature=\"std\"","--cfg","feature=\"write\"","-C","metadata=7cc5ec62eb5d2475","-C","extra-filename=-7cc5ec62eb5d2475","--out-dir","d:\\Work\\add_node_and_voting\\target\\rls\\debug\\deps","-L","dependency=d:\\Work\\add_node_and_voting\\target\\rls\\debug\\deps","--extern","fallible_iterator=d:\\Work\\add_node_and_voting\\target\\rls\\debug\\deps\\libfallible_iterator-cdf2ca9b91ce792d.rmeta","--extern","indexmap=d:\\Work\\add_node_and_voting\\target\\rls\\debug\\deps\\libindexmap-84d79dc8d259e280.rmeta","--extern","stable_deref_trait=d:\\Work\\add_node_and_voting\\target\\rls\\debug\\deps\\libstable_deref_trait-3dc72fc72dfac799.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\EdsoLabs\\.rustup/toolchains/stable-x86_64-pc-windows-gnu"],"output":"d:\\Work\\add_node_and_voting\\target\\rls\\debug\\deps\\libgimli-7cc5ec62eb5d2475.rmeta"},"prelude":{"crate_id":{"name":"gimli","disambiguator":[3475668527321679667,0]},"crate_root":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src","external_crates":[{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[3349811929551758155,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[1702804679386379989,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[15672416423928090423,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[8598227792379188233,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":5,"id":{"name":"std","disambiguator":[14227917269865929319,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[5769158474563825368,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3530648977582343522,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2506787063780951408,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[18217546505148666724,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1477758975480187253,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[7478112954929493085,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8303736825855284965,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6920191638365057331,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[8036275889558659698,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[11512984086232062831,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":16,"id":{"name":"gimli","disambiguator":[9271252611893390968,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":17,"id":{"name":"object","disambiguator":[9703519715559763083,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":18,"id":{"name":"memchr","disambiguator":[18086250815212929056,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[3374753690728624589,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","num":20,"id":{"name":"stable_deref_trait","disambiguator":[7789420736545187926,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\abbrev.rs","num":21,"id":{"name":"indexmap","disambiguator":[9927399468624608072,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\abbrev.rs","num":22,"id":{"name":"serde","disambiguator":[12438295202755371823,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\abbrev.rs","num":23,"id":{"name":"serde_derive","disambiguator":[16785847076591356438,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\abbrev.rs","num":24,"id":{"name":"hashbrown","disambiguator":[15093707527796431604,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","num":25,"id":{"name":"fallible_iterator","disambiguator":[10805690409869756683,0]}}],"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":0,"byte_end":2134,"line_start":1,"line_end":75,"column_start":1,"column_end":15}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":9},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1644,"byte_end":1660,"line_start":48,"line_end":48,"column_start":30,"column_end":46},"alias_span":null,"name":"CloneStableDeref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":8},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1662,"byte_end":1673,"line_start":48,"line_end":48,"column_start":48,"column_end":59},"alias_span":null,"name":"StableDeref","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1712,"byte_end":1713,"line_start":51,"line_end":51,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Format","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1747,"byte_end":1748,"line_start":54,"line_end":54,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1821,"byte_end":1822,"line_start":58,"line_end":58,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6625},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1867,"byte_end":1876,"line_start":61,"line_end":61,"column_start":28,"column_end":37},"alias_span":null,"name":"BigEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6626},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1867,"byte_end":1876,"line_start":61,"line_end":61,"column_start":28,"column_end":37},"alias_span":null,"name":"BigEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1878,"byte_end":1887,"line_start":61,"line_end":61,"column_start":39,"column_end":48},"alias_span":null,"name":"Endianity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6609},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1889,"byte_end":1901,"line_start":61,"line_end":61,"column_start":50,"column_end":62},"alias_span":null,"name":"LittleEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6610},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1889,"byte_end":1901,"line_start":61,"line_end":61,"column_start":50,"column_end":62},"alias_span":null,"name":"LittleEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1903,"byte_end":1915,"line_start":61,"line_end":61,"column_start":64,"column_end":76},"alias_span":null,"name":"NativeEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1903,"byte_end":1915,"line_start":61,"line_end":61,"column_start":64,"column_end":76},"alias_span":null,"name":"NativeEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6590},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1917,"byte_end":1930,"line_start":61,"line_end":61,"column_start":78,"column_end":91},"alias_span":null,"name":"RunTimeEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"DebugAddr","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86366,"byte_end":86367,"line_start":177,"line_end":177,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"BaseAddresses, UnwindOffset, UnwindSection, Pointer, FrameDescriptionEntry, CommonInformationEntry, CallFrameInstruction, CieOrFde","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86402,"byte_end":86403,"line_start":180,"line_end":180,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Unit, Dwarf","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86452,"byte_end":86453,"line_start":183,"line_end":183,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"EndianSlice","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86572,"byte_end":86573,"line_start":188,"line_end":188,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86610,"byte_end":86611,"line_start":191,"line_end":191,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"ReaderOffset, ReaderOffsetId, Reader","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86648,"byte_end":86649,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Abbreviations, Abbreviation, DebugAbbrev, AttributeSpecification","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86688,"byte_end":86689,"line_start":197,"line_end":197,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86722,"byte_end":86723,"line_start":200,"line_end":200,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"IncompleteLineProgram, DebugLine, ColumnType, LineRow, LineInstruction","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86764,"byte_end":86765,"line_start":203,"line_end":203,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"RawLocListEntry, LocationLists, RawLocListIter, LocListIter","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86807,"byte_end":86808,"line_start":208,"line_end":208,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"Expression, Operation, DieReference","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86849,"byte_end":86850,"line_start":211,"line_end":211,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86891,"byte_end":86892,"line_start":214,"line_end":214,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86933,"byte_end":86934,"line_start":217,"line_end":217,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"RangeLists, Range, RawRange, RngListIter, RawRngListIter, RawRngListEntry","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86965,"byte_end":86966,"line_start":220,"line_end":220,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"DebugLineStr, DebugStrOffsets, DebugStr","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86999,"byte_end":87000,"line_start":223,"line_end":223,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"UnitHeader, EntriesRaw, CompilationUnitHeadersIter, EntriesTreeNode, TypeUnitHeadersIter, DebugInfo, DebugTypes, CompilationUnitHeader, EntriesCursor, Attribute, UnitOffset, TypeUnitHeader, EntriesTree, DebuggingInformationEntry, AttributeValue, parse_debug_info_offset","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87035,"byte_end":87036,"line_start":226,"line_end":226,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"ValueType, Value","parent":{"krate":0,"index":155}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":2061,"byte_end":2062,"line_start":69,"line_end":69,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"CallFrameInstruction","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125795,"byte_end":1125796,"line_start":68,"line_end":68,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2915}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125833,"byte_end":1125834,"line_start":71,"line_end":71,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Writer","parent":{"krate":0,"index":2915}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125886,"byte_end":1125887,"line_start":75,"line_end":75,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Section, Sections","parent":{"krate":0,"index":2915}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127406,"byte_end":1127407,"line_start":136,"line_end":136,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"AbbreviationTable, Abbreviation, DebugAbbrev, AttributeSpecification","parent":{"krate":0,"index":2915}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127438,"byte_end":1127439,"line_start":139,"line_end":139,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"EhFrame, DebugFrame","parent":{"krate":0,"index":2915}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127474,"byte_end":1127475,"line_start":142,"line_end":142,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2915}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1247241,"byte_end":1247242,"line_start":939,"line_end":939,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"FileId","parent":{"krate":0,"index":3338}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127508,"byte_end":1127509,"line_start":145,"line_end":145,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"LineProgram, FileId, DebugLine","parent":{"krate":0,"index":2915}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127540,"byte_end":1127541,"line_start":148,"line_end":148,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"DebugLocLists, LocationList, LocationListOffsets, LocationListTable, DebugLoc, LocationListId","parent":{"krate":0,"index":2915}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127570,"byte_end":1127571,"line_start":151,"line_end":151,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"Expression","parent":{"krate":0,"index":2915}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127606,"byte_end":1127607,"line_start":154,"line_end":154,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"RangeListId, DebugRanges, DebugRngLists, RangeListOffsets, RangeList, RangeListTable","parent":{"krate":0,"index":2915}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127638,"byte_end":1127639,"line_start":157,"line_end":157,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"DebugLineStrOffsets, DebugLineStr, LineStringId, StringTable, DebugStrOffsets, StringId, DebugStr, LineStringTable","parent":{"krate":0,"index":2915}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127672,"byte_end":1127673,"line_start":160,"line_end":160,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"DebugInfo, Unit, UnitTable, UnitOffsets, UnitEntryId, UnitId, DebugInfoReference","parent":{"krate":0,"index":2915}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1138088,"byte_end":1138089,"line_start":422,"line_end":422,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"ConvertError, ConvertResult, ConvertUnitContext","parent":{"krate":0,"index":2915}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":0,"byte_end":2134,"line_start":1,"line_end":75,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":155},{"krate":0,"index":2914},{"krate":0,"index":2915}],"decl_id":null,"docs":" `gimli` is a library for reading and writing the\n [DWARF debugging format](http://dwarfstd.org/).","sig":null,"attributes":[{"value":"/ `gimli` is a library for reading and writing the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":0,"byte_end":52,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/ [DWARF debugging format](http://dwarfstd.org/).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":53,"byte_end":104,"line_start":2,"line_end":2,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":105,"byte_end":108,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ See the [read](./read/index.html) and [write](./write/index.html) modules","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":109,"byte_end":186,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ for examples and API documentation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":187,"byte_end":226,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":227,"byte_end":230,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Cargo Features","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":231,"byte_end":252,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":253,"byte_end":256,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Cargo features that can be enabled with `gimli`:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":257,"byte_end":309,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":310,"byte_end":313,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `std`: Enabled by default. Use the `std` library. Disabling this feature","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":314,"byte_end":392,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ allows using `gimli` in embedded environments that do not have access to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":393,"byte_end":469,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `std`. Note that even when `std` is disabled, `gimli` still requires an","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":470,"byte_end":545,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ implementation of the `alloc` crate.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":546,"byte_end":586,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":587,"byte_end":590,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `read`: Enabled by default. Enables the `read` module. Use of `std` is","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":591,"byte_end":667,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ optional.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":668,"byte_end":681,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":682,"byte_end":685,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `write`: Enabled by default. Enables the `write` module. Always uses","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":686,"byte_end":760,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ the `std` library.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":761,"byte_end":783,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":784,"byte_end":806,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":807,"byte_end":846,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"warn(bare_trait_objects)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":888,"byte_end":916,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"warn(unused_extern_crates)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":917,"byte_end":947,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"warn(ellipsis_inclusive_range_patterns)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":948,"byte_end":991,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"warn(explicit_outlives_requirements)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1030,"byte_end":1070,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"allow(unknown_lints)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1133,"byte_end":1157,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1203,"byte_end":1244,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"allow(clippy :: never_loop)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1291,"byte_end":1320,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"allow(clippy :: panic_params)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1393,"byte_end":1424,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"no_std","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1425,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4128},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2293,"byte_end":2300,"line_start":5,"line_end":5,"column_start":5,"column_end":12},"name":"Dwarf64","qualname":"::common::Format::Dwarf64","value":"Format::Dwarf64","parent":{"krate":0,"index":4127},"children":[],"decl_id":null,"docs":" 64-bit DWARF\n","sig":null,"attributes":[{"value":"/ 64-bit DWARF","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2272,"byte_end":2288,"line_start":4,"line_end":4,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4131},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2331,"byte_end":2338,"line_start":7,"line_end":7,"column_start":5,"column_end":12},"name":"Dwarf32","qualname":"::common::Format::Dwarf32","value":"Format::Dwarf32","parent":{"krate":0,"index":4127},"children":[],"decl_id":null,"docs":" 32-bit DWARF\n","sig":null,"attributes":[{"value":"/ 32-bit DWARF","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2310,"byte_end":2326,"line_start":6,"line_end":6,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":4127},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2259,"byte_end":2265,"line_start":3,"line_end":3,"column_start":10,"column_end":16},"name":"Format","qualname":"::common::Format","value":"enum Format { Dwarf64 = , Dwarf32 = , }","parent":null,"children":[{"krate":0,"index":4128},{"krate":0,"index":4131}],"decl_id":null,"docs":" Whether the format of a compilation unit is 32- or 64-bit.\n","sig":null,"attributes":[{"value":"/ Whether the format of a compilation unit is 32- or 64-bit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2136,"byte_end":2198,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2464,"byte_end":2483,"line_start":13,"line_end":13,"column_start":12,"column_end":31},"name":"initial_length_size","qualname":"<Format>::initial_length_size","value":"fn initial_length_size(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the serialized size of an initial length field for the format.\n","sig":null,"attributes":[{"value":"/ Return the serialized size of an initial length field for the format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2365,"byte_end":2438,"line_start":11,"line_end":11,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2443,"byte_end":2452,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2682,"byte_end":2691,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"word_size","qualname":"<Format>::word_size","value":"fn word_size(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the natural word size for the format\n","sig":null,"attributes":[{"value":"/ Return the natural word size for the format","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2609,"byte_end":2656,"line_start":20,"line_end":20,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2661,"byte_end":2670,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4148},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3115,"byte_end":3123,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"Encoding","qualname":"::common::Encoding","value":"Encoding { address_size, format, version }","parent":null,"children":[{"krate":0,"index":4149},{"krate":0,"index":4150},{"krate":0,"index":4151}],"decl_id":null,"docs":" Encoding parameters that are commonly used for multiple DWARF sections.","sig":null,"attributes":[{"value":"/ Encoding parameters that are commonly used for multiple DWARF sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2814,"byte_end":2889,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2890,"byte_end":2893,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This is intended to be small enough to pass by value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2894,"byte_end":2951,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3093,"byte_end":3103,"line_start":36,"line_end":36,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4149},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3166,"byte_end":3178,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"name":"address_size","qualname":"::common::Encoding::address_size","value":"u8","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":" The size of an address.\n","sig":null,"attributes":[{"value":"/ The size of an address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3130,"byte_end":3157,"line_start":38,"line_end":38,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":4150},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3318,"byte_end":3324,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"name":"format","qualname":"::common::Encoding::format","value":"common::Format","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":" Whether the DWARF format is 32- or 64-bit.\n","sig":null,"attributes":[{"value":"/ Whether the DWARF format is 32- or 64-bit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3263,"byte_end":3309,"line_start":43,"line_end":43,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4151},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3384,"byte_end":3391,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"version","qualname":"::common::Encoding::version","value":"u16","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":" The DWARF version of the header.\n","sig":null,"attributes":[{"value":"/ The DWARF version of the header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3339,"byte_end":3375,"line_start":46,"line_end":46,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4167},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3514,"byte_end":3526,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"LineEncoding","qualname":"::common::LineEncoding","value":"LineEncoding { minimum_instruction_length, maximum_operations_per_instruction, default_is_stmt, line_base, line_range }","parent":null,"children":[{"krate":0,"index":4168},{"krate":0,"index":4169},{"krate":0,"index":4170},{"krate":0,"index":4171},{"krate":0,"index":4172}],"decl_id":null,"docs":" Encoding parameters for a line number program.\n","sig":null,"attributes":[{"value":"/ Encoding parameters for a line number program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3401,"byte_end":3451,"line_start":50,"line_end":50,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4168},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3607,"byte_end":3633,"line_start":54,"line_end":54,"column_start":9,"column_end":35},"name":"minimum_instruction_length","qualname":"::common::LineEncoding::minimum_instruction_length","value":"u8","parent":{"krate":0,"index":4167},"children":[],"decl_id":null,"docs":" The size in bytes of the smallest target machine instruction.\n","sig":null,"attributes":[{"value":"/ The size in bytes of the smallest target machine instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3533,"byte_end":3598,"line_start":53,"line_end":53,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":4169},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3747,"byte_end":3781,"line_start":58,"line_end":58,"column_start":9,"column_end":43},"name":"maximum_operations_per_instruction","qualname":"::common::LineEncoding::maximum_operations_per_instruction","value":"u8","parent":{"krate":0,"index":4167},"children":[],"decl_id":null,"docs":" The maximum number of individual operations that may be encoded in an\n instruction.\n","sig":null,"attributes":[{"value":"/ The maximum number of individual operations that may be encoded in an","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3644,"byte_end":3717,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3722,"byte_end":3738,"line_start":57,"line_end":57,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4170},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3849,"byte_end":3864,"line_start":61,"line_end":61,"column_start":9,"column_end":24},"name":"default_is_stmt","qualname":"::common::LineEncoding::default_is_stmt","value":"bool","parent":{"krate":0,"index":4167},"children":[],"decl_id":null,"docs":" The initial value of the `is_stmt` register.\n","sig":null,"attributes":[{"value":"/ The initial value of the `is_stmt` register.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3792,"byte_end":3840,"line_start":60,"line_end":60,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":4171},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3960,"byte_end":3969,"line_start":64,"line_end":64,"column_start":9,"column_end":18},"name":"line_base","qualname":"::common::LineEncoding::line_base","value":"i8","parent":{"krate":0,"index":4167},"children":[],"decl_id":null,"docs":" The minimum value which a special opcode can add to the line register.\n","sig":null,"attributes":[{"value":"/ The minimum value which a special opcode can add to the line register.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3877,"byte_end":3951,"line_start":63,"line_end":63,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":4172},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4065,"byte_end":4075,"line_start":67,"line_end":67,"column_start":9,"column_end":19},"name":"line_range","qualname":"::common::LineEncoding::line_range","value":"u8","parent":{"krate":0,"index":4167},"children":[],"decl_id":null,"docs":" The range of values which a special opcode can add to the line register.\n","sig":null,"attributes":[{"value":"/ The range of values which a special opcode can add to the line register.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":3980,"byte_end":4056,"line_start":66,"line_end":66,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4123,"byte_end":4130,"line_start":71,"line_end":71,"column_start":8,"column_end":15},"name":"default","qualname":"<LineEncoding as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4188},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4652,"byte_end":4660,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"Register","qualname":"::common::Register","value":"","parent":null,"children":[],"decl_id":null,"docs":" A DWARF register number.","sig":null,"attributes":[{"value":"/ A DWARF register number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4398,"byte_end":4426,"line_start":83,"line_end":83,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4427,"byte_end":4430,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ The meaning of this value is ABI dependent. This is generally encoded as","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4431,"byte_end":4507,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ a ULEB128, but supported architectures need 16 bits at most.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4508,"byte_end":4572,"line_start":86,"line_end":86,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":4190},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4661,"byte_end":4668,"line_start":88,"line_end":88,"column_start":21,"column_end":28},"name":"0","qualname":"::common::Register::0","value":"u16","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4210},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4782,"byte_end":4799,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"DebugAbbrevOffset","qualname":"::common::DebugAbbrevOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_abbrev` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_abbrev` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4672,"byte_end":4719,"line_start":90,"line_end":90,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":4213},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4811,"byte_end":4816,"line_start":92,"line_end":92,"column_start":41,"column_end":46},"name":"0","qualname":"::common::DebugAbbrevOffset::0","value":"T","parent":{"krate":0,"index":4210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4237},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4940,"byte_end":4953,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"DebugAddrBase","qualname":"::common::DebugAddrBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of entries in the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of entries in the `.debug_addr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4820,"byte_end":4883,"line_start":94,"line_end":94,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":4240},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4965,"byte_end":4970,"line_start":96,"line_end":96,"column_start":37,"column_end":42},"name":"0","qualname":"::common::DebugAddrBase::0","value":"T","parent":{"krate":0,"index":4237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4260},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5097,"byte_end":5111,"line_start":100,"line_end":100,"column_start":12,"column_end":26},"name":"DebugAddrIndex","qualname":"::common::DebugAddrIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of addresses in the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of addresses in the `.debug_addr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4974,"byte_end":5040,"line_start":98,"line_end":98,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":4263},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5123,"byte_end":5128,"line_start":100,"line_end":100,"column_start":38,"column_end":43},"name":"0","qualname":"::common::DebugAddrIndex::0","value":"T","parent":{"krate":0,"index":4260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4283},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5257,"byte_end":5272,"line_start":104,"line_end":104,"column_start":12,"column_end":27},"name":"DebugInfoOffset","qualname":"::common::DebugInfoOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_info` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5132,"byte_end":5177,"line_start":102,"line_end":102,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":4286},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5284,"byte_end":5289,"line_start":104,"line_end":104,"column_start":39,"column_end":44},"name":"0","qualname":"::common::DebugInfoOffset::0","value":"T","parent":{"krate":0,"index":4283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4316},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5395,"byte_end":5410,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"DebugLineOffset","qualname":"::common::DebugLineOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_line` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5293,"byte_end":5338,"line_start":106,"line_end":106,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":4319},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5422,"byte_end":5427,"line_start":108,"line_end":108,"column_start":39,"column_end":44},"name":"0","qualname":"::common::DebugLineOffset::0","value":"T","parent":{"krate":0,"index":4316},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4339},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5537,"byte_end":5555,"line_start":112,"line_end":112,"column_start":12,"column_end":30},"name":"DebugLineStrOffset","qualname":"::common::DebugLineStrOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_line_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5431,"byte_end":5480,"line_start":110,"line_end":110,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4342},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5567,"byte_end":5572,"line_start":112,"line_end":112,"column_start":42,"column_end":47},"name":"0","qualname":"::common::DebugLineStrOffset::0","value":"T","parent":{"krate":0,"index":4339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4362},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5793,"byte_end":5812,"line_start":117,"line_end":117,"column_start":12,"column_end":31},"name":"LocationListsOffset","qualname":"::common::LocationListsOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into either the `.debug_loc` section or the `.debug_loclists` section,\n depending on the version of the unit the offset was contained in.\n","sig":null,"attributes":[{"value":"/ An offset into either the `.debug_loc` section or the `.debug_loclists` section,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5576,"byte_end":5660,"line_start":114,"line_end":114,"column_start":1,"column_end":85}},{"value":"/ depending on the version of the unit the offset was contained in.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5661,"byte_end":5730,"line_start":115,"line_end":115,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":4365},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5824,"byte_end":5829,"line_start":117,"line_end":117,"column_start":43,"column_end":48},"name":"0","qualname":"::common::LocationListsOffset::0","value":"T","parent":{"krate":0,"index":4362},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4389},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5971,"byte_end":5988,"line_start":121,"line_end":121,"column_start":12,"column_end":29},"name":"DebugLocListsBase","qualname":"::common::DebugLocListsBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of location list offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of location list offsets in the `.debug_loclists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":5833,"byte_end":5914,"line_start":119,"line_end":119,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":4392},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6000,"byte_end":6005,"line_start":121,"line_end":121,"column_start":41,"column_end":46},"name":"0","qualname":"::common::DebugLocListsBase::0","value":"T","parent":{"krate":0,"index":4389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4412},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6148,"byte_end":6166,"line_start":125,"line_end":125,"column_start":12,"column_end":30},"name":"DebugLocListsIndex","qualname":"::common::DebugLocListsIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of location list offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of location list offsets in the `.debug_loclists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6009,"byte_end":6091,"line_start":123,"line_end":123,"column_start":1,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":4415},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6178,"byte_end":6183,"line_start":125,"line_end":125,"column_start":42,"column_end":47},"name":"0","qualname":"::common::DebugLocListsIndex::0","value":"T","parent":{"krate":0,"index":4412},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4435},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6298,"byte_end":6316,"line_start":129,"line_end":129,"column_start":12,"column_end":30},"name":"DebugMacinfoOffset","qualname":"::common::DebugMacinfoOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_macinfo` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macinfo` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6187,"byte_end":6235,"line_start":127,"line_end":127,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4438},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6328,"byte_end":6333,"line_start":129,"line_end":129,"column_start":42,"column_end":47},"name":"0","qualname":"::common::DebugMacinfoOffset::0","value":"T","parent":{"krate":0,"index":4435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4462},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6446,"byte_end":6462,"line_start":133,"line_end":133,"column_start":12,"column_end":28},"name":"DebugMacroOffset","qualname":"::common::DebugMacroOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_macro` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macro` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6337,"byte_end":6383,"line_start":131,"line_end":131,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4465},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6474,"byte_end":6479,"line_start":133,"line_end":133,"column_start":40,"column_end":45},"name":"0","qualname":"::common::DebugMacroOffset::0","value":"T","parent":{"krate":0,"index":4462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4489},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6703,"byte_end":6719,"line_start":138,"line_end":138,"column_start":12,"column_end":28},"name":"RangeListsOffset","qualname":"::common::RangeListsOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into either the `.debug_ranges` section or the `.debug_rnglists` section,\n depending on the version of the unit the offset was contained in.\n","sig":null,"attributes":[{"value":"/ An offset into either the `.debug_ranges` section or the `.debug_rnglists` section,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6483,"byte_end":6570,"line_start":135,"line_end":135,"column_start":1,"column_end":88}},{"value":"/ depending on the version of the unit the offset was contained in.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6571,"byte_end":6640,"line_start":136,"line_end":136,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":4492},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6731,"byte_end":6736,"line_start":138,"line_end":138,"column_start":40,"column_end":45},"name":"0","qualname":"::common::RangeListsOffset::0","value":"T","parent":{"krate":0,"index":4489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4516},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6875,"byte_end":6892,"line_start":142,"line_end":142,"column_start":12,"column_end":29},"name":"DebugRngListsBase","qualname":"::common::DebugRngListsBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of range list offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of range list offsets in the `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6740,"byte_end":6818,"line_start":140,"line_end":140,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":4519},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6904,"byte_end":6909,"line_start":142,"line_end":142,"column_start":41,"column_end":46},"name":"0","qualname":"::common::DebugRngListsBase::0","value":"T","parent":{"krate":0,"index":4516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4539},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7049,"byte_end":7067,"line_start":146,"line_end":146,"column_start":12,"column_end":30},"name":"DebugRngListsIndex","qualname":"::common::DebugRngListsIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of range list offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of range list offsets in the `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":6913,"byte_end":6992,"line_start":144,"line_end":144,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":4542},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7079,"byte_end":7084,"line_start":146,"line_end":146,"column_start":42,"column_end":47},"name":"0","qualname":"::common::DebugRngListsIndex::0","value":"T","parent":{"krate":0,"index":4539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4562},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7189,"byte_end":7203,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"DebugStrOffset","qualname":"::common::DebugStrOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7088,"byte_end":7132,"line_start":148,"line_end":148,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":4565},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7215,"byte_end":7220,"line_start":150,"line_end":150,"column_start":38,"column_end":43},"name":"0","qualname":"::common::DebugStrOffset::0","value":"T","parent":{"krate":0,"index":4562},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4585},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7351,"byte_end":7370,"line_start":154,"line_end":154,"column_start":12,"column_end":31},"name":"DebugStrOffsetsBase","qualname":"::common::DebugStrOffsetsBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of entries in the `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7224,"byte_end":7294,"line_start":152,"line_end":152,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":4588},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7382,"byte_end":7387,"line_start":154,"line_end":154,"column_start":43,"column_end":48},"name":"0","qualname":"::common::DebugStrOffsetsBase::0","value":"T","parent":{"krate":0,"index":4585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4608},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7519,"byte_end":7539,"line_start":158,"line_end":158,"column_start":12,"column_end":32},"name":"DebugStrOffsetsIndex","qualname":"::common::DebugStrOffsetsIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of entries in the `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7391,"byte_end":7462,"line_start":156,"line_end":156,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":4611},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7551,"byte_end":7556,"line_start":158,"line_end":158,"column_start":44,"column_end":49},"name":"0","qualname":"::common::DebugStrOffsetsIndex::0","value":"T","parent":{"krate":0,"index":4608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4631},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7686,"byte_end":7702,"line_start":162,"line_end":162,"column_start":12,"column_end":28},"name":"DebugTypesOffset","qualname":"::common::DebugTypesOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_types` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7560,"byte_end":7606,"line_start":160,"line_end":160,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4634},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7714,"byte_end":7719,"line_start":162,"line_end":162,"column_start":40,"column_end":45},"name":"0","qualname":"::common::DebugTypesOffset::0","value":"T","parent":{"krate":0,"index":4631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4664},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7845,"byte_end":7863,"line_start":166,"line_end":166,"column_start":12,"column_end":30},"name":"DebugTypeSignature","qualname":"::common::DebugTypeSignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type signature as used in the `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ A type signature as used in the `.debug_types` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7723,"byte_end":7782,"line_start":164,"line_end":164,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":4666},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7864,"byte_end":7871,"line_start":166,"line_end":166,"column_start":31,"column_end":38},"name":"0","qualname":"::common::DebugTypeSignature::0","value":"u64","parent":{"krate":0,"index":4664},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4682},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7984,"byte_end":8000,"line_start":170,"line_end":170,"column_start":12,"column_end":28},"name":"DebugFrameOffset","qualname":"::common::DebugFrameOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_frame` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":7875,"byte_end":7921,"line_start":168,"line_end":168,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4685},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8012,"byte_end":8017,"line_start":170,"line_end":170,"column_start":40,"column_end":45},"name":"0","qualname":"::common::DebugFrameOffset::0","value":"T","parent":{"krate":0,"index":4682},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8084,"byte_end":8088,"line_start":174,"line_end":174,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugFrameOffset<T> as core::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8067,"byte_end":8076,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4709},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8248,"byte_end":8261,"line_start":181,"line_end":181,"column_start":12,"column_end":25},"name":"EhFrameOffset","qualname":"::common::EhFrameOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.eh_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8142,"byte_end":8185,"line_start":179,"line_end":179,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":4712},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8273,"byte_end":8278,"line_start":181,"line_end":181,"column_start":37,"column_end":42},"name":"0","qualname":"::common::EhFrameOffset::0","value":"T","parent":{"krate":0,"index":4709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8342,"byte_end":8346,"line_start":185,"line_end":185,"column_start":8,"column_end":12},"name":"from","qualname":"<EhFrameOffset<T> as core::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8325,"byte_end":8334,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4738},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8624,"byte_end":8639,"line_start":194,"line_end":194,"column_start":5,"column_end":20},"name":"DebugInfoOffset","qualname":"::common::UnitSectionOffset::DebugInfoOffset","value":"UnitSectionOffset::DebugInfoOffset(DebugInfoOffset<T>)","parent":{"krate":0,"index":4736},"children":[],"decl_id":null,"docs":" An offset into the `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_info` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8574,"byte_end":8619,"line_start":193,"line_end":193,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4740},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8640,"byte_end":8658,"line_start":194,"line_end":194,"column_start":21,"column_end":39},"name":"0","qualname":"::common::UnitSectionOffset::DebugInfoOffset::0","value":"common::DebugInfoOffset<T>","parent":{"krate":0,"index":4738},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4741},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8716,"byte_end":8732,"line_start":196,"line_end":196,"column_start":5,"column_end":21},"name":"DebugTypesOffset","qualname":"::common::UnitSectionOffset::DebugTypesOffset","value":"UnitSectionOffset::DebugTypesOffset(DebugTypesOffset<T>)","parent":{"krate":0,"index":4736},"children":[],"decl_id":null,"docs":" An offset into the `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_types` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8665,"byte_end":8711,"line_start":195,"line_end":195,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4743},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8733,"byte_end":8752,"line_start":196,"line_end":196,"column_start":22,"column_end":41},"name":"0","qualname":"::common::UnitSectionOffset::DebugTypesOffset::0","value":"common::DebugTypesOffset<T>","parent":{"krate":0,"index":4741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4736},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8539,"byte_end":8556,"line_start":192,"line_end":192,"column_start":10,"column_end":27},"name":"UnitSectionOffset","qualname":"::common::UnitSectionOffset","value":"enum UnitSectionOffset<T = usize> {\n    DebugInfoOffset(DebugInfoOffset<T>),\n    DebugTypesOffset(DebugTypesOffset<T>),\n}","parent":null,"children":[{"krate":0,"index":4738},{"krate":0,"index":4741}],"decl_id":null,"docs":" An offset into the `.debug_info` or `.debug_types` sections.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_info` or `.debug_types` sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8397,"byte_end":8461,"line_start":190,"line_end":190,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4774},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8927,"byte_end":8938,"line_start":203,"line_end":203,"column_start":5,"column_end":16},"name":"DebugAbbrev","qualname":"::common::SectionId::DebugAbbrev","value":"SectionId::DebugAbbrev","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_abbrev` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_abbrev` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8890,"byte_end":8922,"line_start":202,"line_end":202,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4776},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8979,"byte_end":8988,"line_start":205,"line_end":205,"column_start":5,"column_end":14},"name":"DebugAddr","qualname":"::common::SectionId::DebugAddr","value":"SectionId::DebugAddr","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_addr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8944,"byte_end":8974,"line_start":204,"line_end":204,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4778},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9032,"byte_end":9044,"line_start":207,"line_end":207,"column_start":5,"column_end":17},"name":"DebugAranges","qualname":"::common::SectionId::DebugAranges","value":"SectionId::DebugAranges","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_aranges` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_aranges` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8994,"byte_end":9027,"line_start":206,"line_end":206,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4780},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9086,"byte_end":9096,"line_start":209,"line_end":209,"column_start":5,"column_end":15},"name":"DebugFrame","qualname":"::common::SectionId::DebugFrame","value":"SectionId::DebugFrame","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_frame` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9050,"byte_end":9081,"line_start":208,"line_end":208,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4782},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9135,"byte_end":9142,"line_start":211,"line_end":211,"column_start":5,"column_end":12},"name":"EhFrame","qualname":"::common::SectionId::EhFrame","value":"SectionId::EhFrame","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ The `.eh_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9102,"byte_end":9130,"line_start":210,"line_end":210,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4784},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9185,"byte_end":9195,"line_start":213,"line_end":213,"column_start":5,"column_end":15},"name":"EhFrameHdr","qualname":"::common::SectionId::EhFrameHdr","value":"SectionId::EhFrameHdr","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ The `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9148,"byte_end":9180,"line_start":212,"line_end":212,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4786},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9236,"byte_end":9245,"line_start":215,"line_end":215,"column_start":5,"column_end":14},"name":"DebugInfo","qualname":"::common::SectionId::DebugInfo","value":"SectionId::DebugInfo","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_info` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9201,"byte_end":9231,"line_start":214,"line_end":214,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4788},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9286,"byte_end":9295,"line_start":217,"line_end":217,"column_start":5,"column_end":14},"name":"DebugLine","qualname":"::common::SectionId::DebugLine","value":"SectionId::DebugLine","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9251,"byte_end":9281,"line_start":216,"line_end":216,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4790},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9340,"byte_end":9352,"line_start":219,"line_end":219,"column_start":5,"column_end":17},"name":"DebugLineStr","qualname":"::common::SectionId::DebugLineStr","value":"SectionId::DebugLineStr","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9301,"byte_end":9335,"line_start":218,"line_end":218,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4792},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9392,"byte_end":9400,"line_start":221,"line_end":221,"column_start":5,"column_end":13},"name":"DebugLoc","qualname":"::common::SectionId::DebugLoc","value":"SectionId::DebugLoc","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_loc` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_loc` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9358,"byte_end":9387,"line_start":220,"line_end":220,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4794},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9445,"byte_end":9458,"line_start":223,"line_end":223,"column_start":5,"column_end":18},"name":"DebugLocLists","qualname":"::common::SectionId::DebugLocLists","value":"SectionId::DebugLocLists","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_loclists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9406,"byte_end":9440,"line_start":222,"line_end":222,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4796},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9502,"byte_end":9514,"line_start":225,"line_end":225,"column_start":5,"column_end":17},"name":"DebugMacinfo","qualname":"::common::SectionId::DebugMacinfo","value":"SectionId::DebugMacinfo","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_macinfo` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_macinfo` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9464,"byte_end":9497,"line_start":224,"line_end":224,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4798},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9556,"byte_end":9566,"line_start":227,"line_end":227,"column_start":5,"column_end":15},"name":"DebugMacro","qualname":"::common::SectionId::DebugMacro","value":"SectionId::DebugMacro","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_macro` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_macro` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9520,"byte_end":9551,"line_start":226,"line_end":226,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4800},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9611,"byte_end":9624,"line_start":229,"line_end":229,"column_start":5,"column_end":18},"name":"DebugPubNames","qualname":"::common::SectionId::DebugPubNames","value":"SectionId::DebugPubNames","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_pubnames` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_pubnames` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9572,"byte_end":9606,"line_start":228,"line_end":228,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4802},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9669,"byte_end":9682,"line_start":231,"line_end":231,"column_start":5,"column_end":18},"name":"DebugPubTypes","qualname":"::common::SectionId::DebugPubTypes","value":"SectionId::DebugPubTypes","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_pubtypes` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_pubtypes` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9630,"byte_end":9664,"line_start":230,"line_end":230,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4804},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9725,"byte_end":9736,"line_start":233,"line_end":233,"column_start":5,"column_end":16},"name":"DebugRanges","qualname":"::common::SectionId::DebugRanges","value":"SectionId::DebugRanges","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_ranges` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_ranges` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9688,"byte_end":9720,"line_start":232,"line_end":232,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4806},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9781,"byte_end":9794,"line_start":235,"line_end":235,"column_start":5,"column_end":18},"name":"DebugRngLists","qualname":"::common::SectionId::DebugRngLists","value":"SectionId::DebugRngLists","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9742,"byte_end":9776,"line_start":234,"line_end":234,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4808},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9834,"byte_end":9842,"line_start":237,"line_end":237,"column_start":5,"column_end":13},"name":"DebugStr","qualname":"::common::SectionId::DebugStr","value":"SectionId::DebugStr","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9800,"byte_end":9829,"line_start":236,"line_end":236,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4810},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9890,"byte_end":9905,"line_start":239,"line_end":239,"column_start":5,"column_end":20},"name":"DebugStrOffsets","qualname":"::common::SectionId::DebugStrOffsets","value":"SectionId::DebugStrOffsets","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9848,"byte_end":9885,"line_start":238,"line_end":238,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4812},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9947,"byte_end":9957,"line_start":241,"line_end":241,"column_start":5,"column_end":15},"name":"DebugTypes","qualname":"::common::SectionId::DebugTypes","value":"SectionId::DebugTypes","parent":{"krate":0,"index":4773},"children":[],"decl_id":null,"docs":" The `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_types` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9911,"byte_end":9942,"line_start":240,"line_end":240,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":4773},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8874,"byte_end":8883,"line_start":201,"line_end":201,"column_start":10,"column_end":19},"name":"SectionId","qualname":"::common::SectionId","value":"enum SectionId {\n    DebugAbbrev,\n    DebugAddr,\n    DebugAranges,\n    DebugFrame,\n    EhFrame,\n    EhFrameHdr,\n    DebugInfo,\n    DebugLine,\n    DebugLineStr,\n    DebugLoc,\n    DebugLocLists,\n    DebugMacinfo,\n    DebugMacro,\n    DebugPubNames,\n    DebugPubTypes,\n    DebugRanges,\n    DebugRngLists,\n    DebugStr,\n    DebugStrOffsets,\n    DebugTypes,\n}","parent":null,"children":[{"krate":0,"index":4774},{"krate":0,"index":4776},{"krate":0,"index":4778},{"krate":0,"index":4780},{"krate":0,"index":4782},{"krate":0,"index":4784},{"krate":0,"index":4786},{"krate":0,"index":4788},{"krate":0,"index":4790},{"krate":0,"index":4792},{"krate":0,"index":4794},{"krate":0,"index":4796},{"krate":0,"index":4798},{"krate":0,"index":4800},{"krate":0,"index":4802},{"krate":0,"index":4804},{"krate":0,"index":4806},{"krate":0,"index":4808},{"krate":0,"index":4810},{"krate":0,"index":4812}],"decl_id":null,"docs":" An identifier for a DWARF section.\n","sig":null,"attributes":[{"value":"/ An identifier for a DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8758,"byte_end":8796,"line_start":199,"line_end":199,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":10042,"byte_end":10046,"line_start":246,"line_end":246,"column_start":12,"column_end":16},"name":"name","qualname":"<SectionId>::name","value":"fn name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the ELF section name for this kind.\n","sig":null,"attributes":[{"value":"/ Returns the ELF section name for this kind.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9983,"byte_end":10030,"line_start":245,"line_end":245,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4832},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12126,"byte_end":12129,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"Arm","qualname":"::arch::Arm","value":"","parent":null,"children":[],"decl_id":null,"docs":" ARM architecture specific definitions.","sig":null,"attributes":[{"value":"/ ARM architecture specific definitions.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":11916,"byte_end":11958,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":11959,"byte_end":11962,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ See [DWARF for the ARM Architecture](http://infocenter.arm.com/help/topic/com.arm.doc.ihi0040b/IHI0040B_aadwarf.pdf).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":11963,"byte_end":12084,"line_start":28,"line_end":28,"column_start":1,"column_end":122}}]},{"kind":"Const","id":{"krate":0,"index":4840},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12183,"byte_end":12185,"line_start":34,"line_end":34,"column_start":5,"column_end":7},"name":"R0","qualname":"::arch::Arm::R0","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4841},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12203,"byte_end":12205,"line_start":35,"line_end":35,"column_start":5,"column_end":7},"name":"R1","qualname":"::arch::Arm::R1","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4842},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12223,"byte_end":12225,"line_start":36,"line_end":36,"column_start":5,"column_end":7},"name":"R2","qualname":"::arch::Arm::R2","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4843},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12243,"byte_end":12245,"line_start":37,"line_end":37,"column_start":5,"column_end":7},"name":"R3","qualname":"::arch::Arm::R3","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4844},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12263,"byte_end":12265,"line_start":38,"line_end":38,"column_start":5,"column_end":7},"name":"R4","qualname":"::arch::Arm::R4","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4845},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12283,"byte_end":12285,"line_start":39,"line_end":39,"column_start":5,"column_end":7},"name":"R5","qualname":"::arch::Arm::R5","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4846},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12303,"byte_end":12305,"line_start":40,"line_end":40,"column_start":5,"column_end":7},"name":"R6","qualname":"::arch::Arm::R6","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4847},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12323,"byte_end":12325,"line_start":41,"line_end":41,"column_start":5,"column_end":7},"name":"R7","qualname":"::arch::Arm::R7","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4848},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12343,"byte_end":12345,"line_start":42,"line_end":42,"column_start":5,"column_end":7},"name":"R8","qualname":"::arch::Arm::R8","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4849},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12363,"byte_end":12365,"line_start":43,"line_end":43,"column_start":5,"column_end":7},"name":"R9","qualname":"::arch::Arm::R9","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4850},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12383,"byte_end":12386,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"R10","qualname":"::arch::Arm::R10","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4851},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12406,"byte_end":12409,"line_start":45,"line_end":45,"column_start":5,"column_end":8},"name":"R11","qualname":"::arch::Arm::R11","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4852},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12429,"byte_end":12432,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"R12","qualname":"::arch::Arm::R12","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4853},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12452,"byte_end":12455,"line_start":47,"line_end":47,"column_start":5,"column_end":8},"name":"R13","qualname":"::arch::Arm::R13","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4854},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12475,"byte_end":12478,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"R14","qualname":"::arch::Arm::R14","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4855},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12498,"byte_end":12501,"line_start":49,"line_end":49,"column_start":5,"column_end":8},"name":"R15","qualname":"::arch::Arm::R15","value":"Register","parent":{"krate":0,"index":4839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4858},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12732,"byte_end":12735,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"X86","qualname":"::arch::X86","value":"","parent":null,"children":[],"decl_id":null,"docs":" Intel i386 architecture specific definitions.","sig":null,"attributes":[{"value":"/ Intel i386 architecture specific definitions.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12522,"byte_end":12571,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12572,"byte_end":12575,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ See Intel386 psABi version 1.1 at the [X86 psABI wiki](https://github.com/hjl-tools/x86-psABI/wiki/X86-psABI).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12576,"byte_end":12690,"line_start":54,"line_end":54,"column_start":1,"column_end":115}}]},{"kind":"Const","id":{"krate":0,"index":4866},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12760,"byte_end":12763,"line_start":59,"line_end":59,"column_start":5,"column_end":8},"name":"EAX","qualname":"::arch::X86::EAX","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4867},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12782,"byte_end":12785,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"name":"ECX","qualname":"::arch::X86::ECX","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4868},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12804,"byte_end":12807,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"EDX","qualname":"::arch::X86::EDX","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4869},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12826,"byte_end":12829,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"name":"EBX","qualname":"::arch::X86::EBX","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4870},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12848,"byte_end":12851,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"ESP","qualname":"::arch::X86::ESP","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4871},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12870,"byte_end":12873,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"name":"EBP","qualname":"::arch::X86::EBP","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4872},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12892,"byte_end":12895,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"ESI","qualname":"::arch::X86::ESI","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4873},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":12914,"byte_end":12917,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"name":"EDI","qualname":"::arch::X86::EDI","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4874},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13033,"byte_end":13035,"line_start":69,"line_end":69,"column_start":5,"column_end":7},"name":"RA","qualname":"::arch::X86::RA","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4875},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13054,"byte_end":13057,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"ST0","qualname":"::arch::X86::ST0","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4876},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13077,"byte_end":13080,"line_start":72,"line_end":72,"column_start":5,"column_end":8},"name":"ST1","qualname":"::arch::X86::ST1","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4877},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13100,"byte_end":13103,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"ST2","qualname":"::arch::X86::ST2","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4878},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13123,"byte_end":13126,"line_start":74,"line_end":74,"column_start":5,"column_end":8},"name":"ST3","qualname":"::arch::X86::ST3","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4879},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13146,"byte_end":13149,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"ST4","qualname":"::arch::X86::ST4","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4880},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13169,"byte_end":13172,"line_start":76,"line_end":76,"column_start":5,"column_end":8},"name":"ST5","qualname":"::arch::X86::ST5","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4881},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13192,"byte_end":13195,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"ST6","qualname":"::arch::X86::ST6","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4882},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13215,"byte_end":13218,"line_start":78,"line_end":78,"column_start":5,"column_end":8},"name":"ST7","qualname":"::arch::X86::ST7","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4883},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13239,"byte_end":13243,"line_start":80,"line_end":80,"column_start":5,"column_end":9},"name":"XMM0","qualname":"::arch::X86::XMM0","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4884},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13264,"byte_end":13268,"line_start":81,"line_end":81,"column_start":5,"column_end":9},"name":"XMM1","qualname":"::arch::X86::XMM1","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4885},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13289,"byte_end":13293,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"XMM2","qualname":"::arch::X86::XMM2","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4886},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13314,"byte_end":13318,"line_start":83,"line_end":83,"column_start":5,"column_end":9},"name":"XMM3","qualname":"::arch::X86::XMM3","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4887},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13339,"byte_end":13343,"line_start":84,"line_end":84,"column_start":5,"column_end":9},"name":"XMM4","qualname":"::arch::X86::XMM4","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4888},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13364,"byte_end":13368,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"XMM5","qualname":"::arch::X86::XMM5","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4889},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13389,"byte_end":13393,"line_start":86,"line_end":86,"column_start":5,"column_end":9},"name":"XMM6","qualname":"::arch::X86::XMM6","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4890},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13414,"byte_end":13418,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"XMM7","qualname":"::arch::X86::XMM7","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4891},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13440,"byte_end":13443,"line_start":89,"line_end":89,"column_start":5,"column_end":8},"name":"MM0","qualname":"::arch::X86::MM0","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4892},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13463,"byte_end":13466,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"MM1","qualname":"::arch::X86::MM1","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4893},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13486,"byte_end":13489,"line_start":91,"line_end":91,"column_start":5,"column_end":8},"name":"MM2","qualname":"::arch::X86::MM2","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4894},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13509,"byte_end":13512,"line_start":92,"line_end":92,"column_start":5,"column_end":8},"name":"MM3","qualname":"::arch::X86::MM3","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4895},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13532,"byte_end":13535,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"MM4","qualname":"::arch::X86::MM4","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4896},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13555,"byte_end":13558,"line_start":94,"line_end":94,"column_start":5,"column_end":8},"name":"MM5","qualname":"::arch::X86::MM5","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4897},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13578,"byte_end":13581,"line_start":95,"line_end":95,"column_start":5,"column_end":8},"name":"MM6","qualname":"::arch::X86::MM6","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4898},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13601,"byte_end":13604,"line_start":96,"line_end":96,"column_start":5,"column_end":8},"name":"MM7","qualname":"::arch::X86::MM7","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4899},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13625,"byte_end":13630,"line_start":98,"line_end":98,"column_start":5,"column_end":10},"name":"MXCSR","qualname":"::arch::X86::MXCSR","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4900},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13653,"byte_end":13655,"line_start":100,"line_end":100,"column_start":5,"column_end":7},"name":"ES","qualname":"::arch::X86::ES","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4901},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13674,"byte_end":13676,"line_start":101,"line_end":101,"column_start":5,"column_end":7},"name":"CS","qualname":"::arch::X86::CS","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4902},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13695,"byte_end":13697,"line_start":102,"line_end":102,"column_start":5,"column_end":7},"name":"SS","qualname":"::arch::X86::SS","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4903},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13716,"byte_end":13718,"line_start":103,"line_end":103,"column_start":5,"column_end":7},"name":"DS","qualname":"::arch::X86::DS","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4904},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13737,"byte_end":13739,"line_start":104,"line_end":104,"column_start":5,"column_end":7},"name":"FS","qualname":"::arch::X86::FS","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4905},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13758,"byte_end":13760,"line_start":105,"line_end":105,"column_start":5,"column_end":7},"name":"GS","qualname":"::arch::X86::GS","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4906},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13780,"byte_end":13782,"line_start":107,"line_end":107,"column_start":5,"column_end":7},"name":"TR","qualname":"::arch::X86::TR","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4907},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13801,"byte_end":13805,"line_start":108,"line_end":108,"column_start":5,"column_end":9},"name":"LDTR","qualname":"::arch::X86::LDTR","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4908},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13827,"byte_end":13834,"line_start":110,"line_end":110,"column_start":5,"column_end":12},"name":"FS_BASE","qualname":"::arch::X86::FS_BASE","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4909},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13858,"byte_end":13865,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"GS_BASE","qualname":"::arch::X86::GS_BASE","value":"Register","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4912},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14093,"byte_end":14099,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"X86_64","qualname":"::arch::X86_64","value":"","parent":null,"children":[],"decl_id":null,"docs":" AMD64 architecture specific definitions.","sig":null,"attributes":[{"value":"/ AMD64 architecture specific definitions.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13890,"byte_end":13934,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13935,"byte_end":13938,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ See x86-64 psABI version 1.0 at the [X86 psABI wiki](https://github.com/hjl-tools/x86-psABI/wiki/X86-psABI).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":13939,"byte_end":14051,"line_start":116,"line_end":116,"column_start":1,"column_end":113}}]},{"kind":"Const","id":{"krate":0,"index":4920},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14127,"byte_end":14130,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"RAX","qualname":"::arch::X86_64::RAX","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4921},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14149,"byte_end":14152,"line_start":122,"line_end":122,"column_start":5,"column_end":8},"name":"RDX","qualname":"::arch::X86_64::RDX","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4922},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14171,"byte_end":14174,"line_start":123,"line_end":123,"column_start":5,"column_end":8},"name":"RCX","qualname":"::arch::X86_64::RCX","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4923},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14193,"byte_end":14196,"line_start":124,"line_end":124,"column_start":5,"column_end":8},"name":"RBX","qualname":"::arch::X86_64::RBX","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4924},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14215,"byte_end":14218,"line_start":125,"line_end":125,"column_start":5,"column_end":8},"name":"RSI","qualname":"::arch::X86_64::RSI","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4925},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14237,"byte_end":14240,"line_start":126,"line_end":126,"column_start":5,"column_end":8},"name":"RDI","qualname":"::arch::X86_64::RDI","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4926},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14259,"byte_end":14262,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"RBP","qualname":"::arch::X86_64::RBP","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4927},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14281,"byte_end":14284,"line_start":128,"line_end":128,"column_start":5,"column_end":8},"name":"RSP","qualname":"::arch::X86_64::RSP","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4928},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14304,"byte_end":14306,"line_start":130,"line_end":130,"column_start":5,"column_end":7},"name":"R8","qualname":"::arch::X86_64::R8","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4929},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14324,"byte_end":14326,"line_start":131,"line_end":131,"column_start":5,"column_end":7},"name":"R9","qualname":"::arch::X86_64::R9","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4930},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14344,"byte_end":14347,"line_start":132,"line_end":132,"column_start":5,"column_end":8},"name":"R10","qualname":"::arch::X86_64::R10","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4931},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14367,"byte_end":14370,"line_start":133,"line_end":133,"column_start":5,"column_end":8},"name":"R11","qualname":"::arch::X86_64::R11","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4932},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14390,"byte_end":14393,"line_start":134,"line_end":134,"column_start":5,"column_end":8},"name":"R12","qualname":"::arch::X86_64::R12","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4933},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14413,"byte_end":14416,"line_start":135,"line_end":135,"column_start":5,"column_end":8},"name":"R13","qualname":"::arch::X86_64::R13","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4934},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14436,"byte_end":14439,"line_start":136,"line_end":136,"column_start":5,"column_end":8},"name":"R14","qualname":"::arch::X86_64::R14","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4935},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14459,"byte_end":14462,"line_start":137,"line_end":137,"column_start":5,"column_end":8},"name":"R15","qualname":"::arch::X86_64::R15","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4936},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14579,"byte_end":14581,"line_start":140,"line_end":140,"column_start":5,"column_end":7},"name":"RA","qualname":"::arch::X86_64::RA","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4937},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14601,"byte_end":14605,"line_start":142,"line_end":142,"column_start":5,"column_end":9},"name":"XMM0","qualname":"::arch::X86_64::XMM0","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4938},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14626,"byte_end":14630,"line_start":143,"line_end":143,"column_start":5,"column_end":9},"name":"XMM1","qualname":"::arch::X86_64::XMM1","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4939},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14651,"byte_end":14655,"line_start":144,"line_end":144,"column_start":5,"column_end":9},"name":"XMM2","qualname":"::arch::X86_64::XMM2","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4940},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14676,"byte_end":14680,"line_start":145,"line_end":145,"column_start":5,"column_end":9},"name":"XMM3","qualname":"::arch::X86_64::XMM3","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4941},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14701,"byte_end":14705,"line_start":146,"line_end":146,"column_start":5,"column_end":9},"name":"XMM4","qualname":"::arch::X86_64::XMM4","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4942},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14726,"byte_end":14730,"line_start":147,"line_end":147,"column_start":5,"column_end":9},"name":"XMM5","qualname":"::arch::X86_64::XMM5","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4943},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14751,"byte_end":14755,"line_start":148,"line_end":148,"column_start":5,"column_end":9},"name":"XMM6","qualname":"::arch::X86_64::XMM6","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4944},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14776,"byte_end":14780,"line_start":149,"line_end":149,"column_start":5,"column_end":9},"name":"XMM7","qualname":"::arch::X86_64::XMM7","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4945},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14802,"byte_end":14806,"line_start":151,"line_end":151,"column_start":5,"column_end":9},"name":"XMM8","qualname":"::arch::X86_64::XMM8","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4946},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14827,"byte_end":14831,"line_start":152,"line_end":152,"column_start":5,"column_end":9},"name":"XMM9","qualname":"::arch::X86_64::XMM9","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4947},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14852,"byte_end":14857,"line_start":153,"line_end":153,"column_start":5,"column_end":10},"name":"XMM10","qualname":"::arch::X86_64::XMM10","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4948},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14879,"byte_end":14884,"line_start":154,"line_end":154,"column_start":5,"column_end":10},"name":"XMM11","qualname":"::arch::X86_64::XMM11","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4949},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14906,"byte_end":14911,"line_start":155,"line_end":155,"column_start":5,"column_end":10},"name":"XMM12","qualname":"::arch::X86_64::XMM12","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4950},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14933,"byte_end":14938,"line_start":156,"line_end":156,"column_start":5,"column_end":10},"name":"XMM13","qualname":"::arch::X86_64::XMM13","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4951},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14960,"byte_end":14965,"line_start":157,"line_end":157,"column_start":5,"column_end":10},"name":"XMM14","qualname":"::arch::X86_64::XMM14","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4952},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":14987,"byte_end":14992,"line_start":158,"line_end":158,"column_start":5,"column_end":10},"name":"XMM15","qualname":"::arch::X86_64::XMM15","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4953},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15015,"byte_end":15018,"line_start":160,"line_end":160,"column_start":5,"column_end":8},"name":"ST0","qualname":"::arch::X86_64::ST0","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4954},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15038,"byte_end":15041,"line_start":161,"line_end":161,"column_start":5,"column_end":8},"name":"ST1","qualname":"::arch::X86_64::ST1","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4955},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15061,"byte_end":15064,"line_start":162,"line_end":162,"column_start":5,"column_end":8},"name":"ST2","qualname":"::arch::X86_64::ST2","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4956},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15084,"byte_end":15087,"line_start":163,"line_end":163,"column_start":5,"column_end":8},"name":"ST3","qualname":"::arch::X86_64::ST3","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4957},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15107,"byte_end":15110,"line_start":164,"line_end":164,"column_start":5,"column_end":8},"name":"ST4","qualname":"::arch::X86_64::ST4","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4958},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15130,"byte_end":15133,"line_start":165,"line_end":165,"column_start":5,"column_end":8},"name":"ST5","qualname":"::arch::X86_64::ST5","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4959},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15153,"byte_end":15156,"line_start":166,"line_end":166,"column_start":5,"column_end":8},"name":"ST6","qualname":"::arch::X86_64::ST6","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4960},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15176,"byte_end":15179,"line_start":167,"line_end":167,"column_start":5,"column_end":8},"name":"ST7","qualname":"::arch::X86_64::ST7","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4961},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15200,"byte_end":15203,"line_start":169,"line_end":169,"column_start":5,"column_end":8},"name":"MM0","qualname":"::arch::X86_64::MM0","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4962},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15223,"byte_end":15226,"line_start":170,"line_end":170,"column_start":5,"column_end":8},"name":"MM1","qualname":"::arch::X86_64::MM1","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4963},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15246,"byte_end":15249,"line_start":171,"line_end":171,"column_start":5,"column_end":8},"name":"MM2","qualname":"::arch::X86_64::MM2","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4964},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15269,"byte_end":15272,"line_start":172,"line_end":172,"column_start":5,"column_end":8},"name":"MM3","qualname":"::arch::X86_64::MM3","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4965},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15292,"byte_end":15295,"line_start":173,"line_end":173,"column_start":5,"column_end":8},"name":"MM4","qualname":"::arch::X86_64::MM4","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4966},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15315,"byte_end":15318,"line_start":174,"line_end":174,"column_start":5,"column_end":8},"name":"MM5","qualname":"::arch::X86_64::MM5","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4967},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15338,"byte_end":15341,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"MM6","qualname":"::arch::X86_64::MM6","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4968},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15361,"byte_end":15364,"line_start":176,"line_end":176,"column_start":5,"column_end":8},"name":"MM7","qualname":"::arch::X86_64::MM7","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4969},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15385,"byte_end":15391,"line_start":178,"line_end":178,"column_start":5,"column_end":11},"name":"RFLAGS","qualname":"::arch::X86_64::RFLAGS","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4970},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15414,"byte_end":15416,"line_start":179,"line_end":179,"column_start":5,"column_end":7},"name":"ES","qualname":"::arch::X86_64::ES","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4971},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15435,"byte_end":15437,"line_start":180,"line_end":180,"column_start":5,"column_end":7},"name":"CS","qualname":"::arch::X86_64::CS","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4972},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15456,"byte_end":15458,"line_start":181,"line_end":181,"column_start":5,"column_end":7},"name":"SS","qualname":"::arch::X86_64::SS","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4973},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15477,"byte_end":15479,"line_start":182,"line_end":182,"column_start":5,"column_end":7},"name":"DS","qualname":"::arch::X86_64::DS","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4974},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15498,"byte_end":15500,"line_start":183,"line_end":183,"column_start":5,"column_end":7},"name":"FS","qualname":"::arch::X86_64::FS","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4975},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15519,"byte_end":15521,"line_start":184,"line_end":184,"column_start":5,"column_end":7},"name":"GS","qualname":"::arch::X86_64::GS","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4976},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15541,"byte_end":15548,"line_start":186,"line_end":186,"column_start":5,"column_end":12},"name":"FS_BASE","qualname":"::arch::X86_64::FS_BASE","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4977},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15572,"byte_end":15579,"line_start":187,"line_end":187,"column_start":5,"column_end":12},"name":"GS_BASE","qualname":"::arch::X86_64::GS_BASE","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4978},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15604,"byte_end":15606,"line_start":189,"line_end":189,"column_start":5,"column_end":7},"name":"TR","qualname":"::arch::X86_64::TR","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4979},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15625,"byte_end":15629,"line_start":190,"line_end":190,"column_start":5,"column_end":9},"name":"LDTR","qualname":"::arch::X86_64::LDTR","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4980},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15650,"byte_end":15655,"line_start":191,"line_end":191,"column_start":5,"column_end":10},"name":"MXCSR","qualname":"::arch::X86_64::MXCSR","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4981},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15677,"byte_end":15680,"line_start":192,"line_end":192,"column_start":5,"column_end":8},"name":"FCW","qualname":"::arch::X86_64::FCW","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4982},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15700,"byte_end":15703,"line_start":193,"line_end":193,"column_start":5,"column_end":8},"name":"FSW","qualname":"::arch::X86_64::FSW","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4983},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15724,"byte_end":15729,"line_start":195,"line_end":195,"column_start":5,"column_end":10},"name":"XMM16","qualname":"::arch::X86_64::XMM16","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4984},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15751,"byte_end":15756,"line_start":196,"line_end":196,"column_start":5,"column_end":10},"name":"XMM17","qualname":"::arch::X86_64::XMM17","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4985},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15778,"byte_end":15783,"line_start":197,"line_end":197,"column_start":5,"column_end":10},"name":"XMM18","qualname":"::arch::X86_64::XMM18","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4986},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15805,"byte_end":15810,"line_start":198,"line_end":198,"column_start":5,"column_end":10},"name":"XMM19","qualname":"::arch::X86_64::XMM19","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4987},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15832,"byte_end":15837,"line_start":199,"line_end":199,"column_start":5,"column_end":10},"name":"XMM20","qualname":"::arch::X86_64::XMM20","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4988},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15859,"byte_end":15864,"line_start":200,"line_end":200,"column_start":5,"column_end":10},"name":"XMM21","qualname":"::arch::X86_64::XMM21","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4989},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15886,"byte_end":15891,"line_start":201,"line_end":201,"column_start":5,"column_end":10},"name":"XMM22","qualname":"::arch::X86_64::XMM22","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4990},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15913,"byte_end":15918,"line_start":202,"line_end":202,"column_start":5,"column_end":10},"name":"XMM23","qualname":"::arch::X86_64::XMM23","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4991},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15940,"byte_end":15945,"line_start":203,"line_end":203,"column_start":5,"column_end":10},"name":"XMM24","qualname":"::arch::X86_64::XMM24","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4992},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15967,"byte_end":15972,"line_start":204,"line_end":204,"column_start":5,"column_end":10},"name":"XMM25","qualname":"::arch::X86_64::XMM25","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4993},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":15994,"byte_end":15999,"line_start":205,"line_end":205,"column_start":5,"column_end":10},"name":"XMM26","qualname":"::arch::X86_64::XMM26","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4994},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":16021,"byte_end":16026,"line_start":206,"line_end":206,"column_start":5,"column_end":10},"name":"XMM27","qualname":"::arch::X86_64::XMM27","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4995},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":16048,"byte_end":16053,"line_start":207,"line_end":207,"column_start":5,"column_end":10},"name":"XMM28","qualname":"::arch::X86_64::XMM28","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4996},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":16075,"byte_end":16080,"line_start":208,"line_end":208,"column_start":5,"column_end":10},"name":"XMM29","qualname":"::arch::X86_64::XMM29","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4997},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":16102,"byte_end":16107,"line_start":209,"line_end":209,"column_start":5,"column_end":10},"name":"XMM30","qualname":"::arch::X86_64::XMM30","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4998},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":16129,"byte_end":16134,"line_start":210,"line_end":210,"column_start":5,"column_end":10},"name":"XMM31","qualname":"::arch::X86_64::XMM31","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4999},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":16157,"byte_end":16159,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"K0","qualname":"::arch::X86_64::K0","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5000},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":16179,"byte_end":16181,"line_start":213,"line_end":213,"column_start":5,"column_end":7},"name":"K1","qualname":"::arch::X86_64::K1","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5001},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":16201,"byte_end":16203,"line_start":214,"line_end":214,"column_start":5,"column_end":7},"name":"K2","qualname":"::arch::X86_64::K2","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5002},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":16223,"byte_end":16225,"line_start":215,"line_end":215,"column_start":5,"column_end":7},"name":"K3","qualname":"::arch::X86_64::K3","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5003},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":16245,"byte_end":16247,"line_start":216,"line_end":216,"column_start":5,"column_end":7},"name":"K4","qualname":"::arch::X86_64::K4","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5004},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":16267,"byte_end":16269,"line_start":217,"line_end":217,"column_start":5,"column_end":7},"name":"K5","qualname":"::arch::X86_64::K5","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5005},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":16289,"byte_end":16291,"line_start":218,"line_end":218,"column_start":5,"column_end":7},"name":"K6","qualname":"::arch::X86_64::K6","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5006},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\arch.rs","byte_start":16311,"byte_end":16313,"line_start":219,"line_end":219,"column_start":5,"column_end":7},"name":"K7","qualname":"::arch::X86_64::K7","value":"Register","parent":{"krate":0,"index":4919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":5021},{"krate":0,"index":5024},{"krate":0,"index":5026},{"krate":0,"index":5028},{"krate":0,"index":5029},{"krate":0,"index":5030},{"krate":0,"index":5033},{"krate":0,"index":5034},{"krate":0,"index":5036},{"krate":0,"index":5039},{"krate":0,"index":5041},{"krate":0,"index":5009},{"krate":0,"index":5010},{"krate":0,"index":5011},{"krate":0,"index":5012},{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5015},{"krate":0,"index":5016},{"krate":0,"index":5017},{"krate":0,"index":5019},{"krate":0,"index":5079},{"krate":0,"index":5082},{"krate":0,"index":5084},{"krate":0,"index":5086},{"krate":0,"index":5087},{"krate":0,"index":5088},{"krate":0,"index":5091},{"krate":0,"index":5092},{"krate":0,"index":5094},{"krate":0,"index":5097},{"krate":0,"index":5099},{"krate":0,"index":5043},{"krate":0,"index":5044},{"krate":0,"index":5045},{"krate":0,"index":5046},{"krate":0,"index":5047},{"krate":0,"index":5048},{"krate":0,"index":5049},{"krate":0,"index":5050},{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5053},{"krate":0,"index":5054},{"krate":0,"index":5055},{"krate":0,"index":5056},{"krate":0,"index":5057},{"krate":0,"index":5058},{"krate":0,"index":5059},{"krate":0,"index":5060},{"krate":0,"index":5061},{"krate":0,"index":5062},{"krate":0,"index":5063},{"krate":0,"index":5064},{"krate":0,"index":5065},{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5071},{"krate":0,"index":5072},{"krate":0,"index":5073},{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":5077},{"krate":0,"index":5107},{"krate":0,"index":5110},{"krate":0,"index":5112},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5116},{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5122},{"krate":0,"index":5125},{"krate":0,"index":5127},{"krate":0,"index":5101},{"krate":0,"index":5102},{"krate":0,"index":5103},{"krate":0,"index":5105},{"krate":0,"index":5246},{"krate":0,"index":5249},{"krate":0,"index":5251},{"krate":0,"index":5253},{"krate":0,"index":5254},{"krate":0,"index":5255},{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5261},{"krate":0,"index":5264},{"krate":0,"index":5266},{"krate":0,"index":5129},{"krate":0,"index":5130},{"krate":0,"index":5131},{"krate":0,"index":5132},{"krate":0,"index":5133},{"krate":0,"index":5134},{"krate":0,"index":5135},{"krate":0,"index":5136},{"krate":0,"index":5137},{"krate":0,"index":5138},{"krate":0,"index":5139},{"krate":0,"index":5140},{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5143},{"krate":0,"index":5144},{"krate":0,"index":5145},{"krate":0,"index":5146},{"krate":0,"index":5147},{"krate":0,"index":5148},{"krate":0,"index":5149},{"krate":0,"index":5150},{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5153},{"krate":0,"index":5154},{"krate":0,"index":5155},{"krate":0,"index":5156},{"krate":0,"index":5157},{"krate":0,"index":5158},{"krate":0,"index":5159},{"krate":0,"index":5160},{"krate":0,"index":5161},{"krate":0,"index":5162},{"krate":0,"index":5163},{"krate":0,"index":5164},{"krate":0,"index":5165},{"krate":0,"index":5166},{"krate":0,"index":5167},{"krate":0,"index":5168},{"krate":0,"index":5169},{"krate":0,"index":5170},{"krate":0,"index":5171},{"krate":0,"index":5172},{"krate":0,"index":5173},{"krate":0,"index":5174},{"krate":0,"index":5175},{"krate":0,"index":5176},{"krate":0,"index":5177},{"krate":0,"index":5178},{"krate":0,"index":5179},{"krate":0,"index":5180},{"krate":0,"index":5181},{"krate":0,"index":5182},{"krate":0,"index":5183},{"krate":0,"index":5184},{"krate":0,"index":5185},{"krate":0,"index":5186},{"krate":0,"index":5187},{"krate":0,"index":5188},{"krate":0,"index":5189},{"krate":0,"index":5190},{"krate":0,"index":5191},{"krate":0,"index":5192},{"krate":0,"index":5193},{"krate":0,"index":5194},{"krate":0,"index":5195},{"krate":0,"index":5196},{"krate":0,"index":5197},{"krate":0,"index":5198},{"krate":0,"index":5199},{"krate":0,"index":5200},{"krate":0,"index":5201},{"krate":0,"index":5202},{"krate":0,"index":5203},{"krate":0,"index":5204},{"krate":0,"index":5205},{"krate":0,"index":5206},{"krate":0,"index":5207},{"krate":0,"index":5208},{"krate":0,"index":5209},{"krate":0,"index":5210},{"krate":0,"index":5211},{"krate":0,"index":5212},{"krate":0,"index":5213},{"krate":0,"index":5214},{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5226},{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5229},{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":5234},{"krate":0,"index":5235},{"krate":0,"index":5236},{"krate":0,"index":5237},{"krate":0,"index":5238},{"krate":0,"index":5239},{"krate":0,"index":5240},{"krate":0,"index":5241},{"krate":0,"index":5242},{"krate":0,"index":5244},{"krate":0,"index":5537},{"krate":0,"index":5540},{"krate":0,"index":5542},{"krate":0,"index":5544},{"krate":0,"index":5545},{"krate":0,"index":5546},{"krate":0,"index":5549},{"krate":0,"index":5550},{"krate":0,"index":5552},{"krate":0,"index":5555},{"krate":0,"index":5557},{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":5270},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":5276},{"krate":0,"index":5277},{"krate":0,"index":5278},{"krate":0,"index":5279},{"krate":0,"index":5280},{"krate":0,"index":5281},{"krate":0,"index":5282},{"krate":0,"index":5283},{"krate":0,"index":5284},{"krate":0,"index":5285},{"krate":0,"index":5286},{"krate":0,"index":5287},{"krate":0,"index":5288},{"krate":0,"index":5289},{"krate":0,"index":5290},{"krate":0,"index":5291},{"krate":0,"index":5292},{"krate":0,"index":5293},{"krate":0,"index":5294},{"krate":0,"index":5295},{"krate":0,"index":5296},{"krate":0,"index":5297},{"krate":0,"index":5298},{"krate":0,"index":5299},{"krate":0,"index":5300},{"krate":0,"index":5301},{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":5304},{"krate":0,"index":5305},{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5311},{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":5316},{"krate":0,"index":5317},{"krate":0,"index":5318},{"krate":0,"index":5319},{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5323},{"krate":0,"index":5324},{"krate":0,"index":5325},{"krate":0,"index":5326},{"krate":0,"index":5327},{"krate":0,"index":5328},{"krate":0,"index":5329},{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5332},{"krate":0,"index":5333},{"krate":0,"index":5334},{"krate":0,"index":5335},{"krate":0,"index":5336},{"krate":0,"index":5337},{"krate":0,"index":5338},{"krate":0,"index":5339},{"krate":0,"index":5340},{"krate":0,"index":5341},{"krate":0,"index":5342},{"krate":0,"index":5343},{"krate":0,"index":5344},{"krate":0,"index":5345},{"krate":0,"index":5346},{"krate":0,"index":5347},{"krate":0,"index":5348},{"krate":0,"index":5349},{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5352},{"krate":0,"index":5353},{"krate":0,"index":5354},{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5357},{"krate":0,"index":5358},{"krate":0,"index":5359},{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5362},{"krate":0,"index":5363},{"krate":0,"index":5364},{"krate":0,"index":5365},{"krate":0,"index":5366},{"krate":0,"index":5367},{"krate":0,"index":5368},{"krate":0,"index":5369},{"krate":0,"index":5370},{"krate":0,"index":5371},{"krate":0,"index":5372},{"krate":0,"index":5373},{"krate":0,"index":5374},{"krate":0,"index":5375},{"krate":0,"index":5376},{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":5380},{"krate":0,"index":5381},{"krate":0,"index":5382},{"krate":0,"index":5383},{"krate":0,"index":5384},{"krate":0,"index":5385},{"krate":0,"index":5386},{"krate":0,"index":5387},{"krate":0,"index":5388},{"krate":0,"index":5389},{"krate":0,"index":5390},{"krate":0,"index":5391},{"krate":0,"index":5392},{"krate":0,"index":5393},{"krate":0,"index":5394},{"krate":0,"index":5395},{"krate":0,"index":5396},{"krate":0,"index":5397},{"krate":0,"index":5398},{"krate":0,"index":5399},{"krate":0,"index":5400},{"krate":0,"index":5401},{"krate":0,"index":5402},{"krate":0,"index":5403},{"krate":0,"index":5404},{"krate":0,"index":5405},{"krate":0,"index":5406},{"krate":0,"index":5407},{"krate":0,"index":5408},{"krate":0,"index":5409},{"krate":0,"index":5410},{"krate":0,"index":5411},{"krate":0,"index":5412},{"krate":0,"index":5413},{"krate":0,"index":5414},{"krate":0,"index":5415},{"krate":0,"index":5416},{"krate":0,"index":5417},{"krate":0,"index":5418},{"krate":0,"index":5419},{"krate":0,"index":5420},{"krate":0,"index":5421},{"krate":0,"index":5422},{"krate":0,"index":5423},{"krate":0,"index":5424},{"krate":0,"index":5425},{"krate":0,"index":5426},{"krate":0,"index":5427},{"krate":0,"index":5428},{"krate":0,"index":5429},{"krate":0,"index":5430},{"krate":0,"index":5431},{"krate":0,"index":5432},{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5436},{"krate":0,"index":5437},{"krate":0,"index":5438},{"krate":0,"index":5439},{"krate":0,"index":5440},{"krate":0,"index":5441},{"krate":0,"index":5442},{"krate":0,"index":5443},{"krate":0,"index":5444},{"krate":0,"index":5445},{"krate":0,"index":5446},{"krate":0,"index":5447},{"krate":0,"index":5448},{"krate":0,"index":5449},{"krate":0,"index":5450},{"krate":0,"index":5451},{"krate":0,"index":5452},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5455},{"krate":0,"index":5456},{"krate":0,"index":5457},{"krate":0,"index":5458},{"krate":0,"index":5459},{"krate":0,"index":5460},{"krate":0,"index":5461},{"krate":0,"index":5462},{"krate":0,"index":5463},{"krate":0,"index":5464},{"krate":0,"index":5465},{"krate":0,"index":5466},{"krate":0,"index":5467},{"krate":0,"index":5468},{"krate":0,"index":5469},{"krate":0,"index":5470},{"krate":0,"index":5471},{"krate":0,"index":5472},{"krate":0,"index":5473},{"krate":0,"index":5474},{"krate":0,"index":5475},{"krate":0,"index":5476},{"krate":0,"index":5477},{"krate":0,"index":5478},{"krate":0,"index":5479},{"krate":0,"index":5480},{"krate":0,"index":5481},{"krate":0,"index":5482},{"krate":0,"index":5483},{"krate":0,"index":5484},{"krate":0,"index":5485},{"krate":0,"index":5486},{"krate":0,"index":5487},{"krate":0,"index":5488},{"krate":0,"index":5489},{"krate":0,"index":5490},{"krate":0,"index":5491},{"krate":0,"index":5492},{"krate":0,"index":5493},{"krate":0,"index":5494},{"krate":0,"index":5495},{"krate":0,"index":5496},{"krate":0,"index":5497},{"krate":0,"index":5498},{"krate":0,"index":5499},{"krate":0,"index":5500},{"krate":0,"index":5501},{"krate":0,"index":5502},{"krate":0,"index":5503},{"krate":0,"index":5504},{"krate":0,"index":5505},{"krate":0,"index":5506},{"krate":0,"index":5507},{"krate":0,"index":5508},{"krate":0,"index":5509},{"krate":0,"index":5510},{"krate":0,"index":5511},{"krate":0,"index":5512},{"krate":0,"index":5513},{"krate":0,"index":5514},{"krate":0,"index":5515},{"krate":0,"index":5516},{"krate":0,"index":5517},{"krate":0,"index":5518},{"krate":0,"index":5519},{"krate":0,"index":5520},{"krate":0,"index":5521},{"krate":0,"index":5522},{"krate":0,"index":5523},{"krate":0,"index":5524},{"krate":0,"index":5525},{"krate":0,"index":5526},{"krate":0,"index":5527},{"krate":0,"index":5528},{"krate":0,"index":5529},{"krate":0,"index":5530},{"krate":0,"index":5531},{"krate":0,"index":5532},{"krate":0,"index":5533},{"krate":0,"index":5535},{"krate":0,"index":5611},{"krate":0,"index":5614},{"krate":0,"index":5616},{"krate":0,"index":5618},{"krate":0,"index":5619},{"krate":0,"index":5620},{"krate":0,"index":5623},{"krate":0,"index":5624},{"krate":0,"index":5626},{"krate":0,"index":5629},{"krate":0,"index":5631},{"krate":0,"index":5559},{"krate":0,"index":5560},{"krate":0,"index":5561},{"krate":0,"index":5562},{"krate":0,"index":5563},{"krate":0,"index":5564},{"krate":0,"index":5565},{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":5568},{"krate":0,"index":5569},{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5572},{"krate":0,"index":5573},{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5578},{"krate":0,"index":5579},{"krate":0,"index":5580},{"krate":0,"index":5581},{"krate":0,"index":5582},{"krate":0,"index":5583},{"krate":0,"index":5584},{"krate":0,"index":5585},{"krate":0,"index":5586},{"krate":0,"index":5587},{"krate":0,"index":5588},{"krate":0,"index":5589},{"krate":0,"index":5590},{"krate":0,"index":5591},{"krate":0,"index":5592},{"krate":0,"index":5593},{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5596},{"krate":0,"index":5597},{"krate":0,"index":5598},{"krate":0,"index":5599},{"krate":0,"index":5600},{"krate":0,"index":5601},{"krate":0,"index":5602},{"krate":0,"index":5603},{"krate":0,"index":5604},{"krate":0,"index":5605},{"krate":0,"index":5606},{"krate":0,"index":5607},{"krate":0,"index":5609},{"krate":0,"index":5657},{"krate":0,"index":5660},{"krate":0,"index":5662},{"krate":0,"index":5664},{"krate":0,"index":5665},{"krate":0,"index":5666},{"krate":0,"index":5669},{"krate":0,"index":5670},{"krate":0,"index":5672},{"krate":0,"index":5675},{"krate":0,"index":5677},{"krate":0,"index":5633},{"krate":0,"index":5634},{"krate":0,"index":5635},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5638},{"krate":0,"index":5639},{"krate":0,"index":5640},{"krate":0,"index":5641},{"krate":0,"index":5642},{"krate":0,"index":5643},{"krate":0,"index":5644},{"krate":0,"index":5645},{"krate":0,"index":5646},{"krate":0,"index":5647},{"krate":0,"index":5648},{"krate":0,"index":5649},{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5653},{"krate":0,"index":5655},{"krate":0,"index":5693},{"krate":0,"index":5696},{"krate":0,"index":5698},{"krate":0,"index":5700},{"krate":0,"index":5701},{"krate":0,"index":5702},{"krate":0,"index":5705},{"krate":0,"index":5706},{"krate":0,"index":5708},{"krate":0,"index":5711},{"krate":0,"index":5713},{"krate":0,"index":5679},{"krate":0,"index":5680},{"krate":0,"index":5681},{"krate":0,"index":5682},{"krate":0,"index":5683},{"krate":0,"index":5684},{"krate":0,"index":5685},{"krate":0,"index":5686},{"krate":0,"index":5687},{"krate":0,"index":5688},{"krate":0,"index":5689},{"krate":0,"index":5691},{"krate":0,"index":5724},{"krate":0,"index":5727},{"krate":0,"index":5729},{"krate":0,"index":5731},{"krate":0,"index":5732},{"krate":0,"index":5733},{"krate":0,"index":5736},{"krate":0,"index":5737},{"krate":0,"index":5739},{"krate":0,"index":5742},{"krate":0,"index":5744},{"krate":0,"index":5715},{"krate":0,"index":5716},{"krate":0,"index":5717},{"krate":0,"index":5718},{"krate":0,"index":5719},{"krate":0,"index":5720},{"krate":0,"index":5722},{"krate":0,"index":5755},{"krate":0,"index":5758},{"krate":0,"index":5760},{"krate":0,"index":5762},{"krate":0,"index":5763},{"krate":0,"index":5764},{"krate":0,"index":5767},{"krate":0,"index":5768},{"krate":0,"index":5770},{"krate":0,"index":5773},{"krate":0,"index":5775},{"krate":0,"index":5746},{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5750},{"krate":0,"index":5751},{"krate":0,"index":5753},{"krate":0,"index":5784},{"krate":0,"index":5787},{"krate":0,"index":5789},{"krate":0,"index":5791},{"krate":0,"index":5792},{"krate":0,"index":5793},{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5799},{"krate":0,"index":5802},{"krate":0,"index":5804},{"krate":0,"index":5777},{"krate":0,"index":5778},{"krate":0,"index":5779},{"krate":0,"index":5780},{"krate":0,"index":5782},{"krate":0,"index":5813},{"krate":0,"index":5816},{"krate":0,"index":5818},{"krate":0,"index":5820},{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5825},{"krate":0,"index":5826},{"krate":0,"index":5828},{"krate":0,"index":5831},{"krate":0,"index":5833},{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5808},{"krate":0,"index":5809},{"krate":0,"index":5811},{"krate":0,"index":5842},{"krate":0,"index":5845},{"krate":0,"index":5847},{"krate":0,"index":5849},{"krate":0,"index":5850},{"krate":0,"index":5851},{"krate":0,"index":5854},{"krate":0,"index":5855},{"krate":0,"index":5857},{"krate":0,"index":5860},{"krate":0,"index":5862},{"krate":0,"index":5835},{"krate":0,"index":5836},{"krate":0,"index":5837},{"krate":0,"index":5838},{"krate":0,"index":5840},{"krate":0,"index":5912},{"krate":0,"index":5915},{"krate":0,"index":5917},{"krate":0,"index":5919},{"krate":0,"index":5920},{"krate":0,"index":5921},{"krate":0,"index":5924},{"krate":0,"index":5925},{"krate":0,"index":5927},{"krate":0,"index":5930},{"krate":0,"index":5932},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5866},{"krate":0,"index":5867},{"krate":0,"index":5868},{"krate":0,"index":5869},{"krate":0,"index":5870},{"krate":0,"index":5871},{"krate":0,"index":5872},{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5875},{"krate":0,"index":5876},{"krate":0,"index":5877},{"krate":0,"index":5878},{"krate":0,"index":5879},{"krate":0,"index":5880},{"krate":0,"index":5881},{"krate":0,"index":5882},{"krate":0,"index":5883},{"krate":0,"index":5884},{"krate":0,"index":5885},{"krate":0,"index":5886},{"krate":0,"index":5887},{"krate":0,"index":5888},{"krate":0,"index":5889},{"krate":0,"index":5890},{"krate":0,"index":5891},{"krate":0,"index":5892},{"krate":0,"index":5893},{"krate":0,"index":5894},{"krate":0,"index":5895},{"krate":0,"index":5896},{"krate":0,"index":5897},{"krate":0,"index":5898},{"krate":0,"index":5899},{"krate":0,"index":5900},{"krate":0,"index":5901},{"krate":0,"index":5902},{"krate":0,"index":5903},{"krate":0,"index":5904},{"krate":0,"index":5905},{"krate":0,"index":5906},{"krate":0,"index":5907},{"krate":0,"index":5908},{"krate":0,"index":5910},{"krate":0,"index":39},{"krate":0,"index":5939},{"krate":0,"index":5942},{"krate":0,"index":5944},{"krate":0,"index":5946},{"krate":0,"index":5947},{"krate":0,"index":5948},{"krate":0,"index":5951},{"krate":0,"index":5952},{"krate":0,"index":5954},{"krate":0,"index":5957},{"krate":0,"index":5959},{"krate":0,"index":5934},{"krate":0,"index":5935},{"krate":0,"index":5937},{"krate":0,"index":5969},{"krate":0,"index":5972},{"krate":0,"index":5974},{"krate":0,"index":5976},{"krate":0,"index":5977},{"krate":0,"index":5978},{"krate":0,"index":5981},{"krate":0,"index":5982},{"krate":0,"index":5984},{"krate":0,"index":5987},{"krate":0,"index":5989},{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963},{"krate":0,"index":5964},{"krate":0,"index":5965},{"krate":0,"index":5967},{"krate":0,"index":6002},{"krate":0,"index":6005},{"krate":0,"index":6007},{"krate":0,"index":6009},{"krate":0,"index":6010},{"krate":0,"index":6011},{"krate":0,"index":6014},{"krate":0,"index":6015},{"krate":0,"index":6017},{"krate":0,"index":6020},{"krate":0,"index":6022},{"krate":0,"index":5991},{"krate":0,"index":5992},{"krate":0,"index":5993},{"krate":0,"index":5994},{"krate":0,"index":5995},{"krate":0,"index":5996},{"krate":0,"index":5997},{"krate":0,"index":5998},{"krate":0,"index":6000},{"krate":0,"index":6032},{"krate":0,"index":6035},{"krate":0,"index":6037},{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6044},{"krate":0,"index":6045},{"krate":0,"index":6047},{"krate":0,"index":6050},{"krate":0,"index":6052},{"krate":0,"index":6024},{"krate":0,"index":6025},{"krate":0,"index":6026},{"krate":0,"index":6027},{"krate":0,"index":6028},{"krate":0,"index":6030},{"krate":0,"index":6060},{"krate":0,"index":6063},{"krate":0,"index":6065},{"krate":0,"index":6067},{"krate":0,"index":6068},{"krate":0,"index":6069},{"krate":0,"index":6072},{"krate":0,"index":6073},{"krate":0,"index":6075},{"krate":0,"index":6078},{"krate":0,"index":6080},{"krate":0,"index":6054},{"krate":0,"index":6055},{"krate":0,"index":6056},{"krate":0,"index":6058},{"krate":0,"index":6088},{"krate":0,"index":6091},{"krate":0,"index":6093},{"krate":0,"index":6095},{"krate":0,"index":6096},{"krate":0,"index":6097},{"krate":0,"index":6100},{"krate":0,"index":6101},{"krate":0,"index":6103},{"krate":0,"index":6106},{"krate":0,"index":6108},{"krate":0,"index":6082},{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6086},{"krate":0,"index":6121},{"krate":0,"index":6124},{"krate":0,"index":6126},{"krate":0,"index":6128},{"krate":0,"index":6129},{"krate":0,"index":6130},{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6136},{"krate":0,"index":6139},{"krate":0,"index":6141},{"krate":0,"index":6110},{"krate":0,"index":6111},{"krate":0,"index":6112},{"krate":0,"index":6113},{"krate":0,"index":6114},{"krate":0,"index":6115},{"krate":0,"index":6116},{"krate":0,"index":6117},{"krate":0,"index":6119},{"krate":0,"index":6150},{"krate":0,"index":6153},{"krate":0,"index":6155},{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6159},{"krate":0,"index":6162},{"krate":0,"index":6163},{"krate":0,"index":6165},{"krate":0,"index":6168},{"krate":0,"index":6170},{"krate":0,"index":6143},{"krate":0,"index":6144},{"krate":0,"index":6145},{"krate":0,"index":6146},{"krate":0,"index":6148},{"krate":0,"index":6188},{"krate":0,"index":6191},{"krate":0,"index":6193},{"krate":0,"index":6195},{"krate":0,"index":6196},{"krate":0,"index":6197},{"krate":0,"index":6200},{"krate":0,"index":6201},{"krate":0,"index":6203},{"krate":0,"index":6206},{"krate":0,"index":6208},{"krate":0,"index":6172},{"krate":0,"index":6173},{"krate":0,"index":6174},{"krate":0,"index":6175},{"krate":0,"index":6176},{"krate":0,"index":6177},{"krate":0,"index":6178},{"krate":0,"index":6179},{"krate":0,"index":6180},{"krate":0,"index":6181},{"krate":0,"index":6182},{"krate":0,"index":6183},{"krate":0,"index":6184},{"krate":0,"index":6186},{"krate":0,"index":6220},{"krate":0,"index":6223},{"krate":0,"index":6225},{"krate":0,"index":6227},{"krate":0,"index":6228},{"krate":0,"index":6229},{"krate":0,"index":6232},{"krate":0,"index":6233},{"krate":0,"index":6235},{"krate":0,"index":6238},{"krate":0,"index":6240},{"krate":0,"index":6210},{"krate":0,"index":6211},{"krate":0,"index":6212},{"krate":0,"index":6213},{"krate":0,"index":6214},{"krate":0,"index":6215},{"krate":0,"index":6216},{"krate":0,"index":6218},{"krate":0,"index":6253},{"krate":0,"index":6256},{"krate":0,"index":6258},{"krate":0,"index":6260},{"krate":0,"index":6261},{"krate":0,"index":6262},{"krate":0,"index":6265},{"krate":0,"index":6266},{"krate":0,"index":6268},{"krate":0,"index":6271},{"krate":0,"index":6273},{"krate":0,"index":6242},{"krate":0,"index":6243},{"krate":0,"index":6244},{"krate":0,"index":6245},{"krate":0,"index":6246},{"krate":0,"index":6247},{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6251},{"krate":0,"index":6293},{"krate":0,"index":6296},{"krate":0,"index":6298},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6305},{"krate":0,"index":6306},{"krate":0,"index":6308},{"krate":0,"index":6311},{"krate":0,"index":6313},{"krate":0,"index":6275},{"krate":0,"index":6276},{"krate":0,"index":6277},{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6280},{"krate":0,"index":6281},{"krate":0,"index":6282},{"krate":0,"index":6283},{"krate":0,"index":6284},{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6287},{"krate":0,"index":6288},{"krate":0,"index":6289},{"krate":0,"index":6291},{"krate":0,"index":6327},{"krate":0,"index":6330},{"krate":0,"index":6332},{"krate":0,"index":6334},{"krate":0,"index":6335},{"krate":0,"index":6336},{"krate":0,"index":6339},{"krate":0,"index":6340},{"krate":0,"index":6342},{"krate":0,"index":6345},{"krate":0,"index":6347},{"krate":0,"index":6315},{"krate":0,"index":6316},{"krate":0,"index":6317},{"krate":0,"index":6318},{"krate":0,"index":6319},{"krate":0,"index":6320},{"krate":0,"index":6321},{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":6325},{"krate":0,"index":6526},{"krate":0,"index":6529},{"krate":0,"index":6531},{"krate":0,"index":6533},{"krate":0,"index":6534},{"krate":0,"index":6535},{"krate":0,"index":6538},{"krate":0,"index":6539},{"krate":0,"index":6541},{"krate":0,"index":6544},{"krate":0,"index":6546},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6351},{"krate":0,"index":6352},{"krate":0,"index":6353},{"krate":0,"index":6354},{"krate":0,"index":6355},{"krate":0,"index":6356},{"krate":0,"index":6357},{"krate":0,"index":6358},{"krate":0,"index":6359},{"krate":0,"index":6360},{"krate":0,"index":6361},{"krate":0,"index":6362},{"krate":0,"index":6363},{"krate":0,"index":6364},{"krate":0,"index":6365},{"krate":0,"index":6366},{"krate":0,"index":6367},{"krate":0,"index":6368},{"krate":0,"index":6369},{"krate":0,"index":6370},{"krate":0,"index":6371},{"krate":0,"index":6372},{"krate":0,"index":6373},{"krate":0,"index":6374},{"krate":0,"index":6375},{"krate":0,"index":6376},{"krate":0,"index":6377},{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6380},{"krate":0,"index":6381},{"krate":0,"index":6382},{"krate":0,"index":6383},{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6386},{"krate":0,"index":6387},{"krate":0,"index":6388},{"krate":0,"index":6389},{"krate":0,"index":6390},{"krate":0,"index":6391},{"krate":0,"index":6392},{"krate":0,"index":6393},{"krate":0,"index":6394},{"krate":0,"index":6395},{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6398},{"krate":0,"index":6399},{"krate":0,"index":6400},{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":6403},{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":6406},{"krate":0,"index":6407},{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6410},{"krate":0,"index":6411},{"krate":0,"index":6412},{"krate":0,"index":6413},{"krate":0,"index":6414},{"krate":0,"index":6415},{"krate":0,"index":6416},{"krate":0,"index":6417},{"krate":0,"index":6418},{"krate":0,"index":6419},{"krate":0,"index":6420},{"krate":0,"index":6421},{"krate":0,"index":6422},{"krate":0,"index":6423},{"krate":0,"index":6424},{"krate":0,"index":6425},{"krate":0,"index":6426},{"krate":0,"index":6427},{"krate":0,"index":6428},{"krate":0,"index":6429},{"krate":0,"index":6430},{"krate":0,"index":6431},{"krate":0,"index":6432},{"krate":0,"index":6433},{"krate":0,"index":6434},{"krate":0,"index":6435},{"krate":0,"index":6436},{"krate":0,"index":6437},{"krate":0,"index":6438},{"krate":0,"index":6439},{"krate":0,"index":6440},{"krate":0,"index":6441},{"krate":0,"index":6442},{"krate":0,"index":6443},{"krate":0,"index":6444},{"krate":0,"index":6445},{"krate":0,"index":6446},{"krate":0,"index":6447},{"krate":0,"index":6448},{"krate":0,"index":6449},{"krate":0,"index":6450},{"krate":0,"index":6451},{"krate":0,"index":6452},{"krate":0,"index":6453},{"krate":0,"index":6454},{"krate":0,"index":6455},{"krate":0,"index":6456},{"krate":0,"index":6457},{"krate":0,"index":6458},{"krate":0,"index":6459},{"krate":0,"index":6460},{"krate":0,"index":6461},{"krate":0,"index":6462},{"krate":0,"index":6463},{"krate":0,"index":6464},{"krate":0,"index":6465},{"krate":0,"index":6466},{"krate":0,"index":6467},{"krate":0,"index":6468},{"krate":0,"index":6469},{"krate":0,"index":6470},{"krate":0,"index":6471},{"krate":0,"index":6472},{"krate":0,"index":6473},{"krate":0,"index":6474},{"krate":0,"index":6475},{"krate":0,"index":6476},{"krate":0,"index":6477},{"krate":0,"index":6478},{"krate":0,"index":6479},{"krate":0,"index":6480},{"krate":0,"index":6481},{"krate":0,"index":6482},{"krate":0,"index":6483},{"krate":0,"index":6484},{"krate":0,"index":6485},{"krate":0,"index":6486},{"krate":0,"index":6487},{"krate":0,"index":6488},{"krate":0,"index":6489},{"krate":0,"index":6490},{"krate":0,"index":6491},{"krate":0,"index":6492},{"krate":0,"index":6493},{"krate":0,"index":6494},{"krate":0,"index":6495},{"krate":0,"index":6496},{"krate":0,"index":6497},{"krate":0,"index":6498},{"krate":0,"index":6499},{"krate":0,"index":6500},{"krate":0,"index":6501},{"krate":0,"index":6502},{"krate":0,"index":6503},{"krate":0,"index":6504},{"krate":0,"index":6505},{"krate":0,"index":6506},{"krate":0,"index":6507},{"krate":0,"index":6508},{"krate":0,"index":6509},{"krate":0,"index":6510},{"krate":0,"index":6511},{"krate":0,"index":6512},{"krate":0,"index":6513},{"krate":0,"index":6514},{"krate":0,"index":6515},{"krate":0,"index":6516},{"krate":0,"index":6517},{"krate":0,"index":6518},{"krate":0,"index":6519},{"krate":0,"index":6520},{"krate":0,"index":6521},{"krate":0,"index":6522},{"krate":0,"index":6524},{"krate":0,"index":6568},{"krate":0,"index":6571},{"krate":0,"index":6573},{"krate":0,"index":6575},{"krate":0,"index":6576},{"krate":0,"index":6577},{"krate":0,"index":6580},{"krate":0,"index":6581},{"krate":0,"index":6583},{"krate":0,"index":6586},{"krate":0,"index":6588},{"krate":0,"index":6548},{"krate":0,"index":6549},{"krate":0,"index":6550},{"krate":0,"index":6551},{"krate":0,"index":6552},{"krate":0,"index":6553},{"krate":0,"index":6554},{"krate":0,"index":6555},{"krate":0,"index":6556},{"krate":0,"index":6557},{"krate":0,"index":6558},{"krate":0,"index":6559},{"krate":0,"index":6560},{"krate":0,"index":6561},{"krate":0,"index":6562},{"krate":0,"index":6563},{"krate":0,"index":6564},{"krate":0,"index":6566},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" Constant definitions.","sig":null,"attributes":[{"value":"/ Constant definitions.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":17068,"byte_end":17093,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":17094,"byte_end":17097,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The DWARF spec's `DW_AT_*` type is represented as `struct DwAt(u16)`,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":17098,"byte_end":17171,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ `DW_FORM_*` as `DwForm(u16)`, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":17172,"byte_end":17210,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":17211,"byte_end":17214,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ There are also exported const definitions for each constant.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":17215,"byte_end":17279,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":17281,"byte_end":17314,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":17315,"byte_end":17338,"line_start":26,"line_end":26,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5021},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19263,"byte_end":19267,"line_start":97,"line_end":97,"column_start":1,"column_end":5},"name":"DwUt","qualname":"::constants::DwUt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The unit type field in a unit header.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5009},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19278,"byte_end":19291,"line_start":98,"line_end":98,"column_start":5,"column_end":18},"name":"DW_UT_compile","qualname":"::constants::DW_UT_compile","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5010},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19304,"byte_end":19314,"line_start":99,"line_end":99,"column_start":5,"column_end":15},"name":"DW_UT_type","qualname":"::constants::DW_UT_type","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5011},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19327,"byte_end":19340,"line_start":100,"line_end":100,"column_start":5,"column_end":18},"name":"DW_UT_partial","qualname":"::constants::DW_UT_partial","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5012},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19353,"byte_end":19367,"line_start":101,"line_end":101,"column_start":5,"column_end":19},"name":"DW_UT_skeleton","qualname":"::constants::DW_UT_skeleton","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5013},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19380,"byte_end":19399,"line_start":102,"line_end":102,"column_start":5,"column_end":24},"name":"DW_UT_split_compile","qualname":"::constants::DW_UT_split_compile","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5014},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19412,"byte_end":19428,"line_start":103,"line_end":103,"column_start":5,"column_end":21},"name":"DW_UT_split_type","qualname":"::constants::DW_UT_split_type","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5015},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19441,"byte_end":19454,"line_start":104,"line_end":104,"column_start":5,"column_end":18},"name":"DW_UT_lo_user","qualname":"::constants::DW_UT_lo_user","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5016},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19467,"byte_end":19480,"line_start":105,"line_end":105,"column_start":5,"column_end":18},"name":"DW_UT_hi_user","qualname":"::constants::DW_UT_hi_user","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5079},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19877,"byte_end":19882,"line_start":116,"line_end":116,"column_start":1,"column_end":6},"name":"DwCfa","qualname":"::constants::DwCfa","value":"","parent":null,"children":[],"decl_id":null,"docs":" The opcode for a call frame instruction.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5043},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19893,"byte_end":19911,"line_start":117,"line_end":117,"column_start":5,"column_end":23},"name":"DW_CFA_advance_loc","qualname":"::constants::DW_CFA_advance_loc","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5044},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19929,"byte_end":19942,"line_start":118,"line_end":118,"column_start":5,"column_end":18},"name":"DW_CFA_offset","qualname":"::constants::DW_CFA_offset","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5045},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19960,"byte_end":19974,"line_start":119,"line_end":119,"column_start":5,"column_end":19},"name":"DW_CFA_restore","qualname":"::constants::DW_CFA_restore","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5046},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":19992,"byte_end":20002,"line_start":120,"line_end":120,"column_start":5,"column_end":15},"name":"DW_CFA_nop","qualname":"::constants::DW_CFA_nop","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5047},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20012,"byte_end":20026,"line_start":121,"line_end":121,"column_start":5,"column_end":19},"name":"DW_CFA_set_loc","qualname":"::constants::DW_CFA_set_loc","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5048},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20039,"byte_end":20058,"line_start":122,"line_end":122,"column_start":5,"column_end":24},"name":"DW_CFA_advance_loc1","qualname":"::constants::DW_CFA_advance_loc1","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5049},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20071,"byte_end":20090,"line_start":123,"line_end":123,"column_start":5,"column_end":24},"name":"DW_CFA_advance_loc2","qualname":"::constants::DW_CFA_advance_loc2","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5050},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20103,"byte_end":20122,"line_start":124,"line_end":124,"column_start":5,"column_end":24},"name":"DW_CFA_advance_loc4","qualname":"::constants::DW_CFA_advance_loc4","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5051},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20135,"byte_end":20157,"line_start":125,"line_end":125,"column_start":5,"column_end":27},"name":"DW_CFA_offset_extended","qualname":"::constants::DW_CFA_offset_extended","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5052},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20170,"byte_end":20193,"line_start":126,"line_end":126,"column_start":5,"column_end":28},"name":"DW_CFA_restore_extended","qualname":"::constants::DW_CFA_restore_extended","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5053},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20206,"byte_end":20222,"line_start":127,"line_end":127,"column_start":5,"column_end":21},"name":"DW_CFA_undefined","qualname":"::constants::DW_CFA_undefined","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5054},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20235,"byte_end":20252,"line_start":128,"line_end":128,"column_start":5,"column_end":22},"name":"DW_CFA_same_value","qualname":"::constants::DW_CFA_same_value","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5055},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20265,"byte_end":20280,"line_start":129,"line_end":129,"column_start":5,"column_end":20},"name":"DW_CFA_register","qualname":"::constants::DW_CFA_register","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5056},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20293,"byte_end":20314,"line_start":130,"line_end":130,"column_start":5,"column_end":26},"name":"DW_CFA_remember_state","qualname":"::constants::DW_CFA_remember_state","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5057},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20327,"byte_end":20347,"line_start":131,"line_end":131,"column_start":5,"column_end":25},"name":"DW_CFA_restore_state","qualname":"::constants::DW_CFA_restore_state","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5058},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20360,"byte_end":20374,"line_start":132,"line_end":132,"column_start":5,"column_end":19},"name":"DW_CFA_def_cfa","qualname":"::constants::DW_CFA_def_cfa","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5059},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20387,"byte_end":20410,"line_start":133,"line_end":133,"column_start":5,"column_end":28},"name":"DW_CFA_def_cfa_register","qualname":"::constants::DW_CFA_def_cfa_register","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5060},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20423,"byte_end":20444,"line_start":134,"line_end":134,"column_start":5,"column_end":26},"name":"DW_CFA_def_cfa_offset","qualname":"::constants::DW_CFA_def_cfa_offset","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5061},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20457,"byte_end":20482,"line_start":135,"line_end":135,"column_start":5,"column_end":30},"name":"DW_CFA_def_cfa_expression","qualname":"::constants::DW_CFA_def_cfa_expression","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5062},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20495,"byte_end":20512,"line_start":136,"line_end":136,"column_start":5,"column_end":22},"name":"DW_CFA_expression","qualname":"::constants::DW_CFA_expression","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5063},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20525,"byte_end":20550,"line_start":137,"line_end":137,"column_start":5,"column_end":30},"name":"DW_CFA_offset_extended_sf","qualname":"::constants::DW_CFA_offset_extended_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5064},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20563,"byte_end":20580,"line_start":138,"line_end":138,"column_start":5,"column_end":22},"name":"DW_CFA_def_cfa_sf","qualname":"::constants::DW_CFA_def_cfa_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5065},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20593,"byte_end":20617,"line_start":139,"line_end":139,"column_start":5,"column_end":29},"name":"DW_CFA_def_cfa_offset_sf","qualname":"::constants::DW_CFA_def_cfa_offset_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5066},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20630,"byte_end":20647,"line_start":140,"line_end":140,"column_start":5,"column_end":22},"name":"DW_CFA_val_offset","qualname":"::constants::DW_CFA_val_offset","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5067},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20660,"byte_end":20680,"line_start":141,"line_end":141,"column_start":5,"column_end":25},"name":"DW_CFA_val_offset_sf","qualname":"::constants::DW_CFA_val_offset_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5068},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20693,"byte_end":20714,"line_start":142,"line_end":142,"column_start":5,"column_end":26},"name":"DW_CFA_val_expression","qualname":"::constants::DW_CFA_val_expression","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5069},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20728,"byte_end":20742,"line_start":144,"line_end":144,"column_start":5,"column_end":19},"name":"DW_CFA_lo_user","qualname":"::constants::DW_CFA_lo_user","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5070},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20755,"byte_end":20769,"line_start":145,"line_end":145,"column_start":5,"column_end":19},"name":"DW_CFA_hi_user","qualname":"::constants::DW_CFA_hi_user","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5071},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20783,"byte_end":20807,"line_start":147,"line_end":147,"column_start":5,"column_end":29},"name":"DW_CFA_MIPS_advance_loc8","qualname":"::constants::DW_CFA_MIPS_advance_loc8","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5072},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20820,"byte_end":20842,"line_start":148,"line_end":148,"column_start":5,"column_end":27},"name":"DW_CFA_GNU_window_save","qualname":"::constants::DW_CFA_GNU_window_save","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5073},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20855,"byte_end":20875,"line_start":149,"line_end":149,"column_start":5,"column_end":25},"name":"DW_CFA_GNU_args_size","qualname":"::constants::DW_CFA_GNU_args_size","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5074},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":20888,"byte_end":20923,"line_start":150,"line_end":150,"column_start":5,"column_end":40},"name":"DW_CFA_GNU_negative_offset_extended","qualname":"::constants::DW_CFA_GNU_negative_offset_extended","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5107},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21038,"byte_end":21048,"line_start":157,"line_end":157,"column_start":1,"column_end":11},"name":"DwChildren","qualname":"::constants::DwChildren","value":"","parent":null,"children":[],"decl_id":null,"docs":" The child determination encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5101},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21059,"byte_end":21073,"line_start":158,"line_end":158,"column_start":5,"column_end":19},"name":"DW_CHILDREN_no","qualname":"::constants::DW_CHILDREN_no","value":"DwChildren","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5102},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21083,"byte_end":21098,"line_start":159,"line_end":159,"column_start":5,"column_end":20},"name":"DW_CHILDREN_yes","qualname":"::constants::DW_CHILDREN_yes","value":"DwChildren","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5246},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21194,"byte_end":21199,"line_start":166,"line_end":166,"column_start":1,"column_end":6},"name":"DwTag","qualname":"::constants::DwTag","value":"","parent":null,"children":[],"decl_id":null,"docs":" The tag encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5129},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21211,"byte_end":21222,"line_start":167,"line_end":167,"column_start":5,"column_end":16},"name":"DW_TAG_null","qualname":"::constants::DW_TAG_null","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5130},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21236,"byte_end":21253,"line_start":169,"line_end":169,"column_start":5,"column_end":22},"name":"DW_TAG_array_type","qualname":"::constants::DW_TAG_array_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5131},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21266,"byte_end":21283,"line_start":170,"line_end":170,"column_start":5,"column_end":22},"name":"DW_TAG_class_type","qualname":"::constants::DW_TAG_class_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5132},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21296,"byte_end":21314,"line_start":171,"line_end":171,"column_start":5,"column_end":23},"name":"DW_TAG_entry_point","qualname":"::constants::DW_TAG_entry_point","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5133},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21327,"byte_end":21350,"line_start":172,"line_end":172,"column_start":5,"column_end":28},"name":"DW_TAG_enumeration_type","qualname":"::constants::DW_TAG_enumeration_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5134},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21363,"byte_end":21386,"line_start":173,"line_end":173,"column_start":5,"column_end":28},"name":"DW_TAG_formal_parameter","qualname":"::constants::DW_TAG_formal_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5135},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21399,"byte_end":21426,"line_start":174,"line_end":174,"column_start":5,"column_end":32},"name":"DW_TAG_imported_declaration","qualname":"::constants::DW_TAG_imported_declaration","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5136},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21439,"byte_end":21451,"line_start":175,"line_end":175,"column_start":5,"column_end":17},"name":"DW_TAG_label","qualname":"::constants::DW_TAG_label","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5137},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21464,"byte_end":21484,"line_start":176,"line_end":176,"column_start":5,"column_end":25},"name":"DW_TAG_lexical_block","qualname":"::constants::DW_TAG_lexical_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5138},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21497,"byte_end":21510,"line_start":177,"line_end":177,"column_start":5,"column_end":18},"name":"DW_TAG_member","qualname":"::constants::DW_TAG_member","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5139},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21523,"byte_end":21542,"line_start":178,"line_end":178,"column_start":5,"column_end":24},"name":"DW_TAG_pointer_type","qualname":"::constants::DW_TAG_pointer_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5140},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21555,"byte_end":21576,"line_start":179,"line_end":179,"column_start":5,"column_end":26},"name":"DW_TAG_reference_type","qualname":"::constants::DW_TAG_reference_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5141},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21589,"byte_end":21608,"line_start":180,"line_end":180,"column_start":5,"column_end":24},"name":"DW_TAG_compile_unit","qualname":"::constants::DW_TAG_compile_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5142},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21621,"byte_end":21639,"line_start":181,"line_end":181,"column_start":5,"column_end":23},"name":"DW_TAG_string_type","qualname":"::constants::DW_TAG_string_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5143},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21652,"byte_end":21673,"line_start":182,"line_end":182,"column_start":5,"column_end":26},"name":"DW_TAG_structure_type","qualname":"::constants::DW_TAG_structure_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5144},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21686,"byte_end":21708,"line_start":183,"line_end":183,"column_start":5,"column_end":27},"name":"DW_TAG_subroutine_type","qualname":"::constants::DW_TAG_subroutine_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5145},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21721,"byte_end":21735,"line_start":184,"line_end":184,"column_start":5,"column_end":19},"name":"DW_TAG_typedef","qualname":"::constants::DW_TAG_typedef","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5146},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21748,"byte_end":21765,"line_start":185,"line_end":185,"column_start":5,"column_end":22},"name":"DW_TAG_union_type","qualname":"::constants::DW_TAG_union_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5147},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21778,"byte_end":21807,"line_start":186,"line_end":186,"column_start":5,"column_end":34},"name":"DW_TAG_unspecified_parameters","qualname":"::constants::DW_TAG_unspecified_parameters","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5148},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21820,"byte_end":21834,"line_start":187,"line_end":187,"column_start":5,"column_end":19},"name":"DW_TAG_variant","qualname":"::constants::DW_TAG_variant","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5149},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21847,"byte_end":21866,"line_start":188,"line_end":188,"column_start":5,"column_end":24},"name":"DW_TAG_common_block","qualname":"::constants::DW_TAG_common_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5150},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21879,"byte_end":21902,"line_start":189,"line_end":189,"column_start":5,"column_end":28},"name":"DW_TAG_common_inclusion","qualname":"::constants::DW_TAG_common_inclusion","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5151},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21915,"byte_end":21933,"line_start":190,"line_end":190,"column_start":5,"column_end":23},"name":"DW_TAG_inheritance","qualname":"::constants::DW_TAG_inheritance","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5152},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21946,"byte_end":21971,"line_start":191,"line_end":191,"column_start":5,"column_end":30},"name":"DW_TAG_inlined_subroutine","qualname":"::constants::DW_TAG_inlined_subroutine","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5153},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":21984,"byte_end":21997,"line_start":192,"line_end":192,"column_start":5,"column_end":18},"name":"DW_TAG_module","qualname":"::constants::DW_TAG_module","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5154},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22010,"byte_end":22035,"line_start":193,"line_end":193,"column_start":5,"column_end":30},"name":"DW_TAG_ptr_to_member_type","qualname":"::constants::DW_TAG_ptr_to_member_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5155},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22048,"byte_end":22063,"line_start":194,"line_end":194,"column_start":5,"column_end":20},"name":"DW_TAG_set_type","qualname":"::constants::DW_TAG_set_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5156},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22076,"byte_end":22096,"line_start":195,"line_end":195,"column_start":5,"column_end":25},"name":"DW_TAG_subrange_type","qualname":"::constants::DW_TAG_subrange_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5157},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22109,"byte_end":22125,"line_start":196,"line_end":196,"column_start":5,"column_end":21},"name":"DW_TAG_with_stmt","qualname":"::constants::DW_TAG_with_stmt","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5158},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22138,"byte_end":22163,"line_start":197,"line_end":197,"column_start":5,"column_end":30},"name":"DW_TAG_access_declaration","qualname":"::constants::DW_TAG_access_declaration","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5159},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22176,"byte_end":22192,"line_start":198,"line_end":198,"column_start":5,"column_end":21},"name":"DW_TAG_base_type","qualname":"::constants::DW_TAG_base_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5160},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22205,"byte_end":22223,"line_start":199,"line_end":199,"column_start":5,"column_end":23},"name":"DW_TAG_catch_block","qualname":"::constants::DW_TAG_catch_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5161},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22236,"byte_end":22253,"line_start":200,"line_end":200,"column_start":5,"column_end":22},"name":"DW_TAG_const_type","qualname":"::constants::DW_TAG_const_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5162},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22266,"byte_end":22281,"line_start":201,"line_end":201,"column_start":5,"column_end":20},"name":"DW_TAG_constant","qualname":"::constants::DW_TAG_constant","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5163},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22294,"byte_end":22311,"line_start":202,"line_end":202,"column_start":5,"column_end":22},"name":"DW_TAG_enumerator","qualname":"::constants::DW_TAG_enumerator","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5164},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22324,"byte_end":22340,"line_start":203,"line_end":203,"column_start":5,"column_end":21},"name":"DW_TAG_file_type","qualname":"::constants::DW_TAG_file_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5165},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22353,"byte_end":22366,"line_start":204,"line_end":204,"column_start":5,"column_end":18},"name":"DW_TAG_friend","qualname":"::constants::DW_TAG_friend","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5166},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22379,"byte_end":22394,"line_start":205,"line_end":205,"column_start":5,"column_end":20},"name":"DW_TAG_namelist","qualname":"::constants::DW_TAG_namelist","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5167},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22407,"byte_end":22427,"line_start":206,"line_end":206,"column_start":5,"column_end":25},"name":"DW_TAG_namelist_item","qualname":"::constants::DW_TAG_namelist_item","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5168},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22440,"byte_end":22458,"line_start":207,"line_end":207,"column_start":5,"column_end":23},"name":"DW_TAG_packed_type","qualname":"::constants::DW_TAG_packed_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5169},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22471,"byte_end":22488,"line_start":208,"line_end":208,"column_start":5,"column_end":22},"name":"DW_TAG_subprogram","qualname":"::constants::DW_TAG_subprogram","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5170},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22501,"byte_end":22531,"line_start":209,"line_end":209,"column_start":5,"column_end":35},"name":"DW_TAG_template_type_parameter","qualname":"::constants::DW_TAG_template_type_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5171},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22544,"byte_end":22575,"line_start":210,"line_end":210,"column_start":5,"column_end":36},"name":"DW_TAG_template_value_parameter","qualname":"::constants::DW_TAG_template_value_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5172},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22588,"byte_end":22606,"line_start":211,"line_end":211,"column_start":5,"column_end":23},"name":"DW_TAG_thrown_type","qualname":"::constants::DW_TAG_thrown_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5173},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22619,"byte_end":22635,"line_start":212,"line_end":212,"column_start":5,"column_end":21},"name":"DW_TAG_try_block","qualname":"::constants::DW_TAG_try_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5174},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22648,"byte_end":22667,"line_start":213,"line_end":213,"column_start":5,"column_end":24},"name":"DW_TAG_variant_part","qualname":"::constants::DW_TAG_variant_part","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5175},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22680,"byte_end":22695,"line_start":214,"line_end":214,"column_start":5,"column_end":20},"name":"DW_TAG_variable","qualname":"::constants::DW_TAG_variable","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5176},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22708,"byte_end":22728,"line_start":215,"line_end":215,"column_start":5,"column_end":25},"name":"DW_TAG_volatile_type","qualname":"::constants::DW_TAG_volatile_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5177},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22754,"byte_end":22776,"line_start":218,"line_end":218,"column_start":5,"column_end":27},"name":"DW_TAG_dwarf_procedure","qualname":"::constants::DW_TAG_dwarf_procedure","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5178},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22789,"byte_end":22809,"line_start":219,"line_end":219,"column_start":5,"column_end":25},"name":"DW_TAG_restrict_type","qualname":"::constants::DW_TAG_restrict_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5179},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22822,"byte_end":22843,"line_start":220,"line_end":220,"column_start":5,"column_end":26},"name":"DW_TAG_interface_type","qualname":"::constants::DW_TAG_interface_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5180},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22856,"byte_end":22872,"line_start":221,"line_end":221,"column_start":5,"column_end":21},"name":"DW_TAG_namespace","qualname":"::constants::DW_TAG_namespace","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5181},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22885,"byte_end":22907,"line_start":222,"line_end":222,"column_start":5,"column_end":27},"name":"DW_TAG_imported_module","qualname":"::constants::DW_TAG_imported_module","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5182},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22920,"byte_end":22943,"line_start":223,"line_end":223,"column_start":5,"column_end":28},"name":"DW_TAG_unspecified_type","qualname":"::constants::DW_TAG_unspecified_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5183},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22956,"byte_end":22975,"line_start":224,"line_end":224,"column_start":5,"column_end":24},"name":"DW_TAG_partial_unit","qualname":"::constants::DW_TAG_partial_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5184},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":22988,"byte_end":23008,"line_start":225,"line_end":225,"column_start":5,"column_end":25},"name":"DW_TAG_imported_unit","qualname":"::constants::DW_TAG_imported_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5185},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23021,"byte_end":23037,"line_start":226,"line_end":226,"column_start":5,"column_end":21},"name":"DW_TAG_condition","qualname":"::constants::DW_TAG_condition","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5186},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23050,"byte_end":23068,"line_start":227,"line_end":227,"column_start":5,"column_end":23},"name":"DW_TAG_shared_type","qualname":"::constants::DW_TAG_shared_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5187},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23094,"byte_end":23110,"line_start":230,"line_end":230,"column_start":5,"column_end":21},"name":"DW_TAG_type_unit","qualname":"::constants::DW_TAG_type_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5188},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23123,"byte_end":23151,"line_start":231,"line_end":231,"column_start":5,"column_end":33},"name":"DW_TAG_rvalue_reference_type","qualname":"::constants::DW_TAG_rvalue_reference_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5189},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23164,"byte_end":23185,"line_start":232,"line_end":232,"column_start":5,"column_end":26},"name":"DW_TAG_template_alias","qualname":"::constants::DW_TAG_template_alias","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5190},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23211,"byte_end":23230,"line_start":235,"line_end":235,"column_start":5,"column_end":24},"name":"DW_TAG_coarray_type","qualname":"::constants::DW_TAG_coarray_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5191},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23243,"byte_end":23266,"line_start":236,"line_end":236,"column_start":5,"column_end":28},"name":"DW_TAG_generic_subrange","qualname":"::constants::DW_TAG_generic_subrange","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5192},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23279,"byte_end":23298,"line_start":237,"line_end":237,"column_start":5,"column_end":24},"name":"DW_TAG_dynamic_type","qualname":"::constants::DW_TAG_dynamic_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5193},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23311,"byte_end":23329,"line_start":238,"line_end":238,"column_start":5,"column_end":23},"name":"DW_TAG_atomic_type","qualname":"::constants::DW_TAG_atomic_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5194},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23342,"byte_end":23358,"line_start":239,"line_end":239,"column_start":5,"column_end":21},"name":"DW_TAG_call_site","qualname":"::constants::DW_TAG_call_site","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5195},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23371,"byte_end":23397,"line_start":240,"line_end":240,"column_start":5,"column_end":31},"name":"DW_TAG_call_site_parameter","qualname":"::constants::DW_TAG_call_site_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5196},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23410,"byte_end":23430,"line_start":241,"line_end":241,"column_start":5,"column_end":25},"name":"DW_TAG_skeleton_unit","qualname":"::constants::DW_TAG_skeleton_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5197},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23443,"byte_end":23464,"line_start":242,"line_end":242,"column_start":5,"column_end":26},"name":"DW_TAG_immutable_type","qualname":"::constants::DW_TAG_immutable_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5198},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23478,"byte_end":23492,"line_start":244,"line_end":244,"column_start":5,"column_end":19},"name":"DW_TAG_lo_user","qualname":"::constants::DW_TAG_lo_user","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5199},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23507,"byte_end":23521,"line_start":245,"line_end":245,"column_start":5,"column_end":19},"name":"DW_TAG_hi_user","qualname":"::constants::DW_TAG_hi_user","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5200},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23561,"byte_end":23577,"line_start":248,"line_end":248,"column_start":5,"column_end":21},"name":"DW_TAG_MIPS_loop","qualname":"::constants::DW_TAG_MIPS_loop","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5201},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23611,"byte_end":23637,"line_start":251,"line_end":251,"column_start":5,"column_end":31},"name":"DW_TAG_HP_array_descriptor","qualname":"::constants::DW_TAG_HP_array_descriptor","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5202},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23652,"byte_end":23673,"line_start":252,"line_end":252,"column_start":5,"column_end":26},"name":"DW_TAG_HP_Bliss_field","qualname":"::constants::DW_TAG_HP_Bliss_field","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5203},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23688,"byte_end":23713,"line_start":253,"line_end":253,"column_start":5,"column_end":30},"name":"DW_TAG_HP_Bliss_field_set","qualname":"::constants::DW_TAG_HP_Bliss_field_set","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5204},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23748,"byte_end":23767,"line_start":256,"line_end":256,"column_start":5,"column_end":24},"name":"DW_TAG_format_label","qualname":"::constants::DW_TAG_format_label","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5205},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23782,"byte_end":23806,"line_start":257,"line_end":257,"column_start":5,"column_end":29},"name":"DW_TAG_function_template","qualname":"::constants::DW_TAG_function_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5206},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23821,"byte_end":23842,"line_start":258,"line_end":258,"column_start":5,"column_end":26},"name":"DW_TAG_class_template","qualname":"::constants::DW_TAG_class_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5207},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23857,"byte_end":23873,"line_start":259,"line_end":259,"column_start":5,"column_end":21},"name":"DW_TAG_GNU_BINCL","qualname":"::constants::DW_TAG_GNU_BINCL","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5208},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23888,"byte_end":23904,"line_start":260,"line_end":260,"column_start":5,"column_end":21},"name":"DW_TAG_GNU_EINCL","qualname":"::constants::DW_TAG_GNU_EINCL","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5209},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23919,"byte_end":23953,"line_start":261,"line_end":261,"column_start":5,"column_end":39},"name":"DW_TAG_GNU_template_template_param","qualname":"::constants::DW_TAG_GNU_template_template_param","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5210},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":23968,"byte_end":24002,"line_start":262,"line_end":262,"column_start":5,"column_end":39},"name":"DW_TAG_GNU_template_parameter_pack","qualname":"::constants::DW_TAG_GNU_template_parameter_pack","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5211},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24017,"byte_end":24049,"line_start":263,"line_end":263,"column_start":5,"column_end":37},"name":"DW_TAG_GNU_formal_parameter_pack","qualname":"::constants::DW_TAG_GNU_formal_parameter_pack","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5212},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24064,"byte_end":24084,"line_start":264,"line_end":264,"column_start":5,"column_end":25},"name":"DW_TAG_GNU_call_site","qualname":"::constants::DW_TAG_GNU_call_site","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5213},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24099,"byte_end":24129,"line_start":265,"line_end":265,"column_start":5,"column_end":35},"name":"DW_TAG_GNU_call_site_parameter","qualname":"::constants::DW_TAG_GNU_call_site_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5214},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24145,"byte_end":24166,"line_start":267,"line_end":267,"column_start":5,"column_end":26},"name":"DW_TAG_APPLE_property","qualname":"::constants::DW_TAG_APPLE_property","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5215},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24201,"byte_end":24229,"line_start":270,"line_end":270,"column_start":5,"column_end":33},"name":"DW_TAG_SUN_function_template","qualname":"::constants::DW_TAG_SUN_function_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5216},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24244,"byte_end":24269,"line_start":271,"line_end":271,"column_start":5,"column_end":30},"name":"DW_TAG_SUN_class_template","qualname":"::constants::DW_TAG_SUN_class_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5217},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24284,"byte_end":24310,"line_start":272,"line_end":272,"column_start":5,"column_end":31},"name":"DW_TAG_SUN_struct_template","qualname":"::constants::DW_TAG_SUN_struct_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5218},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24325,"byte_end":24350,"line_start":273,"line_end":273,"column_start":5,"column_end":30},"name":"DW_TAG_SUN_union_template","qualname":"::constants::DW_TAG_SUN_union_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5219},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24365,"byte_end":24396,"line_start":274,"line_end":274,"column_start":5,"column_end":36},"name":"DW_TAG_SUN_indirect_inheritance","qualname":"::constants::DW_TAG_SUN_indirect_inheritance","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5220},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24411,"byte_end":24431,"line_start":275,"line_end":275,"column_start":5,"column_end":25},"name":"DW_TAG_SUN_codeflags","qualname":"::constants::DW_TAG_SUN_codeflags","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5221},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24446,"byte_end":24467,"line_start":276,"line_end":276,"column_start":5,"column_end":26},"name":"DW_TAG_SUN_memop_info","qualname":"::constants::DW_TAG_SUN_memop_info","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5222},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24482,"byte_end":24507,"line_start":277,"line_end":277,"column_start":5,"column_end":30},"name":"DW_TAG_SUN_omp_child_func","qualname":"::constants::DW_TAG_SUN_omp_child_func","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5223},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24522,"byte_end":24548,"line_start":278,"line_end":278,"column_start":5,"column_end":31},"name":"DW_TAG_SUN_rtti_descriptor","qualname":"::constants::DW_TAG_SUN_rtti_descriptor","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24563,"byte_end":24583,"line_start":279,"line_end":279,"column_start":5,"column_end":25},"name":"DW_TAG_SUN_dtor_info","qualname":"::constants::DW_TAG_SUN_dtor_info","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5225},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24598,"byte_end":24613,"line_start":280,"line_end":280,"column_start":5,"column_end":20},"name":"DW_TAG_SUN_dtor","qualname":"::constants::DW_TAG_SUN_dtor","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5226},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24628,"byte_end":24652,"line_start":281,"line_end":281,"column_start":5,"column_end":29},"name":"DW_TAG_SUN_f90_interface","qualname":"::constants::DW_TAG_SUN_f90_interface","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5227},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24667,"byte_end":24699,"line_start":282,"line_end":282,"column_start":5,"column_end":37},"name":"DW_TAG_SUN_fortran_vax_structure","qualname":"::constants::DW_TAG_SUN_fortran_vax_structure","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5228},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24737,"byte_end":24760,"line_start":285,"line_end":285,"column_start":5,"column_end":28},"name":"DW_TAG_ALTIUM_circ_type","qualname":"::constants::DW_TAG_ALTIUM_circ_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5229},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24775,"byte_end":24802,"line_start":286,"line_end":286,"column_start":5,"column_end":32},"name":"DW_TAG_ALTIUM_mwa_circ_type","qualname":"::constants::DW_TAG_ALTIUM_mwa_circ_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5230},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24817,"byte_end":24845,"line_start":287,"line_end":287,"column_start":5,"column_end":33},"name":"DW_TAG_ALTIUM_rev_carry_type","qualname":"::constants::DW_TAG_ALTIUM_rev_carry_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5231},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24860,"byte_end":24877,"line_start":288,"line_end":288,"column_start":5,"column_end":22},"name":"DW_TAG_ALTIUM_rom","qualname":"::constants::DW_TAG_ALTIUM_rom","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5232},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24916,"byte_end":24938,"line_start":291,"line_end":291,"column_start":5,"column_end":27},"name":"DW_TAG_upc_shared_type","qualname":"::constants::DW_TAG_upc_shared_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5233},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24953,"byte_end":24975,"line_start":292,"line_end":292,"column_start":5,"column_end":27},"name":"DW_TAG_upc_strict_type","qualname":"::constants::DW_TAG_upc_strict_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5234},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":24990,"byte_end":25013,"line_start":293,"line_end":293,"column_start":5,"column_end":28},"name":"DW_TAG_upc_relaxed_type","qualname":"::constants::DW_TAG_upc_relaxed_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5235},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25069,"byte_end":25090,"line_start":296,"line_end":296,"column_start":5,"column_end":26},"name":"DW_TAG_PGI_kanji_type","qualname":"::constants::DW_TAG_PGI_kanji_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5236},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25105,"byte_end":25131,"line_start":297,"line_end":297,"column_start":5,"column_end":31},"name":"DW_TAG_PGI_interface_block","qualname":"::constants::DW_TAG_PGI_interface_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5237},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25170,"byte_end":25193,"line_start":300,"line_end":300,"column_start":5,"column_end":28},"name":"DW_TAG_BORLAND_property","qualname":"::constants::DW_TAG_BORLAND_property","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5238},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25208,"byte_end":25236,"line_start":301,"line_end":301,"column_start":5,"column_end":33},"name":"DW_TAG_BORLAND_Delphi_string","qualname":"::constants::DW_TAG_BORLAND_Delphi_string","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5239},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25251,"byte_end":25286,"line_start":302,"line_end":302,"column_start":5,"column_end":40},"name":"DW_TAG_BORLAND_Delphi_dynamic_array","qualname":"::constants::DW_TAG_BORLAND_Delphi_dynamic_array","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5240},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25301,"byte_end":25326,"line_start":303,"line_end":303,"column_start":5,"column_end":30},"name":"DW_TAG_BORLAND_Delphi_set","qualname":"::constants::DW_TAG_BORLAND_Delphi_set","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5241},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25341,"byte_end":25370,"line_start":304,"line_end":304,"column_start":5,"column_end":34},"name":"DW_TAG_BORLAND_Delphi_variant","qualname":"::constants::DW_TAG_BORLAND_Delphi_variant","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5537},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25477,"byte_end":25481,"line_start":311,"line_end":311,"column_start":1,"column_end":5},"name":"DwAt","qualname":"::constants::DwAt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The attribute encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5268},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25493,"byte_end":25503,"line_start":312,"line_end":312,"column_start":5,"column_end":15},"name":"DW_AT_null","qualname":"::constants::DW_AT_null","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5269},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25517,"byte_end":25530,"line_start":314,"line_end":314,"column_start":5,"column_end":18},"name":"DW_AT_sibling","qualname":"::constants::DW_AT_sibling","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5270},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25543,"byte_end":25557,"line_start":315,"line_end":315,"column_start":5,"column_end":19},"name":"DW_AT_location","qualname":"::constants::DW_AT_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5271},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25570,"byte_end":25580,"line_start":316,"line_end":316,"column_start":5,"column_end":15},"name":"DW_AT_name","qualname":"::constants::DW_AT_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5272},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25593,"byte_end":25607,"line_start":317,"line_end":317,"column_start":5,"column_end":19},"name":"DW_AT_ordering","qualname":"::constants::DW_AT_ordering","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5273},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25620,"byte_end":25635,"line_start":318,"line_end":318,"column_start":5,"column_end":20},"name":"DW_AT_byte_size","qualname":"::constants::DW_AT_byte_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5274},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25648,"byte_end":25664,"line_start":319,"line_end":319,"column_start":5,"column_end":21},"name":"DW_AT_bit_offset","qualname":"::constants::DW_AT_bit_offset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5275},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25677,"byte_end":25691,"line_start":320,"line_end":320,"column_start":5,"column_end":19},"name":"DW_AT_bit_size","qualname":"::constants::DW_AT_bit_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5276},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25704,"byte_end":25719,"line_start":321,"line_end":321,"column_start":5,"column_end":20},"name":"DW_AT_stmt_list","qualname":"::constants::DW_AT_stmt_list","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5277},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25732,"byte_end":25744,"line_start":322,"line_end":322,"column_start":5,"column_end":17},"name":"DW_AT_low_pc","qualname":"::constants::DW_AT_low_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5278},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25757,"byte_end":25770,"line_start":323,"line_end":323,"column_start":5,"column_end":18},"name":"DW_AT_high_pc","qualname":"::constants::DW_AT_high_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5279},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25783,"byte_end":25797,"line_start":324,"line_end":324,"column_start":5,"column_end":19},"name":"DW_AT_language","qualname":"::constants::DW_AT_language","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5280},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25810,"byte_end":25821,"line_start":325,"line_end":325,"column_start":5,"column_end":16},"name":"DW_AT_discr","qualname":"::constants::DW_AT_discr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5281},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25834,"byte_end":25851,"line_start":326,"line_end":326,"column_start":5,"column_end":22},"name":"DW_AT_discr_value","qualname":"::constants::DW_AT_discr_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5282},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25864,"byte_end":25880,"line_start":327,"line_end":327,"column_start":5,"column_end":21},"name":"DW_AT_visibility","qualname":"::constants::DW_AT_visibility","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5283},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25893,"byte_end":25905,"line_start":328,"line_end":328,"column_start":5,"column_end":17},"name":"DW_AT_import","qualname":"::constants::DW_AT_import","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5284},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25918,"byte_end":25937,"line_start":329,"line_end":329,"column_start":5,"column_end":24},"name":"DW_AT_string_length","qualname":"::constants::DW_AT_string_length","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5285},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25950,"byte_end":25972,"line_start":330,"line_end":330,"column_start":5,"column_end":27},"name":"DW_AT_common_reference","qualname":"::constants::DW_AT_common_reference","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5286},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":25985,"byte_end":25999,"line_start":331,"line_end":331,"column_start":5,"column_end":19},"name":"DW_AT_comp_dir","qualname":"::constants::DW_AT_comp_dir","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5287},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26012,"byte_end":26029,"line_start":332,"line_end":332,"column_start":5,"column_end":22},"name":"DW_AT_const_value","qualname":"::constants::DW_AT_const_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5288},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26042,"byte_end":26063,"line_start":333,"line_end":333,"column_start":5,"column_end":26},"name":"DW_AT_containing_type","qualname":"::constants::DW_AT_containing_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5289},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26076,"byte_end":26095,"line_start":334,"line_end":334,"column_start":5,"column_end":24},"name":"DW_AT_default_value","qualname":"::constants::DW_AT_default_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5290},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26108,"byte_end":26120,"line_start":335,"line_end":335,"column_start":5,"column_end":17},"name":"DW_AT_inline","qualname":"::constants::DW_AT_inline","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5291},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26133,"byte_end":26150,"line_start":336,"line_end":336,"column_start":5,"column_end":22},"name":"DW_AT_is_optional","qualname":"::constants::DW_AT_is_optional","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5292},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26163,"byte_end":26180,"line_start":337,"line_end":337,"column_start":5,"column_end":22},"name":"DW_AT_lower_bound","qualname":"::constants::DW_AT_lower_bound","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5293},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26193,"byte_end":26207,"line_start":338,"line_end":338,"column_start":5,"column_end":19},"name":"DW_AT_producer","qualname":"::constants::DW_AT_producer","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5294},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26220,"byte_end":26236,"line_start":339,"line_end":339,"column_start":5,"column_end":21},"name":"DW_AT_prototyped","qualname":"::constants::DW_AT_prototyped","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5295},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26249,"byte_end":26266,"line_start":340,"line_end":340,"column_start":5,"column_end":22},"name":"DW_AT_return_addr","qualname":"::constants::DW_AT_return_addr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5296},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26279,"byte_end":26296,"line_start":341,"line_end":341,"column_start":5,"column_end":22},"name":"DW_AT_start_scope","qualname":"::constants::DW_AT_start_scope","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5297},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26309,"byte_end":26325,"line_start":342,"line_end":342,"column_start":5,"column_end":21},"name":"DW_AT_bit_stride","qualname":"::constants::DW_AT_bit_stride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5298},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26338,"byte_end":26355,"line_start":343,"line_end":343,"column_start":5,"column_end":22},"name":"DW_AT_upper_bound","qualname":"::constants::DW_AT_upper_bound","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5299},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26368,"byte_end":26389,"line_start":344,"line_end":344,"column_start":5,"column_end":26},"name":"DW_AT_abstract_origin","qualname":"::constants::DW_AT_abstract_origin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5300},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26402,"byte_end":26421,"line_start":345,"line_end":345,"column_start":5,"column_end":24},"name":"DW_AT_accessibility","qualname":"::constants::DW_AT_accessibility","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5301},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26434,"byte_end":26453,"line_start":346,"line_end":346,"column_start":5,"column_end":24},"name":"DW_AT_address_class","qualname":"::constants::DW_AT_address_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5302},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26466,"byte_end":26482,"line_start":347,"line_end":347,"column_start":5,"column_end":21},"name":"DW_AT_artificial","qualname":"::constants::DW_AT_artificial","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5303},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26495,"byte_end":26511,"line_start":348,"line_end":348,"column_start":5,"column_end":21},"name":"DW_AT_base_types","qualname":"::constants::DW_AT_base_types","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5304},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26524,"byte_end":26548,"line_start":349,"line_end":349,"column_start":5,"column_end":29},"name":"DW_AT_calling_convention","qualname":"::constants::DW_AT_calling_convention","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5305},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26561,"byte_end":26572,"line_start":350,"line_end":350,"column_start":5,"column_end":16},"name":"DW_AT_count","qualname":"::constants::DW_AT_count","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5306},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26585,"byte_end":26611,"line_start":351,"line_end":351,"column_start":5,"column_end":31},"name":"DW_AT_data_member_location","qualname":"::constants::DW_AT_data_member_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5307},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26624,"byte_end":26641,"line_start":352,"line_end":352,"column_start":5,"column_end":22},"name":"DW_AT_decl_column","qualname":"::constants::DW_AT_decl_column","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5308},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26654,"byte_end":26669,"line_start":353,"line_end":353,"column_start":5,"column_end":20},"name":"DW_AT_decl_file","qualname":"::constants::DW_AT_decl_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5309},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26682,"byte_end":26697,"line_start":354,"line_end":354,"column_start":5,"column_end":20},"name":"DW_AT_decl_line","qualname":"::constants::DW_AT_decl_line","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5310},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26710,"byte_end":26727,"line_start":355,"line_end":355,"column_start":5,"column_end":22},"name":"DW_AT_declaration","qualname":"::constants::DW_AT_declaration","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5311},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26740,"byte_end":26756,"line_start":356,"line_end":356,"column_start":5,"column_end":21},"name":"DW_AT_discr_list","qualname":"::constants::DW_AT_discr_list","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5312},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26769,"byte_end":26783,"line_start":357,"line_end":357,"column_start":5,"column_end":19},"name":"DW_AT_encoding","qualname":"::constants::DW_AT_encoding","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5313},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26796,"byte_end":26810,"line_start":358,"line_end":358,"column_start":5,"column_end":19},"name":"DW_AT_external","qualname":"::constants::DW_AT_external","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5314},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26823,"byte_end":26839,"line_start":359,"line_end":359,"column_start":5,"column_end":21},"name":"DW_AT_frame_base","qualname":"::constants::DW_AT_frame_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5315},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26852,"byte_end":26864,"line_start":360,"line_end":360,"column_start":5,"column_end":17},"name":"DW_AT_friend","qualname":"::constants::DW_AT_friend","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5316},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26877,"byte_end":26898,"line_start":361,"line_end":361,"column_start":5,"column_end":26},"name":"DW_AT_identifier_case","qualname":"::constants::DW_AT_identifier_case","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5317},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26911,"byte_end":26927,"line_start":362,"line_end":362,"column_start":5,"column_end":21},"name":"DW_AT_macro_info","qualname":"::constants::DW_AT_macro_info","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5318},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26940,"byte_end":26959,"line_start":363,"line_end":363,"column_start":5,"column_end":24},"name":"DW_AT_namelist_item","qualname":"::constants::DW_AT_namelist_item","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5319},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26972,"byte_end":26986,"line_start":364,"line_end":364,"column_start":5,"column_end":19},"name":"DW_AT_priority","qualname":"::constants::DW_AT_priority","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5320},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":26999,"byte_end":27012,"line_start":365,"line_end":365,"column_start":5,"column_end":18},"name":"DW_AT_segment","qualname":"::constants::DW_AT_segment","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5321},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27025,"byte_end":27044,"line_start":366,"line_end":366,"column_start":5,"column_end":24},"name":"DW_AT_specification","qualname":"::constants::DW_AT_specification","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5322},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27057,"byte_end":27074,"line_start":367,"line_end":367,"column_start":5,"column_end":22},"name":"DW_AT_static_link","qualname":"::constants::DW_AT_static_link","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5323},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27087,"byte_end":27097,"line_start":368,"line_end":368,"column_start":5,"column_end":15},"name":"DW_AT_type","qualname":"::constants::DW_AT_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5324},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27110,"byte_end":27128,"line_start":369,"line_end":369,"column_start":5,"column_end":23},"name":"DW_AT_use_location","qualname":"::constants::DW_AT_use_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5325},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27141,"byte_end":27165,"line_start":370,"line_end":370,"column_start":5,"column_end":29},"name":"DW_AT_variable_parameter","qualname":"::constants::DW_AT_variable_parameter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5326},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27178,"byte_end":27194,"line_start":371,"line_end":371,"column_start":5,"column_end":21},"name":"DW_AT_virtuality","qualname":"::constants::DW_AT_virtuality","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5327},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27207,"byte_end":27233,"line_start":372,"line_end":372,"column_start":5,"column_end":31},"name":"DW_AT_vtable_elem_location","qualname":"::constants::DW_AT_vtable_elem_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5328},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27259,"byte_end":27274,"line_start":375,"line_end":375,"column_start":5,"column_end":20},"name":"DW_AT_allocated","qualname":"::constants::DW_AT_allocated","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5329},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27287,"byte_end":27303,"line_start":376,"line_end":376,"column_start":5,"column_end":21},"name":"DW_AT_associated","qualname":"::constants::DW_AT_associated","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5330},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27316,"byte_end":27335,"line_start":377,"line_end":377,"column_start":5,"column_end":24},"name":"DW_AT_data_location","qualname":"::constants::DW_AT_data_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5331},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27348,"byte_end":27365,"line_start":378,"line_end":378,"column_start":5,"column_end":22},"name":"DW_AT_byte_stride","qualname":"::constants::DW_AT_byte_stride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5332},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27378,"byte_end":27392,"line_start":379,"line_end":379,"column_start":5,"column_end":19},"name":"DW_AT_entry_pc","qualname":"::constants::DW_AT_entry_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5333},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27405,"byte_end":27419,"line_start":380,"line_end":380,"column_start":5,"column_end":19},"name":"DW_AT_use_UTF8","qualname":"::constants::DW_AT_use_UTF8","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5334},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27432,"byte_end":27447,"line_start":381,"line_end":381,"column_start":5,"column_end":20},"name":"DW_AT_extension","qualname":"::constants::DW_AT_extension","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5335},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27460,"byte_end":27472,"line_start":382,"line_end":382,"column_start":5,"column_end":17},"name":"DW_AT_ranges","qualname":"::constants::DW_AT_ranges","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5336},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27485,"byte_end":27501,"line_start":383,"line_end":383,"column_start":5,"column_end":21},"name":"DW_AT_trampoline","qualname":"::constants::DW_AT_trampoline","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5337},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27514,"byte_end":27531,"line_start":384,"line_end":384,"column_start":5,"column_end":22},"name":"DW_AT_call_column","qualname":"::constants::DW_AT_call_column","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5338},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27544,"byte_end":27559,"line_start":385,"line_end":385,"column_start":5,"column_end":20},"name":"DW_AT_call_file","qualname":"::constants::DW_AT_call_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5339},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27572,"byte_end":27587,"line_start":386,"line_end":386,"column_start":5,"column_end":20},"name":"DW_AT_call_line","qualname":"::constants::DW_AT_call_line","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5340},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27600,"byte_end":27617,"line_start":387,"line_end":387,"column_start":5,"column_end":22},"name":"DW_AT_description","qualname":"::constants::DW_AT_description","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5341},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27630,"byte_end":27648,"line_start":388,"line_end":388,"column_start":5,"column_end":23},"name":"DW_AT_binary_scale","qualname":"::constants::DW_AT_binary_scale","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5342},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27661,"byte_end":27680,"line_start":389,"line_end":389,"column_start":5,"column_end":24},"name":"DW_AT_decimal_scale","qualname":"::constants::DW_AT_decimal_scale","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5343},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27693,"byte_end":27704,"line_start":390,"line_end":390,"column_start":5,"column_end":16},"name":"DW_AT_small","qualname":"::constants::DW_AT_small","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5344},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27717,"byte_end":27735,"line_start":391,"line_end":391,"column_start":5,"column_end":23},"name":"DW_AT_decimal_sign","qualname":"::constants::DW_AT_decimal_sign","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5345},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27748,"byte_end":27765,"line_start":392,"line_end":392,"column_start":5,"column_end":22},"name":"DW_AT_digit_count","qualname":"::constants::DW_AT_digit_count","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5346},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27778,"byte_end":27798,"line_start":393,"line_end":393,"column_start":5,"column_end":25},"name":"DW_AT_picture_string","qualname":"::constants::DW_AT_picture_string","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5347},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27811,"byte_end":27824,"line_start":394,"line_end":394,"column_start":5,"column_end":18},"name":"DW_AT_mutable","qualname":"::constants::DW_AT_mutable","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5348},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27837,"byte_end":27857,"line_start":395,"line_end":395,"column_start":5,"column_end":25},"name":"DW_AT_threads_scaled","qualname":"::constants::DW_AT_threads_scaled","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5349},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27870,"byte_end":27884,"line_start":396,"line_end":396,"column_start":5,"column_end":19},"name":"DW_AT_explicit","qualname":"::constants::DW_AT_explicit","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5350},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27897,"byte_end":27917,"line_start":397,"line_end":397,"column_start":5,"column_end":25},"name":"DW_AT_object_pointer","qualname":"::constants::DW_AT_object_pointer","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5351},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27930,"byte_end":27945,"line_start":398,"line_end":398,"column_start":5,"column_end":20},"name":"DW_AT_endianity","qualname":"::constants::DW_AT_endianity","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5352},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27958,"byte_end":27973,"line_start":399,"line_end":399,"column_start":5,"column_end":20},"name":"DW_AT_elemental","qualname":"::constants::DW_AT_elemental","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5353},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":27986,"byte_end":27996,"line_start":400,"line_end":400,"column_start":5,"column_end":15},"name":"DW_AT_pure","qualname":"::constants::DW_AT_pure","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5354},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28009,"byte_end":28024,"line_start":401,"line_end":401,"column_start":5,"column_end":20},"name":"DW_AT_recursive","qualname":"::constants::DW_AT_recursive","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5355},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28050,"byte_end":28065,"line_start":404,"line_end":404,"column_start":5,"column_end":20},"name":"DW_AT_signature","qualname":"::constants::DW_AT_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5356},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28078,"byte_end":28099,"line_start":405,"line_end":405,"column_start":5,"column_end":26},"name":"DW_AT_main_subprogram","qualname":"::constants::DW_AT_main_subprogram","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5357},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28112,"byte_end":28133,"line_start":406,"line_end":406,"column_start":5,"column_end":26},"name":"DW_AT_data_bit_offset","qualname":"::constants::DW_AT_data_bit_offset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5358},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28146,"byte_end":28162,"line_start":407,"line_end":407,"column_start":5,"column_end":21},"name":"DW_AT_const_expr","qualname":"::constants::DW_AT_const_expr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5359},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28175,"byte_end":28191,"line_start":408,"line_end":408,"column_start":5,"column_end":21},"name":"DW_AT_enum_class","qualname":"::constants::DW_AT_enum_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5360},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28204,"byte_end":28222,"line_start":409,"line_end":409,"column_start":5,"column_end":23},"name":"DW_AT_linkage_name","qualname":"::constants::DW_AT_linkage_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5361},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28248,"byte_end":28276,"line_start":412,"line_end":412,"column_start":5,"column_end":33},"name":"DW_AT_string_length_bit_size","qualname":"::constants::DW_AT_string_length_bit_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5362},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28289,"byte_end":28318,"line_start":413,"line_end":413,"column_start":5,"column_end":34},"name":"DW_AT_string_length_byte_size","qualname":"::constants::DW_AT_string_length_byte_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5363},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28331,"byte_end":28341,"line_start":414,"line_end":414,"column_start":5,"column_end":15},"name":"DW_AT_rank","qualname":"::constants::DW_AT_rank","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5364},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28354,"byte_end":28376,"line_start":415,"line_end":415,"column_start":5,"column_end":27},"name":"DW_AT_str_offsets_base","qualname":"::constants::DW_AT_str_offsets_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5365},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28389,"byte_end":28404,"line_start":416,"line_end":416,"column_start":5,"column_end":20},"name":"DW_AT_addr_base","qualname":"::constants::DW_AT_addr_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5366},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28417,"byte_end":28436,"line_start":417,"line_end":417,"column_start":5,"column_end":24},"name":"DW_AT_rnglists_base","qualname":"::constants::DW_AT_rnglists_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5367},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28449,"byte_end":28463,"line_start":418,"line_end":418,"column_start":5,"column_end":19},"name":"DW_AT_dwo_name","qualname":"::constants::DW_AT_dwo_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5368},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28476,"byte_end":28491,"line_start":419,"line_end":419,"column_start":5,"column_end":20},"name":"DW_AT_reference","qualname":"::constants::DW_AT_reference","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5369},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28504,"byte_end":28526,"line_start":420,"line_end":420,"column_start":5,"column_end":27},"name":"DW_AT_rvalue_reference","qualname":"::constants::DW_AT_rvalue_reference","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5370},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28539,"byte_end":28551,"line_start":421,"line_end":421,"column_start":5,"column_end":17},"name":"DW_AT_macros","qualname":"::constants::DW_AT_macros","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5371},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28564,"byte_end":28584,"line_start":422,"line_end":422,"column_start":5,"column_end":25},"name":"DW_AT_call_all_calls","qualname":"::constants::DW_AT_call_all_calls","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5372},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28597,"byte_end":28624,"line_start":423,"line_end":423,"column_start":5,"column_end":32},"name":"DW_AT_call_all_source_calls","qualname":"::constants::DW_AT_call_all_source_calls","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5373},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28637,"byte_end":28662,"line_start":424,"line_end":424,"column_start":5,"column_end":30},"name":"DW_AT_call_all_tail_calls","qualname":"::constants::DW_AT_call_all_tail_calls","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5374},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28675,"byte_end":28695,"line_start":425,"line_end":425,"column_start":5,"column_end":25},"name":"DW_AT_call_return_pc","qualname":"::constants::DW_AT_call_return_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5375},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28708,"byte_end":28724,"line_start":426,"line_end":426,"column_start":5,"column_end":21},"name":"DW_AT_call_value","qualname":"::constants::DW_AT_call_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5376},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28737,"byte_end":28754,"line_start":427,"line_end":427,"column_start":5,"column_end":22},"name":"DW_AT_call_origin","qualname":"::constants::DW_AT_call_origin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5377},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28767,"byte_end":28787,"line_start":428,"line_end":428,"column_start":5,"column_end":25},"name":"DW_AT_call_parameter","qualname":"::constants::DW_AT_call_parameter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5378},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28800,"byte_end":28813,"line_start":429,"line_end":429,"column_start":5,"column_end":18},"name":"DW_AT_call_pc","qualname":"::constants::DW_AT_call_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5379},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28826,"byte_end":28846,"line_start":430,"line_end":430,"column_start":5,"column_end":25},"name":"DW_AT_call_tail_call","qualname":"::constants::DW_AT_call_tail_call","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5380},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28859,"byte_end":28876,"line_start":431,"line_end":431,"column_start":5,"column_end":22},"name":"DW_AT_call_target","qualname":"::constants::DW_AT_call_target","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5381},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28889,"byte_end":28916,"line_start":432,"line_end":432,"column_start":5,"column_end":32},"name":"DW_AT_call_target_clobbered","qualname":"::constants::DW_AT_call_target_clobbered","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5382},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28929,"byte_end":28953,"line_start":433,"line_end":433,"column_start":5,"column_end":29},"name":"DW_AT_call_data_location","qualname":"::constants::DW_AT_call_data_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5383},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":28966,"byte_end":28987,"line_start":434,"line_end":434,"column_start":5,"column_end":26},"name":"DW_AT_call_data_value","qualname":"::constants::DW_AT_call_data_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5384},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29000,"byte_end":29014,"line_start":435,"line_end":435,"column_start":5,"column_end":19},"name":"DW_AT_noreturn","qualname":"::constants::DW_AT_noreturn","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5385},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29027,"byte_end":29042,"line_start":436,"line_end":436,"column_start":5,"column_end":20},"name":"DW_AT_alignment","qualname":"::constants::DW_AT_alignment","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5386},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29055,"byte_end":29075,"line_start":437,"line_end":437,"column_start":5,"column_end":25},"name":"DW_AT_export_symbols","qualname":"::constants::DW_AT_export_symbols","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5387},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29088,"byte_end":29101,"line_start":438,"line_end":438,"column_start":5,"column_end":18},"name":"DW_AT_deleted","qualname":"::constants::DW_AT_deleted","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5388},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29114,"byte_end":29129,"line_start":439,"line_end":439,"column_start":5,"column_end":20},"name":"DW_AT_defaulted","qualname":"::constants::DW_AT_defaulted","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5389},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29142,"byte_end":29161,"line_start":440,"line_end":440,"column_start":5,"column_end":24},"name":"DW_AT_loclists_base","qualname":"::constants::DW_AT_loclists_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5390},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29175,"byte_end":29188,"line_start":442,"line_end":442,"column_start":5,"column_end":18},"name":"DW_AT_lo_user","qualname":"::constants::DW_AT_lo_user","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5391},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29203,"byte_end":29216,"line_start":443,"line_end":443,"column_start":5,"column_end":18},"name":"DW_AT_hi_user","qualname":"::constants::DW_AT_hi_user","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5392},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29256,"byte_end":29270,"line_start":446,"line_end":446,"column_start":5,"column_end":19},"name":"DW_AT_MIPS_fde","qualname":"::constants::DW_AT_MIPS_fde","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5393},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29285,"byte_end":29306,"line_start":447,"line_end":447,"column_start":5,"column_end":26},"name":"DW_AT_MIPS_loop_begin","qualname":"::constants::DW_AT_MIPS_loop_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5394},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29321,"byte_end":29347,"line_start":448,"line_end":448,"column_start":5,"column_end":31},"name":"DW_AT_MIPS_tail_loop_begin","qualname":"::constants::DW_AT_MIPS_tail_loop_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5395},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29362,"byte_end":29385,"line_start":449,"line_end":449,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_epilog_begin","qualname":"::constants::DW_AT_MIPS_epilog_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5396},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29400,"byte_end":29429,"line_start":450,"line_end":450,"column_start":5,"column_end":34},"name":"DW_AT_MIPS_loop_unroll_factor","qualname":"::constants::DW_AT_MIPS_loop_unroll_factor","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5397},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29444,"byte_end":29478,"line_start":451,"line_end":451,"column_start":5,"column_end":39},"name":"DW_AT_MIPS_software_pipeline_depth","qualname":"::constants::DW_AT_MIPS_software_pipeline_depth","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5398},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29493,"byte_end":29516,"line_start":452,"line_end":452,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_linkage_name","qualname":"::constants::DW_AT_MIPS_linkage_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5399},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29531,"byte_end":29548,"line_start":453,"line_end":453,"column_start":5,"column_end":22},"name":"DW_AT_MIPS_stride","qualname":"::constants::DW_AT_MIPS_stride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5400},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29563,"byte_end":29587,"line_start":454,"line_end":454,"column_start":5,"column_end":29},"name":"DW_AT_MIPS_abstract_name","qualname":"::constants::DW_AT_MIPS_abstract_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5401},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29602,"byte_end":29625,"line_start":455,"line_end":455,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_clone_origin","qualname":"::constants::DW_AT_MIPS_clone_origin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5402},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29640,"byte_end":29662,"line_start":456,"line_end":456,"column_start":5,"column_end":27},"name":"DW_AT_MIPS_has_inlines","qualname":"::constants::DW_AT_MIPS_has_inlines","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5403},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29677,"byte_end":29699,"line_start":457,"line_end":457,"column_start":5,"column_end":27},"name":"DW_AT_MIPS_stride_byte","qualname":"::constants::DW_AT_MIPS_stride_byte","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5404},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29714,"byte_end":29736,"line_start":458,"line_end":458,"column_start":5,"column_end":27},"name":"DW_AT_MIPS_stride_elem","qualname":"::constants::DW_AT_MIPS_stride_elem","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5405},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29751,"byte_end":29774,"line_start":459,"line_end":459,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_ptr_dopetype","qualname":"::constants::DW_AT_MIPS_ptr_dopetype","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5406},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29789,"byte_end":29820,"line_start":460,"line_end":460,"column_start":5,"column_end":36},"name":"DW_AT_MIPS_allocatable_dopetype","qualname":"::constants::DW_AT_MIPS_allocatable_dopetype","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5407},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29835,"byte_end":29868,"line_start":461,"line_end":461,"column_start":5,"column_end":38},"name":"DW_AT_MIPS_assumed_shape_dopetype","qualname":"::constants::DW_AT_MIPS_assumed_shape_dopetype","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5408},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":29999,"byte_end":30022,"line_start":465,"line_end":465,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_assumed_size","qualname":"::constants::DW_AT_MIPS_assumed_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5409},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30111,"byte_end":30135,"line_start":470,"line_end":470,"column_start":5,"column_end":29},"name":"DW_AT_INTEL_other_endian","qualname":"::constants::DW_AT_INTEL_other_endian","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5410},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30169,"byte_end":30183,"line_start":473,"line_end":473,"column_start":5,"column_end":19},"name":"DW_AT_sf_names","qualname":"::constants::DW_AT_sf_names","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5411},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30198,"byte_end":30212,"line_start":474,"line_end":474,"column_start":5,"column_end":19},"name":"DW_AT_src_info","qualname":"::constants::DW_AT_src_info","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5412},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30227,"byte_end":30241,"line_start":475,"line_end":475,"column_start":5,"column_end":19},"name":"DW_AT_mac_info","qualname":"::constants::DW_AT_mac_info","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5413},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30256,"byte_end":30272,"line_start":476,"line_end":476,"column_start":5,"column_end":21},"name":"DW_AT_src_coords","qualname":"::constants::DW_AT_src_coords","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5414},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30287,"byte_end":30303,"line_start":477,"line_end":477,"column_start":5,"column_end":21},"name":"DW_AT_body_begin","qualname":"::constants::DW_AT_body_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5415},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30318,"byte_end":30332,"line_start":478,"line_end":478,"column_start":5,"column_end":19},"name":"DW_AT_body_end","qualname":"::constants::DW_AT_body_end","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5416},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30347,"byte_end":30363,"line_start":479,"line_end":479,"column_start":5,"column_end":21},"name":"DW_AT_GNU_vector","qualname":"::constants::DW_AT_GNU_vector","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5417},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30378,"byte_end":30398,"line_start":480,"line_end":480,"column_start":5,"column_end":25},"name":"DW_AT_GNU_guarded_by","qualname":"::constants::DW_AT_GNU_guarded_by","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5418},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30413,"byte_end":30436,"line_start":481,"line_end":481,"column_start":5,"column_end":28},"name":"DW_AT_GNU_pt_guarded_by","qualname":"::constants::DW_AT_GNU_pt_guarded_by","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5419},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30451,"byte_end":30468,"line_start":482,"line_end":482,"column_start":5,"column_end":22},"name":"DW_AT_GNU_guarded","qualname":"::constants::DW_AT_GNU_guarded","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5420},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30483,"byte_end":30503,"line_start":483,"line_end":483,"column_start":5,"column_end":25},"name":"DW_AT_GNU_pt_guarded","qualname":"::constants::DW_AT_GNU_pt_guarded","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5421},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30518,"byte_end":30542,"line_start":484,"line_end":484,"column_start":5,"column_end":29},"name":"DW_AT_GNU_locks_excluded","qualname":"::constants::DW_AT_GNU_locks_excluded","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5422},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30557,"byte_end":30591,"line_start":485,"line_end":485,"column_start":5,"column_end":39},"name":"DW_AT_GNU_exclusive_locks_required","qualname":"::constants::DW_AT_GNU_exclusive_locks_required","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5423},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30606,"byte_end":30637,"line_start":486,"line_end":486,"column_start":5,"column_end":36},"name":"DW_AT_GNU_shared_locks_required","qualname":"::constants::DW_AT_GNU_shared_locks_required","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5424},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30652,"byte_end":30675,"line_start":487,"line_end":487,"column_start":5,"column_end":28},"name":"DW_AT_GNU_odr_signature","qualname":"::constants::DW_AT_GNU_odr_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5425},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30690,"byte_end":30713,"line_start":488,"line_end":488,"column_start":5,"column_end":28},"name":"DW_AT_GNU_template_name","qualname":"::constants::DW_AT_GNU_template_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5426},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30728,"byte_end":30753,"line_start":489,"line_end":489,"column_start":5,"column_end":30},"name":"DW_AT_GNU_call_site_value","qualname":"::constants::DW_AT_GNU_call_site_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5427},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30768,"byte_end":30798,"line_start":490,"line_end":490,"column_start":5,"column_end":35},"name":"DW_AT_GNU_call_site_data_value","qualname":"::constants::DW_AT_GNU_call_site_data_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5428},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30813,"byte_end":30839,"line_start":491,"line_end":491,"column_start":5,"column_end":31},"name":"DW_AT_GNU_call_site_target","qualname":"::constants::DW_AT_GNU_call_site_target","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5429},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30854,"byte_end":30890,"line_start":492,"line_end":492,"column_start":5,"column_end":41},"name":"DW_AT_GNU_call_site_target_clobbered","qualname":"::constants::DW_AT_GNU_call_site_target_clobbered","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5430},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30905,"byte_end":30924,"line_start":493,"line_end":493,"column_start":5,"column_end":24},"name":"DW_AT_GNU_tail_call","qualname":"::constants::DW_AT_GNU_tail_call","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5431},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30939,"byte_end":30968,"line_start":494,"line_end":494,"column_start":5,"column_end":34},"name":"DW_AT_GNU_all_tail_call_sites","qualname":"::constants::DW_AT_GNU_all_tail_call_sites","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5432},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":30983,"byte_end":31007,"line_start":495,"line_end":495,"column_start":5,"column_end":29},"name":"DW_AT_GNU_all_call_sites","qualname":"::constants::DW_AT_GNU_all_call_sites","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5433},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31022,"byte_end":31053,"line_start":496,"line_end":496,"column_start":5,"column_end":36},"name":"DW_AT_GNU_all_source_call_sites","qualname":"::constants::DW_AT_GNU_all_source_call_sites","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5434},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31068,"byte_end":31084,"line_start":497,"line_end":497,"column_start":5,"column_end":21},"name":"DW_AT_GNU_macros","qualname":"::constants::DW_AT_GNU_macros","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5435},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31136,"byte_end":31154,"line_start":500,"line_end":500,"column_start":5,"column_end":23},"name":"DW_AT_GNU_dwo_name","qualname":"::constants::DW_AT_GNU_dwo_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5436},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31169,"byte_end":31185,"line_start":501,"line_end":501,"column_start":5,"column_end":21},"name":"DW_AT_GNU_dwo_id","qualname":"::constants::DW_AT_GNU_dwo_id","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5437},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31200,"byte_end":31221,"line_start":502,"line_end":502,"column_start":5,"column_end":26},"name":"DW_AT_GNU_ranges_base","qualname":"::constants::DW_AT_GNU_ranges_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5438},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31236,"byte_end":31255,"line_start":503,"line_end":503,"column_start":5,"column_end":24},"name":"DW_AT_GNU_addr_base","qualname":"::constants::DW_AT_GNU_addr_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5439},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31270,"byte_end":31288,"line_start":504,"line_end":504,"column_start":5,"column_end":23},"name":"DW_AT_GNU_pubnames","qualname":"::constants::DW_AT_GNU_pubnames","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5440},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31303,"byte_end":31321,"line_start":505,"line_end":505,"column_start":5,"column_end":23},"name":"DW_AT_GNU_pubtypes","qualname":"::constants::DW_AT_GNU_pubtypes","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5441},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31336,"byte_end":31359,"line_start":506,"line_end":506,"column_start":5,"column_end":28},"name":"DW_AT_GNU_discriminator","qualname":"::constants::DW_AT_GNU_discriminator","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5442},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31374,"byte_end":31392,"line_start":507,"line_end":507,"column_start":5,"column_end":23},"name":"DW_AT_GNU_locviews","qualname":"::constants::DW_AT_GNU_locviews","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5443},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31407,"byte_end":31427,"line_start":508,"line_end":508,"column_start":5,"column_end":25},"name":"DW_AT_GNU_entry_view","qualname":"::constants::DW_AT_GNU_entry_view","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5444},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31526,"byte_end":31544,"line_start":514,"line_end":514,"column_start":5,"column_end":23},"name":"DW_AT_SUN_template","qualname":"::constants::DW_AT_SUN_template","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5445},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31559,"byte_end":31578,"line_start":515,"line_end":515,"column_start":5,"column_end":24},"name":"DW_AT_SUN_alignment","qualname":"::constants::DW_AT_SUN_alignment","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5446},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31593,"byte_end":31609,"line_start":516,"line_end":516,"column_start":5,"column_end":21},"name":"DW_AT_SUN_vtable","qualname":"::constants::DW_AT_SUN_vtable","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5447},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31624,"byte_end":31649,"line_start":517,"line_end":517,"column_start":5,"column_end":30},"name":"DW_AT_SUN_count_guarantee","qualname":"::constants::DW_AT_SUN_count_guarantee","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5448},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31664,"byte_end":31686,"line_start":518,"line_end":518,"column_start":5,"column_end":27},"name":"DW_AT_SUN_command_line","qualname":"::constants::DW_AT_SUN_command_line","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5449},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31701,"byte_end":31716,"line_start":519,"line_end":519,"column_start":5,"column_end":20},"name":"DW_AT_SUN_vbase","qualname":"::constants::DW_AT_SUN_vbase","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5450},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31731,"byte_end":31756,"line_start":520,"line_end":520,"column_start":5,"column_end":30},"name":"DW_AT_SUN_compile_options","qualname":"::constants::DW_AT_SUN_compile_options","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5451},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31771,"byte_end":31789,"line_start":521,"line_end":521,"column_start":5,"column_end":23},"name":"DW_AT_SUN_language","qualname":"::constants::DW_AT_SUN_language","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5452},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31804,"byte_end":31826,"line_start":522,"line_end":522,"column_start":5,"column_end":27},"name":"DW_AT_SUN_browser_file","qualname":"::constants::DW_AT_SUN_browser_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5453},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31841,"byte_end":31861,"line_start":523,"line_end":523,"column_start":5,"column_end":25},"name":"DW_AT_SUN_vtable_abi","qualname":"::constants::DW_AT_SUN_vtable_abi","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5454},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31876,"byte_end":31898,"line_start":524,"line_end":524,"column_start":5,"column_end":27},"name":"DW_AT_SUN_func_offsets","qualname":"::constants::DW_AT_SUN_func_offsets","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5455},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31913,"byte_end":31930,"line_start":525,"line_end":525,"column_start":5,"column_end":22},"name":"DW_AT_SUN_cf_kind","qualname":"::constants::DW_AT_SUN_cf_kind","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5456},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31945,"byte_end":31967,"line_start":526,"line_end":526,"column_start":5,"column_end":27},"name":"DW_AT_SUN_vtable_index","qualname":"::constants::DW_AT_SUN_vtable_index","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5457},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":31982,"byte_end":32006,"line_start":527,"line_end":527,"column_start":5,"column_end":29},"name":"DW_AT_SUN_omp_tpriv_addr","qualname":"::constants::DW_AT_SUN_omp_tpriv_addr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5458},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32021,"byte_end":32045,"line_start":528,"line_end":528,"column_start":5,"column_end":29},"name":"DW_AT_SUN_omp_child_func","qualname":"::constants::DW_AT_SUN_omp_child_func","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5459},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32060,"byte_end":32081,"line_start":529,"line_end":529,"column_start":5,"column_end":26},"name":"DW_AT_SUN_func_offset","qualname":"::constants::DW_AT_SUN_func_offset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5460},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32096,"byte_end":32120,"line_start":530,"line_end":530,"column_start":5,"column_end":29},"name":"DW_AT_SUN_memop_type_ref","qualname":"::constants::DW_AT_SUN_memop_type_ref","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5461},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32135,"byte_end":32155,"line_start":531,"line_end":531,"column_start":5,"column_end":25},"name":"DW_AT_SUN_profile_id","qualname":"::constants::DW_AT_SUN_profile_id","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5462},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32170,"byte_end":32195,"line_start":532,"line_end":532,"column_start":5,"column_end":30},"name":"DW_AT_SUN_memop_signature","qualname":"::constants::DW_AT_SUN_memop_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5463},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32210,"byte_end":32227,"line_start":533,"line_end":533,"column_start":5,"column_end":22},"name":"DW_AT_SUN_obj_dir","qualname":"::constants::DW_AT_SUN_obj_dir","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5464},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32242,"byte_end":32260,"line_start":534,"line_end":534,"column_start":5,"column_end":23},"name":"DW_AT_SUN_obj_file","qualname":"::constants::DW_AT_SUN_obj_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5465},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32275,"byte_end":32298,"line_start":535,"line_end":535,"column_start":5,"column_end":28},"name":"DW_AT_SUN_original_name","qualname":"::constants::DW_AT_SUN_original_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5466},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32313,"byte_end":32340,"line_start":536,"line_end":536,"column_start":5,"column_end":32},"name":"DW_AT_SUN_hwcprof_signature","qualname":"::constants::DW_AT_SUN_hwcprof_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5467},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32355,"byte_end":32379,"line_start":537,"line_end":537,"column_start":5,"column_end":29},"name":"DW_AT_SUN_amd64_parmdump","qualname":"::constants::DW_AT_SUN_amd64_parmdump","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5468},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32394,"byte_end":32418,"line_start":538,"line_end":538,"column_start":5,"column_end":29},"name":"DW_AT_SUN_part_link_name","qualname":"::constants::DW_AT_SUN_part_link_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5469},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32433,"byte_end":32452,"line_start":539,"line_end":539,"column_start":5,"column_end":24},"name":"DW_AT_SUN_link_name","qualname":"::constants::DW_AT_SUN_link_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5470},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32467,"byte_end":32492,"line_start":540,"line_end":540,"column_start":5,"column_end":30},"name":"DW_AT_SUN_pass_with_const","qualname":"::constants::DW_AT_SUN_pass_with_const","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5471},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32507,"byte_end":32534,"line_start":541,"line_end":541,"column_start":5,"column_end":32},"name":"DW_AT_SUN_return_with_const","qualname":"::constants::DW_AT_SUN_return_with_const","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5472},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32549,"byte_end":32573,"line_start":542,"line_end":542,"column_start":5,"column_end":29},"name":"DW_AT_SUN_import_by_name","qualname":"::constants::DW_AT_SUN_import_by_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5473},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32588,"byte_end":32609,"line_start":543,"line_end":543,"column_start":5,"column_end":26},"name":"DW_AT_SUN_f90_pointer","qualname":"::constants::DW_AT_SUN_f90_pointer","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5474},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32624,"byte_end":32645,"line_start":544,"line_end":544,"column_start":5,"column_end":26},"name":"DW_AT_SUN_pass_by_ref","qualname":"::constants::DW_AT_SUN_pass_by_ref","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5475},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32660,"byte_end":32685,"line_start":545,"line_end":545,"column_start":5,"column_end":30},"name":"DW_AT_SUN_f90_allocatable","qualname":"::constants::DW_AT_SUN_f90_allocatable","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5476},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32700,"byte_end":32733,"line_start":546,"line_end":546,"column_start":5,"column_end":38},"name":"DW_AT_SUN_f90_assumed_shape_array","qualname":"::constants::DW_AT_SUN_f90_assumed_shape_array","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5477},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32748,"byte_end":32763,"line_start":547,"line_end":547,"column_start":5,"column_end":20},"name":"DW_AT_SUN_c_vla","qualname":"::constants::DW_AT_SUN_c_vla","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5478},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32778,"byte_end":32804,"line_start":548,"line_end":548,"column_start":5,"column_end":31},"name":"DW_AT_SUN_return_value_ptr","qualname":"::constants::DW_AT_SUN_return_value_ptr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5479},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32819,"byte_end":32839,"line_start":549,"line_end":549,"column_start":5,"column_end":25},"name":"DW_AT_SUN_dtor_start","qualname":"::constants::DW_AT_SUN_dtor_start","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5480},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32854,"byte_end":32875,"line_start":550,"line_end":550,"column_start":5,"column_end":26},"name":"DW_AT_SUN_dtor_length","qualname":"::constants::DW_AT_SUN_dtor_length","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5481},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32890,"byte_end":32918,"line_start":551,"line_end":551,"column_start":5,"column_end":33},"name":"DW_AT_SUN_dtor_state_initial","qualname":"::constants::DW_AT_SUN_dtor_state_initial","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5482},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32933,"byte_end":32959,"line_start":552,"line_end":552,"column_start":5,"column_end":31},"name":"DW_AT_SUN_dtor_state_final","qualname":"::constants::DW_AT_SUN_dtor_state_final","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5483},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":32974,"byte_end":33001,"line_start":553,"line_end":553,"column_start":5,"column_end":32},"name":"DW_AT_SUN_dtor_state_deltas","qualname":"::constants::DW_AT_SUN_dtor_state_deltas","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5484},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33016,"byte_end":33041,"line_start":554,"line_end":554,"column_start":5,"column_end":30},"name":"DW_AT_SUN_import_by_lname","qualname":"::constants::DW_AT_SUN_import_by_lname","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5485},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33056,"byte_end":33078,"line_start":555,"line_end":555,"column_start":5,"column_end":27},"name":"DW_AT_SUN_f90_use_only","qualname":"::constants::DW_AT_SUN_f90_use_only","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5486},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33093,"byte_end":33116,"line_start":556,"line_end":556,"column_start":5,"column_end":28},"name":"DW_AT_SUN_namelist_spec","qualname":"::constants::DW_AT_SUN_namelist_spec","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5487},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33131,"byte_end":33158,"line_start":557,"line_end":557,"column_start":5,"column_end":32},"name":"DW_AT_SUN_is_omp_child_func","qualname":"::constants::DW_AT_SUN_is_omp_child_func","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5488},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33173,"byte_end":33201,"line_start":558,"line_end":558,"column_start":5,"column_end":33},"name":"DW_AT_SUN_fortran_main_alias","qualname":"::constants::DW_AT_SUN_fortran_main_alias","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5489},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33216,"byte_end":33239,"line_start":559,"line_end":559,"column_start":5,"column_end":28},"name":"DW_AT_SUN_fortran_based","qualname":"::constants::DW_AT_SUN_fortran_based","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5490},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33255,"byte_end":33275,"line_start":561,"line_end":561,"column_start":5,"column_end":25},"name":"DW_AT_ALTIUM_loclist","qualname":"::constants::DW_AT_ALTIUM_loclist","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5491},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33291,"byte_end":33322,"line_start":563,"line_end":563,"column_start":5,"column_end":36},"name":"DW_AT_use_GNAT_descriptive_type","qualname":"::constants::DW_AT_use_GNAT_descriptive_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5492},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33337,"byte_end":33364,"line_start":564,"line_end":564,"column_start":5,"column_end":32},"name":"DW_AT_GNAT_descriptive_type","qualname":"::constants::DW_AT_GNAT_descriptive_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5493},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33379,"byte_end":33398,"line_start":565,"line_end":565,"column_start":5,"column_end":24},"name":"DW_AT_GNU_numerator","qualname":"::constants::DW_AT_GNU_numerator","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5494},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33413,"byte_end":33434,"line_start":566,"line_end":566,"column_start":5,"column_end":26},"name":"DW_AT_GNU_denominator","qualname":"::constants::DW_AT_GNU_denominator","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5495},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33449,"byte_end":33463,"line_start":567,"line_end":567,"column_start":5,"column_end":19},"name":"DW_AT_GNU_bias","qualname":"::constants::DW_AT_GNU_bias","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5496},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33479,"byte_end":33503,"line_start":569,"line_end":569,"column_start":5,"column_end":29},"name":"DW_AT_upc_threads_scaled","qualname":"::constants::DW_AT_upc_threads_scaled","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5497},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33559,"byte_end":33574,"line_start":572,"line_end":572,"column_start":5,"column_end":20},"name":"DW_AT_PGI_lbase","qualname":"::constants::DW_AT_PGI_lbase","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5498},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33589,"byte_end":33606,"line_start":573,"line_end":573,"column_start":5,"column_end":22},"name":"DW_AT_PGI_soffset","qualname":"::constants::DW_AT_PGI_soffset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5499},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33621,"byte_end":33638,"line_start":574,"line_end":574,"column_start":5,"column_end":22},"name":"DW_AT_PGI_lstride","qualname":"::constants::DW_AT_PGI_lstride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5500},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33677,"byte_end":33704,"line_start":577,"line_end":577,"column_start":5,"column_end":32},"name":"DW_AT_BORLAND_property_read","qualname":"::constants::DW_AT_BORLAND_property_read","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5501},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33719,"byte_end":33747,"line_start":578,"line_end":578,"column_start":5,"column_end":33},"name":"DW_AT_BORLAND_property_write","qualname":"::constants::DW_AT_BORLAND_property_write","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5502},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33762,"byte_end":33795,"line_start":579,"line_end":579,"column_start":5,"column_end":38},"name":"DW_AT_BORLAND_property_implements","qualname":"::constants::DW_AT_BORLAND_property_implements","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5503},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33810,"byte_end":33838,"line_start":580,"line_end":580,"column_start":5,"column_end":33},"name":"DW_AT_BORLAND_property_index","qualname":"::constants::DW_AT_BORLAND_property_index","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5504},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33853,"byte_end":33883,"line_start":581,"line_end":581,"column_start":5,"column_end":35},"name":"DW_AT_BORLAND_property_default","qualname":"::constants::DW_AT_BORLAND_property_default","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5505},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33898,"byte_end":33923,"line_start":582,"line_end":582,"column_start":5,"column_end":30},"name":"DW_AT_BORLAND_Delphi_unit","qualname":"::constants::DW_AT_BORLAND_Delphi_unit","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5506},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33938,"byte_end":33964,"line_start":583,"line_end":583,"column_start":5,"column_end":31},"name":"DW_AT_BORLAND_Delphi_class","qualname":"::constants::DW_AT_BORLAND_Delphi_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5507},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":33979,"byte_end":34006,"line_start":584,"line_end":584,"column_start":5,"column_end":32},"name":"DW_AT_BORLAND_Delphi_record","qualname":"::constants::DW_AT_BORLAND_Delphi_record","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5508},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34021,"byte_end":34051,"line_start":585,"line_end":585,"column_start":5,"column_end":35},"name":"DW_AT_BORLAND_Delphi_metaclass","qualname":"::constants::DW_AT_BORLAND_Delphi_metaclass","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5509},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34066,"byte_end":34098,"line_start":586,"line_end":586,"column_start":5,"column_end":37},"name":"DW_AT_BORLAND_Delphi_constructor","qualname":"::constants::DW_AT_BORLAND_Delphi_constructor","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5510},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34113,"byte_end":34144,"line_start":587,"line_end":587,"column_start":5,"column_end":36},"name":"DW_AT_BORLAND_Delphi_destructor","qualname":"::constants::DW_AT_BORLAND_Delphi_destructor","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5511},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34159,"byte_end":34196,"line_start":588,"line_end":588,"column_start":5,"column_end":42},"name":"DW_AT_BORLAND_Delphi_anonymous_method","qualname":"::constants::DW_AT_BORLAND_Delphi_anonymous_method","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5512},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34211,"byte_end":34241,"line_start":589,"line_end":589,"column_start":5,"column_end":35},"name":"DW_AT_BORLAND_Delphi_interface","qualname":"::constants::DW_AT_BORLAND_Delphi_interface","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5513},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34256,"byte_end":34280,"line_start":590,"line_end":590,"column_start":5,"column_end":29},"name":"DW_AT_BORLAND_Delphi_ABI","qualname":"::constants::DW_AT_BORLAND_Delphi_ABI","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5514},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34295,"byte_end":34322,"line_start":591,"line_end":591,"column_start":5,"column_end":32},"name":"DW_AT_BORLAND_Delphi_return","qualname":"::constants::DW_AT_BORLAND_Delphi_return","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5515},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34337,"byte_end":34366,"line_start":592,"line_end":592,"column_start":5,"column_end":34},"name":"DW_AT_BORLAND_Delphi_frameptr","qualname":"::constants::DW_AT_BORLAND_Delphi_frameptr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5516},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34381,"byte_end":34402,"line_start":593,"line_end":593,"column_start":5,"column_end":26},"name":"DW_AT_BORLAND_closure","qualname":"::constants::DW_AT_BORLAND_closure","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5517},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34446,"byte_end":34469,"line_start":596,"line_end":596,"column_start":5,"column_end":28},"name":"DW_AT_LLVM_include_path","qualname":"::constants::DW_AT_LLVM_include_path","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5518},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34484,"byte_end":34508,"line_start":597,"line_end":597,"column_start":5,"column_end":29},"name":"DW_AT_LLVM_config_macros","qualname":"::constants::DW_AT_LLVM_config_macros","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5519},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34523,"byte_end":34542,"line_start":598,"line_end":598,"column_start":5,"column_end":24},"name":"DW_AT_LLVM_isysroot","qualname":"::constants::DW_AT_LLVM_isysroot","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5520},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34579,"byte_end":34600,"line_start":601,"line_end":601,"column_start":5,"column_end":26},"name":"DW_AT_APPLE_optimized","qualname":"::constants::DW_AT_APPLE_optimized","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5521},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34615,"byte_end":34632,"line_start":602,"line_end":602,"column_start":5,"column_end":22},"name":"DW_AT_APPLE_flags","qualname":"::constants::DW_AT_APPLE_flags","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5522},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34647,"byte_end":34662,"line_start":603,"line_end":603,"column_start":5,"column_end":20},"name":"DW_AT_APPLE_isa","qualname":"::constants::DW_AT_APPLE_isa","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5523},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34677,"byte_end":34694,"line_start":604,"line_end":604,"column_start":5,"column_end":22},"name":"DW_AT_APPLE_block","qualname":"::constants::DW_AT_APPLE_block","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5524},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34709,"byte_end":34739,"line_start":605,"line_end":605,"column_start":5,"column_end":35},"name":"DW_AT_APPLE_major_runtime_vers","qualname":"::constants::DW_AT_APPLE_major_runtime_vers","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5525},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34754,"byte_end":34779,"line_start":606,"line_end":606,"column_start":5,"column_end":30},"name":"DW_AT_APPLE_runtime_class","qualname":"::constants::DW_AT_APPLE_runtime_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5526},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34794,"byte_end":34820,"line_start":607,"line_end":607,"column_start":5,"column_end":31},"name":"DW_AT_APPLE_omit_frame_ptr","qualname":"::constants::DW_AT_APPLE_omit_frame_ptr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5527},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34835,"byte_end":34860,"line_start":608,"line_end":608,"column_start":5,"column_end":30},"name":"DW_AT_APPLE_property_name","qualname":"::constants::DW_AT_APPLE_property_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5528},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34875,"byte_end":34902,"line_start":609,"line_end":609,"column_start":5,"column_end":32},"name":"DW_AT_APPLE_property_getter","qualname":"::constants::DW_AT_APPLE_property_getter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5529},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34917,"byte_end":34944,"line_start":610,"line_end":610,"column_start":5,"column_end":32},"name":"DW_AT_APPLE_property_setter","qualname":"::constants::DW_AT_APPLE_property_setter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5530},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":34959,"byte_end":34989,"line_start":611,"line_end":611,"column_start":5,"column_end":35},"name":"DW_AT_APPLE_property_attribute","qualname":"::constants::DW_AT_APPLE_property_attribute","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5531},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35004,"byte_end":35034,"line_start":612,"line_end":612,"column_start":5,"column_end":35},"name":"DW_AT_APPLE_objc_complete_type","qualname":"::constants::DW_AT_APPLE_objc_complete_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5532},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35049,"byte_end":35069,"line_start":613,"line_end":613,"column_start":5,"column_end":25},"name":"DW_AT_APPLE_property","qualname":"::constants::DW_AT_APPLE_property","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5611},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35180,"byte_end":35186,"line_start":620,"line_end":620,"column_start":1,"column_end":7},"name":"DwForm","qualname":"::constants::DwForm","value":"","parent":null,"children":[],"decl_id":null,"docs":" The attribute form encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5559},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35198,"byte_end":35210,"line_start":621,"line_end":621,"column_start":5,"column_end":17},"name":"DW_FORM_null","qualname":"::constants::DW_FORM_null","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5560},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35224,"byte_end":35236,"line_start":623,"line_end":623,"column_start":5,"column_end":17},"name":"DW_FORM_addr","qualname":"::constants::DW_FORM_addr","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5561},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35249,"byte_end":35263,"line_start":624,"line_end":624,"column_start":5,"column_end":19},"name":"DW_FORM_block2","qualname":"::constants::DW_FORM_block2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5562},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35276,"byte_end":35290,"line_start":625,"line_end":625,"column_start":5,"column_end":19},"name":"DW_FORM_block4","qualname":"::constants::DW_FORM_block4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5563},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35303,"byte_end":35316,"line_start":626,"line_end":626,"column_start":5,"column_end":18},"name":"DW_FORM_data2","qualname":"::constants::DW_FORM_data2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5564},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35329,"byte_end":35342,"line_start":627,"line_end":627,"column_start":5,"column_end":18},"name":"DW_FORM_data4","qualname":"::constants::DW_FORM_data4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5565},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35355,"byte_end":35368,"line_start":628,"line_end":628,"column_start":5,"column_end":18},"name":"DW_FORM_data8","qualname":"::constants::DW_FORM_data8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5566},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35381,"byte_end":35395,"line_start":629,"line_end":629,"column_start":5,"column_end":19},"name":"DW_FORM_string","qualname":"::constants::DW_FORM_string","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5567},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35408,"byte_end":35421,"line_start":630,"line_end":630,"column_start":5,"column_end":18},"name":"DW_FORM_block","qualname":"::constants::DW_FORM_block","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5568},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35434,"byte_end":35448,"line_start":631,"line_end":631,"column_start":5,"column_end":19},"name":"DW_FORM_block1","qualname":"::constants::DW_FORM_block1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5569},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35461,"byte_end":35474,"line_start":632,"line_end":632,"column_start":5,"column_end":18},"name":"DW_FORM_data1","qualname":"::constants::DW_FORM_data1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5570},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35487,"byte_end":35499,"line_start":633,"line_end":633,"column_start":5,"column_end":17},"name":"DW_FORM_flag","qualname":"::constants::DW_FORM_flag","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5571},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35512,"byte_end":35525,"line_start":634,"line_end":634,"column_start":5,"column_end":18},"name":"DW_FORM_sdata","qualname":"::constants::DW_FORM_sdata","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5572},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35538,"byte_end":35550,"line_start":635,"line_end":635,"column_start":5,"column_end":17},"name":"DW_FORM_strp","qualname":"::constants::DW_FORM_strp","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5573},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35563,"byte_end":35576,"line_start":636,"line_end":636,"column_start":5,"column_end":18},"name":"DW_FORM_udata","qualname":"::constants::DW_FORM_udata","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5574},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35589,"byte_end":35605,"line_start":637,"line_end":637,"column_start":5,"column_end":21},"name":"DW_FORM_ref_addr","qualname":"::constants::DW_FORM_ref_addr","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5575},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35618,"byte_end":35630,"line_start":638,"line_end":638,"column_start":5,"column_end":17},"name":"DW_FORM_ref1","qualname":"::constants::DW_FORM_ref1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5576},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35643,"byte_end":35655,"line_start":639,"line_end":639,"column_start":5,"column_end":17},"name":"DW_FORM_ref2","qualname":"::constants::DW_FORM_ref2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5577},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35668,"byte_end":35680,"line_start":640,"line_end":640,"column_start":5,"column_end":17},"name":"DW_FORM_ref4","qualname":"::constants::DW_FORM_ref4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5578},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35693,"byte_end":35705,"line_start":641,"line_end":641,"column_start":5,"column_end":17},"name":"DW_FORM_ref8","qualname":"::constants::DW_FORM_ref8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5579},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35718,"byte_end":35735,"line_start":642,"line_end":642,"column_start":5,"column_end":22},"name":"DW_FORM_ref_udata","qualname":"::constants::DW_FORM_ref_udata","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5580},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35748,"byte_end":35764,"line_start":643,"line_end":643,"column_start":5,"column_end":21},"name":"DW_FORM_indirect","qualname":"::constants::DW_FORM_indirect","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5581},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35790,"byte_end":35808,"line_start":646,"line_end":646,"column_start":5,"column_end":23},"name":"DW_FORM_sec_offset","qualname":"::constants::DW_FORM_sec_offset","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5582},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35821,"byte_end":35836,"line_start":647,"line_end":647,"column_start":5,"column_end":20},"name":"DW_FORM_exprloc","qualname":"::constants::DW_FORM_exprloc","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5583},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35849,"byte_end":35869,"line_start":648,"line_end":648,"column_start":5,"column_end":25},"name":"DW_FORM_flag_present","qualname":"::constants::DW_FORM_flag_present","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5584},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35882,"byte_end":35898,"line_start":649,"line_end":649,"column_start":5,"column_end":21},"name":"DW_FORM_ref_sig8","qualname":"::constants::DW_FORM_ref_sig8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5585},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35924,"byte_end":35936,"line_start":652,"line_end":652,"column_start":5,"column_end":17},"name":"DW_FORM_strx","qualname":"::constants::DW_FORM_strx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5586},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35949,"byte_end":35962,"line_start":653,"line_end":653,"column_start":5,"column_end":18},"name":"DW_FORM_addrx","qualname":"::constants::DW_FORM_addrx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5587},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":35975,"byte_end":35991,"line_start":654,"line_end":654,"column_start":5,"column_end":21},"name":"DW_FORM_ref_sup4","qualname":"::constants::DW_FORM_ref_sup4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5588},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36004,"byte_end":36020,"line_start":655,"line_end":655,"column_start":5,"column_end":21},"name":"DW_FORM_strp_sup","qualname":"::constants::DW_FORM_strp_sup","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5589},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36033,"byte_end":36047,"line_start":656,"line_end":656,"column_start":5,"column_end":19},"name":"DW_FORM_data16","qualname":"::constants::DW_FORM_data16","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5590},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36060,"byte_end":36077,"line_start":657,"line_end":657,"column_start":5,"column_end":22},"name":"DW_FORM_line_strp","qualname":"::constants::DW_FORM_line_strp","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5591},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36090,"byte_end":36112,"line_start":658,"line_end":658,"column_start":5,"column_end":27},"name":"DW_FORM_implicit_const","qualname":"::constants::DW_FORM_implicit_const","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5592},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36125,"byte_end":36141,"line_start":659,"line_end":659,"column_start":5,"column_end":21},"name":"DW_FORM_loclistx","qualname":"::constants::DW_FORM_loclistx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5593},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36154,"byte_end":36170,"line_start":660,"line_end":660,"column_start":5,"column_end":21},"name":"DW_FORM_rnglistx","qualname":"::constants::DW_FORM_rnglistx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5594},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36183,"byte_end":36199,"line_start":661,"line_end":661,"column_start":5,"column_end":21},"name":"DW_FORM_ref_sup8","qualname":"::constants::DW_FORM_ref_sup8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5595},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36212,"byte_end":36225,"line_start":662,"line_end":662,"column_start":5,"column_end":18},"name":"DW_FORM_strx1","qualname":"::constants::DW_FORM_strx1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5596},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36238,"byte_end":36251,"line_start":663,"line_end":663,"column_start":5,"column_end":18},"name":"DW_FORM_strx2","qualname":"::constants::DW_FORM_strx2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5597},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36264,"byte_end":36277,"line_start":664,"line_end":664,"column_start":5,"column_end":18},"name":"DW_FORM_strx3","qualname":"::constants::DW_FORM_strx3","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5598},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36290,"byte_end":36303,"line_start":665,"line_end":665,"column_start":5,"column_end":18},"name":"DW_FORM_strx4","qualname":"::constants::DW_FORM_strx4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5599},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36316,"byte_end":36330,"line_start":666,"line_end":666,"column_start":5,"column_end":19},"name":"DW_FORM_addrx1","qualname":"::constants::DW_FORM_addrx1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5600},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36343,"byte_end":36357,"line_start":667,"line_end":667,"column_start":5,"column_end":19},"name":"DW_FORM_addrx2","qualname":"::constants::DW_FORM_addrx2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5601},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36370,"byte_end":36384,"line_start":668,"line_end":668,"column_start":5,"column_end":19},"name":"DW_FORM_addrx3","qualname":"::constants::DW_FORM_addrx3","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5602},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36397,"byte_end":36411,"line_start":669,"line_end":669,"column_start":5,"column_end":19},"name":"DW_FORM_addrx4","qualname":"::constants::DW_FORM_addrx4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5603},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36460,"byte_end":36482,"line_start":672,"line_end":672,"column_start":5,"column_end":27},"name":"DW_FORM_GNU_addr_index","qualname":"::constants::DW_FORM_GNU_addr_index","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5604},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36497,"byte_end":36518,"line_start":673,"line_end":673,"column_start":5,"column_end":26},"name":"DW_FORM_GNU_str_index","qualname":"::constants::DW_FORM_GNU_str_index","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5605},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36595,"byte_end":36614,"line_start":676,"line_end":676,"column_start":5,"column_end":24},"name":"DW_FORM_GNU_ref_alt","qualname":"::constants::DW_FORM_GNU_ref_alt","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5606},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36629,"byte_end":36649,"line_start":677,"line_end":677,"column_start":5,"column_end":25},"name":"DW_FORM_GNU_strp_alt","qualname":"::constants::DW_FORM_GNU_strp_alt","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5657},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36781,"byte_end":36786,"line_start":684,"line_end":684,"column_start":1,"column_end":6},"name":"DwAte","qualname":"::constants::DwAte","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_encoding` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5633},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36797,"byte_end":36811,"line_start":685,"line_end":685,"column_start":5,"column_end":19},"name":"DW_ATE_address","qualname":"::constants::DW_ATE_address","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5634},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36824,"byte_end":36838,"line_start":686,"line_end":686,"column_start":5,"column_end":19},"name":"DW_ATE_boolean","qualname":"::constants::DW_ATE_boolean","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5635},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36851,"byte_end":36871,"line_start":687,"line_end":687,"column_start":5,"column_end":25},"name":"DW_ATE_complex_float","qualname":"::constants::DW_ATE_complex_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5636},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36884,"byte_end":36896,"line_start":688,"line_end":688,"column_start":5,"column_end":17},"name":"DW_ATE_float","qualname":"::constants::DW_ATE_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5637},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36909,"byte_end":36922,"line_start":689,"line_end":689,"column_start":5,"column_end":18},"name":"DW_ATE_signed","qualname":"::constants::DW_ATE_signed","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5638},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36935,"byte_end":36953,"line_start":690,"line_end":690,"column_start":5,"column_end":23},"name":"DW_ATE_signed_char","qualname":"::constants::DW_ATE_signed_char","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5639},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36966,"byte_end":36981,"line_start":691,"line_end":691,"column_start":5,"column_end":20},"name":"DW_ATE_unsigned","qualname":"::constants::DW_ATE_unsigned","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5640},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":36994,"byte_end":37014,"line_start":692,"line_end":692,"column_start":5,"column_end":25},"name":"DW_ATE_unsigned_char","qualname":"::constants::DW_ATE_unsigned_char","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5641},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37040,"byte_end":37062,"line_start":695,"line_end":695,"column_start":5,"column_end":27},"name":"DW_ATE_imaginary_float","qualname":"::constants::DW_ATE_imaginary_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5642},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37075,"byte_end":37096,"line_start":696,"line_end":696,"column_start":5,"column_end":26},"name":"DW_ATE_packed_decimal","qualname":"::constants::DW_ATE_packed_decimal","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5643},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37109,"byte_end":37130,"line_start":697,"line_end":697,"column_start":5,"column_end":26},"name":"DW_ATE_numeric_string","qualname":"::constants::DW_ATE_numeric_string","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5644},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37143,"byte_end":37156,"line_start":698,"line_end":698,"column_start":5,"column_end":18},"name":"DW_ATE_edited","qualname":"::constants::DW_ATE_edited","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5645},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37169,"byte_end":37188,"line_start":699,"line_end":699,"column_start":5,"column_end":24},"name":"DW_ATE_signed_fixed","qualname":"::constants::DW_ATE_signed_fixed","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5646},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37201,"byte_end":37222,"line_start":700,"line_end":700,"column_start":5,"column_end":26},"name":"DW_ATE_unsigned_fixed","qualname":"::constants::DW_ATE_unsigned_fixed","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5647},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37235,"byte_end":37255,"line_start":701,"line_end":701,"column_start":5,"column_end":25},"name":"DW_ATE_decimal_float","qualname":"::constants::DW_ATE_decimal_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5648},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37282,"byte_end":37292,"line_start":704,"line_end":704,"column_start":5,"column_end":15},"name":"DW_ATE_UTF","qualname":"::constants::DW_ATE_UTF","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5649},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37305,"byte_end":37315,"line_start":705,"line_end":705,"column_start":5,"column_end":15},"name":"DW_ATE_UCS","qualname":"::constants::DW_ATE_UCS","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5650},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37328,"byte_end":37340,"line_start":706,"line_end":706,"column_start":5,"column_end":17},"name":"DW_ATE_ASCII","qualname":"::constants::DW_ATE_ASCII","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5651},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37354,"byte_end":37368,"line_start":708,"line_end":708,"column_start":5,"column_end":19},"name":"DW_ATE_lo_user","qualname":"::constants::DW_ATE_lo_user","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5652},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37381,"byte_end":37395,"line_start":709,"line_end":709,"column_start":5,"column_end":19},"name":"DW_ATE_hi_user","qualname":"::constants::DW_ATE_hi_user","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5693},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37519,"byte_end":37524,"line_start":716,"line_end":716,"column_start":1,"column_end":6},"name":"DwLle","qualname":"::constants::DwLle","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in location list entries.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5679},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37535,"byte_end":37553,"line_start":717,"line_end":717,"column_start":5,"column_end":23},"name":"DW_LLE_end_of_list","qualname":"::constants::DW_LLE_end_of_list","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5680},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37566,"byte_end":37586,"line_start":718,"line_end":718,"column_start":5,"column_end":25},"name":"DW_LLE_base_addressx","qualname":"::constants::DW_LLE_base_addressx","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5681},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37599,"byte_end":37617,"line_start":719,"line_end":719,"column_start":5,"column_end":23},"name":"DW_LLE_startx_endx","qualname":"::constants::DW_LLE_startx_endx","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5682},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37630,"byte_end":37650,"line_start":720,"line_end":720,"column_start":5,"column_end":25},"name":"DW_LLE_startx_length","qualname":"::constants::DW_LLE_startx_length","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5683},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37663,"byte_end":37681,"line_start":721,"line_end":721,"column_start":5,"column_end":23},"name":"DW_LLE_offset_pair","qualname":"::constants::DW_LLE_offset_pair","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5684},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37694,"byte_end":37717,"line_start":722,"line_end":722,"column_start":5,"column_end":28},"name":"DW_LLE_default_location","qualname":"::constants::DW_LLE_default_location","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5685},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37730,"byte_end":37749,"line_start":723,"line_end":723,"column_start":5,"column_end":24},"name":"DW_LLE_base_address","qualname":"::constants::DW_LLE_base_address","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5686},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37762,"byte_end":37778,"line_start":724,"line_end":724,"column_start":5,"column_end":21},"name":"DW_LLE_start_end","qualname":"::constants::DW_LLE_start_end","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5687},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37791,"byte_end":37810,"line_start":725,"line_end":725,"column_start":5,"column_end":24},"name":"DW_LLE_start_length","qualname":"::constants::DW_LLE_start_length","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5688},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37823,"byte_end":37843,"line_start":726,"line_end":726,"column_start":5,"column_end":25},"name":"DW_LLE_GNU_view_pair","qualname":"::constants::DW_LLE_GNU_view_pair","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5724},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37978,"byte_end":37982,"line_start":733,"line_end":733,"column_start":1,"column_end":5},"name":"DwDs","qualname":"::constants::DwDs","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_decimal_sign` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5715},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":37993,"byte_end":38007,"line_start":734,"line_end":734,"column_start":5,"column_end":19},"name":"DW_DS_unsigned","qualname":"::constants::DW_DS_unsigned","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5716},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38020,"byte_end":38043,"line_start":735,"line_end":735,"column_start":5,"column_end":28},"name":"DW_DS_leading_overpunch","qualname":"::constants::DW_DS_leading_overpunch","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5717},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38056,"byte_end":38080,"line_start":736,"line_end":736,"column_start":5,"column_end":29},"name":"DW_DS_trailing_overpunch","qualname":"::constants::DW_DS_trailing_overpunch","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5718},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38093,"byte_end":38115,"line_start":737,"line_end":737,"column_start":5,"column_end":27},"name":"DW_DS_leading_separate","qualname":"::constants::DW_DS_leading_separate","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5719},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38128,"byte_end":38151,"line_start":738,"line_end":738,"column_start":5,"column_end":28},"name":"DW_DS_trailing_separate","qualname":"::constants::DW_DS_trailing_separate","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5755},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38283,"byte_end":38288,"line_start":745,"line_end":745,"column_start":1,"column_end":6},"name":"DwEnd","qualname":"::constants::DwEnd","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_endianity` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5746},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38299,"byte_end":38313,"line_start":746,"line_end":746,"column_start":5,"column_end":19},"name":"DW_END_default","qualname":"::constants::DW_END_default","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5747},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38326,"byte_end":38336,"line_start":747,"line_end":747,"column_start":5,"column_end":15},"name":"DW_END_big","qualname":"::constants::DW_END_big","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5748},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38349,"byte_end":38362,"line_start":748,"line_end":748,"column_start":5,"column_end":18},"name":"DW_END_little","qualname":"::constants::DW_END_little","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5749},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38375,"byte_end":38389,"line_start":749,"line_end":749,"column_start":5,"column_end":19},"name":"DW_END_lo_user","qualname":"::constants::DW_END_lo_user","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5750},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38402,"byte_end":38416,"line_start":750,"line_end":750,"column_start":5,"column_end":19},"name":"DW_END_hi_user","qualname":"::constants::DW_END_hi_user","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5784},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38552,"byte_end":38560,"line_start":757,"line_end":757,"column_start":1,"column_end":9},"name":"DwAccess","qualname":"::constants::DwAccess","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_accessibility` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5777},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38571,"byte_end":38587,"line_start":758,"line_end":758,"column_start":5,"column_end":21},"name":"DW_ACCESS_public","qualname":"::constants::DW_ACCESS_public","value":"DwAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5778},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38600,"byte_end":38619,"line_start":759,"line_end":759,"column_start":5,"column_end":24},"name":"DW_ACCESS_protected","qualname":"::constants::DW_ACCESS_protected","value":"DwAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5779},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38632,"byte_end":38649,"line_start":760,"line_end":760,"column_start":5,"column_end":22},"name":"DW_ACCESS_private","qualname":"::constants::DW_ACCESS_private","value":"DwAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5813},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38783,"byte_end":38788,"line_start":767,"line_end":767,"column_start":1,"column_end":6},"name":"DwVis","qualname":"::constants::DwVis","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_visibility` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5806},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38799,"byte_end":38811,"line_start":768,"line_end":768,"column_start":5,"column_end":17},"name":"DW_VIS_local","qualname":"::constants::DW_VIS_local","value":"DwVis","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5807},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38824,"byte_end":38839,"line_start":769,"line_end":769,"column_start":5,"column_end":20},"name":"DW_VIS_exported","qualname":"::constants::DW_VIS_exported","value":"DwVis","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5808},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":38852,"byte_end":38868,"line_start":770,"line_end":770,"column_start":5,"column_end":21},"name":"DW_VIS_qualified","qualname":"::constants::DW_VIS_qualified","value":"DwVis","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5842},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39002,"byte_end":39014,"line_start":777,"line_end":777,"column_start":1,"column_end":13},"name":"DwVirtuality","qualname":"::constants::DwVirtuality","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_virtuality` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5835},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39025,"byte_end":39043,"line_start":778,"line_end":778,"column_start":5,"column_end":23},"name":"DW_VIRTUALITY_none","qualname":"::constants::DW_VIRTUALITY_none","value":"DwVirtuality","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5836},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39056,"byte_end":39077,"line_start":779,"line_end":779,"column_start":5,"column_end":26},"name":"DW_VIRTUALITY_virtual","qualname":"::constants::DW_VIRTUALITY_virtual","value":"DwVirtuality","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5837},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39090,"byte_end":39116,"line_start":780,"line_end":780,"column_start":5,"column_end":31},"name":"DW_VIRTUALITY_pure_virtual","qualname":"::constants::DW_VIRTUALITY_pure_virtual","value":"DwVirtuality","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5912},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39248,"byte_end":39254,"line_start":787,"line_end":787,"column_start":1,"column_end":7},"name":"DwLang","qualname":"::constants::DwLang","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_language` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5864},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39266,"byte_end":39277,"line_start":788,"line_end":788,"column_start":5,"column_end":16},"name":"DW_LANG_C89","qualname":"::constants::DW_LANG_C89","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5865},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39292,"byte_end":39301,"line_start":789,"line_end":789,"column_start":5,"column_end":14},"name":"DW_LANG_C","qualname":"::constants::DW_LANG_C","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5866},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39316,"byte_end":39329,"line_start":790,"line_end":790,"column_start":5,"column_end":18},"name":"DW_LANG_Ada83","qualname":"::constants::DW_LANG_Ada83","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5867},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39344,"byte_end":39363,"line_start":791,"line_end":791,"column_start":5,"column_end":24},"name":"DW_LANG_C_plus_plus","qualname":"::constants::DW_LANG_C_plus_plus","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5868},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39378,"byte_end":39393,"line_start":792,"line_end":792,"column_start":5,"column_end":20},"name":"DW_LANG_Cobol74","qualname":"::constants::DW_LANG_Cobol74","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5869},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39408,"byte_end":39423,"line_start":793,"line_end":793,"column_start":5,"column_end":20},"name":"DW_LANG_Cobol85","qualname":"::constants::DW_LANG_Cobol85","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5870},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39438,"byte_end":39455,"line_start":794,"line_end":794,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran77","qualname":"::constants::DW_LANG_Fortran77","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5871},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39470,"byte_end":39487,"line_start":795,"line_end":795,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran90","qualname":"::constants::DW_LANG_Fortran90","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5872},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39502,"byte_end":39518,"line_start":796,"line_end":796,"column_start":5,"column_end":21},"name":"DW_LANG_Pascal83","qualname":"::constants::DW_LANG_Pascal83","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5873},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39533,"byte_end":39548,"line_start":797,"line_end":797,"column_start":5,"column_end":20},"name":"DW_LANG_Modula2","qualname":"::constants::DW_LANG_Modula2","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5874},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39563,"byte_end":39575,"line_start":798,"line_end":798,"column_start":5,"column_end":17},"name":"DW_LANG_Java","qualname":"::constants::DW_LANG_Java","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5875},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39590,"byte_end":39601,"line_start":799,"line_end":799,"column_start":5,"column_end":16},"name":"DW_LANG_C99","qualname":"::constants::DW_LANG_C99","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5876},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39616,"byte_end":39629,"line_start":800,"line_end":800,"column_start":5,"column_end":18},"name":"DW_LANG_Ada95","qualname":"::constants::DW_LANG_Ada95","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5877},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39644,"byte_end":39661,"line_start":801,"line_end":801,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran95","qualname":"::constants::DW_LANG_Fortran95","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5878},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39676,"byte_end":39687,"line_start":802,"line_end":802,"column_start":5,"column_end":16},"name":"DW_LANG_PLI","qualname":"::constants::DW_LANG_PLI","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5879},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39702,"byte_end":39714,"line_start":803,"line_end":803,"column_start":5,"column_end":17},"name":"DW_LANG_ObjC","qualname":"::constants::DW_LANG_ObjC","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5880},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39729,"byte_end":39751,"line_start":804,"line_end":804,"column_start":5,"column_end":27},"name":"DW_LANG_ObjC_plus_plus","qualname":"::constants::DW_LANG_ObjC_plus_plus","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5881},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39766,"byte_end":39777,"line_start":805,"line_end":805,"column_start":5,"column_end":16},"name":"DW_LANG_UPC","qualname":"::constants::DW_LANG_UPC","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5882},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39792,"byte_end":39801,"line_start":806,"line_end":806,"column_start":5,"column_end":14},"name":"DW_LANG_D","qualname":"::constants::DW_LANG_D","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5883},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39816,"byte_end":39830,"line_start":807,"line_end":807,"column_start":5,"column_end":19},"name":"DW_LANG_Python","qualname":"::constants::DW_LANG_Python","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5884},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39845,"byte_end":39859,"line_start":808,"line_end":808,"column_start":5,"column_end":19},"name":"DW_LANG_OpenCL","qualname":"::constants::DW_LANG_OpenCL","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5885},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39874,"byte_end":39884,"line_start":809,"line_end":809,"column_start":5,"column_end":15},"name":"DW_LANG_Go","qualname":"::constants::DW_LANG_Go","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5886},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39899,"byte_end":39914,"line_start":810,"line_end":810,"column_start":5,"column_end":20},"name":"DW_LANG_Modula3","qualname":"::constants::DW_LANG_Modula3","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5887},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39929,"byte_end":39944,"line_start":811,"line_end":811,"column_start":5,"column_end":20},"name":"DW_LANG_Haskell","qualname":"::constants::DW_LANG_Haskell","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5888},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39959,"byte_end":39981,"line_start":812,"line_end":812,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_03","qualname":"::constants::DW_LANG_C_plus_plus_03","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5889},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":39996,"byte_end":40018,"line_start":813,"line_end":813,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_11","qualname":"::constants::DW_LANG_C_plus_plus_11","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5890},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40033,"byte_end":40046,"line_start":814,"line_end":814,"column_start":5,"column_end":18},"name":"DW_LANG_OCaml","qualname":"::constants::DW_LANG_OCaml","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5891},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40061,"byte_end":40073,"line_start":815,"line_end":815,"column_start":5,"column_end":17},"name":"DW_LANG_Rust","qualname":"::constants::DW_LANG_Rust","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5892},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40088,"byte_end":40099,"line_start":816,"line_end":816,"column_start":5,"column_end":16},"name":"DW_LANG_C11","qualname":"::constants::DW_LANG_C11","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5893},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40114,"byte_end":40127,"line_start":817,"line_end":817,"column_start":5,"column_end":18},"name":"DW_LANG_Swift","qualname":"::constants::DW_LANG_Swift","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5894},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40142,"byte_end":40155,"line_start":818,"line_end":818,"column_start":5,"column_end":18},"name":"DW_LANG_Julia","qualname":"::constants::DW_LANG_Julia","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5895},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40170,"byte_end":40183,"line_start":819,"line_end":819,"column_start":5,"column_end":18},"name":"DW_LANG_Dylan","qualname":"::constants::DW_LANG_Dylan","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5896},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40198,"byte_end":40220,"line_start":820,"line_end":820,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_14","qualname":"::constants::DW_LANG_C_plus_plus_14","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5897},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40235,"byte_end":40252,"line_start":821,"line_end":821,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran03","qualname":"::constants::DW_LANG_Fortran03","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5898},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40267,"byte_end":40284,"line_start":822,"line_end":822,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran08","qualname":"::constants::DW_LANG_Fortran08","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5899},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40299,"byte_end":40319,"line_start":823,"line_end":823,"column_start":5,"column_end":25},"name":"DW_LANG_RenderScript","qualname":"::constants::DW_LANG_RenderScript","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5900},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40334,"byte_end":40347,"line_start":824,"line_end":824,"column_start":5,"column_end":18},"name":"DW_LANG_BLISS","qualname":"::constants::DW_LANG_BLISS","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5901},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40363,"byte_end":40378,"line_start":826,"line_end":826,"column_start":5,"column_end":20},"name":"DW_LANG_lo_user","qualname":"::constants::DW_LANG_lo_user","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5902},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40393,"byte_end":40408,"line_start":827,"line_end":827,"column_start":5,"column_end":20},"name":"DW_LANG_hi_user","qualname":"::constants::DW_LANG_hi_user","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5903},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40424,"byte_end":40446,"line_start":829,"line_end":829,"column_start":5,"column_end":27},"name":"DW_LANG_Mips_Assembler","qualname":"::constants::DW_LANG_Mips_Assembler","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5904},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40461,"byte_end":40488,"line_start":830,"line_end":830,"column_start":5,"column_end":32},"name":"DW_LANG_GOOGLE_RenderScript","qualname":"::constants::DW_LANG_GOOGLE_RenderScript","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5905},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40503,"byte_end":40524,"line_start":831,"line_end":831,"column_start":5,"column_end":26},"name":"DW_LANG_SUN_Assembler","qualname":"::constants::DW_LANG_SUN_Assembler","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5906},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40539,"byte_end":40563,"line_start":832,"line_end":832,"column_start":5,"column_end":29},"name":"DW_LANG_ALTIUM_Assembler","qualname":"::constants::DW_LANG_ALTIUM_Assembler","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5907},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40578,"byte_end":40600,"line_start":833,"line_end":833,"column_start":5,"column_end":27},"name":"DW_LANG_BORLAND_Delphi","qualname":"::constants::DW_LANG_BORLAND_Delphi","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40702,"byte_end":40721,"line_start":838,"line_end":838,"column_start":12,"column_end":31},"name":"default_lower_bound","qualname":"<DwLang>::default_lower_bound","value":"fn default_lower_bound(Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the default DW_AT_lower_bound for this language.\n","sig":null,"attributes":[{"value":"/ Get the default DW_AT_lower_bound for this language.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40634,"byte_end":40690,"line_start":837,"line_end":837,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":5939},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":41989,"byte_end":41995,"line_start":877,"line_end":877,"column_start":1,"column_end":7},"name":"DwAddr","qualname":"::constants::DwAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_address_class` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5934},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42007,"byte_end":42019,"line_start":878,"line_end":878,"column_start":5,"column_end":17},"name":"DW_ADDR_none","qualname":"::constants::DW_ADDR_none","value":"DwAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5969},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42158,"byte_end":42162,"line_start":885,"line_end":885,"column_start":1,"column_end":5},"name":"DwId","qualname":"::constants::DwId","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_identifier_case` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5961},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42173,"byte_end":42193,"line_start":886,"line_end":886,"column_start":5,"column_end":25},"name":"DW_ID_case_sensitive","qualname":"::constants::DW_ID_case_sensitive","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5962},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42206,"byte_end":42219,"line_start":887,"line_end":887,"column_start":5,"column_end":18},"name":"DW_ID_up_case","qualname":"::constants::DW_ID_up_case","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5963},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42232,"byte_end":42247,"line_start":888,"line_end":888,"column_start":5,"column_end":20},"name":"DW_ID_down_case","qualname":"::constants::DW_ID_down_case","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5964},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42260,"byte_end":42282,"line_start":889,"line_end":889,"column_start":5,"column_end":27},"name":"DW_ID_case_insensitive","qualname":"::constants::DW_ID_case_insensitive","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6002},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42424,"byte_end":42428,"line_start":896,"line_end":896,"column_start":1,"column_end":5},"name":"DwCc","qualname":"::constants::DwCc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_calling_convention` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5991},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42439,"byte_end":42451,"line_start":897,"line_end":897,"column_start":5,"column_end":17},"name":"DW_CC_normal","qualname":"::constants::DW_CC_normal","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5992},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42464,"byte_end":42477,"line_start":898,"line_end":898,"column_start":5,"column_end":18},"name":"DW_CC_program","qualname":"::constants::DW_CC_program","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5993},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42490,"byte_end":42502,"line_start":899,"line_end":899,"column_start":5,"column_end":17},"name":"DW_CC_nocall","qualname":"::constants::DW_CC_nocall","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5994},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42515,"byte_end":42538,"line_start":900,"line_end":900,"column_start":5,"column_end":28},"name":"DW_CC_pass_by_reference","qualname":"::constants::DW_CC_pass_by_reference","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5995},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42551,"byte_end":42570,"line_start":901,"line_end":901,"column_start":5,"column_end":24},"name":"DW_CC_pass_by_value","qualname":"::constants::DW_CC_pass_by_value","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5996},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42583,"byte_end":42596,"line_start":902,"line_end":902,"column_start":5,"column_end":18},"name":"DW_CC_lo_user","qualname":"::constants::DW_CC_lo_user","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5997},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42609,"byte_end":42622,"line_start":903,"line_end":903,"column_start":5,"column_end":18},"name":"DW_CC_hi_user","qualname":"::constants::DW_CC_hi_user","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6032},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42752,"byte_end":42757,"line_start":910,"line_end":910,"column_start":1,"column_end":6},"name":"DwInl","qualname":"::constants::DwInl","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_inline` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6024},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42768,"byte_end":42786,"line_start":911,"line_end":911,"column_start":5,"column_end":23},"name":"DW_INL_not_inlined","qualname":"::constants::DW_INL_not_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6025},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42799,"byte_end":42813,"line_start":912,"line_end":912,"column_start":5,"column_end":19},"name":"DW_INL_inlined","qualname":"::constants::DW_INL_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6026},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42826,"byte_end":42853,"line_start":913,"line_end":913,"column_start":5,"column_end":32},"name":"DW_INL_declared_not_inlined","qualname":"::constants::DW_INL_declared_not_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6027},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":42866,"byte_end":42889,"line_start":914,"line_end":914,"column_start":5,"column_end":28},"name":"DW_INL_declared_inlined","qualname":"::constants::DW_INL_declared_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6060},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43021,"byte_end":43026,"line_start":921,"line_end":921,"column_start":1,"column_end":6},"name":"DwOrd","qualname":"::constants::DwOrd","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_ordering` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6054},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43037,"byte_end":43053,"line_start":922,"line_end":922,"column_start":5,"column_end":21},"name":"DW_ORD_row_major","qualname":"::constants::DW_ORD_row_major","value":"DwOrd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6055},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43066,"byte_end":43082,"line_start":923,"line_end":923,"column_start":5,"column_end":21},"name":"DW_ORD_col_major","qualname":"::constants::DW_ORD_col_major","value":"DwOrd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6088},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43216,"byte_end":43221,"line_start":930,"line_end":930,"column_start":1,"column_end":6},"name":"DwDsc","qualname":"::constants::DwDsc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_discr_list` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6082},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43232,"byte_end":43244,"line_start":931,"line_end":931,"column_start":5,"column_end":17},"name":"DW_DSC_label","qualname":"::constants::DW_DSC_label","value":"DwDsc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6083},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43257,"byte_end":43269,"line_start":932,"line_end":932,"column_start":5,"column_end":17},"name":"DW_DSC_range","qualname":"::constants::DW_DSC_range","value":"DwDsc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6121},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43362,"byte_end":43367,"line_start":939,"line_end":939,"column_start":1,"column_end":6},"name":"DwIdx","qualname":"::constants::DwIdx","value":"","parent":null,"children":[],"decl_id":null,"docs":" Name index attribute encodings.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6110},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43379,"byte_end":43398,"line_start":940,"line_end":940,"column_start":5,"column_end":24},"name":"DW_IDX_compile_unit","qualname":"::constants::DW_IDX_compile_unit","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6111},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43408,"byte_end":43424,"line_start":941,"line_end":941,"column_start":5,"column_end":21},"name":"DW_IDX_type_unit","qualname":"::constants::DW_IDX_type_unit","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6112},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43434,"byte_end":43451,"line_start":942,"line_end":942,"column_start":5,"column_end":22},"name":"DW_IDX_die_offset","qualname":"::constants::DW_IDX_die_offset","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6113},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43461,"byte_end":43474,"line_start":943,"line_end":943,"column_start":5,"column_end":18},"name":"DW_IDX_parent","qualname":"::constants::DW_IDX_parent","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6114},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43484,"byte_end":43500,"line_start":944,"line_end":944,"column_start":5,"column_end":21},"name":"DW_IDX_type_hash","qualname":"::constants::DW_IDX_type_hash","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6115},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43510,"byte_end":43524,"line_start":945,"line_end":945,"column_start":5,"column_end":19},"name":"DW_IDX_lo_user","qualname":"::constants::DW_IDX_lo_user","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6116},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43539,"byte_end":43553,"line_start":946,"line_end":946,"column_start":5,"column_end":19},"name":"DW_IDX_hi_user","qualname":"::constants::DW_IDX_hi_user","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6150},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43688,"byte_end":43699,"line_start":953,"line_end":953,"column_start":1,"column_end":12},"name":"DwDefaulted","qualname":"::constants::DwDefaulted","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_defaulted` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6143},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43710,"byte_end":43725,"line_start":954,"line_end":954,"column_start":5,"column_end":20},"name":"DW_DEFAULTED_no","qualname":"::constants::DW_DEFAULTED_no","value":"DwDefaulted","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6144},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43738,"byte_end":43759,"line_start":955,"line_end":955,"column_start":5,"column_end":26},"name":"DW_DEFAULTED_in_class","qualname":"::constants::DW_DEFAULTED_in_class","value":"DwDefaulted","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6145},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43772,"byte_end":43797,"line_start":956,"line_end":956,"column_start":5,"column_end":30},"name":"DW_DEFAULTED_out_of_class","qualname":"::constants::DW_DEFAULTED_out_of_class","value":"DwDefaulted","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6188},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43926,"byte_end":43931,"line_start":963,"line_end":963,"column_start":1,"column_end":6},"name":"DwLns","qualname":"::constants::DwLns","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for the standard opcodes for line number information.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6172},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43942,"byte_end":43953,"line_start":964,"line_end":964,"column_start":5,"column_end":16},"name":"DW_LNS_copy","qualname":"::constants::DW_LNS_copy","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6173},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43966,"byte_end":43983,"line_start":965,"line_end":965,"column_start":5,"column_end":22},"name":"DW_LNS_advance_pc","qualname":"::constants::DW_LNS_advance_pc","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6174},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":43996,"byte_end":44015,"line_start":966,"line_end":966,"column_start":5,"column_end":24},"name":"DW_LNS_advance_line","qualname":"::constants::DW_LNS_advance_line","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6175},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44028,"byte_end":44043,"line_start":967,"line_end":967,"column_start":5,"column_end":20},"name":"DW_LNS_set_file","qualname":"::constants::DW_LNS_set_file","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6176},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44056,"byte_end":44073,"line_start":968,"line_end":968,"column_start":5,"column_end":22},"name":"DW_LNS_set_column","qualname":"::constants::DW_LNS_set_column","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6177},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44086,"byte_end":44104,"line_start":969,"line_end":969,"column_start":5,"column_end":23},"name":"DW_LNS_negate_stmt","qualname":"::constants::DW_LNS_negate_stmt","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6178},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44117,"byte_end":44139,"line_start":970,"line_end":970,"column_start":5,"column_end":27},"name":"DW_LNS_set_basic_block","qualname":"::constants::DW_LNS_set_basic_block","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6179},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44152,"byte_end":44171,"line_start":971,"line_end":971,"column_start":5,"column_end":24},"name":"DW_LNS_const_add_pc","qualname":"::constants::DW_LNS_const_add_pc","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6180},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44184,"byte_end":44207,"line_start":972,"line_end":972,"column_start":5,"column_end":28},"name":"DW_LNS_fixed_advance_pc","qualname":"::constants::DW_LNS_fixed_advance_pc","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6181},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44220,"byte_end":44243,"line_start":973,"line_end":973,"column_start":5,"column_end":28},"name":"DW_LNS_set_prologue_end","qualname":"::constants::DW_LNS_set_prologue_end","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6182},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44256,"byte_end":44281,"line_start":974,"line_end":974,"column_start":5,"column_end":30},"name":"DW_LNS_set_epilogue_begin","qualname":"::constants::DW_LNS_set_epilogue_begin","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6183},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44294,"byte_end":44308,"line_start":975,"line_end":975,"column_start":5,"column_end":19},"name":"DW_LNS_set_isa","qualname":"::constants::DW_LNS_set_isa","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6220},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44437,"byte_end":44442,"line_start":982,"line_end":982,"column_start":1,"column_end":6},"name":"DwLne","qualname":"::constants::DwLne","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for the extended opcodes for line number information.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6210},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44453,"byte_end":44472,"line_start":983,"line_end":983,"column_start":5,"column_end":24},"name":"DW_LNE_end_sequence","qualname":"::constants::DW_LNE_end_sequence","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6211},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44485,"byte_end":44503,"line_start":984,"line_end":984,"column_start":5,"column_end":23},"name":"DW_LNE_set_address","qualname":"::constants::DW_LNE_set_address","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6212},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44516,"byte_end":44534,"line_start":985,"line_end":985,"column_start":5,"column_end":23},"name":"DW_LNE_define_file","qualname":"::constants::DW_LNE_define_file","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6213},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44547,"byte_end":44571,"line_start":986,"line_end":986,"column_start":5,"column_end":29},"name":"DW_LNE_set_discriminator","qualname":"::constants::DW_LNE_set_discriminator","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6214},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44585,"byte_end":44599,"line_start":988,"line_end":988,"column_start":5,"column_end":19},"name":"DW_LNE_lo_user","qualname":"::constants::DW_LNE_lo_user","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6215},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44612,"byte_end":44626,"line_start":989,"line_end":989,"column_start":5,"column_end":19},"name":"DW_LNE_hi_user","qualname":"::constants::DW_LNE_hi_user","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6253},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44743,"byte_end":44749,"line_start":996,"line_end":996,"column_start":1,"column_end":7},"name":"DwLnct","qualname":"::constants::DwLnct","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for the line number header entry formats.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6242},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44761,"byte_end":44773,"line_start":997,"line_end":997,"column_start":5,"column_end":17},"name":"DW_LNCT_path","qualname":"::constants::DW_LNCT_path","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6243},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44785,"byte_end":44808,"line_start":998,"line_end":998,"column_start":5,"column_end":28},"name":"DW_LNCT_directory_index","qualname":"::constants::DW_LNCT_directory_index","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6244},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44820,"byte_end":44837,"line_start":999,"line_end":999,"column_start":5,"column_end":22},"name":"DW_LNCT_timestamp","qualname":"::constants::DW_LNCT_timestamp","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6245},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44849,"byte_end":44861,"line_start":1000,"line_end":1000,"column_start":5,"column_end":17},"name":"DW_LNCT_size","qualname":"::constants::DW_LNCT_size","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6246},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44873,"byte_end":44884,"line_start":1001,"line_end":1001,"column_start":5,"column_end":16},"name":"DW_LNCT_MD5","qualname":"::constants::DW_LNCT_MD5","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6247},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44896,"byte_end":44911,"line_start":1002,"line_end":1002,"column_start":5,"column_end":20},"name":"DW_LNCT_lo_user","qualname":"::constants::DW_LNCT_lo_user","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6248},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":44926,"byte_end":44941,"line_start":1003,"line_end":1003,"column_start":5,"column_end":20},"name":"DW_LNCT_hi_user","qualname":"::constants::DW_LNCT_hi_user","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6293},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45053,"byte_end":45060,"line_start":1010,"line_end":1010,"column_start":1,"column_end":8},"name":"DwMacro","qualname":"::constants::DwMacro","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for macro information entry types.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6275},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45071,"byte_end":45086,"line_start":1011,"line_end":1011,"column_start":5,"column_end":20},"name":"DW_MACRO_define","qualname":"::constants::DW_MACRO_define","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6276},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45099,"byte_end":45113,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19},"name":"DW_MACRO_undef","qualname":"::constants::DW_MACRO_undef","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6277},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45126,"byte_end":45145,"line_start":1013,"line_end":1013,"column_start":5,"column_end":24},"name":"DW_MACRO_start_file","qualname":"::constants::DW_MACRO_start_file","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6278},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45158,"byte_end":45175,"line_start":1014,"line_end":1014,"column_start":5,"column_end":22},"name":"DW_MACRO_end_file","qualname":"::constants::DW_MACRO_end_file","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6279},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45188,"byte_end":45208,"line_start":1015,"line_end":1015,"column_start":5,"column_end":25},"name":"DW_MACRO_define_strp","qualname":"::constants::DW_MACRO_define_strp","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6280},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45221,"byte_end":45240,"line_start":1016,"line_end":1016,"column_start":5,"column_end":24},"name":"DW_MACRO_undef_strp","qualname":"::constants::DW_MACRO_undef_strp","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6281},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45253,"byte_end":45268,"line_start":1017,"line_end":1017,"column_start":5,"column_end":20},"name":"DW_MACRO_import","qualname":"::constants::DW_MACRO_import","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6282},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45281,"byte_end":45300,"line_start":1018,"line_end":1018,"column_start":5,"column_end":24},"name":"DW_MACRO_define_sup","qualname":"::constants::DW_MACRO_define_sup","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6283},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45313,"byte_end":45331,"line_start":1019,"line_end":1019,"column_start":5,"column_end":23},"name":"DW_MACRO_undef_sup","qualname":"::constants::DW_MACRO_undef_sup","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6284},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45344,"byte_end":45363,"line_start":1020,"line_end":1020,"column_start":5,"column_end":24},"name":"DW_MACRO_import_sup","qualname":"::constants::DW_MACRO_import_sup","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6285},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45376,"byte_end":45396,"line_start":1021,"line_end":1021,"column_start":5,"column_end":25},"name":"DW_MACRO_define_strx","qualname":"::constants::DW_MACRO_define_strx","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6286},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45409,"byte_end":45428,"line_start":1022,"line_end":1022,"column_start":5,"column_end":24},"name":"DW_MACRO_undef_strx","qualname":"::constants::DW_MACRO_undef_strx","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6287},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45441,"byte_end":45457,"line_start":1023,"line_end":1023,"column_start":5,"column_end":21},"name":"DW_MACRO_lo_user","qualname":"::constants::DW_MACRO_lo_user","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6288},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45470,"byte_end":45486,"line_start":1024,"line_end":1024,"column_start":5,"column_end":21},"name":"DW_MACRO_hi_user","qualname":"::constants::DW_MACRO_hi_user","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6327},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45581,"byte_end":45586,"line_start":1031,"line_end":1031,"column_start":1,"column_end":6},"name":"DwRle","qualname":"::constants::DwRle","value":"","parent":null,"children":[],"decl_id":null,"docs":" Range list entry encoding values.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6315},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45597,"byte_end":45615,"line_start":1032,"line_end":1032,"column_start":5,"column_end":23},"name":"DW_RLE_end_of_list","qualname":"::constants::DW_RLE_end_of_list","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6316},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45628,"byte_end":45648,"line_start":1033,"line_end":1033,"column_start":5,"column_end":25},"name":"DW_RLE_base_addressx","qualname":"::constants::DW_RLE_base_addressx","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6317},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45661,"byte_end":45679,"line_start":1034,"line_end":1034,"column_start":5,"column_end":23},"name":"DW_RLE_startx_endx","qualname":"::constants::DW_RLE_startx_endx","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6318},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45692,"byte_end":45712,"line_start":1035,"line_end":1035,"column_start":5,"column_end":25},"name":"DW_RLE_startx_length","qualname":"::constants::DW_RLE_startx_length","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6319},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45725,"byte_end":45743,"line_start":1036,"line_end":1036,"column_start":5,"column_end":23},"name":"DW_RLE_offset_pair","qualname":"::constants::DW_RLE_offset_pair","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6320},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45756,"byte_end":45775,"line_start":1037,"line_end":1037,"column_start":5,"column_end":24},"name":"DW_RLE_base_address","qualname":"::constants::DW_RLE_base_address","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6321},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45788,"byte_end":45804,"line_start":1038,"line_end":1038,"column_start":5,"column_end":21},"name":"DW_RLE_start_end","qualname":"::constants::DW_RLE_start_end","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6322},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45817,"byte_end":45836,"line_start":1039,"line_end":1039,"column_start":5,"column_end":24},"name":"DW_RLE_start_length","qualname":"::constants::DW_RLE_start_length","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6526},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45944,"byte_end":45948,"line_start":1046,"line_end":1046,"column_start":1,"column_end":5},"name":"DwOp","qualname":"::constants::DwOp","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for DWARF expression operations.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6349},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45959,"byte_end":45969,"line_start":1047,"line_end":1047,"column_start":5,"column_end":15},"name":"DW_OP_addr","qualname":"::constants::DW_OP_addr","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6350},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":45982,"byte_end":45993,"line_start":1048,"line_end":1048,"column_start":5,"column_end":16},"name":"DW_OP_deref","qualname":"::constants::DW_OP_deref","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6351},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46006,"byte_end":46019,"line_start":1049,"line_end":1049,"column_start":5,"column_end":18},"name":"DW_OP_const1u","qualname":"::constants::DW_OP_const1u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6352},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46032,"byte_end":46045,"line_start":1050,"line_end":1050,"column_start":5,"column_end":18},"name":"DW_OP_const1s","qualname":"::constants::DW_OP_const1s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6353},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46058,"byte_end":46071,"line_start":1051,"line_end":1051,"column_start":5,"column_end":18},"name":"DW_OP_const2u","qualname":"::constants::DW_OP_const2u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6354},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46084,"byte_end":46097,"line_start":1052,"line_end":1052,"column_start":5,"column_end":18},"name":"DW_OP_const2s","qualname":"::constants::DW_OP_const2s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6355},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46110,"byte_end":46123,"line_start":1053,"line_end":1053,"column_start":5,"column_end":18},"name":"DW_OP_const4u","qualname":"::constants::DW_OP_const4u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6356},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46136,"byte_end":46149,"line_start":1054,"line_end":1054,"column_start":5,"column_end":18},"name":"DW_OP_const4s","qualname":"::constants::DW_OP_const4s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6357},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46162,"byte_end":46175,"line_start":1055,"line_end":1055,"column_start":5,"column_end":18},"name":"DW_OP_const8u","qualname":"::constants::DW_OP_const8u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6358},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46188,"byte_end":46201,"line_start":1056,"line_end":1056,"column_start":5,"column_end":18},"name":"DW_OP_const8s","qualname":"::constants::DW_OP_const8s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6359},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46214,"byte_end":46226,"line_start":1057,"line_end":1057,"column_start":5,"column_end":17},"name":"DW_OP_constu","qualname":"::constants::DW_OP_constu","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6360},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46239,"byte_end":46251,"line_start":1058,"line_end":1058,"column_start":5,"column_end":17},"name":"DW_OP_consts","qualname":"::constants::DW_OP_consts","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6361},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46264,"byte_end":46273,"line_start":1059,"line_end":1059,"column_start":5,"column_end":14},"name":"DW_OP_dup","qualname":"::constants::DW_OP_dup","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6362},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46286,"byte_end":46296,"line_start":1060,"line_end":1060,"column_start":5,"column_end":15},"name":"DW_OP_drop","qualname":"::constants::DW_OP_drop","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6363},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46309,"byte_end":46319,"line_start":1061,"line_end":1061,"column_start":5,"column_end":15},"name":"DW_OP_over","qualname":"::constants::DW_OP_over","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6364},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46332,"byte_end":46342,"line_start":1062,"line_end":1062,"column_start":5,"column_end":15},"name":"DW_OP_pick","qualname":"::constants::DW_OP_pick","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6365},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46355,"byte_end":46365,"line_start":1063,"line_end":1063,"column_start":5,"column_end":15},"name":"DW_OP_swap","qualname":"::constants::DW_OP_swap","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6366},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46378,"byte_end":46387,"line_start":1064,"line_end":1064,"column_start":5,"column_end":14},"name":"DW_OP_rot","qualname":"::constants::DW_OP_rot","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6367},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46400,"byte_end":46412,"line_start":1065,"line_end":1065,"column_start":5,"column_end":17},"name":"DW_OP_xderef","qualname":"::constants::DW_OP_xderef","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6368},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46425,"byte_end":46434,"line_start":1066,"line_end":1066,"column_start":5,"column_end":14},"name":"DW_OP_abs","qualname":"::constants::DW_OP_abs","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6369},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46447,"byte_end":46456,"line_start":1067,"line_end":1067,"column_start":5,"column_end":14},"name":"DW_OP_and","qualname":"::constants::DW_OP_and","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6370},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46469,"byte_end":46478,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14},"name":"DW_OP_div","qualname":"::constants::DW_OP_div","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6371},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46491,"byte_end":46502,"line_start":1069,"line_end":1069,"column_start":5,"column_end":16},"name":"DW_OP_minus","qualname":"::constants::DW_OP_minus","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6372},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46515,"byte_end":46524,"line_start":1070,"line_end":1070,"column_start":5,"column_end":14},"name":"DW_OP_mod","qualname":"::constants::DW_OP_mod","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6373},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46537,"byte_end":46546,"line_start":1071,"line_end":1071,"column_start":5,"column_end":14},"name":"DW_OP_mul","qualname":"::constants::DW_OP_mul","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6374},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46559,"byte_end":46568,"line_start":1072,"line_end":1072,"column_start":5,"column_end":14},"name":"DW_OP_neg","qualname":"::constants::DW_OP_neg","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6375},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46581,"byte_end":46590,"line_start":1073,"line_end":1073,"column_start":5,"column_end":14},"name":"DW_OP_not","qualname":"::constants::DW_OP_not","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6376},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46603,"byte_end":46611,"line_start":1074,"line_end":1074,"column_start":5,"column_end":13},"name":"DW_OP_or","qualname":"::constants::DW_OP_or","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6377},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46624,"byte_end":46634,"line_start":1075,"line_end":1075,"column_start":5,"column_end":15},"name":"DW_OP_plus","qualname":"::constants::DW_OP_plus","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6378},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46647,"byte_end":46664,"line_start":1076,"line_end":1076,"column_start":5,"column_end":22},"name":"DW_OP_plus_uconst","qualname":"::constants::DW_OP_plus_uconst","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6379},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46677,"byte_end":46686,"line_start":1077,"line_end":1077,"column_start":5,"column_end":14},"name":"DW_OP_shl","qualname":"::constants::DW_OP_shl","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6380},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46699,"byte_end":46708,"line_start":1078,"line_end":1078,"column_start":5,"column_end":14},"name":"DW_OP_shr","qualname":"::constants::DW_OP_shr","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6381},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46721,"byte_end":46731,"line_start":1079,"line_end":1079,"column_start":5,"column_end":15},"name":"DW_OP_shra","qualname":"::constants::DW_OP_shra","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6382},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46744,"byte_end":46753,"line_start":1080,"line_end":1080,"column_start":5,"column_end":14},"name":"DW_OP_xor","qualname":"::constants::DW_OP_xor","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6383},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46766,"byte_end":46775,"line_start":1081,"line_end":1081,"column_start":5,"column_end":14},"name":"DW_OP_bra","qualname":"::constants::DW_OP_bra","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6384},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46788,"byte_end":46796,"line_start":1082,"line_end":1082,"column_start":5,"column_end":13},"name":"DW_OP_eq","qualname":"::constants::DW_OP_eq","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6385},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46809,"byte_end":46817,"line_start":1083,"line_end":1083,"column_start":5,"column_end":13},"name":"DW_OP_ge","qualname":"::constants::DW_OP_ge","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6386},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46830,"byte_end":46838,"line_start":1084,"line_end":1084,"column_start":5,"column_end":13},"name":"DW_OP_gt","qualname":"::constants::DW_OP_gt","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6387},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46851,"byte_end":46859,"line_start":1085,"line_end":1085,"column_start":5,"column_end":13},"name":"DW_OP_le","qualname":"::constants::DW_OP_le","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6388},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46872,"byte_end":46880,"line_start":1086,"line_end":1086,"column_start":5,"column_end":13},"name":"DW_OP_lt","qualname":"::constants::DW_OP_lt","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6389},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46893,"byte_end":46901,"line_start":1087,"line_end":1087,"column_start":5,"column_end":13},"name":"DW_OP_ne","qualname":"::constants::DW_OP_ne","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6390},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46914,"byte_end":46924,"line_start":1088,"line_end":1088,"column_start":5,"column_end":15},"name":"DW_OP_skip","qualname":"::constants::DW_OP_skip","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6391},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46937,"byte_end":46947,"line_start":1089,"line_end":1089,"column_start":5,"column_end":15},"name":"DW_OP_lit0","qualname":"::constants::DW_OP_lit0","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6392},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46960,"byte_end":46970,"line_start":1090,"line_end":1090,"column_start":5,"column_end":15},"name":"DW_OP_lit1","qualname":"::constants::DW_OP_lit1","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6393},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":46983,"byte_end":46993,"line_start":1091,"line_end":1091,"column_start":5,"column_end":15},"name":"DW_OP_lit2","qualname":"::constants::DW_OP_lit2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6394},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47006,"byte_end":47016,"line_start":1092,"line_end":1092,"column_start":5,"column_end":15},"name":"DW_OP_lit3","qualname":"::constants::DW_OP_lit3","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6395},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47029,"byte_end":47039,"line_start":1093,"line_end":1093,"column_start":5,"column_end":15},"name":"DW_OP_lit4","qualname":"::constants::DW_OP_lit4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6396},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47052,"byte_end":47062,"line_start":1094,"line_end":1094,"column_start":5,"column_end":15},"name":"DW_OP_lit5","qualname":"::constants::DW_OP_lit5","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6397},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47075,"byte_end":47085,"line_start":1095,"line_end":1095,"column_start":5,"column_end":15},"name":"DW_OP_lit6","qualname":"::constants::DW_OP_lit6","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6398},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47098,"byte_end":47108,"line_start":1096,"line_end":1096,"column_start":5,"column_end":15},"name":"DW_OP_lit7","qualname":"::constants::DW_OP_lit7","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6399},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47121,"byte_end":47131,"line_start":1097,"line_end":1097,"column_start":5,"column_end":15},"name":"DW_OP_lit8","qualname":"::constants::DW_OP_lit8","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6400},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47144,"byte_end":47154,"line_start":1098,"line_end":1098,"column_start":5,"column_end":15},"name":"DW_OP_lit9","qualname":"::constants::DW_OP_lit9","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6401},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47167,"byte_end":47178,"line_start":1099,"line_end":1099,"column_start":5,"column_end":16},"name":"DW_OP_lit10","qualname":"::constants::DW_OP_lit10","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6402},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47191,"byte_end":47202,"line_start":1100,"line_end":1100,"column_start":5,"column_end":16},"name":"DW_OP_lit11","qualname":"::constants::DW_OP_lit11","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6403},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47215,"byte_end":47226,"line_start":1101,"line_end":1101,"column_start":5,"column_end":16},"name":"DW_OP_lit12","qualname":"::constants::DW_OP_lit12","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6404},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47239,"byte_end":47250,"line_start":1102,"line_end":1102,"column_start":5,"column_end":16},"name":"DW_OP_lit13","qualname":"::constants::DW_OP_lit13","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6405},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47263,"byte_end":47274,"line_start":1103,"line_end":1103,"column_start":5,"column_end":16},"name":"DW_OP_lit14","qualname":"::constants::DW_OP_lit14","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6406},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47287,"byte_end":47298,"line_start":1104,"line_end":1104,"column_start":5,"column_end":16},"name":"DW_OP_lit15","qualname":"::constants::DW_OP_lit15","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6407},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47311,"byte_end":47322,"line_start":1105,"line_end":1105,"column_start":5,"column_end":16},"name":"DW_OP_lit16","qualname":"::constants::DW_OP_lit16","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6408},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47335,"byte_end":47346,"line_start":1106,"line_end":1106,"column_start":5,"column_end":16},"name":"DW_OP_lit17","qualname":"::constants::DW_OP_lit17","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6409},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47359,"byte_end":47370,"line_start":1107,"line_end":1107,"column_start":5,"column_end":16},"name":"DW_OP_lit18","qualname":"::constants::DW_OP_lit18","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6410},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47383,"byte_end":47394,"line_start":1108,"line_end":1108,"column_start":5,"column_end":16},"name":"DW_OP_lit19","qualname":"::constants::DW_OP_lit19","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6411},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47407,"byte_end":47418,"line_start":1109,"line_end":1109,"column_start":5,"column_end":16},"name":"DW_OP_lit20","qualname":"::constants::DW_OP_lit20","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6412},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47431,"byte_end":47442,"line_start":1110,"line_end":1110,"column_start":5,"column_end":16},"name":"DW_OP_lit21","qualname":"::constants::DW_OP_lit21","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6413},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47455,"byte_end":47466,"line_start":1111,"line_end":1111,"column_start":5,"column_end":16},"name":"DW_OP_lit22","qualname":"::constants::DW_OP_lit22","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6414},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47479,"byte_end":47490,"line_start":1112,"line_end":1112,"column_start":5,"column_end":16},"name":"DW_OP_lit23","qualname":"::constants::DW_OP_lit23","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6415},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47503,"byte_end":47514,"line_start":1113,"line_end":1113,"column_start":5,"column_end":16},"name":"DW_OP_lit24","qualname":"::constants::DW_OP_lit24","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6416},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47527,"byte_end":47538,"line_start":1114,"line_end":1114,"column_start":5,"column_end":16},"name":"DW_OP_lit25","qualname":"::constants::DW_OP_lit25","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6417},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47551,"byte_end":47562,"line_start":1115,"line_end":1115,"column_start":5,"column_end":16},"name":"DW_OP_lit26","qualname":"::constants::DW_OP_lit26","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6418},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47575,"byte_end":47586,"line_start":1116,"line_end":1116,"column_start":5,"column_end":16},"name":"DW_OP_lit27","qualname":"::constants::DW_OP_lit27","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6419},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47599,"byte_end":47610,"line_start":1117,"line_end":1117,"column_start":5,"column_end":16},"name":"DW_OP_lit28","qualname":"::constants::DW_OP_lit28","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6420},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47623,"byte_end":47634,"line_start":1118,"line_end":1118,"column_start":5,"column_end":16},"name":"DW_OP_lit29","qualname":"::constants::DW_OP_lit29","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6421},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47647,"byte_end":47658,"line_start":1119,"line_end":1119,"column_start":5,"column_end":16},"name":"DW_OP_lit30","qualname":"::constants::DW_OP_lit30","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6422},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47671,"byte_end":47682,"line_start":1120,"line_end":1120,"column_start":5,"column_end":16},"name":"DW_OP_lit31","qualname":"::constants::DW_OP_lit31","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6423},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47695,"byte_end":47705,"line_start":1121,"line_end":1121,"column_start":5,"column_end":15},"name":"DW_OP_reg0","qualname":"::constants::DW_OP_reg0","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6424},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47718,"byte_end":47728,"line_start":1122,"line_end":1122,"column_start":5,"column_end":15},"name":"DW_OP_reg1","qualname":"::constants::DW_OP_reg1","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6425},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47741,"byte_end":47751,"line_start":1123,"line_end":1123,"column_start":5,"column_end":15},"name":"DW_OP_reg2","qualname":"::constants::DW_OP_reg2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6426},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47764,"byte_end":47774,"line_start":1124,"line_end":1124,"column_start":5,"column_end":15},"name":"DW_OP_reg3","qualname":"::constants::DW_OP_reg3","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6427},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47787,"byte_end":47797,"line_start":1125,"line_end":1125,"column_start":5,"column_end":15},"name":"DW_OP_reg4","qualname":"::constants::DW_OP_reg4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6428},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47810,"byte_end":47820,"line_start":1126,"line_end":1126,"column_start":5,"column_end":15},"name":"DW_OP_reg5","qualname":"::constants::DW_OP_reg5","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6429},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47833,"byte_end":47843,"line_start":1127,"line_end":1127,"column_start":5,"column_end":15},"name":"DW_OP_reg6","qualname":"::constants::DW_OP_reg6","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6430},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47856,"byte_end":47866,"line_start":1128,"line_end":1128,"column_start":5,"column_end":15},"name":"DW_OP_reg7","qualname":"::constants::DW_OP_reg7","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6431},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47879,"byte_end":47889,"line_start":1129,"line_end":1129,"column_start":5,"column_end":15},"name":"DW_OP_reg8","qualname":"::constants::DW_OP_reg8","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6432},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47902,"byte_end":47912,"line_start":1130,"line_end":1130,"column_start":5,"column_end":15},"name":"DW_OP_reg9","qualname":"::constants::DW_OP_reg9","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6433},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47925,"byte_end":47936,"line_start":1131,"line_end":1131,"column_start":5,"column_end":16},"name":"DW_OP_reg10","qualname":"::constants::DW_OP_reg10","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6434},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47949,"byte_end":47960,"line_start":1132,"line_end":1132,"column_start":5,"column_end":16},"name":"DW_OP_reg11","qualname":"::constants::DW_OP_reg11","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6435},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47973,"byte_end":47984,"line_start":1133,"line_end":1133,"column_start":5,"column_end":16},"name":"DW_OP_reg12","qualname":"::constants::DW_OP_reg12","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6436},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":47997,"byte_end":48008,"line_start":1134,"line_end":1134,"column_start":5,"column_end":16},"name":"DW_OP_reg13","qualname":"::constants::DW_OP_reg13","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6437},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48021,"byte_end":48032,"line_start":1135,"line_end":1135,"column_start":5,"column_end":16},"name":"DW_OP_reg14","qualname":"::constants::DW_OP_reg14","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6438},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48045,"byte_end":48056,"line_start":1136,"line_end":1136,"column_start":5,"column_end":16},"name":"DW_OP_reg15","qualname":"::constants::DW_OP_reg15","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6439},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48069,"byte_end":48080,"line_start":1137,"line_end":1137,"column_start":5,"column_end":16},"name":"DW_OP_reg16","qualname":"::constants::DW_OP_reg16","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6440},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48093,"byte_end":48104,"line_start":1138,"line_end":1138,"column_start":5,"column_end":16},"name":"DW_OP_reg17","qualname":"::constants::DW_OP_reg17","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6441},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48117,"byte_end":48128,"line_start":1139,"line_end":1139,"column_start":5,"column_end":16},"name":"DW_OP_reg18","qualname":"::constants::DW_OP_reg18","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6442},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48141,"byte_end":48152,"line_start":1140,"line_end":1140,"column_start":5,"column_end":16},"name":"DW_OP_reg19","qualname":"::constants::DW_OP_reg19","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6443},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48165,"byte_end":48176,"line_start":1141,"line_end":1141,"column_start":5,"column_end":16},"name":"DW_OP_reg20","qualname":"::constants::DW_OP_reg20","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6444},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48189,"byte_end":48200,"line_start":1142,"line_end":1142,"column_start":5,"column_end":16},"name":"DW_OP_reg21","qualname":"::constants::DW_OP_reg21","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6445},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48213,"byte_end":48224,"line_start":1143,"line_end":1143,"column_start":5,"column_end":16},"name":"DW_OP_reg22","qualname":"::constants::DW_OP_reg22","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6446},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48237,"byte_end":48248,"line_start":1144,"line_end":1144,"column_start":5,"column_end":16},"name":"DW_OP_reg23","qualname":"::constants::DW_OP_reg23","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6447},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48261,"byte_end":48272,"line_start":1145,"line_end":1145,"column_start":5,"column_end":16},"name":"DW_OP_reg24","qualname":"::constants::DW_OP_reg24","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6448},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48285,"byte_end":48296,"line_start":1146,"line_end":1146,"column_start":5,"column_end":16},"name":"DW_OP_reg25","qualname":"::constants::DW_OP_reg25","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6449},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48309,"byte_end":48320,"line_start":1147,"line_end":1147,"column_start":5,"column_end":16},"name":"DW_OP_reg26","qualname":"::constants::DW_OP_reg26","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6450},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48333,"byte_end":48344,"line_start":1148,"line_end":1148,"column_start":5,"column_end":16},"name":"DW_OP_reg27","qualname":"::constants::DW_OP_reg27","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6451},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48357,"byte_end":48368,"line_start":1149,"line_end":1149,"column_start":5,"column_end":16},"name":"DW_OP_reg28","qualname":"::constants::DW_OP_reg28","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6452},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48381,"byte_end":48392,"line_start":1150,"line_end":1150,"column_start":5,"column_end":16},"name":"DW_OP_reg29","qualname":"::constants::DW_OP_reg29","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6453},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48405,"byte_end":48416,"line_start":1151,"line_end":1151,"column_start":5,"column_end":16},"name":"DW_OP_reg30","qualname":"::constants::DW_OP_reg30","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6454},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48429,"byte_end":48440,"line_start":1152,"line_end":1152,"column_start":5,"column_end":16},"name":"DW_OP_reg31","qualname":"::constants::DW_OP_reg31","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6455},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48453,"byte_end":48464,"line_start":1153,"line_end":1153,"column_start":5,"column_end":16},"name":"DW_OP_breg0","qualname":"::constants::DW_OP_breg0","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6456},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48477,"byte_end":48488,"line_start":1154,"line_end":1154,"column_start":5,"column_end":16},"name":"DW_OP_breg1","qualname":"::constants::DW_OP_breg1","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6457},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48501,"byte_end":48512,"line_start":1155,"line_end":1155,"column_start":5,"column_end":16},"name":"DW_OP_breg2","qualname":"::constants::DW_OP_breg2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6458},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48525,"byte_end":48536,"line_start":1156,"line_end":1156,"column_start":5,"column_end":16},"name":"DW_OP_breg3","qualname":"::constants::DW_OP_breg3","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6459},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48549,"byte_end":48560,"line_start":1157,"line_end":1157,"column_start":5,"column_end":16},"name":"DW_OP_breg4","qualname":"::constants::DW_OP_breg4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6460},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48573,"byte_end":48584,"line_start":1158,"line_end":1158,"column_start":5,"column_end":16},"name":"DW_OP_breg5","qualname":"::constants::DW_OP_breg5","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6461},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48597,"byte_end":48608,"line_start":1159,"line_end":1159,"column_start":5,"column_end":16},"name":"DW_OP_breg6","qualname":"::constants::DW_OP_breg6","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6462},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48621,"byte_end":48632,"line_start":1160,"line_end":1160,"column_start":5,"column_end":16},"name":"DW_OP_breg7","qualname":"::constants::DW_OP_breg7","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6463},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48645,"byte_end":48656,"line_start":1161,"line_end":1161,"column_start":5,"column_end":16},"name":"DW_OP_breg8","qualname":"::constants::DW_OP_breg8","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6464},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48669,"byte_end":48680,"line_start":1162,"line_end":1162,"column_start":5,"column_end":16},"name":"DW_OP_breg9","qualname":"::constants::DW_OP_breg9","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6465},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48693,"byte_end":48705,"line_start":1163,"line_end":1163,"column_start":5,"column_end":17},"name":"DW_OP_breg10","qualname":"::constants::DW_OP_breg10","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6466},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48718,"byte_end":48730,"line_start":1164,"line_end":1164,"column_start":5,"column_end":17},"name":"DW_OP_breg11","qualname":"::constants::DW_OP_breg11","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6467},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48743,"byte_end":48755,"line_start":1165,"line_end":1165,"column_start":5,"column_end":17},"name":"DW_OP_breg12","qualname":"::constants::DW_OP_breg12","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6468},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48768,"byte_end":48780,"line_start":1166,"line_end":1166,"column_start":5,"column_end":17},"name":"DW_OP_breg13","qualname":"::constants::DW_OP_breg13","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6469},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48793,"byte_end":48805,"line_start":1167,"line_end":1167,"column_start":5,"column_end":17},"name":"DW_OP_breg14","qualname":"::constants::DW_OP_breg14","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6470},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48818,"byte_end":48830,"line_start":1168,"line_end":1168,"column_start":5,"column_end":17},"name":"DW_OP_breg15","qualname":"::constants::DW_OP_breg15","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6471},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48843,"byte_end":48855,"line_start":1169,"line_end":1169,"column_start":5,"column_end":17},"name":"DW_OP_breg16","qualname":"::constants::DW_OP_breg16","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6472},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48868,"byte_end":48880,"line_start":1170,"line_end":1170,"column_start":5,"column_end":17},"name":"DW_OP_breg17","qualname":"::constants::DW_OP_breg17","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6473},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48893,"byte_end":48905,"line_start":1171,"line_end":1171,"column_start":5,"column_end":17},"name":"DW_OP_breg18","qualname":"::constants::DW_OP_breg18","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6474},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48918,"byte_end":48930,"line_start":1172,"line_end":1172,"column_start":5,"column_end":17},"name":"DW_OP_breg19","qualname":"::constants::DW_OP_breg19","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6475},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48943,"byte_end":48955,"line_start":1173,"line_end":1173,"column_start":5,"column_end":17},"name":"DW_OP_breg20","qualname":"::constants::DW_OP_breg20","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6476},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48968,"byte_end":48980,"line_start":1174,"line_end":1174,"column_start":5,"column_end":17},"name":"DW_OP_breg21","qualname":"::constants::DW_OP_breg21","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6477},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":48993,"byte_end":49005,"line_start":1175,"line_end":1175,"column_start":5,"column_end":17},"name":"DW_OP_breg22","qualname":"::constants::DW_OP_breg22","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6478},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49018,"byte_end":49030,"line_start":1176,"line_end":1176,"column_start":5,"column_end":17},"name":"DW_OP_breg23","qualname":"::constants::DW_OP_breg23","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6479},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49043,"byte_end":49055,"line_start":1177,"line_end":1177,"column_start":5,"column_end":17},"name":"DW_OP_breg24","qualname":"::constants::DW_OP_breg24","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6480},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49068,"byte_end":49080,"line_start":1178,"line_end":1178,"column_start":5,"column_end":17},"name":"DW_OP_breg25","qualname":"::constants::DW_OP_breg25","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6481},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49093,"byte_end":49105,"line_start":1179,"line_end":1179,"column_start":5,"column_end":17},"name":"DW_OP_breg26","qualname":"::constants::DW_OP_breg26","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6482},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49118,"byte_end":49130,"line_start":1180,"line_end":1180,"column_start":5,"column_end":17},"name":"DW_OP_breg27","qualname":"::constants::DW_OP_breg27","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6483},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49143,"byte_end":49155,"line_start":1181,"line_end":1181,"column_start":5,"column_end":17},"name":"DW_OP_breg28","qualname":"::constants::DW_OP_breg28","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6484},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49168,"byte_end":49180,"line_start":1182,"line_end":1182,"column_start":5,"column_end":17},"name":"DW_OP_breg29","qualname":"::constants::DW_OP_breg29","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6485},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49193,"byte_end":49205,"line_start":1183,"line_end":1183,"column_start":5,"column_end":17},"name":"DW_OP_breg30","qualname":"::constants::DW_OP_breg30","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6486},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49218,"byte_end":49230,"line_start":1184,"line_end":1184,"column_start":5,"column_end":17},"name":"DW_OP_breg31","qualname":"::constants::DW_OP_breg31","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6487},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49243,"byte_end":49253,"line_start":1185,"line_end":1185,"column_start":5,"column_end":15},"name":"DW_OP_regx","qualname":"::constants::DW_OP_regx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6488},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49266,"byte_end":49277,"line_start":1186,"line_end":1186,"column_start":5,"column_end":16},"name":"DW_OP_fbreg","qualname":"::constants::DW_OP_fbreg","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6489},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49290,"byte_end":49301,"line_start":1187,"line_end":1187,"column_start":5,"column_end":16},"name":"DW_OP_bregx","qualname":"::constants::DW_OP_bregx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6490},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49314,"byte_end":49325,"line_start":1188,"line_end":1188,"column_start":5,"column_end":16},"name":"DW_OP_piece","qualname":"::constants::DW_OP_piece","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6491},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49338,"byte_end":49354,"line_start":1189,"line_end":1189,"column_start":5,"column_end":21},"name":"DW_OP_deref_size","qualname":"::constants::DW_OP_deref_size","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6492},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49367,"byte_end":49384,"line_start":1190,"line_end":1190,"column_start":5,"column_end":22},"name":"DW_OP_xderef_size","qualname":"::constants::DW_OP_xderef_size","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6493},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49397,"byte_end":49406,"line_start":1191,"line_end":1191,"column_start":5,"column_end":14},"name":"DW_OP_nop","qualname":"::constants::DW_OP_nop","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6494},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49419,"byte_end":49444,"line_start":1192,"line_end":1192,"column_start":5,"column_end":30},"name":"DW_OP_push_object_address","qualname":"::constants::DW_OP_push_object_address","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6495},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49457,"byte_end":49468,"line_start":1193,"line_end":1193,"column_start":5,"column_end":16},"name":"DW_OP_call2","qualname":"::constants::DW_OP_call2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6496},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49481,"byte_end":49492,"line_start":1194,"line_end":1194,"column_start":5,"column_end":16},"name":"DW_OP_call4","qualname":"::constants::DW_OP_call4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6497},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49505,"byte_end":49519,"line_start":1195,"line_end":1195,"column_start":5,"column_end":19},"name":"DW_OP_call_ref","qualname":"::constants::DW_OP_call_ref","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6498},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49532,"byte_end":49554,"line_start":1196,"line_end":1196,"column_start":5,"column_end":27},"name":"DW_OP_form_tls_address","qualname":"::constants::DW_OP_form_tls_address","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6499},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49567,"byte_end":49587,"line_start":1197,"line_end":1197,"column_start":5,"column_end":25},"name":"DW_OP_call_frame_cfa","qualname":"::constants::DW_OP_call_frame_cfa","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6500},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49600,"byte_end":49615,"line_start":1198,"line_end":1198,"column_start":5,"column_end":20},"name":"DW_OP_bit_piece","qualname":"::constants::DW_OP_bit_piece","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6501},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49628,"byte_end":49648,"line_start":1199,"line_end":1199,"column_start":5,"column_end":25},"name":"DW_OP_implicit_value","qualname":"::constants::DW_OP_implicit_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6502},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49661,"byte_end":49678,"line_start":1200,"line_end":1200,"column_start":5,"column_end":22},"name":"DW_OP_stack_value","qualname":"::constants::DW_OP_stack_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6503},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49691,"byte_end":49713,"line_start":1201,"line_end":1201,"column_start":5,"column_end":27},"name":"DW_OP_implicit_pointer","qualname":"::constants::DW_OP_implicit_pointer","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6504},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49726,"byte_end":49737,"line_start":1202,"line_end":1202,"column_start":5,"column_end":16},"name":"DW_OP_addrx","qualname":"::constants::DW_OP_addrx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6505},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49750,"byte_end":49762,"line_start":1203,"line_end":1203,"column_start":5,"column_end":17},"name":"DW_OP_constx","qualname":"::constants::DW_OP_constx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6506},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49775,"byte_end":49792,"line_start":1204,"line_end":1204,"column_start":5,"column_end":22},"name":"DW_OP_entry_value","qualname":"::constants::DW_OP_entry_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6507},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49805,"byte_end":49821,"line_start":1205,"line_end":1205,"column_start":5,"column_end":21},"name":"DW_OP_const_type","qualname":"::constants::DW_OP_const_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6508},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49834,"byte_end":49851,"line_start":1206,"line_end":1206,"column_start":5,"column_end":22},"name":"DW_OP_regval_type","qualname":"::constants::DW_OP_regval_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6509},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49864,"byte_end":49880,"line_start":1207,"line_end":1207,"column_start":5,"column_end":21},"name":"DW_OP_deref_type","qualname":"::constants::DW_OP_deref_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6510},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49893,"byte_end":49910,"line_start":1208,"line_end":1208,"column_start":5,"column_end":22},"name":"DW_OP_xderef_type","qualname":"::constants::DW_OP_xderef_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6511},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49923,"byte_end":49936,"line_start":1209,"line_end":1209,"column_start":5,"column_end":18},"name":"DW_OP_convert","qualname":"::constants::DW_OP_convert","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6512},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49949,"byte_end":49966,"line_start":1210,"line_end":1210,"column_start":5,"column_end":22},"name":"DW_OP_reinterpret","qualname":"::constants::DW_OP_reinterpret","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6513},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":49998,"byte_end":50024,"line_start":1213,"line_end":1213,"column_start":5,"column_end":31},"name":"DW_OP_GNU_push_tls_address","qualname":"::constants::DW_OP_GNU_push_tls_address","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6514},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50037,"byte_end":50063,"line_start":1214,"line_end":1214,"column_start":5,"column_end":31},"name":"DW_OP_GNU_implicit_pointer","qualname":"::constants::DW_OP_GNU_implicit_pointer","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6515},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50076,"byte_end":50097,"line_start":1215,"line_end":1215,"column_start":5,"column_end":26},"name":"DW_OP_GNU_entry_value","qualname":"::constants::DW_OP_GNU_entry_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6516},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50110,"byte_end":50130,"line_start":1216,"line_end":1216,"column_start":5,"column_end":25},"name":"DW_OP_GNU_const_type","qualname":"::constants::DW_OP_GNU_const_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6517},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50143,"byte_end":50164,"line_start":1217,"line_end":1217,"column_start":5,"column_end":26},"name":"DW_OP_GNU_regval_type","qualname":"::constants::DW_OP_GNU_regval_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6518},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50177,"byte_end":50197,"line_start":1218,"line_end":1218,"column_start":5,"column_end":25},"name":"DW_OP_GNU_deref_type","qualname":"::constants::DW_OP_GNU_deref_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6519},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50210,"byte_end":50227,"line_start":1219,"line_end":1219,"column_start":5,"column_end":22},"name":"DW_OP_GNU_convert","qualname":"::constants::DW_OP_GNU_convert","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6520},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50240,"byte_end":50261,"line_start":1220,"line_end":1220,"column_start":5,"column_end":26},"name":"DW_OP_GNU_reinterpret","qualname":"::constants::DW_OP_GNU_reinterpret","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6521},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50274,"byte_end":50297,"line_start":1221,"line_end":1221,"column_start":5,"column_end":28},"name":"DW_OP_GNU_parameter_ref","qualname":"::constants::DW_OP_GNU_parameter_ref","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6568},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50609,"byte_end":50615,"line_start":1232,"line_end":1232,"column_start":1,"column_end":7},"name":"DwEhPe","qualname":"::constants::DwEhPe","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pointer encoding used by `.eh_frame`.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6548},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50722,"byte_end":50738,"line_start":1236,"line_end":1236,"column_start":5,"column_end":21},"name":"DW_EH_PE_uleb128","qualname":"::constants::DW_EH_PE_uleb128","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6549},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50781,"byte_end":50796,"line_start":1238,"line_end":1238,"column_start":5,"column_end":20},"name":"DW_EH_PE_udata2","qualname":"::constants::DW_EH_PE_udata2","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6550},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50839,"byte_end":50854,"line_start":1240,"line_end":1240,"column_start":5,"column_end":20},"name":"DW_EH_PE_udata4","qualname":"::constants::DW_EH_PE_udata4","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6551},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50898,"byte_end":50913,"line_start":1242,"line_end":1242,"column_start":5,"column_end":20},"name":"DW_EH_PE_udata8","qualname":"::constants::DW_EH_PE_udata8","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6552},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":50987,"byte_end":51003,"line_start":1244,"line_end":1244,"column_start":5,"column_end":21},"name":"DW_EH_PE_sleb128","qualname":"::constants::DW_EH_PE_sleb128","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6553},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":51044,"byte_end":51059,"line_start":1246,"line_end":1246,"column_start":5,"column_end":20},"name":"DW_EH_PE_sdata2","qualname":"::constants::DW_EH_PE_sdata2","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6554},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":51101,"byte_end":51116,"line_start":1248,"line_end":1248,"column_start":5,"column_end":20},"name":"DW_EH_PE_sdata4","qualname":"::constants::DW_EH_PE_sdata4","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6555},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":51159,"byte_end":51174,"line_start":1250,"line_end":1250,"column_start":5,"column_end":20},"name":"DW_EH_PE_sdata8","qualname":"::constants::DW_EH_PE_sdata8","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6556},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":51301,"byte_end":51315,"line_start":1255,"line_end":1255,"column_start":5,"column_end":19},"name":"DW_EH_PE_pcrel","qualname":"::constants::DW_EH_PE_pcrel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6557},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":51390,"byte_end":51406,"line_start":1257,"line_end":1257,"column_start":5,"column_end":21},"name":"DW_EH_PE_textrel","qualname":"::constants::DW_EH_PE_textrel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6558},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":51497,"byte_end":51513,"line_start":1259,"line_end":1259,"column_start":5,"column_end":21},"name":"DW_EH_PE_datarel","qualname":"::constants::DW_EH_PE_datarel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6559},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":51583,"byte_end":51599,"line_start":1261,"line_end":1261,"column_start":5,"column_end":21},"name":"DW_EH_PE_funcrel","qualname":"::constants::DW_EH_PE_funcrel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6560},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":51669,"byte_end":51685,"line_start":1263,"line_end":1263,"column_start":5,"column_end":21},"name":"DW_EH_PE_aligned","qualname":"::constants::DW_EH_PE_aligned","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6561},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":51997,"byte_end":52014,"line_start":1271,"line_end":1271,"column_start":5,"column_end":22},"name":"DW_EH_PE_indirect","qualname":"::constants::DW_EH_PE_indirect","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6562},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52173,"byte_end":52188,"line_start":1277,"line_end":1277,"column_start":5,"column_end":20},"name":"DW_EH_PE_absptr","qualname":"::constants::DW_EH_PE_absptr","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6563},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52242,"byte_end":52255,"line_start":1279,"line_end":1279,"column_start":5,"column_end":18},"name":"DW_EH_PE_omit","qualname":"::constants::DW_EH_PE_omit","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52478,"byte_end":52484,"line_start":1290,"line_end":1290,"column_start":12,"column_end":18},"name":"format","qualname":"<DwEhPe>::format","value":"fn format(Self) -> DwEhPe","parent":null,"children":[],"decl_id":null,"docs":" Get the pointer encoding's format.\n","sig":null,"attributes":[{"value":"/ Get the pointer encoding's format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52414,"byte_end":52452,"line_start":1288,"line_end":1288,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52457,"byte_end":52466,"line_start":1289,"line_end":1289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52629,"byte_end":52640,"line_start":1296,"line_end":1296,"column_start":12,"column_end":23},"name":"application","qualname":"<DwEhPe>::application","value":"fn application(Self) -> DwEhPe","parent":null,"children":[],"decl_id":null,"docs":" Get the pointer encoding's application.\n","sig":null,"attributes":[{"value":"/ Get the pointer encoding's application.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52560,"byte_end":52603,"line_start":1294,"line_end":1294,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52608,"byte_end":52617,"line_start":1295,"line_end":1295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52796,"byte_end":52805,"line_start":1302,"line_end":1302,"column_start":12,"column_end":21},"name":"is_absent","qualname":"<DwEhPe>::is_absent","value":"fn is_absent(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this encoding the absent pointer encoding?\n","sig":null,"attributes":[{"value":"/ Is this encoding the absent pointer encoding?","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52721,"byte_end":52770,"line_start":1300,"line_end":1300,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52775,"byte_end":52784,"line_start":1301,"line_end":1301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":53024,"byte_end":53035,"line_start":1309,"line_end":1309,"column_start":12,"column_end":23},"name":"is_indirect","qualname":"<DwEhPe>::is_indirect","value":"fn is_indirect(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this coding indirect? If so, its encoded value is the address of the\n real pointer result, not the pointer result itself.\n","sig":null,"attributes":[{"value":"/ Is this coding indirect? If so, its encoded value is the address of the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52863,"byte_end":52938,"line_start":1306,"line_end":1306,"column_start":5,"column_end":80}},{"value":"/ real pointer result, not the pointer result itself.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52943,"byte_end":52998,"line_start":1307,"line_end":1307,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":53003,"byte_end":53012,"line_start":1308,"line_end":1308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":53161,"byte_end":53178,"line_start":1314,"line_end":1314,"column_start":12,"column_end":29},"name":"is_valid_encoding","qualname":"<DwEhPe>::is_valid_encoding","value":"fn is_valid_encoding(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a known, valid pointer encoding?\n","sig":null,"attributes":[{"value":"/ Is this a known, valid pointer encoding?","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":53105,"byte_end":53149,"line_start":1313,"line_end":1313,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55219,"byte_end":55228,"line_start":7,"line_end":7,"column_start":11,"column_end":20},"name":"Endianity","qualname":"::endianity::Endianity","value":"Endianity: Debug + Default + Clone + Copy + PartialEq + Eq","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"decl_id":null,"docs":" A trait describing the endianity of some buffer.\n","sig":null,"attributes":[{"value":"/ A trait describing the endianity of some buffer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55156,"byte_end":55208,"line_start":6,"line_end":6,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55334,"byte_end":55347,"line_start":9,"line_end":9,"column_start":8,"column_end":21},"name":"is_big_endian","qualname":"::endianity::Endianity::is_big_endian","value":"fn is_big_endian(Self) -> bool","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Return true for big endian byte order.\n","sig":null,"attributes":[{"value":"/ Return true for big endian byte order.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55284,"byte_end":55326,"line_start":8,"line_end":8,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55435,"byte_end":55451,"line_start":13,"line_end":13,"column_start":8,"column_end":24},"name":"is_little_endian","qualname":"::endianity::Endianity::is_little_endian","value":"fn is_little_endian(Self) -> bool","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Return true for little endian byte order.\n","sig":null,"attributes":[{"value":"/ Return true for little endian byte order.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55368,"byte_end":55413,"line_start":11,"line_end":11,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55418,"byte_end":55427,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55649,"byte_end":55657,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::endianity::Endianity::read_u16","value":"fn read_u16(Self, &[u8]) -> u16","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Reads an unsigned 16 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads an unsigned 16 bit integer from `buf`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55509,"byte_end":55557,"line_start":17,"line_end":17,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55562,"byte_end":55565,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55570,"byte_end":55582,"line_start":19,"line_end":19,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55587,"byte_end":55590,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 2`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55595,"byte_end":55627,"line_start":21,"line_end":21,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55632,"byte_end":55641,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56035,"byte_end":56043,"line_start":38,"line_end":38,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::endianity::Endianity::read_u32","value":"fn read_u32(Self, &[u8]) -> u32","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Reads an unsigned 32 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads an unsigned 32 bit integer from `buf`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55895,"byte_end":55943,"line_start":32,"line_end":32,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55948,"byte_end":55951,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55956,"byte_end":55968,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55973,"byte_end":55976,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 4`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55981,"byte_end":56013,"line_start":36,"line_end":36,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56018,"byte_end":56027,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56421,"byte_end":56429,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::endianity::Endianity::read_u64","value":"fn read_u64(Self, &[u8]) -> u64","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Reads an unsigned 64 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads an unsigned 64 bit integer from `buf`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56281,"byte_end":56329,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56334,"byte_end":56337,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56342,"byte_end":56354,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56359,"byte_end":56362,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56367,"byte_end":56399,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56404,"byte_end":56413,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56819,"byte_end":56828,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"read_uint","qualname":"::endianity::Endianity::read_uint","value":"fn read_uint(&mut Self, &[u8]) -> u64","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Read an unsigned n-bytes integer u64.","sig":null,"attributes":[{"value":"/ Read an unsigned n-bytes integer u64.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56667,"byte_end":56708,"line_start":62,"line_end":62,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56713,"byte_end":56716,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56721,"byte_end":56733,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56738,"byte_end":56741,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 1` or `buf.len() > 8`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56746,"byte_end":56797,"line_start":66,"line_end":66,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":56802,"byte_end":56811,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57234,"byte_end":57242,"line_start":84,"line_end":84,"column_start":8,"column_end":16},"name":"read_i16","qualname":"::endianity::Endianity::read_i16","value":"fn read_i16(Self, &[u8]) -> i16","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Reads a signed 16 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads a signed 16 bit integer from `buf`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57097,"byte_end":57142,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57147,"byte_end":57150,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57155,"byte_end":57167,"line_start":80,"line_end":80,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57172,"byte_end":57175,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 2`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57180,"byte_end":57212,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57217,"byte_end":57226,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57452,"byte_end":57460,"line_start":94,"line_end":94,"column_start":8,"column_end":16},"name":"read_i32","qualname":"::endianity::Endianity::read_i32","value":"fn read_i32(Self, &[u8]) -> i32","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Reads a signed 32 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads a signed 32 bit integer from `buf`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57315,"byte_end":57360,"line_start":88,"line_end":88,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57365,"byte_end":57368,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57373,"byte_end":57385,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57390,"byte_end":57393,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 4`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57398,"byte_end":57430,"line_start":92,"line_end":92,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57435,"byte_end":57444,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57670,"byte_end":57678,"line_start":104,"line_end":104,"column_start":8,"column_end":16},"name":"read_i64","qualname":"::endianity::Endianity::read_i64","value":"fn read_i64(Self, &[u8]) -> i64","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Reads a signed 64 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads a signed 64 bit integer from `buf`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57533,"byte_end":57578,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57583,"byte_end":57586,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57591,"byte_end":57603,"line_start":100,"line_end":100,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57608,"byte_end":57611,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57616,"byte_end":57648,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57653,"byte_end":57662,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57895,"byte_end":57903,"line_start":114,"line_end":114,"column_start":8,"column_end":16},"name":"read_f32","qualname":"::endianity::Endianity::read_f32","value":"fn read_f32(Self, &[u8]) -> f32","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Reads a 32 bit floating point number from `buf`.","sig":null,"attributes":[{"value":"/ Reads a 32 bit floating point number from `buf`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57751,"byte_end":57803,"line_start":108,"line_end":108,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57808,"byte_end":57811,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57816,"byte_end":57828,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57833,"byte_end":57836,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57841,"byte_end":57873,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57878,"byte_end":57887,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58129,"byte_end":58137,"line_start":124,"line_end":124,"column_start":8,"column_end":16},"name":"read_f64","qualname":"::endianity::Endianity::read_f64","value":"fn read_f64(Self, &[u8]) -> f64","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Reads a 32 bit floating point number from `buf`.","sig":null,"attributes":[{"value":"/ Reads a 32 bit floating point number from `buf`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":57985,"byte_end":58037,"line_start":118,"line_end":118,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58042,"byte_end":58045,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58050,"byte_end":58062,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58067,"byte_end":58070,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58075,"byte_end":58107,"line_start":122,"line_end":122,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58112,"byte_end":58121,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58362,"byte_end":58371,"line_start":134,"line_end":134,"column_start":8,"column_end":17},"name":"write_u16","qualname":"::endianity::Endianity::write_u16","value":"fn write_u16(Self, &mut [u8], u16)","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer `n` to `buf`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer `n` to `buf`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58219,"byte_end":58270,"line_start":128,"line_end":128,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58275,"byte_end":58278,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58283,"byte_end":58295,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58300,"byte_end":58303,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 2`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58308,"byte_end":58340,"line_start":132,"line_end":132,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58345,"byte_end":58354,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58730,"byte_end":58739,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"write_u32","qualname":"::endianity::Endianity::write_u32","value":"fn write_u32(Self, &mut [u8], u32)","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer `n` to `buf`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer `n` to `buf`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58587,"byte_end":58638,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58643,"byte_end":58646,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58651,"byte_end":58663,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58668,"byte_end":58671,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 4`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58676,"byte_end":58708,"line_start":147,"line_end":147,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58713,"byte_end":58722,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59098,"byte_end":59107,"line_start":164,"line_end":164,"column_start":8,"column_end":17},"name":"write_u64","qualname":"::endianity::Endianity::write_u64","value":"fn write_u64(Self, &mut [u8], u64)","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer `n` to `buf`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer `n` to `buf`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":58955,"byte_end":59006,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59011,"byte_end":59014,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59019,"byte_end":59031,"line_start":160,"line_end":160,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59036,"byte_end":59039,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59044,"byte_end":59076,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59081,"byte_end":59090,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6591},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59481,"byte_end":59487,"line_start":178,"line_end":178,"column_start":5,"column_end":11},"name":"Little","qualname":"::endianity::RunTimeEndian::Little","value":"RunTimeEndian::Little","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" Little endian byte order.\n","sig":null,"attributes":[{"value":"/ Little endian byte order.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59447,"byte_end":59476,"line_start":177,"line_end":177,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6593},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59524,"byte_end":59527,"line_start":180,"line_end":180,"column_start":5,"column_end":8},"name":"Big","qualname":"::endianity::RunTimeEndian::Big","value":"RunTimeEndian::Big","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" Big endian byte order.\n","sig":null,"attributes":[{"value":"/ Big endian byte order.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59493,"byte_end":59519,"line_start":179,"line_end":179,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":6590},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59427,"byte_end":59440,"line_start":176,"line_end":176,"column_start":10,"column_end":23},"name":"RunTimeEndian","qualname":"::endianity::RunTimeEndian","value":"enum RunTimeEndian { Little, Big, }","parent":null,"children":[{"krate":0,"index":6591},{"krate":0,"index":6593}],"decl_id":null,"docs":" Byte order that is selectable at runtime.\n","sig":null,"attributes":[{"value":"/ Byte order that is selectable at runtime.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59321,"byte_end":59366,"line_start":174,"line_end":174,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59623,"byte_end":59630,"line_start":186,"line_end":186,"column_start":8,"column_end":15},"name":"default","qualname":"<RunTimeEndian as core::default::Default>::default","value":"fn default() -> RunTimeEndian","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[{"value":"cfg(target_endian = \"little\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59569,"byte_end":59601,"line_start":184,"line_end":184,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59606,"byte_end":59615,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59865,"byte_end":59878,"line_start":199,"line_end":199,"column_start":8,"column_end":21},"name":"is_big_endian","qualname":"<RunTimeEndian as endianity::Endianity>::is_big_endian","value":"fn is_big_endian(Self) -> bool","parent":{"krate":0,"index":57},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59848,"byte_end":59857,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6609},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60034,"byte_end":60046,"line_start":206,"line_end":206,"column_start":12,"column_end":24},"name":"LittleEndian","qualname":"::endianity::LittleEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little endian byte order.\n","sig":null,"attributes":[{"value":"/ Little endian byte order.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59942,"byte_end":59971,"line_start":204,"line_end":204,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60102,"byte_end":60109,"line_start":210,"line_end":210,"column_start":8,"column_end":15},"name":"default","qualname":"<LittleEndian as core::default::Default>::default","value":"fn default() -> LittleEndian","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60085,"byte_end":60094,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60215,"byte_end":60228,"line_start":217,"line_end":217,"column_start":8,"column_end":21},"name":"is_big_endian","qualname":"<LittleEndian as endianity::Endianity>::is_big_endian","value":"fn is_big_endian(Self) -> bool","parent":{"krate":0,"index":57},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60198,"byte_end":60207,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6625},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60357,"byte_end":60366,"line_start":224,"line_end":224,"column_start":12,"column_end":21},"name":"BigEndian","qualname":"::endianity::BigEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" Big endian byte order.\n","sig":null,"attributes":[{"value":"/ Big endian byte order.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60268,"byte_end":60294,"line_start":222,"line_end":222,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60419,"byte_end":60426,"line_start":228,"line_end":228,"column_start":8,"column_end":15},"name":"default","qualname":"<BigEndian as core::default::Default>::default","value":"fn default() -> BigEndian","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60402,"byte_end":60411,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60523,"byte_end":60536,"line_start":235,"line_end":235,"column_start":8,"column_end":21},"name":"is_big_endian","qualname":"<BigEndian as endianity::Endianity>::is_big_endian","value":"fn is_big_endian(Self) -> bool","parent":{"krate":0,"index":57},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60506,"byte_end":60515,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60667,"byte_end":60679,"line_start":242,"line_end":242,"column_start":10,"column_end":22},"name":"NativeEndian","qualname":"::endianity::NativeEndian","value":"LittleEndian","parent":null,"children":[],"decl_id":null,"docs":" The native endianity for the target platform.\n","sig":null,"attributes":[{"value":"/ The native endianity for the target platform.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60575,"byte_end":60624,"line_start":240,"line_end":240,"column_start":1,"column_end":50}},{"value":"cfg(target_endian = \"little\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60625,"byte_end":60657,"line_start":241,"line_end":241,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60788,"byte_end":60800,"line_start":247,"line_end":247,"column_start":11,"column_end":23},"name":"NativeEndian","qualname":"::endianity::NativeEndian","value":"LittleEndian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_endian = \"little\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60697,"byte_end":60729,"line_start":244,"line_end":244,"column_start":1,"column_end":33}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60730,"byte_end":60762,"line_start":245,"line_end":245,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"leb128","qualname":"::leb128","value":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":138}],"decl_id":null,"docs":" Read and write DWARF's \"Little Endian Base 128\" (LEB128) variable length\n integer encoding.","sig":null,"attributes":[{"value":"/ Read and write DWARF's \"Little Endian Base 128\" (LEB128) variable length","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61074,"byte_end":61150,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ integer encoding.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61151,"byte_end":61172,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61173,"byte_end":61176,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ The implementation is a direct translation of the psuedocode in the DWARF 4","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61177,"byte_end":61256,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ standard's appendix C.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61257,"byte_end":61283,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61284,"byte_end":61287,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Read and write signed integers:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61288,"byte_end":61323,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61324,"byte_end":61327,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61328,"byte_end":61335,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"read\", feature = \"write\"))] {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61336,"byte_end":61392,"line_start":10,"line_end":10,"column_start":1,"column_end":57}},{"value":"/ use gimli::{EndianSlice, NativeEndian, leb128};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61393,"byte_end":61444,"line_start":11,"line_end":11,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61445,"byte_end":61448,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61449,"byte_end":61477,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61478,"byte_end":61481,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ // Write to anything that implements `std::io::Write`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61482,"byte_end":61540,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61541,"byte_end":61546,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/     let mut writable = &mut buf[..];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61547,"byte_end":61587,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/     leb128::write::signed(&mut writable, -12345).expect(\"Should write number\");","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61588,"byte_end":61671,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61672,"byte_end":61677,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61678,"byte_end":61681,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // Read from anything that implements `gimli::Reader`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61682,"byte_end":61740,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/ let mut readable = EndianSlice::new(&buf[..], NativeEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61741,"byte_end":61805,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/ let val = leb128::read::signed(&mut readable).expect(\"Should read number\");","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61806,"byte_end":61885,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(val, -12345);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61886,"byte_end":61914,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61915,"byte_end":61922,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61923,"byte_end":61930,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61931,"byte_end":61934,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Or read and write unsigned integers:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61935,"byte_end":61975,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61976,"byte_end":61979,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61980,"byte_end":61987,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"read\", feature = \"write\"))] {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":61988,"byte_end":62044,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/ use gimli::{EndianSlice, NativeEndian, leb128};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62045,"byte_end":62096,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62097,"byte_end":62100,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62101,"byte_end":62129,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62130,"byte_end":62133,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62134,"byte_end":62139,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/     let mut writable = &mut buf[..];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62140,"byte_end":62180,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/     leb128::write::unsigned(&mut writable, 98765).expect(\"Should write number\");","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62181,"byte_end":62265,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62266,"byte_end":62271,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62272,"byte_end":62275,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut readable = EndianSlice::new(&buf[..], NativeEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62276,"byte_end":62340,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ let val = leb128::read::unsigned(&mut readable).expect(\"Should read number\");","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62341,"byte_end":62422,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(val, 98765);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62423,"byte_end":62450,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62451,"byte_end":62458,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62459,"byte_end":62466,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62912,"byte_end":62916,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"name":"read","qualname":"::leb128::read","value":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136}],"decl_id":null,"docs":" A module for reading signed and unsigned integers that have been LEB128\n encoded.\n","sig":null,"attributes":[{"value":"/ A module for reading signed and unsigned integers that have been LEB128","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62790,"byte_end":62865,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ encoded.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62866,"byte_end":62878,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"cfg(feature = \"read\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":62879,"byte_end":62903,"line_start":65,"line_end":65,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":63156,"byte_end":63164,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"unsigned","qualname":"::leb128::read::unsigned","value":"fn unsigned<R>(&mut R) -> Result<u64> where R: Reader","parent":null,"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 number from the given `Reader` and\n return it or an error if reading failed.\n","sig":null,"attributes":[{"value":"/ Read an unsigned LEB128 number from the given `Reader` and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":63033,"byte_end":63095,"line_start":70,"line_end":70,"column_start":5,"column_end":67}},{"value":"/ return it or an error if reading failed.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":63100,"byte_end":63144,"line_start":71,"line_end":71,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":63798,"byte_end":63801,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"u16","qualname":"::leb128::read::u16","value":"fn u16<R>(&mut R) -> Result<u16> where R: Reader","parent":null,"children":[],"decl_id":null,"docs":" Read an LEB128 u16 from the given `Reader` and\n return it or an error if reading failed.\n","sig":null,"attributes":[{"value":"/ Read an LEB128 u16 from the given `Reader` and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":63687,"byte_end":63737,"line_start":93,"line_end":93,"column_start":5,"column_end":55}},{"value":"/ return it or an error if reading failed.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":63742,"byte_end":63786,"line_start":94,"line_end":94,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":64502,"byte_end":64508,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"signed","qualname":"::leb128::read::signed","value":"fn signed<R>(&mut R) -> Result<i64> where R: Reader","parent":null,"children":[],"decl_id":null,"docs":" Read a signed LEB128 number from the given `Reader` and\n return it or an error if reading failed.\n","sig":null,"attributes":[{"value":"/ Read a signed LEB128 number from the given `Reader` and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":64382,"byte_end":64441,"line_start":116,"line_end":116,"column_start":5,"column_end":64}},{"value":"/ return it or an error if reading failed.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":64446,"byte_end":64490,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":65306,"byte_end":65311,"line_start":150,"line_end":150,"column_start":9,"column_end":14},"name":"write","qualname":"::leb128::write","value":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":154}],"decl_id":null,"docs":" A module for writing integers encoded as LEB128.\n","sig":null,"attributes":[{"value":"/ A module for writing integers encoded as LEB128.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":65219,"byte_end":65271,"line_start":148,"line_end":148,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"write\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":65272,"byte_end":65297,"line_start":149,"line_end":149,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":65587,"byte_end":65595,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"unsigned","qualname":"::leb128::write::unsigned","value":"fn unsigned<W>(&mut W, u64) -> Result<usize, io::Error> where W: io::Write","parent":null,"children":[],"decl_id":null,"docs":" Write the given unsigned number using the LEB128 encoding to the given\n `std::io::Write`able. Returns the number of bytes written to `w`, or an\n error if writing failed.\n","sig":null,"attributes":[{"value":"/ Write the given unsigned number using the LEB128 encoding to the given","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":65388,"byte_end":65462,"line_start":154,"line_end":154,"column_start":5,"column_end":79}},{"value":"/ `std::io::Write`able. Returns the number of bytes written to `w`, or an","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":65467,"byte_end":65542,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ error if writing failed.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":65547,"byte_end":65575,"line_start":156,"line_end":156,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":66245,"byte_end":66257,"line_start":181,"line_end":181,"column_start":12,"column_end":24},"name":"uleb128_size","qualname":"::leb128::write::uleb128_size","value":"fn uleb128_size(u64) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the LEB128 encoding of the given unsigned number.\n","sig":null,"attributes":[{"value":"/ Return the size of the LEB128 encoding of the given unsigned number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":66161,"byte_end":66233,"line_start":180,"line_end":180,"column_start":5,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":66657,"byte_end":66663,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"signed","qualname":"::leb128::write::signed","value":"fn signed<W>(&mut W, i64) -> Result<usize, io::Error> where W: io::Write","parent":null,"children":[],"decl_id":null,"docs":" Write the given signed number using the LEB128 encoding to the given\n `std::io::Write`able. Returns the number of bytes written to `w`, or an\n error if writing failed.\n","sig":null,"attributes":[{"value":"/ Write the given signed number using the LEB128 encoding to the given","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":66460,"byte_end":66532,"line_start":192,"line_end":192,"column_start":5,"column_end":77}},{"value":"/ `std::io::Write`able. Returns the number of bytes written to `w`, or an","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":66537,"byte_end":66612,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ error if writing failed.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":66617,"byte_end":66645,"line_start":194,"line_end":194,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":67513,"byte_end":67525,"line_start":225,"line_end":225,"column_start":12,"column_end":24},"name":"sleb128_size","qualname":"::leb128::write::sleb128_size","value":"fn sleb128_size(i64) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the LEB128 encoding of the given signed number.\n","sig":null,"attributes":[{"value":"/ Return the size of the LEB128 encoding of the given signed number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\leb128.rs","byte_start":67431,"byte_end":67501,"line_start":224,"line_end":224,"column_start":5,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1926},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":9289},{"krate":0,"index":9440},{"krate":0,"index":9442},{"krate":0,"index":9444},{"krate":0,"index":9445},{"krate":0,"index":9446},{"krate":0,"index":9449},{"krate":0,"index":9450},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2900},{"krate":0,"index":2902},{"krate":0,"index":2912}],"decl_id":null,"docs":" Read DWARF debugging information.","sig":null,"attributes":[{"value":"cfg(feature = \"read\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1951,"byte_end":1975,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/ Read DWARF debugging information.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79187,"byte_end":79224,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79225,"byte_end":79228,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [Example Usage](#example-usage)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79229,"byte_end":79266,"line_start":3,"line_end":3,"column_start":1,"column_end":38}},{"value":"/ * [API Structure](#api-structure)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79267,"byte_end":79304,"line_start":4,"line_end":4,"column_start":1,"column_end":38}},{"value":"/ * [Using with `FallibleIterator`](#using-with-fallibleiterator)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79305,"byte_end":79372,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79373,"byte_end":79376,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79377,"byte_end":79397,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79398,"byte_end":79401,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Print out all of the functions in the debuggee program:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79402,"byte_end":79461,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79462,"byte_end":79465,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79466,"byte_end":79484,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/ # fn example() -> Result<(), gimli::Error> {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79485,"byte_end":79533,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ # type R = gimli::EndianSlice<'static, gimli::LittleEndian>;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79534,"byte_end":79598,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/ # let get_file_section_reader = |name| -> Result<R, gimli::Error> { unimplemented!() };","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79599,"byte_end":79690,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"/ # let get_sup_file_section_reader = |name| -> Result<R, gimli::Error> { unimplemented!() };","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79691,"byte_end":79786,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ // Read the DWARF sections with whatever object loader you're using.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79787,"byte_end":79859,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ // These closures should return a `Reader` instance (e.g. `EndianSlice`).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79860,"byte_end":79937,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ let loader = |section: gimli::SectionId| { get_file_section_reader(section.name()) };","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":79938,"byte_end":80027,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/ let sup_loader = |section: gimli::SectionId| { get_sup_file_section_reader(section.name()) };","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80028,"byte_end":80125,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ let dwarf = gimli::Dwarf::load(loader, sup_loader)?;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80126,"byte_end":80182,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80183,"byte_end":80186,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Iterate over all compilation units.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80187,"byte_end":80229,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ let mut iter = dwarf.units();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80230,"byte_end":80263,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/ while let Some(header) = iter.next()? {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80264,"byte_end":80307,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/     // Parse the abbreviations and other information for this compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80308,"byte_end":80391,"line_start":25,"line_end":25,"column_start":1,"column_end":84}},{"value":"/     let unit = dwarf.unit(header)?;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80392,"byte_end":80431,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80432,"byte_end":80435,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     // Iterate over all of this compilation unit's entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80436,"byte_end":80499,"line_start":28,"line_end":28,"column_start":1,"column_end":64}},{"value":"/     let mut entries = unit.entries();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80500,"byte_end":80541,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/     while let Some((_, entry)) = entries.next_dfs()? {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80542,"byte_end":80600,"line_start":30,"line_end":30,"column_start":1,"column_end":59}},{"value":"/         // If we find an entry for a function, print it.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80601,"byte_end":80661,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/         if entry.tag() == gimli::DW_TAG_subprogram {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80662,"byte_end":80718,"line_start":32,"line_end":32,"column_start":1,"column_end":57}},{"value":"/             println!(\"Found a function: {:?}\", entry);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80719,"byte_end":80777,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80778,"byte_end":80791,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80792,"byte_end":80801,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80802,"byte_end":80807,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80808,"byte_end":80828,"line_start":37,"line_end":37,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80829,"byte_end":80836,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80837,"byte_end":80844,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80845,"byte_end":80848,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Full example programs:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80849,"byte_end":80875,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80876,"byte_end":80879,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/   * [A simple parser](https://github.com/gimli-rs/gimli/blob/master/examples/simple.rs)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80880,"byte_end":80971,"line_start":43,"line_end":43,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80972,"byte_end":80975,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/   * [A `dwarfdump`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80976,"byte_end":80998,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/     clone](https://github.com/gimli-rs/gimli/blob/master/examples/dwarfdump.rs)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":80999,"byte_end":81082,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81083,"byte_end":81086,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/   * [An `addr2line` clone](https://github.com/gimli-rs/addr2line)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81087,"byte_end":81156,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81157,"byte_end":81160,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/   * [`ddbug`](https://github.com/philipc/ddbug), a utility giving insight into","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81161,"byte_end":81243,"line_start":50,"line_end":50,"column_start":1,"column_end":83}},{"value":"/     code generation by making debugging information readable","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81244,"byte_end":81308,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81309,"byte_end":81312,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/   * [`dwprod`](https://github.com/fitzgen/dwprod), a tiny utility to list the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81313,"byte_end":81394,"line_start":53,"line_end":53,"column_start":1,"column_end":82}},{"value":"/     compilers used to create each compilation unit within a shared library or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81395,"byte_end":81476,"line_start":54,"line_end":54,"column_start":1,"column_end":82}},{"value":"/     executable (via `DW_AT_producer`)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81477,"byte_end":81518,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81519,"byte_end":81522,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/   * [`dwarf-validate`](http://github.com/gimli-rs/gimli/blob/master/examples/dwarf-validate.rs),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81523,"byte_end":81623,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/     a program to validate the integrity of some DWARF and its references","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81624,"byte_end":81700,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/     between sections and compilation units.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81701,"byte_end":81748,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81749,"byte_end":81752,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## API Structure","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81753,"byte_end":81773,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81774,"byte_end":81777,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ * Basic familiarity with DWARF is assumed.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81778,"byte_end":81824,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81825,"byte_end":81828,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ * The [`Dwarf`](./struct.Dwarf.html) type contains the commonly used DWARF","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81829,"byte_end":81907,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/ sections. It has methods that simplify access to debugging data that spans","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81908,"byte_end":81986,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ multiple sections. Use of this type is optional, but recommended.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":81987,"byte_end":82056,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82057,"byte_end":82060,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ * Each section gets its own type. Consider these types the entry points to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82061,"byte_end":82139,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ the library:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82140,"byte_end":82156,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82157,"byte_end":82160,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/   * [`DebugAbbrev`](./struct.DebugAbbrev.html): The `.debug_abbrev` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82161,"byte_end":82241,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82242,"byte_end":82245,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/   * [`DebugAddr`](./struct.DebugAddr.html): The `.debug_addr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82246,"byte_end":82320,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82321,"byte_end":82324,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/   * [`DebugAranges`](./struct.DebugAranges.html): The `.debug_aranges`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82325,"byte_end":82399,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/   section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82400,"byte_end":82414,"line_start":77,"line_end":77,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82415,"byte_end":82418,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/   * [`DebugFrame`](./struct.DebugFrame.html): The `.debug_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82419,"byte_end":82496,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82497,"byte_end":82500,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/   * [`DebugInfo`](./struct.DebugInfo.html): The `.debug_info` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82501,"byte_end":82575,"line_start":81,"line_end":81,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82576,"byte_end":82579,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/   * [`DebugLine`](./struct.DebugLine.html): The `.debug_line` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82580,"byte_end":82654,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82655,"byte_end":82658,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/   * [`DebugLineStr`](./struct.DebugLineStr.html): The `.debug_line_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82659,"byte_end":82743,"line_start":85,"line_end":85,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82744,"byte_end":82747,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/   * [`DebugLoc`](./struct.DebugLoc.html): The `.debug_loc` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82748,"byte_end":82819,"line_start":87,"line_end":87,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82820,"byte_end":82823,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/   * [`DebugLocLists`](./struct.DebugLocLists.html): The `.debug_loclists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82824,"byte_end":82910,"line_start":89,"line_end":89,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82911,"byte_end":82914,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/   * [`DebugPubNames`](./struct.DebugPubNames.html): The `.debug_pubnames`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82915,"byte_end":82992,"line_start":91,"line_end":91,"column_start":1,"column_end":78}},{"value":"/   section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":82993,"byte_end":83007,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83008,"byte_end":83011,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/   * [`DebugPubTypes`](./struct.DebugPubTypes.html): The `.debug_pubtypes`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83012,"byte_end":83089,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/   section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83090,"byte_end":83104,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83105,"byte_end":83108,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/   * [`DebugRanges`](./struct.DebugRanges.html): The `.debug_ranges` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83109,"byte_end":83189,"line_start":97,"line_end":97,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83190,"byte_end":83193,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/   * [`DebugRngLists`](./struct.DebugRngLists.html): The `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83194,"byte_end":83280,"line_start":99,"line_end":99,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83281,"byte_end":83284,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/   * [`DebugStr`](./struct.DebugStr.html): The `.debug_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83285,"byte_end":83356,"line_start":101,"line_end":101,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83357,"byte_end":83360,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/   * [`DebugStrOffsets`](./struct.DebugStrOffsets.html): The `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83361,"byte_end":83454,"line_start":103,"line_end":103,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83455,"byte_end":83458,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/   * [`DebugTypes`](./struct.DebugTypes.html): The `.debug_types` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83459,"byte_end":83536,"line_start":105,"line_end":105,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83537,"byte_end":83540,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/   * [`EhFrame`](./struct.EhFrame.html): The `.eh_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83541,"byte_end":83609,"line_start":107,"line_end":107,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83610,"byte_end":83613,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/   * [`EhFrameHdr`](./struct.EhFrameHdr.html): The `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83614,"byte_end":83692,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83693,"byte_end":83696,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ * Each section type exposes methods for accessing the debugging data encoded","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83697,"byte_end":83777,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ in that section. For example, the [`DebugInfo`](./struct.DebugInfo.html)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83778,"byte_end":83854,"line_start":112,"line_end":112,"column_start":1,"column_end":77}},{"value":"/ struct has the [`units`](./struct.DebugInfo.html#method.units) method for","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83855,"byte_end":83932,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ iterating over the compilation units defined within it.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83933,"byte_end":83992,"line_start":114,"line_end":114,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83993,"byte_end":83996,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ * Offsets into a section are strongly typed: an offset into `.debug_info` is","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":83997,"byte_end":84077,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ the [`DebugInfoOffset`](./struct.DebugInfoOffset.html) type. It cannot be","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84078,"byte_end":84155,"line_start":117,"line_end":117,"column_start":1,"column_end":78}},{"value":"/ used to index into the [`DebugLine`](./struct.DebugLine.html) type because","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84156,"byte_end":84234,"line_start":118,"line_end":118,"column_start":1,"column_end":79}},{"value":"/ `DebugLine` represents the `.debug_line` section. There are similar types","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84235,"byte_end":84312,"line_start":119,"line_end":119,"column_start":1,"column_end":78}},{"value":"/ for offsets relative to a compilation unit rather than a section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84313,"byte_end":84382,"line_start":120,"line_end":120,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84383,"byte_end":84386,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ## Using with `FallibleIterator`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84387,"byte_end":84423,"line_start":122,"line_end":122,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84424,"byte_end":84427,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The standard library's `Iterator` trait and related APIs do not play well","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84428,"byte_end":84505,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/ with iterators where the `next` operation is fallible. One can make the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84506,"byte_end":84581,"line_start":125,"line_end":125,"column_start":1,"column_end":76}},{"value":"/ `Iterator`'s associated `Item` type be a `Result<T, E>`, however the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84582,"byte_end":84654,"line_start":126,"line_end":126,"column_start":1,"column_end":73}},{"value":"/ provided methods cannot gracefully handle the case when an `Err` is","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84655,"byte_end":84726,"line_start":127,"line_end":127,"column_start":1,"column_end":72}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84727,"byte_end":84740,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84741,"byte_end":84744,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This situation led to the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84745,"byte_end":84774,"line_start":130,"line_end":130,"column_start":1,"column_end":30}},{"value":"/ [`fallible-iterator`](https://crates.io/crates/fallible-iterator) crate's","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84775,"byte_end":84852,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"/ existence. You can read more of the rationale for its existence in its","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84853,"byte_end":84927,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ docs. The crate provides the helpers you have come to expect (eg `map`,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":84928,"byte_end":85003,"line_start":133,"line_end":133,"column_start":1,"column_end":76}},{"value":"/ `filter`, etc) for iterators that can fail.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85004,"byte_end":85051,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85052,"byte_end":85055,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ `gimli`'s many lazy parsing iterators are a perfect match for the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85056,"byte_end":85125,"line_start":136,"line_end":136,"column_start":1,"column_end":70}},{"value":"/ `fallible-iterator` crate's `FallibleIterator` trait because parsing is not","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85126,"byte_end":85205,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ done eagerly. Parse errors later in the input might only be discovered after","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85206,"byte_end":85286,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ having iterated through many items.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85287,"byte_end":85326,"line_start":139,"line_end":139,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85327,"byte_end":85330,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ To use `gimli` iterators with `FallibleIterator`, import the crate and trait","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85331,"byte_end":85411,"line_start":141,"line_end":141,"column_start":1,"column_end":81}},{"value":"/ into your code:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85412,"byte_end":85431,"line_start":142,"line_end":142,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85432,"byte_end":85435,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85436,"byte_end":85443,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"fallible-iterator\")]","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85444,"byte_end":85487,"line_start":145,"line_end":145,"column_start":1,"column_end":44}},{"value":"/ # fn foo() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85488,"byte_end":85504,"line_start":146,"line_end":146,"column_start":1,"column_end":17}},{"value":"/ // Use the `FallibleIterator` trait so its methods are in scope!","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85505,"byte_end":85573,"line_start":147,"line_end":147,"column_start":1,"column_end":69}},{"value":"/ use fallible_iterator::FallibleIterator;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85574,"byte_end":85618,"line_start":148,"line_end":148,"column_start":1,"column_end":45}},{"value":"/ use gimli::{DebugAranges, EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85619,"byte_end":85676,"line_start":149,"line_end":149,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85677,"byte_end":85680,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ fn find_sum_of_address_range_lengths(aranges: DebugAranges<EndianSlice<LittleEndian>>)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85681,"byte_end":85771,"line_start":151,"line_end":151,"column_start":1,"column_end":91}},{"value":"/     -> gimli::Result<u64>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85772,"byte_end":85801,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85802,"byte_end":85807,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/     // `DebugAranges::items` returns a `FallibleIterator`!","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85808,"byte_end":85870,"line_start":154,"line_end":154,"column_start":1,"column_end":63}},{"value":"/     aranges.items()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85871,"byte_end":85894,"line_start":155,"line_end":155,"column_start":1,"column_end":24}},{"value":"/         // `map` is provided by `FallibleIterator`!","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85895,"byte_end":85950,"line_start":156,"line_end":156,"column_start":1,"column_end":56}},{"value":"/         .map(|arange| Ok(arange.length()))","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85951,"byte_end":85997,"line_start":157,"line_end":157,"column_start":1,"column_end":47}},{"value":"/         // `fold` is provided by `FallibleIterator`!","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":85998,"byte_end":86054,"line_start":158,"line_end":158,"column_start":1,"column_end":57}},{"value":"/         .fold(0, |sum, len| Ok(sum + len))","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86055,"byte_end":86101,"line_start":159,"line_end":159,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86102,"byte_end":86107,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86108,"byte_end":86115,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86116,"byte_end":86134,"line_start":162,"line_end":162,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":86135,"byte_end":86142,"line_start":163,"line_end":163,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6641},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109192,"byte_end":109201,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DebugAddr","qualname":"::read::addr::DebugAddr","value":"DebugAddr {  }","parent":null,"children":[{"krate":0,"index":6643}],"decl_id":null,"docs":" The raw contents of the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ The raw contents of the `.debug_addr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109091,"byte_end":109141,"line_start":4,"line_end":4,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110144,"byte_end":110155,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"get_address","qualname":"<DebugAddr<R>>::get_address","value":"fn get_address(&Self, u8, DebugAddrBase<R::Offset>, DebugAddrIndex<R::Offset>)\n-> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address at the given `base` and `index`.","sig":null,"attributes":[{"value":"/ Returns the address at the given `base` and `index`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109400,"byte_end":109456,"line_start":14,"line_end":14,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109461,"byte_end":109464,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ A set of addresses in the `.debug_addr` section consists of a header","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109469,"byte_end":109541,"line_start":16,"line_end":16,"column_start":5,"column_end":77}},{"value":"/ followed by a series of addresses.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109546,"byte_end":109584,"line_start":17,"line_end":17,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109589,"byte_end":109592,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The `base` must be the `DW_AT_addr_base` value from the compilation unit DIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109597,"byte_end":109678,"line_start":19,"line_end":19,"column_start":5,"column_end":86}},{"value":"/ This is an offset that points to the first address following the header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109683,"byte_end":109759,"line_start":20,"line_end":20,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109764,"byte_end":109767,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The `index` is the value of a `DW_FORM_addrx` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109772,"byte_end":109832,"line_start":22,"line_end":22,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109837,"byte_end":109840,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The `address_size` must be the size of the address for the compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109845,"byte_end":109925,"line_start":24,"line_end":24,"column_start":5,"column_end":85}},{"value":"/ This value must also match the header. However, note that we do not parse the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109930,"byte_end":110011,"line_start":25,"line_end":25,"column_start":5,"column_end":86}},{"value":"/ header to validate this, since locating the header is unreliable, and the GNU","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110016,"byte_end":110097,"line_start":26,"line_end":26,"column_start":5,"column_end":86}},{"value":"/ extensions do not emit it.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110102,"byte_end":110132,"line_start":27,"line_end":27,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":111198,"byte_end":111204,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugAddr<T>>::borrow","value":"fn borrow<'a, F, R>(&'a Self, F) -> DebugAddr<R> where F: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugAddr` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugAddr` section that references the data in `self`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110568,"byte_end":110636,"line_start":44,"line_end":44,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110641,"byte_end":110644,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110649,"byte_end":110714,"line_start":46,"line_end":46,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110719,"byte_end":110722,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110727,"byte_end":110747,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110752,"byte_end":110755,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110760,"byte_end":110778,"line_start":50,"line_end":50,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110783,"byte_end":110828,"line_start":51,"line_end":51,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110833,"byte_end":110917,"line_start":52,"line_end":52,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugAddr<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110922,"byte_end":110988,"line_start":53,"line_end":53,"column_start":5,"column_end":71}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110993,"byte_end":111040,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":111045,"byte_end":111095,"line_start":55,"line_end":55,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":111100,"byte_end":111162,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":111167,"byte_end":111174,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":111179,"byte_end":111186,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":111393,"byte_end":111395,"line_start":68,"line_end":68,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugAddr<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":111456,"byte_end":111462,"line_start":72,"line_end":72,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugAddr<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":111551,"byte_end":111555,"line_start":78,"line_end":78,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugAddr<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6655},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114520,"byte_end":114530,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"DebugFrame","qualname":"::read::cfi::DebugFrame","value":"DebugFrame {  }","parent":null,"children":[{"krate":0,"index":6657},{"krate":0,"index":6658},{"krate":0,"index":6659}],"decl_id":null,"docs":" `DebugFrame` contains the `.debug_frame` section's frame unwinding\n information required to unwind to and recover registers from older frames on\n the stack. For example, this is useful for a debugger that wants to print\n locals in a backtrace.","sig":null,"attributes":[{"value":"/ `DebugFrame` contains the `.debug_frame` section's frame unwinding","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":113715,"byte_end":113785,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ information required to unwind to and recover registers from older frames on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":113786,"byte_end":113866,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ the stack. For example, this is useful for a debugger that wants to print","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":113867,"byte_end":113944,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ locals in a backtrace.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":113945,"byte_end":113971,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":113972,"byte_end":113975,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Most interesting methods are defined in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":113976,"byte_end":114023,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ [`UnwindSection`](trait.UnwindSection.html) trait.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114024,"byte_end":114078,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114079,"byte_end":114082,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ### Differences between `.debug_frame` and `.eh_frame`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114083,"byte_end":114141,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114142,"byte_end":114145,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ While the `.debug_frame` section's information has a lot of overlap with the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114146,"byte_end":114226,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ `.eh_frame` section's information, the `.eh_frame` information tends to only","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114227,"byte_end":114307,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ encode the subset of information needed for exception handling. Often, only","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114308,"byte_end":114387,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ one of `.eh_frame` or `.debug_frame` will be present in an object file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114388,"byte_end":114463,"line_start":26,"line_end":26,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114817,"byte_end":114833,"line_start":39,"line_end":39,"column_start":12,"column_end":28},"name":"set_address_size","qualname":"<DebugFrame<R>>::set_address_size","value":"fn set_address_size(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a target address in bytes.","sig":null,"attributes":[{"value":"/ Set the size of a target address in bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114643,"byte_end":114689,"line_start":35,"line_end":35,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114694,"byte_end":114697,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This defaults to the native word size.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114702,"byte_end":114744,"line_start":37,"line_end":37,"column_start":5,"column_end":47}},{"value":"/ This is only used if the CIE version is less than 4.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114749,"byte_end":114805,"line_start":38,"line_end":38,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115074,"byte_end":115090,"line_start":47,"line_end":47,"column_start":12,"column_end":28},"name":"set_segment_size","qualname":"<DebugFrame<R>>::set_segment_size","value":"fn set_segment_size(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a segment selector in bytes.","sig":null,"attributes":[{"value":"/ Set the size of a segment selector in bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114917,"byte_end":114965,"line_start":43,"line_end":43,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114970,"byte_end":114973,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This defaults to 0.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114978,"byte_end":115001,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/ This is only used if the CIE version is less than 4.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115006,"byte_end":115062,"line_start":46,"line_end":46,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115886,"byte_end":115889,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugFrame<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugFrame` instance from the data in the\n `.debug_frame` section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugFrame` instance from the data in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115268,"byte_end":115330,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/ `.debug_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115335,"byte_end":115362,"line_start":57,"line_end":57,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115367,"byte_end":115370,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the section and present it as","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115375,"byte_end":115450,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ a `&[u8]` slice. That means using some ELF loader on Linux, a Mach-O","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115455,"byte_end":115527,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115532,"byte_end":115555,"line_start":61,"line_end":61,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115560,"byte_end":115563,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115568,"byte_end":115575,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugFrame, NativeEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115580,"byte_end":115622,"line_start":64,"line_end":64,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115627,"byte_end":115630,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ // Use with `.debug_frame`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115635,"byte_end":115665,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115670,"byte_end":115711,"line_start":67,"line_end":67,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_frame_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115716,"byte_end":115769,"line_start":68,"line_end":68,"column_start":5,"column_end":58}},{"value":"/ let debug_frame = DebugFrame::new(read_debug_frame_section_somehow(), NativeEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115774,"byte_end":115862,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115867,"byte_end":115874,"line_start":70,"line_end":70,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116056,"byte_end":116058,"line_start":77,"line_end":77,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugFrame<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116120,"byte_end":116126,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugFrame<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116224,"byte_end":116228,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugFrame<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6679},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116756,"byte_end":116766,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"EhFrameHdr","qualname":"::read::cfi::EhFrameHdr","value":"","parent":null,"children":[],"decl_id":null,"docs":" `EhFrameHdr` contains the information about the `.eh_frame_hdr` section.","sig":null,"attributes":[{"value":"/ `EhFrameHdr` contains the information about the `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116454,"byte_end":116530,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116531,"byte_end":116534,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ A pointer to the start of the `.eh_frame` data, and optionally, a binary","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116535,"byte_end":116611,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ search table of pointers to the `.eh_frame` records that are found in this section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116612,"byte_end":116699,"line_start":100,"line_end":100,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":6702},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116907,"byte_end":116923,"line_start":106,"line_end":106,"column_start":12,"column_end":28},"name":"ParsedEhFrameHdr","qualname":"::read::cfi::ParsedEhFrameHdr","value":"ParsedEhFrameHdr {  }","parent":null,"children":[{"krate":0,"index":6704},{"krate":0,"index":6705},{"krate":0,"index":6706},{"krate":0,"index":6707},{"krate":0,"index":6708},{"krate":0,"index":6709}],"decl_id":null,"docs":" `ParsedEhFrameHdr` contains the parsed information from the `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ `ParsedEhFrameHdr` contains the parsed information from the `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116783,"byte_end":116871,"line_start":104,"line_end":104,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":117259,"byte_end":117262,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<EhFrameHdr<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `EhFrameHdr` instance from the data in the `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ Constructs a new `EhFrameHdr` instance from the data in the `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":117159,"byte_end":117247,"line_start":120,"line_end":120,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":117476,"byte_end":117481,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"parse","qualname":"<EhFrameHdr<R>>::parse","value":"fn parse(&Self, &BaseAddresses, u8) -> Result<ParsedEhFrameHdr<R>>","parent":null,"children":[],"decl_id":null,"docs":" Parses this `EhFrameHdr` to a `ParsedEhFrameHdr`.\n","sig":null,"attributes":[{"value":"/ Parses this `EhFrameHdr` to a `ParsedEhFrameHdr`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":117411,"byte_end":117464,"line_start":127,"line_end":127,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":119163,"byte_end":119165,"line_start":176,"line_end":176,"column_start":8,"column_end":10},"name":"id","qualname":"<EhFrameHdr<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":119227,"byte_end":119233,"line_start":180,"line_end":180,"column_start":8,"column_end":14},"name":"reader","qualname":"<EhFrameHdr<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":119325,"byte_end":119329,"line_start":186,"line_end":186,"column_start":8,"column_end":12},"name":"from","qualname":"<EhFrameHdr<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":119503,"byte_end":119515,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"eh_frame_ptr","qualname":"<ParsedEhFrameHdr<R>>::eh_frame_ptr","value":"fn eh_frame_ptr(&Self) -> Pointer","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the binary's `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ Returns the address of the binary's `.eh_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":119431,"byte_end":119491,"line_start":192,"line_end":192,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":119644,"byte_end":119649,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"name":"table","qualname":"<ParsedEhFrameHdr<R>>::table","value":"fn table(&Self) -> Option<EhHdrTable<, R>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the CFI binary search table, if there is one.\n","sig":null,"attributes":[{"value":"/ Retrieves the CFI binary search table, if there is one.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":119573,"byte_end":119632,"line_start":197,"line_end":197,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6716},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":120644,"byte_end":120654,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"EhHdrTable","qualname":"::read::cfi::EhHdrTable","value":"EhHdrTable {  }","parent":null,"children":[{"krate":0,"index":6719}],"decl_id":null,"docs":" The CFI binary search table that is an optional part of the `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ The CFI binary search table that is an optional part of the `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":120520,"byte_end":120608,"line_start":216,"line_end":216,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":121079,"byte_end":121085,"line_start":229,"line_end":229,"column_start":12,"column_end":18},"name":"lookup","qualname":"<EhHdrTable>::lookup","value":"fn lookup(&Self, u64, &BaseAddresses) -> Result<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" *Probably* returns a pointer to the FDE for the given address.","sig":null,"attributes":[{"value":"/ *Probably* returns a pointer to the FDE for the given address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":120758,"byte_end":120824,"line_start":223,"line_end":223,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":120829,"byte_end":120832,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This performs a binary search, so if there is no FDE for the given address,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":120837,"byte_end":120916,"line_start":225,"line_end":225,"column_start":5,"column_end":84}},{"value":"/ this function **will** return a pointer to any other FDE that's close by.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":120921,"byte_end":120998,"line_start":226,"line_end":226,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":121003,"byte_end":121006,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ To be sure, you **must** call `contains` on the FDE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":121011,"byte_end":121067,"line_start":228,"line_end":228,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":123110,"byte_end":123127,"line_start":287,"line_end":287,"column_start":12,"column_end":29},"name":"pointer_to_offset","qualname":"<EhHdrTable>::pointer_to_offset","value":"fn pointer_to_offset(&Self, Pointer) -> Result<EhFrameOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Pointer` to a section offset.","sig":null,"attributes":[{"value":"/ Convert a `Pointer` to a section offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":122997,"byte_end":123041,"line_start":284,"line_end":284,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":123046,"byte_end":123049,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This does not support indirect pointers.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":123054,"byte_end":123098,"line_start":286,"line_end":286,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":124512,"byte_end":124527,"line_start":322,"line_end":322,"column_start":12,"column_end":27},"name":"fde_for_address","qualname":"<EhHdrTable>::fde_for_address","value":"fn fde_for_address<F>(&Self, &EhFrame<R>, &BaseAddresses, u64, F)\n-> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&EhFrame<R>, &BaseAddresses, EhFrameOffset<R::Offset>) ->\nResult<CommonInformationEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed FDE for the given address, or `NoUnwindInfoForAddress`\n if there are none.","sig":null,"attributes":[{"value":"/ Returns a parsed FDE for the given address, or `NoUnwindInfoForAddress`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":123635,"byte_end":123710,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ if there are none.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":123715,"byte_end":123737,"line_start":303,"line_end":303,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":123742,"byte_end":123745,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ You must provide a function to get its associated CIE. See","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":123750,"byte_end":123812,"line_start":305,"line_end":305,"column_start":5,"column_end":67}},{"value":"/ `PartialFrameDescriptionEntry::parse` for more information.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":123817,"byte_end":123880,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":123885,"byte_end":123888,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":123893,"byte_end":123906,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":123911,"byte_end":123914,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":123919,"byte_end":123926,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{BaseAddresses, EhFrame, ParsedEhFrameHdr, EndianSlice, NativeEndian, Error, UnwindSection};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":123931,"byte_end":124040,"line_start":311,"line_end":311,"column_start":5,"column_end":114}},{"value":"/ # fn foo() -> Result<(), Error> {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":124045,"byte_end":124082,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/ # let eh_frame: EhFrame<EndianSlice<NativeEndian>> = unreachable!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":124087,"byte_end":124159,"line_start":313,"line_end":313,"column_start":5,"column_end":77}},{"value":"/ # let eh_frame_hdr: ParsedEhFrameHdr<EndianSlice<NativeEndian>> = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":124164,"byte_end":124251,"line_start":314,"line_end":314,"column_start":5,"column_end":92}},{"value":"/ # let addr = 0;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":124256,"byte_end":124275,"line_start":315,"line_end":315,"column_start":5,"column_end":24}},{"value":"/ # let bases = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":124280,"byte_end":124315,"line_start":316,"line_end":316,"column_start":5,"column_end":40}},{"value":"/ let table = eh_frame_hdr.table().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":124320,"byte_end":124366,"line_start":317,"line_end":317,"column_start":5,"column_end":51}},{"value":"/ let fde = table.fde_for_address(&eh_frame, &bases, addr, EhFrame::cie_from_offset)?;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":124371,"byte_end":124459,"line_start":318,"line_end":318,"column_start":5,"column_end":93}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":124464,"byte_end":124476,"line_start":319,"line_end":319,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":124481,"byte_end":124488,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":124493,"byte_end":124500,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":125301,"byte_end":125317,"line_start":349,"line_end":349,"column_start":12,"column_end":28},"name":"lookup_and_parse","qualname":"<EhHdrTable>::lookup_and_parse","value":"fn lookup_and_parse<F>(&Self, u64, &BaseAddresses, EhFrame<R>, F)\n-> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&EhFrame<R>, &BaseAddresses, EhFrameOffset<R::Offset>) ->\nResult<CommonInformationEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":125180,"byte_end":125189,"line_start":346,"line_end":346,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Method renamed to fde_for_address; use that instead.\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":125213,"byte_end":125289,"line_start":348,"line_end":348,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":125998,"byte_end":126021,"line_start":371,"line_end":371,"column_start":12,"column_end":35},"name":"unwind_info_for_address","qualname":"<EhHdrTable>::unwind_info_for_address","value":"fn unwind_info_for_address<F>(&Self, &EhFrame<R>, &BaseAddresses,\n&mut UninitializedUnwindContext<R>, u64, F) -> Result<UnwindTableRow<R>> where\nF: FnMut(&EhFrame<R>, &BaseAddresses, EhFrameOffset<R::Offset>) ->\nResult<CommonInformationEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frame unwind information for the given address,\n or `NoUnwindInfoForAddress` if there are none.","sig":null,"attributes":[{"value":"/ Returns the frame unwind information for the given address,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":125725,"byte_end":125788,"line_start":366,"line_end":366,"column_start":5,"column_end":68}},{"value":"/ or `NoUnwindInfoForAddress` if there are none.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":125793,"byte_end":125843,"line_start":367,"line_end":367,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":125848,"byte_end":125851,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ You must provide a function to get the associated CIE. See","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":125856,"byte_end":125918,"line_start":369,"line_end":369,"column_start":5,"column_end":67}},{"value":"/ `PartialFrameDescriptionEntry::parse` for more information.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":125923,"byte_end":125986,"line_start":370,"line_end":370,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6728},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127023,"byte_end":127030,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"EhFrame","qualname":"::read::cfi::EhFrame","value":"EhFrame {  }","parent":null,"children":[{"krate":0,"index":6730},{"krate":0,"index":6731}],"decl_id":null,"docs":" `EhFrame` contains the frame unwinding information needed during exception\n handling found in the `.eh_frame` section.","sig":null,"attributes":[{"value":"/ `EhFrame` contains the frame unwinding information needed during exception","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":126545,"byte_end":126623,"line_start":391,"line_end":391,"column_start":1,"column_end":79}},{"value":"/ handling found in the `.eh_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":126624,"byte_end":126670,"line_start":392,"line_end":392,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":126671,"byte_end":126674,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ Most interesting methods are defined in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":126675,"byte_end":126722,"line_start":394,"line_end":394,"column_start":1,"column_end":48}},{"value":"/ [`UnwindSection`](trait.UnwindSection.html) trait.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":126723,"byte_end":126777,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":126778,"byte_end":126781,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ See","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":126782,"byte_end":126789,"line_start":397,"line_end":397,"column_start":1,"column_end":8}},{"value":"/ [`DebugFrame`](./struct.DebugFrame.html#differences-between-debug_frame-and-eh_frame)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":126790,"byte_end":126879,"line_start":398,"line_end":398,"column_start":1,"column_end":90}},{"value":"/ for some discussion on the differences between `.debug_frame` and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":126880,"byte_end":126949,"line_start":399,"line_end":399,"column_start":1,"column_end":70}},{"value":"/ `.eh_frame`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":126950,"byte_end":126966,"line_start":400,"line_end":400,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127231,"byte_end":127247,"line_start":411,"line_end":411,"column_start":12,"column_end":28},"name":"set_address_size","qualname":"<EhFrame<R>>::set_address_size","value":"fn set_address_size(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a target address in bytes.","sig":null,"attributes":[{"value":"/ Set the size of a target address in bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127118,"byte_end":127164,"line_start":408,"line_end":408,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127169,"byte_end":127172,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This defaults to the native word size.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127177,"byte_end":127219,"line_start":410,"line_end":410,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128044,"byte_end":128047,"line_start":435,"line_end":435,"column_start":12,"column_end":15},"name":"new","qualname":"<EhFrame<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `EhFrame` instance from the data in the\n `.debug_frame` section.","sig":null,"attributes":[{"value":"/ Construct a new `EhFrame` instance from the data in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127422,"byte_end":127481,"line_start":420,"line_end":420,"column_start":5,"column_end":64}},{"value":"/ `.debug_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127486,"byte_end":127513,"line_start":421,"line_end":421,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127518,"byte_end":127521,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the section and present it as","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127526,"byte_end":127601,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ a `&[u8]` slice. That means using some ELF loader on Linux, a Mach-O","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127606,"byte_end":127678,"line_start":424,"line_end":424,"column_start":5,"column_end":77}},{"value":"/ loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127683,"byte_end":127706,"line_start":425,"line_end":425,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127711,"byte_end":127714,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127719,"byte_end":127726,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ use gimli::{EhFrame, EndianSlice, NativeEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127731,"byte_end":127783,"line_start":428,"line_end":428,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127788,"byte_end":127791,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ // Use with `.debug_frame`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127796,"byte_end":127826,"line_start":430,"line_end":430,"column_start":5,"column_end":35}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127831,"byte_end":127872,"line_start":431,"line_end":431,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_frame_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127877,"byte_end":127930,"line_start":432,"line_end":432,"column_start":5,"column_end":58}},{"value":"/ let debug_frame = EhFrame::new(read_debug_frame_section_somehow(), NativeEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127935,"byte_end":128020,"line_start":433,"line_end":433,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128025,"byte_end":128032,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128211,"byte_end":128213,"line_start":441,"line_end":441,"column_start":8,"column_end":10},"name":"id","qualname":"<EhFrame<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128272,"byte_end":128278,"line_start":445,"line_end":445,"column_start":8,"column_end":14},"name":"reader","qualname":"<EhFrame<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128373,"byte_end":128377,"line_start":451,"line_end":451,"column_start":8,"column_end":12},"name":"from","qualname":"<EhFrame<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6752},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128821,"byte_end":128824,"line_start":466,"line_end":466,"column_start":5,"column_end":8},"name":"U32","qualname":"::read::cfi::CieOffsetEncoding::U32","value":"CieOffsetEncoding::U32","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6754},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128830,"byte_end":128833,"line_start":467,"line_end":467,"column_start":5,"column_end":8},"name":"U64","qualname":"::read::cfi::CieOffsetEncoding::U64","value":"CieOffsetEncoding::U64","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6751},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128797,"byte_end":128814,"line_start":465,"line_end":465,"column_start":10,"column_end":27},"name":"CieOffsetEncoding","qualname":"::read::cfi::CieOffsetEncoding","value":"enum CieOffsetEncoding { U32, U64, }","parent":null,"children":[{"krate":0,"index":6752},{"krate":0,"index":6754}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128720,"byte_end":128742,"line_start":463,"line_end":463,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128951,"byte_end":128963,"line_start":473,"line_end":473,"column_start":11,"column_end":23},"name":"UnwindOffset","qualname":"::read::cfi::UnwindOffset","value":"UnwindOffset<T = usize>: Copy + Debug + Eq + From<T>","parent":null,"children":[{"krate":0,"index":366}],"decl_id":null,"docs":" An offset into an `UnwindSection`.\n","sig":null,"attributes":[{"value":"/ An offset into an `UnwindSection`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128838,"byte_end":128876,"line_start":470,"line_end":470,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129089,"byte_end":129093,"line_start":478,"line_end":478,"column_start":8,"column_end":12},"name":"into","qualname":"::read::cfi::UnwindOffset::into","value":"fn into(Self) -> T","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":" Convert an `UnwindOffset<T>` into a `T`.\n","sig":null,"attributes":[{"value":"/ Convert an `UnwindOffset<T>` into a `T`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129037,"byte_end":129081,"line_start":477,"line_end":477,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129207,"byte_end":129211,"line_start":486,"line_end":486,"column_start":8,"column_end":12},"name":"into","qualname":"<DebugFrameOffset<T> as read::cfi::UnwindOffset>::into","value":"fn into(Self) -> T","parent":{"krate":0,"index":364},"children":[],"decl_id":{"krate":0,"index":366},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129190,"byte_end":129199,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129344,"byte_end":129348,"line_start":496,"line_end":496,"column_start":8,"column_end":12},"name":"into","qualname":"<EhFrameOffset<T> as read::cfi::UnwindOffset>::into","value":"fn into(Self) -> T","parent":{"krate":0,"index":364},"children":[],"decl_id":{"krate":0,"index":366},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129327,"byte_end":129336,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129591,"byte_end":129612,"line_start":505,"line_end":505,"column_start":11,"column_end":32},"name":"_UnwindSectionPrivate","qualname":"::read::cfi::_UnwindSectionPrivate","value":"_UnwindSectionPrivate<R>","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"decl_id":null,"docs":" This trait completely encapsulates everything that is different between\n `.eh_frame` and `.debug_frame`, as well as all the bits that can change\n between DWARF versions.\n","sig":null,"attributes":[{"value":"/ This trait completely encapsulates everything that is different between","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129386,"byte_end":129461,"line_start":501,"line_end":501,"column_start":1,"column_end":76}},{"value":"/ `.eh_frame` and `.debug_frame`, as well as all the bits that can change","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129462,"byte_end":129537,"line_start":502,"line_end":502,"column_start":1,"column_end":76}},{"value":"/ between DWARF versions.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129538,"byte_end":129565,"line_start":503,"line_end":503,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129674,"byte_end":129681,"line_start":507,"line_end":507,"column_start":8,"column_end":15},"name":"section","qualname":"::read::cfi::_UnwindSectionPrivate::section","value":"fn section(&Self) -> &R","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":" Get the underlying section data.\n","sig":null,"attributes":[{"value":"/ Get the underlying section data.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129630,"byte_end":129666,"line_start":506,"line_end":506,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129808,"byte_end":129838,"line_start":511,"line_end":511,"column_start":8,"column_end":38},"name":"length_value_is_end_of_entries","qualname":"::read::cfi::_UnwindSectionPrivate::length_value_is_end_of_entries","value":"fn length_value_is_end_of_entries(R::Offset) -> bool","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":" Returns true if the given length value should be considered an\n end-of-entries sentinel.\n","sig":null,"attributes":[{"value":"/ Returns true if the given length value should be considered an","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129701,"byte_end":129767,"line_start":509,"line_end":509,"column_start":5,"column_end":71}},{"value":"/ end-of-entries sentinel.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129772,"byte_end":129800,"line_start":510,"line_end":510,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129953,"byte_end":129959,"line_start":514,"line_end":514,"column_start":8,"column_end":14},"name":"is_cie","qualname":"::read::cfi::_UnwindSectionPrivate::is_cie","value":"fn is_cie(Format, u64) -> bool","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":" Return true if the given offset if the CIE sentinel, false otherwise.\n","sig":null,"attributes":[{"value":"/ Return true if the given offset if the CIE sentinel, false otherwise.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129872,"byte_end":129945,"line_start":513,"line_end":513,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130109,"byte_end":130128,"line_start":518,"line_end":518,"column_start":8,"column_end":27},"name":"cie_offset_encoding","qualname":"::read::cfi::_UnwindSectionPrivate::cie_offset_encoding","value":"fn cie_offset_encoding(Format) -> CieOffsetEncoding","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":" Return the CIE offset/ID encoding used by this unwind section with the\n given DWARF format.\n","sig":null,"attributes":[{"value":"/ Return the CIE offset/ID encoding used by this unwind section with the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129999,"byte_end":130073,"line_start":516,"line_end":516,"column_start":5,"column_end":79}},{"value":"/ given DWARF format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130078,"byte_end":130101,"line_start":517,"line_end":517,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130531,"byte_end":130549,"line_start":525,"line_end":525,"column_start":8,"column_end":26},"name":"resolve_cie_offset","qualname":"::read::cfi::_UnwindSectionPrivate::resolve_cie_offset","value":"fn resolve_cie_offset(&Self, R::Offset, R::Offset) -> Option<R::Offset>","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":" For `.eh_frame`, CIE offsets are relative to the current position. For\n `.debug_frame`, they are relative to the start of the section. We always\n internally store them relative to the section, so we handle translating\n `.eh_frame`'s relative offsets in this method. If the offset calculation\n underflows, return `None`.\n","sig":null,"attributes":[{"value":"/ For `.eh_frame`, CIE offsets are relative to the current position. For","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130172,"byte_end":130246,"line_start":520,"line_end":520,"column_start":5,"column_end":79}},{"value":"/ `.debug_frame`, they are relative to the start of the section. We always","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130251,"byte_end":130327,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ internally store them relative to the section, so we handle translating","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130332,"byte_end":130407,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ `.eh_frame`'s relative offsets in this method. If the offset calculation","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130412,"byte_end":130488,"line_start":523,"line_end":523,"column_start":5,"column_end":81}},{"value":"/ underflows, return `None`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130493,"byte_end":130523,"line_start":524,"line_end":524,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130726,"byte_end":130755,"line_start":529,"line_end":529,"column_start":8,"column_end":37},"name":"has_address_and_segment_sizes","qualname":"::read::cfi::_UnwindSectionPrivate::has_address_and_segment_sizes","value":"fn has_address_and_segment_sizes(u8) -> bool","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":" Does this version of this unwind section encode address and segment\n sizes in its CIEs?\n","sig":null,"attributes":[{"value":"/ Does this version of this unwind section encode address and segment","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130620,"byte_end":130691,"line_start":527,"line_end":527,"column_start":5,"column_end":76}},{"value":"/ sizes in its CIEs?","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130696,"byte_end":130718,"line_start":528,"line_end":528,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130868,"byte_end":130880,"line_start":532,"line_end":532,"column_start":8,"column_end":20},"name":"address_size","qualname":"::read::cfi::_UnwindSectionPrivate::address_size","value":"fn address_size(&Self) -> u8","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":" The address size to use if `has_address_and_segment_sizes` returns false.\n","sig":null,"attributes":[{"value":"/ The address size to use if `has_address_and_segment_sizes` returns false.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130783,"byte_end":130860,"line_start":531,"line_end":531,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130985,"byte_end":130997,"line_start":535,"line_end":535,"column_start":8,"column_end":20},"name":"segment_size","qualname":"::read::cfi::_UnwindSectionPrivate::segment_size","value":"fn segment_size(&Self) -> u8","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":" The segment size to use if `has_address_and_segment_sizes` returns false.\n","sig":null,"attributes":[{"value":"/ The segment size to use if `has_address_and_segment_sizes` returns false.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":130900,"byte_end":130977,"line_start":534,"line_end":534,"column_start":5,"column_end":82}}]},{"kind":"Trait","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131211,"byte_end":131224,"line_start":541,"line_end":541,"column_start":11,"column_end":24},"name":"UnwindSection","qualname":"::read::cfi::UnwindSection","value":"UnwindSection<R>: Clone + Debug + _UnwindSectionPrivate<R>","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395}],"decl_id":null,"docs":" A section holding unwind information: either `.debug_frame` or\n `.eh_frame`. See [`DebugFrame`](./struct.DebugFrame.html) and\n [`EhFrame`](./struct.EhFrame.html) respectively.\n","sig":null,"attributes":[{"value":"/ A section holding unwind information: either `.debug_frame` or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131015,"byte_end":131081,"line_start":538,"line_end":538,"column_start":1,"column_end":67}},{"value":"/ `.eh_frame`. See [`DebugFrame`](./struct.DebugFrame.html) and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131082,"byte_end":131147,"line_start":539,"line_end":539,"column_start":1,"column_end":66}},{"value":"/ [`EhFrame`](./struct.EhFrame.html) respectively.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131148,"byte_end":131200,"line_start":540,"line_end":540,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131401,"byte_end":131407,"line_start":544,"line_end":544,"column_start":10,"column_end":16},"name":"Offset","qualname":"::read::cfi::UnwindSection::Offset","value":"type Offset: UnwindOffset<R::Offset>;","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" The offset type associated with this CFI section. Either\n `DebugFrameOffset` or `EhFrameOffset`.\n","sig":null,"attributes":[{"value":"/ The offset type associated with this CFI section. Either","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131284,"byte_end":131344,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ `DebugFrameOffset` or `EhFrameOffset`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131349,"byte_end":131391,"line_start":543,"line_end":543,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131667,"byte_end":131674,"line_start":551,"line_end":551,"column_start":8,"column_end":15},"name":"entries","qualname":"::read::cfi::UnwindSection::entries","value":"fn entries<'bases>(&Self, &'bases BaseAddresses) -> CfiEntriesIter","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Iterate over the `CommonInformationEntry`s and `FrameDescriptionEntry`s\n in this `.debug_frame` section.","sig":null,"attributes":[{"value":"/ Iterate over the `CommonInformationEntry`s and `FrameDescriptionEntry`s","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131439,"byte_end":131514,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ in this `.debug_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131519,"byte_end":131554,"line_start":547,"line_end":547,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131559,"byte_end":131562,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131567,"byte_end":131588,"line_start":549,"line_end":549,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131593,"byte_end":131659,"line_start":550,"line_end":550,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131967,"byte_end":131982,"line_start":560,"line_end":560,"column_start":8,"column_end":23},"name":"cie_from_offset","qualname":"::read::cfi::UnwindSection::cie_from_offset","value":"fn cie_from_offset(&Self, &BaseAddresses, Self::Offset)\n-> Result<CommonInformationEntry<R>>","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Parse the `CommonInformationEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Parse the `CommonInformationEntry` at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131900,"byte_end":131959,"line_start":559,"line_end":559,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":132374,"byte_end":132397,"line_start":572,"line_end":572,"column_start":8,"column_end":31},"name":"partial_fde_from_offset","qualname":"::read::cfi::UnwindSection::partial_fde_from_offset","value":"fn partial_fde_from_offset<'bases>(&Self, &'bases BaseAddresses, Self::Offset)\n-> Result<PartialFrameDescriptionEntry>","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Parse the `PartialFrameDescriptionEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Parse the `PartialFrameDescriptionEntry` at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":132301,"byte_end":132366,"line_start":571,"line_end":571,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":132831,"byte_end":132846,"line_start":584,"line_end":584,"column_start":8,"column_end":23},"name":"fde_from_offset","qualname":"::read::cfi::UnwindSection::fde_from_offset","value":"fn fde_from_offset<F>(&Self, &BaseAddresses, Self::Offset, F)\n-> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&Self, &BaseAddresses, Self::Offset) ->\nResult<CommonInformationEntry<R>>","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Parse the `FrameDescriptionEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Parse the `FrameDescriptionEntry` at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":132765,"byte_end":132823,"line_start":583,"line_end":583,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":133747,"byte_end":133762,"line_start":608,"line_end":608,"column_start":8,"column_end":23},"name":"fde_for_address","qualname":"::read::cfi::UnwindSection::fde_for_address","value":"fn fde_for_address<F>(&Self, &BaseAddresses, u64, F)\n-> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&Self, &BaseAddresses, Self::Offset) ->\nResult<CommonInformationEntry<R>>","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Find the `FrameDescriptionEntry` for the given address.","sig":null,"attributes":[{"value":"/ Find the `FrameDescriptionEntry` for the given address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":133207,"byte_end":133266,"line_start":597,"line_end":597,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":133271,"byte_end":133274,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ If found, the FDE is returned.  If not found,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":133279,"byte_end":133328,"line_start":599,"line_end":599,"column_start":5,"column_end":54}},{"value":"/ `Err(gimli::Error::NoUnwindInfoForAddress)` is returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":133333,"byte_end":133393,"line_start":600,"line_end":600,"column_start":5,"column_end":65}},{"value":"/ If parsing fails, the error is returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":133398,"byte_end":133442,"line_start":601,"line_end":601,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":133447,"byte_end":133450,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ You must provide a function to get its associated CIE. See","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":133455,"byte_end":133517,"line_start":603,"line_end":603,"column_start":5,"column_end":67}},{"value":"/ `PartialFrameDescriptionEntry::parse` for more information.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":133522,"byte_end":133585,"line_start":604,"line_end":604,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":133590,"byte_end":133593,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ Note: this iterates over all FDEs. If available, it is possible","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":133598,"byte_end":133665,"line_start":606,"line_end":606,"column_start":5,"column_end":72}},{"value":"/ to do a binary search with `EhFrameHdr::fde_for_address` instead.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":133670,"byte_end":133739,"line_start":607,"line_end":607,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136412,"byte_end":136435,"line_start":678,"line_end":678,"column_start":8,"column_end":31},"name":"unwind_info_for_address","qualname":"::read::cfi::UnwindSection::unwind_info_for_address","value":"fn unwind_info_for_address<F>(&Self, &BaseAddresses,\n&mut UninitializedUnwindContext<R>, u64, F) -> Result<UnwindTableRow<R>> where\nF: FnMut(&Self, &BaseAddresses, Self::Offset) ->\nResult<CommonInformationEntry<R>>","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Find the frame unwind information for the given address.","sig":null,"attributes":[{"value":"/ Find the frame unwind information for the given address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":134480,"byte_end":134540,"line_start":632,"line_end":632,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":134545,"byte_end":134548,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ If found, the unwind information is returned.  If not found,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":134553,"byte_end":134617,"line_start":634,"line_end":634,"column_start":5,"column_end":69}},{"value":"/ `Err(gimli::Error::NoUnwindInfoForAddress)` is returned. If parsing or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":134622,"byte_end":134696,"line_start":635,"line_end":635,"column_start":5,"column_end":79}},{"value":"/ CFI evaluation fails, the error is returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":134701,"byte_end":134749,"line_start":636,"line_end":636,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":134754,"byte_end":134757,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":134762,"byte_end":134769,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ use gimli::{BaseAddresses, EhFrame, EndianSlice, NativeEndian, UninitializedUnwindContext,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":134774,"byte_end":134868,"line_start":639,"line_end":639,"column_start":5,"column_end":99}},{"value":"/             UnwindSection};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":134873,"byte_end":134904,"line_start":640,"line_end":640,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":134909,"byte_end":134912,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn foo() -> gimli::Result<()> {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":134917,"byte_end":134954,"line_start":642,"line_end":642,"column_start":5,"column_end":42}},{"value":"/ # let read_eh_frame_section = || unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":134959,"byte_end":135013,"line_start":643,"line_end":643,"column_start":5,"column_end":59}},{"value":"/ // Get the `.eh_frame` section from the object file. Alternatively,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135018,"byte_end":135089,"line_start":644,"line_end":644,"column_start":5,"column_end":76}},{"value":"/ // use `EhFrame` with the `.eh_frame` section of the object file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135094,"byte_end":135163,"line_start":645,"line_end":645,"column_start":5,"column_end":74}},{"value":"/ let eh_frame = EhFrame::new(read_eh_frame_section(), NativeEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135168,"byte_end":135239,"line_start":646,"line_end":646,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135244,"byte_end":135247,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # let get_frame_pc = || unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135252,"byte_end":135297,"line_start":648,"line_end":648,"column_start":5,"column_end":50}},{"value":"/ // Get the address of the PC for a frame you'd like to unwind.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135302,"byte_end":135368,"line_start":649,"line_end":649,"column_start":5,"column_end":71}},{"value":"/ let address = get_frame_pc();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135373,"byte_end":135406,"line_start":650,"line_end":650,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135411,"byte_end":135414,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ // This context is reusable, which cuts down on heap allocations.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135419,"byte_end":135488,"line_start":652,"line_end":652,"column_start":5,"column_end":74}},{"value":"/ let ctx = UninitializedUnwindContext::new();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135493,"byte_end":135541,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135546,"byte_end":135549,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ // Optionally provide base addresses for any relative pointers. If a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135554,"byte_end":135626,"line_start":655,"line_end":655,"column_start":5,"column_end":77}},{"value":"/ // base address isn't provided and a pointer is found that is relative to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135631,"byte_end":135708,"line_start":656,"line_end":656,"column_start":5,"column_end":82}},{"value":"/ // it, we will return an `Err`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135713,"byte_end":135748,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/ # let address_of_text_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135753,"byte_end":135816,"line_start":658,"line_end":658,"column_start":5,"column_end":68}},{"value":"/ # let address_of_got_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135821,"byte_end":135883,"line_start":659,"line_end":659,"column_start":5,"column_end":67}},{"value":"/ let bases = BaseAddresses::default()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135888,"byte_end":135928,"line_start":660,"line_end":660,"column_start":5,"column_end":45}},{"value":"/     .set_text(address_of_text_section_in_memory)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135933,"byte_end":135985,"line_start":661,"line_end":661,"column_start":5,"column_end":57}},{"value":"/     .set_got(address_of_got_section_in_memory);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":135990,"byte_end":136041,"line_start":662,"line_end":662,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136046,"byte_end":136049,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let unwind_info = eh_frame.unwind_info_for_address(","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136054,"byte_end":136109,"line_start":664,"line_end":664,"column_start":5,"column_end":60}},{"value":"/     &bases,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136114,"byte_end":136129,"line_start":665,"line_end":665,"column_start":5,"column_end":20}},{"value":"/     &mut ctx,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136134,"byte_end":136151,"line_start":666,"line_end":666,"column_start":5,"column_end":22}},{"value":"/     address,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136156,"byte_end":136172,"line_start":667,"line_end":667,"column_start":5,"column_end":21}},{"value":"/     EhFrame::cie_from_offset,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136177,"byte_end":136210,"line_start":668,"line_end":668,"column_start":5,"column_end":38}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136215,"byte_end":136222,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136227,"byte_end":136230,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ # let do_stuff_with = |_| unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136235,"byte_end":136282,"line_start":671,"line_end":671,"column_start":5,"column_end":52}},{"value":"/ do_stuff_with(unwind_info);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136287,"byte_end":136318,"line_start":672,"line_end":672,"column_start":5,"column_end":36}},{"value":"/ # let _ = ctx;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136323,"byte_end":136341,"line_start":673,"line_end":673,"column_start":5,"column_end":23}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136346,"byte_end":136366,"line_start":674,"line_end":674,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136371,"byte_end":136378,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136383,"byte_end":136390,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136395,"byte_end":136404,"line_start":677,"line_end":677,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136926,"byte_end":136933,"line_start":694,"line_end":694,"column_start":8,"column_end":15},"name":"section","qualname":"<DebugFrame<R> as read::cfi::_UnwindSectionPrivate>::section","value":"fn section(&Self) -> &R","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":375},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136985,"byte_end":137015,"line_start":698,"line_end":698,"column_start":8,"column_end":38},"name":"length_value_is_end_of_entries","qualname":"<DebugFrame<R> as read::cfi::_UnwindSectionPrivate>::length_value_is_end_of_entries","value":"fn length_value_is_end_of_entries(R::Offset) -> bool","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":376},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":137068,"byte_end":137074,"line_start":702,"line_end":702,"column_start":8,"column_end":14},"name":"is_cie","qualname":"<DebugFrame<R> as read::cfi::_UnwindSectionPrivate>::is_cie","value":"fn is_cie(Format, u64) -> bool","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":377},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":137267,"byte_end":137286,"line_start":709,"line_end":709,"column_start":8,"column_end":27},"name":"cie_offset_encoding","qualname":"<DebugFrame<R> as read::cfi::_UnwindSectionPrivate>::cie_offset_encoding","value":"fn cie_offset_encoding(Format) -> CieOffsetEncoding","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":378},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":137483,"byte_end":137501,"line_start":716,"line_end":716,"column_start":8,"column_end":26},"name":"resolve_cie_offset","qualname":"<DebugFrame<R> as read::cfi::_UnwindSectionPrivate>::resolve_cie_offset","value":"fn resolve_cie_offset(&Self, R::Offset, R::Offset) -> Option<R::Offset>","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":379},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":137600,"byte_end":137629,"line_start":720,"line_end":720,"column_start":8,"column_end":37},"name":"has_address_and_segment_sizes","qualname":"<DebugFrame<R> as read::cfi::_UnwindSectionPrivate>::has_address_and_segment_sizes","value":"fn has_address_and_segment_sizes(u8) -> bool","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":380},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":137688,"byte_end":137700,"line_start":724,"line_end":724,"column_start":8,"column_end":20},"name":"address_size","qualname":"<DebugFrame<R> as read::cfi::_UnwindSectionPrivate>::address_size","value":"fn address_size(&Self) -> u8","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":381},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":137756,"byte_end":137768,"line_start":728,"line_end":728,"column_start":8,"column_end":20},"name":"segment_size","qualname":"<DebugFrame<R> as read::cfi::_UnwindSectionPrivate>::segment_size","value":"fn segment_size(&Self) -> u8","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":382},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":137987,"byte_end":137994,"line_start":738,"line_end":738,"column_start":8,"column_end":15},"name":"section","qualname":"<EhFrame<R> as read::cfi::_UnwindSectionPrivate>::section","value":"fn section(&Self) -> &R","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":375},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":138046,"byte_end":138076,"line_start":742,"line_end":742,"column_start":8,"column_end":38},"name":"length_value_is_end_of_entries","qualname":"<EhFrame<R> as read::cfi::_UnwindSectionPrivate>::length_value_is_end_of_entries","value":"fn length_value_is_end_of_entries(R::Offset) -> bool","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":376},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":138151,"byte_end":138157,"line_start":746,"line_end":746,"column_start":8,"column_end":14},"name":"is_cie","qualname":"<EhFrame<R> as read::cfi::_UnwindSectionPrivate>::is_cie","value":"fn is_cie(Format, u64) -> bool","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":377},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":138218,"byte_end":138237,"line_start":750,"line_end":750,"column_start":8,"column_end":27},"name":"cie_offset_encoding","qualname":"<EhFrame<R> as read::cfi::_UnwindSectionPrivate>::cie_offset_encoding","value":"fn cie_offset_encoding(Format) -> CieOffsetEncoding","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":378},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":138417,"byte_end":138435,"line_start":756,"line_end":756,"column_start":8,"column_end":26},"name":"resolve_cie_offset","qualname":"<EhFrame<R> as read::cfi::_UnwindSectionPrivate>::resolve_cie_offset","value":"fn resolve_cie_offset(&Self, R::Offset, R::Offset) -> Option<R::Offset>","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":379},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":138549,"byte_end":138578,"line_start":760,"line_end":760,"column_start":8,"column_end":37},"name":"has_address_and_segment_sizes","qualname":"<EhFrame<R> as read::cfi::_UnwindSectionPrivate>::has_address_and_segment_sizes","value":"fn has_address_and_segment_sizes(u8) -> bool","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":380},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":138631,"byte_end":138643,"line_start":764,"line_end":764,"column_start":8,"column_end":20},"name":"address_size","qualname":"<EhFrame<R> as read::cfi::_UnwindSectionPrivate>::address_size","value":"fn address_size(&Self) -> u8","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":381},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":138699,"byte_end":138711,"line_start":768,"line_end":768,"column_start":8,"column_end":20},"name":"segment_size","qualname":"<EhFrame<R> as read::cfi::_UnwindSectionPrivate>::segment_size","value":"fn segment_size(&Self) -> u8","parent":{"krate":0,"index":373},"children":[],"decl_id":{"krate":0,"index":382},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6767},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139822,"byte_end":139835,"line_start":800,"line_end":800,"column_start":12,"column_end":25},"name":"BaseAddresses","qualname":"::read::cfi::BaseAddresses","value":"BaseAddresses { eh_frame_hdr, eh_frame }","parent":null,"children":[{"krate":0,"index":6768},{"krate":0,"index":6769}],"decl_id":null,"docs":" Optional base addresses for the relative `DW_EH_PE_*` encoded pointers.","sig":null,"attributes":[{"value":"/ Optional base addresses for the relative `DW_EH_PE_*` encoded pointers.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":138843,"byte_end":138918,"line_start":777,"line_end":777,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":138919,"byte_end":138922,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/ During CIE/FDE parsing, if a relative pointer is encountered for a base","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":138923,"byte_end":138998,"line_start":779,"line_end":779,"column_start":1,"column_end":76}},{"value":"/ address that is unknown, an Err will be returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":138999,"byte_end":139052,"line_start":780,"line_end":780,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139053,"byte_end":139056,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139057,"byte_end":139064,"line_start":782,"line_end":782,"column_start":1,"column_end":8}},{"value":"/ use gimli::BaseAddresses;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139065,"byte_end":139094,"line_start":783,"line_end":783,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139095,"byte_end":139098,"line_start":784,"line_end":784,"column_start":1,"column_end":4}},{"value":"/ # fn foo() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139099,"byte_end":139115,"line_start":785,"line_end":785,"column_start":1,"column_end":17}},{"value":"/ # let address_of_eh_frame_hdr_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139116,"byte_end":139187,"line_start":786,"line_end":786,"column_start":1,"column_end":72}},{"value":"/ # let address_of_eh_frame_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139188,"byte_end":139255,"line_start":787,"line_end":787,"column_start":1,"column_end":68}},{"value":"/ # let address_of_text_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139256,"byte_end":139319,"line_start":788,"line_end":788,"column_start":1,"column_end":64}},{"value":"/ # let address_of_got_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139320,"byte_end":139382,"line_start":789,"line_end":789,"column_start":1,"column_end":63}},{"value":"/ # let address_of_the_start_of_current_func = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139383,"byte_end":139449,"line_start":790,"line_end":790,"column_start":1,"column_end":67}},{"value":"/ let bases = BaseAddresses::default()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139450,"byte_end":139490,"line_start":791,"line_end":791,"column_start":1,"column_end":41}},{"value":"/     .set_eh_frame_hdr(address_of_eh_frame_hdr_section_in_memory)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139491,"byte_end":139559,"line_start":792,"line_end":792,"column_start":1,"column_end":69}},{"value":"/     .set_eh_frame(address_of_eh_frame_section_in_memory)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139560,"byte_end":139620,"line_start":793,"line_end":793,"column_start":1,"column_end":61}},{"value":"/     .set_text(address_of_text_section_in_memory)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139621,"byte_end":139673,"line_start":794,"line_end":794,"column_start":1,"column_end":53}},{"value":"/     .set_got(address_of_got_section_in_memory);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139674,"byte_end":139725,"line_start":795,"line_end":795,"column_start":1,"column_end":52}},{"value":"/ # let _ = bases;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139726,"byte_end":139746,"line_start":796,"line_end":796,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139747,"byte_end":139754,"line_start":797,"line_end":797,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139755,"byte_end":139762,"line_start":798,"line_end":798,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":6768},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139925,"byte_end":139937,"line_start":802,"line_end":802,"column_start":9,"column_end":21},"name":"eh_frame_hdr","qualname":"::read::cfi::BaseAddresses::eh_frame_hdr","value":"read::cfi::SectionBaseAddresses","parent":{"krate":0,"index":6767},"children":[],"decl_id":null,"docs":" The base addresses to use for pointers in the `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ The base addresses to use for pointers in the `.eh_frame_hdr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139842,"byte_end":139916,"line_start":801,"line_end":801,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":6769},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140045,"byte_end":140053,"line_start":805,"line_end":805,"column_start":9,"column_end":17},"name":"eh_frame","qualname":"::read::cfi::BaseAddresses::eh_frame","value":"read::cfi::SectionBaseAddresses","parent":{"krate":0,"index":6767},"children":[],"decl_id":null,"docs":" The base addresses to use for pointers in the `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ The base addresses to use for pointers in the `.eh_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":139966,"byte_end":140036,"line_start":804,"line_end":804,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":6783},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140328,"byte_end":140348,"line_start":813,"line_end":813,"column_start":12,"column_end":32},"name":"SectionBaseAddresses","qualname":"::read::cfi::SectionBaseAddresses","value":"SectionBaseAddresses { section, text, data }","parent":null,"children":[{"krate":0,"index":6784},{"krate":0,"index":6785},{"krate":0,"index":6786}],"decl_id":null,"docs":" Optional base addresses for the relative `DW_EH_PE_*` encoded pointers\n in a particular section.","sig":null,"attributes":[{"value":"/ Optional base addresses for the relative `DW_EH_PE_*` encoded pointers","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140080,"byte_end":140154,"line_start":808,"line_end":808,"column_start":1,"column_end":75}},{"value":"/ in a particular section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140155,"byte_end":140183,"line_start":809,"line_end":809,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140184,"byte_end":140187,"line_start":810,"line_end":810,"column_start":1,"column_end":4}},{"value":"/ See `BaseAddresses` for methods that are helpful in setting these addresses.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140188,"byte_end":140268,"line_start":811,"line_end":811,"column_start":1,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":6784},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140418,"byte_end":140425,"line_start":815,"line_end":815,"column_start":9,"column_end":16},"name":"section","qualname":"::read::cfi::SectionBaseAddresses::section","value":"core::option::Option<u64>","parent":{"krate":0,"index":6783},"children":[],"decl_id":null,"docs":" The address of the section containing the pointer.\n","sig":null,"attributes":[{"value":"/ The address of the section containing the pointer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140355,"byte_end":140409,"line_start":814,"line_end":814,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6785},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140564,"byte_end":140568,"line_start":819,"line_end":819,"column_start":9,"column_end":13},"name":"text","qualname":"::read::cfi::SectionBaseAddresses::text","value":"core::option::Option<u64>","parent":{"krate":0,"index":6783},"children":[],"decl_id":null,"docs":" The base address for text relative pointers.\n This is generally the address of the `.text` section.\n","sig":null,"attributes":[{"value":"/ The base address for text relative pointers.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140445,"byte_end":140493,"line_start":817,"line_end":817,"column_start":5,"column_end":53}},{"value":"/ This is generally the address of the `.text` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140498,"byte_end":140555,"line_start":818,"line_end":818,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":6786},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140911,"byte_end":140915,"line_start":828,"line_end":828,"column_start":9,"column_end":13},"name":"data","qualname":"::read::cfi::SectionBaseAddresses::data","value":"core::option::Option<u64>","parent":{"krate":0,"index":6783},"children":[],"decl_id":null,"docs":" The base address for data relative pointers.","sig":null,"attributes":[{"value":"/ The base address for data relative pointers.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140588,"byte_end":140636,"line_start":821,"line_end":821,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140641,"byte_end":140644,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ For pointers in the `.eh_frame_hdr` section, this is the address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140649,"byte_end":140717,"line_start":823,"line_end":823,"column_start":5,"column_end":73}},{"value":"/ of the `.eh_frame_hdr` section","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140722,"byte_end":140756,"line_start":824,"line_end":824,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140761,"byte_end":140764,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ For pointers in the `.eh_frame` section, this is generally the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140769,"byte_end":140835,"line_start":826,"line_end":826,"column_start":5,"column_end":71}},{"value":"/ global pointer, such as the address of the `.got` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140840,"byte_end":140902,"line_start":827,"line_end":827,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141033,"byte_end":141049,"line_start":834,"line_end":834,"column_start":12,"column_end":28},"name":"set_eh_frame_hdr","qualname":"<BaseAddresses>::set_eh_frame_hdr","value":"fn set_eh_frame_hdr(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.eh_frame_hdr` section base address.\n","sig":null,"attributes":[{"value":"/ Set the `.eh_frame_hdr` section base address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140958,"byte_end":141007,"line_start":832,"line_end":832,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141012,"byte_end":141021,"line_start":833,"line_end":833,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141269,"byte_end":141281,"line_start":842,"line_end":842,"column_start":12,"column_end":24},"name":"set_eh_frame","qualname":"<BaseAddresses>::set_eh_frame","value":"fn set_eh_frame(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.eh_frame` section base address.\n","sig":null,"attributes":[{"value":"/ Set the `.eh_frame` section base address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141198,"byte_end":141243,"line_start":840,"line_end":840,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141248,"byte_end":141257,"line_start":841,"line_end":841,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141448,"byte_end":141456,"line_start":849,"line_end":849,"column_start":12,"column_end":20},"name":"set_text","qualname":"<BaseAddresses>::set_text","value":"fn set_text(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.text` section base address.\n","sig":null,"attributes":[{"value":"/ Set the `.text` section base address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141381,"byte_end":141422,"line_start":847,"line_end":847,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141427,"byte_end":141436,"line_start":848,"line_end":848,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141664,"byte_end":141671,"line_start":857,"line_end":857,"column_start":12,"column_end":19},"name":"set_got","qualname":"<BaseAddresses>::set_got","value":"fn set_got(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.got` section base address.\n","sig":null,"attributes":[{"value":"/ Set the `.got` section base address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141598,"byte_end":141638,"line_start":855,"line_end":855,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141643,"byte_end":141652,"line_start":856,"line_end":856,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6800},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143459,"byte_end":143473,"line_start":903,"line_end":903,"column_start":12,"column_end":26},"name":"CfiEntriesIter","qualname":"::read::cfi::CfiEntriesIter","value":"CfiEntriesIter {  }","parent":null,"children":[{"krate":0,"index":6804},{"krate":0,"index":6805},{"krate":0,"index":6806}],"decl_id":null,"docs":" An iterator over CIE and FDE entries in a `.debug_frame` or `.eh_frame`\n section.","sig":null,"attributes":[{"value":"/ An iterator over CIE and FDE entries in a `.debug_frame` or `.eh_frame`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141766,"byte_end":141841,"line_start":863,"line_end":863,"column_start":1,"column_end":76}},{"value":"/ section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141842,"byte_end":141854,"line_start":864,"line_end":864,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141855,"byte_end":141858,"line_start":865,"line_end":865,"column_start":1,"column_end":4}},{"value":"/ Some pointers may be encoded relative to various base addresses. Use the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141859,"byte_end":141935,"line_start":866,"line_end":866,"column_start":1,"column_end":77}},{"value":"/ [`BaseAddresses`](./struct.BaseAddresses.html) parameter to provide them. By","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":141936,"byte_end":142016,"line_start":867,"line_end":867,"column_start":1,"column_end":81}},{"value":"/ default, none are provided. If a relative pointer is encountered for a base","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142017,"byte_end":142096,"line_start":868,"line_end":868,"column_start":1,"column_end":80}},{"value":"/ address that is unknown, an `Err` will be returned and iteration will abort.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142097,"byte_end":142177,"line_start":869,"line_end":869,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142178,"byte_end":142181,"line_start":870,"line_end":870,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142182,"byte_end":142203,"line_start":871,"line_end":871,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142204,"byte_end":142270,"line_start":872,"line_end":872,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142271,"byte_end":142274,"line_start":873,"line_end":873,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142275,"byte_end":142282,"line_start":874,"line_end":874,"column_start":1,"column_end":8}},{"value":"/ use gimli::{BaseAddresses, EhFrame, EndianSlice, NativeEndian, UnwindSection};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142283,"byte_end":142365,"line_start":875,"line_end":875,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142366,"byte_end":142369,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> gimli::Result<()> {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142370,"byte_end":142407,"line_start":877,"line_end":877,"column_start":1,"column_end":38}},{"value":"/ # let read_eh_frame_somehow = || unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142408,"byte_end":142462,"line_start":878,"line_end":878,"column_start":1,"column_end":55}},{"value":"/ let eh_frame = EhFrame::new(read_eh_frame_somehow(), NativeEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142463,"byte_end":142534,"line_start":879,"line_end":879,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142535,"byte_end":142538,"line_start":880,"line_end":880,"column_start":1,"column_end":4}},{"value":"/ # let address_of_eh_frame_hdr_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142539,"byte_end":142610,"line_start":881,"line_end":881,"column_start":1,"column_end":72}},{"value":"/ # let address_of_eh_frame_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142611,"byte_end":142678,"line_start":882,"line_end":882,"column_start":1,"column_end":68}},{"value":"/ # let address_of_text_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142679,"byte_end":142742,"line_start":883,"line_end":883,"column_start":1,"column_end":64}},{"value":"/ # let address_of_got_section_in_memory = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142743,"byte_end":142805,"line_start":884,"line_end":884,"column_start":1,"column_end":63}},{"value":"/ # let address_of_the_start_of_current_func = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142806,"byte_end":142872,"line_start":885,"line_end":885,"column_start":1,"column_end":67}},{"value":"/ // Provide base addresses for relative pointers.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142873,"byte_end":142925,"line_start":886,"line_end":886,"column_start":1,"column_end":53}},{"value":"/ let bases = BaseAddresses::default()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142926,"byte_end":142966,"line_start":887,"line_end":887,"column_start":1,"column_end":41}},{"value":"/     .set_eh_frame_hdr(address_of_eh_frame_hdr_section_in_memory)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":142967,"byte_end":143035,"line_start":888,"line_end":888,"column_start":1,"column_end":69}},{"value":"/     .set_eh_frame(address_of_eh_frame_section_in_memory)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143036,"byte_end":143096,"line_start":889,"line_end":889,"column_start":1,"column_end":61}},{"value":"/     .set_text(address_of_text_section_in_memory)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143097,"byte_end":143149,"line_start":890,"line_end":890,"column_start":1,"column_end":53}},{"value":"/     .set_got(address_of_got_section_in_memory);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143150,"byte_end":143201,"line_start":891,"line_end":891,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143202,"byte_end":143205,"line_start":892,"line_end":892,"column_start":1,"column_end":4}},{"value":"/ let mut entries = eh_frame.entries(&bases);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143206,"byte_end":143253,"line_start":893,"line_end":893,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143254,"byte_end":143257,"line_start":894,"line_end":894,"column_start":1,"column_end":4}},{"value":"/ # let do_stuff_with = |_| unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143258,"byte_end":143305,"line_start":895,"line_end":895,"column_start":1,"column_end":48}},{"value":"/ while let Some(entry) = entries.next()? {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143306,"byte_end":143351,"line_start":896,"line_end":896,"column_start":1,"column_end":46}},{"value":"/     do_stuff_with(entry)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143352,"byte_end":143380,"line_start":897,"line_end":897,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143381,"byte_end":143386,"line_start":898,"line_end":898,"column_start":1,"column_end":6}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143387,"byte_end":143407,"line_start":899,"line_end":899,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143408,"byte_end":143415,"line_start":900,"line_end":900,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143416,"byte_end":143423,"line_start":901,"line_end":901,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143794,"byte_end":143798,"line_start":919,"line_end":919,"column_start":12,"column_end":16},"name":"next","qualname":"<CfiEntriesIter>::next","value":"fn next(&mut Self) -> Result<Option<CieOrFde>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next entry.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143739,"byte_end":143782,"line_start":918,"line_end":918,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":144546,"byte_end":144550,"line_start":947,"line_end":947,"column_start":8,"column_end":12},"name":"next","qualname":"<CfiEntriesIter as fallible_iterator::FallibleIterator>::next","value":"fn next(&mut Self) -> ::core::result::Result<Option<Self::Item>, Self::Error>","parent":{"krate":25,"index":59},"children":[],"decl_id":{"krate":25,"index":62},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6821},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":144936,"byte_end":144939,"line_start":960,"line_end":960,"column_start":5,"column_end":8},"name":"Cie","qualname":"::read::cfi::CieOrFde::Cie","value":"CieOrFde::Cie(CommonInformationEntry<R>)","parent":{"krate":0,"index":6817},"children":[],"decl_id":null,"docs":" This CFI entry is a `CommonInformationEntry`.\n","sig":null,"attributes":[{"value":"/ This CFI entry is a `CommonInformationEntry`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":144882,"byte_end":144931,"line_start":959,"line_end":959,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":6823},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":144940,"byte_end":144965,"line_start":960,"line_end":960,"column_start":9,"column_end":34},"name":"0","qualname":"::read::cfi::CieOrFde::Cie::0","value":"read::cfi::CommonInformationEntry<R>","parent":{"krate":0,"index":6821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6824},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":145141,"byte_end":145144,"line_start":964,"line_end":964,"column_start":5,"column_end":8},"name":"Fde","qualname":"::read::cfi::CieOrFde::Fde","value":"CieOrFde::Fde(PartialFrameDescriptionEntry)","parent":{"krate":0,"index":6817},"children":[],"decl_id":null,"docs":" This CFI entry is a `FrameDescriptionEntry`, however fully parsing it\n requires parsing its CIE first, so it is left in a partially parsed\n state.\n","sig":null,"attributes":[{"value":"/ This CFI entry is a `FrameDescriptionEntry`, however fully parsing it","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":144972,"byte_end":145045,"line_start":961,"line_end":961,"column_start":5,"column_end":78}},{"value":"/ requires parsing its CIE first, so it is left in a partially parsed","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":145050,"byte_end":145121,"line_start":962,"line_end":962,"column_start":5,"column_end":76}},{"value":"/ state.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":145126,"byte_end":145136,"line_start":963,"line_end":963,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":6826},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":145145,"byte_end":145193,"line_start":964,"line_end":964,"column_start":9,"column_end":57},"name":"0","qualname":"::read::cfi::CieOrFde::Fde::0","value":"read::cfi::PartialFrameDescriptionEntry<'bases, Section, R>","parent":{"krate":0,"index":6824},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6817},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":144795,"byte_end":144803,"line_start":954,"line_end":954,"column_start":10,"column_end":18},"name":"CieOrFde","qualname":"::read::cfi::CieOrFde","value":"enum CieOrFde<'bases, Section, R> where R: Reader, Section: UnwindSection<R> {\n    Cie(CommonInformationEntry<R>),\n    Fde(PartialFrameDescriptionEntry),\n}","parent":null,"children":[{"krate":0,"index":6821},{"krate":0,"index":6824}],"decl_id":null,"docs":" Either a `CommonInformationEntry` (CIE) or a `FrameDescriptionEntry` (FDE).\n","sig":null,"attributes":[{"value":"/ Either a `CommonInformationEntry` (CIE) or a `FrameDescriptionEntry` (FDE).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":144667,"byte_end":144746,"line_start":952,"line_end":952,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":6856},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":147464,"byte_end":147476,"line_start":1030,"line_end":1030,"column_start":12,"column_end":24},"name":"Augmentation","qualname":"::read::cfi::Augmentation","value":"Augmentation {  }","parent":null,"children":[{"krate":0,"index":6857},{"krate":0,"index":6858},{"krate":0,"index":6859},{"krate":0,"index":6860}],"decl_id":null,"docs":" We support the z-style augmentation [defined by `.eh_frame`][ehframe].","sig":null,"attributes":[{"value":"/ We support the z-style augmentation [defined by `.eh_frame`][ehframe].","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":147208,"byte_end":147282,"line_start":1026,"line_end":1026,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":147283,"byte_end":147286,"line_start":1027,"line_end":1027,"column_start":1,"column_end":4}},{"value":"/ [ehframe]: http://refspecs.linuxfoundation.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/ehframechpt.html","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":147287,"byte_end":147398,"line_start":1028,"line_end":1028,"column_start":1,"column_end":112}}]},{"kind":"Struct","id":{"krate":0,"index":6890},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":153120,"byte_end":153142,"line_start":1162,"line_end":1162,"column_start":12,"column_end":34},"name":"CommonInformationEntry","qualname":"::read::cfi::CommonInformationEntry","value":"CommonInformationEntry {  }","parent":null,"children":[{"krate":0,"index":6893},{"krate":0,"index":6894},{"krate":0,"index":6895},{"krate":0,"index":6896},{"krate":0,"index":6897},{"krate":0,"index":6898},{"krate":0,"index":6899},{"krate":0,"index":6900},{"krate":0,"index":6901},{"krate":0,"index":6902},{"krate":0,"index":6903}],"decl_id":null,"docs":" > A Common Information Entry holds information that is shared among many\n > Frame Description Entries. There is at least one CIE in every non-empty\n > `.debug_frame` section.\n","sig":null,"attributes":[{"value":"/ > A Common Information Entry holds information that is shared among many","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":152885,"byte_end":152961,"line_start":1158,"line_end":1158,"column_start":1,"column_end":77}},{"value":"/ > Frame Description Entries. There is at least one CIE in every non-empty","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":152962,"byte_end":153039,"line_start":1159,"line_end":1159,"column_start":1,"column_end":78}},{"value":"/ > `.debug_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":153040,"byte_end":153069,"line_start":1160,"line_end":1160,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":158129,"byte_end":158135,"line_start":1306,"line_end":1306,"column_start":12,"column_end":18},"name":"offset","qualname":"<CommonInformationEntry<R>>::offset","value":"fn offset(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this entry from the start of its containing section.\n","sig":null,"attributes":[{"value":"/ Get the offset of this entry from the start of its containing section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":158043,"byte_end":158117,"line_start":1305,"line_end":1305,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":158249,"byte_end":158257,"line_start":1311,"line_end":1311,"column_start":12,"column_end":20},"name":"encoding","qualname":"<CommonInformationEntry<R>>::encoding","value":"fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this CIE.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this CIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":158189,"byte_end":158237,"line_start":1310,"line_end":1310,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":158504,"byte_end":158516,"line_start":1320,"line_end":1320,"column_start":12,"column_end":24},"name":"address_size","qualname":"<CommonInformationEntry<R>>::address_size","value":"fn address_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of addresses (in bytes) in this CIE.\n","sig":null,"attributes":[{"value":"/ The size of addresses (in bytes) in this CIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":158443,"byte_end":158492,"line_start":1319,"line_end":1319,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":158735,"byte_end":158747,"line_start":1328,"line_end":1328,"column_start":12,"column_end":24},"name":"instructions","qualname":"<CommonInformationEntry<R>>::instructions","value":"fn instructions<'a, Section>(&Self, &'a Section, &'a BaseAddresses)\n-> CallFrameInstructionIter where Section: UnwindSection<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this CIE's initial instructions.","sig":null,"attributes":[{"value":"/ Iterate over this CIE's initial instructions.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":158569,"byte_end":158618,"line_start":1324,"line_end":1324,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":158623,"byte_end":158626,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":158631,"byte_end":158652,"line_start":1326,"line_end":1326,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":158657,"byte_end":158723,"line_start":1327,"line_end":1327,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":159586,"byte_end":159595,"line_start":1352,"line_end":1352,"column_start":12,"column_end":21},"name":"entry_len","qualname":"<CommonInformationEntry<R>>::entry_len","value":"fn entry_len(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" > A constant that gives the number of bytes of the CIE structure, not\n > including the length field itself (see Section 7.2.2). The size of the\n > length field plus the value of length must be an integral multiple of\n > the address size.\n","sig":null,"attributes":[{"value":"/ > A constant that gives the number of bytes of the CIE structure, not","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":159312,"byte_end":159385,"line_start":1348,"line_end":1348,"column_start":5,"column_end":78}},{"value":"/ > including the length field itself (see Section 7.2.2). The size of the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":159390,"byte_end":159466,"line_start":1349,"line_end":1349,"column_start":5,"column_end":81}},{"value":"/ > length field plus the value of length must be an integral multiple of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":159471,"byte_end":159546,"line_start":1350,"line_end":1350,"column_start":5,"column_end":80}},{"value":"/ > the address size.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":159551,"byte_end":159574,"line_start":1351,"line_end":1351,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":159815,"byte_end":159822,"line_start":1358,"line_end":1358,"column_start":12,"column_end":19},"name":"version","qualname":"<CommonInformationEntry<R>>::version","value":"fn version(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" > A version number (see Section 7.23). This number is specific to the\n > call frame information and is independent of the DWARF version number.\n","sig":null,"attributes":[{"value":"/ > A version number (see Section 7.23). This number is specific to the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":159649,"byte_end":159722,"line_start":1356,"line_end":1356,"column_start":5,"column_end":78}},{"value":"/ > call frame information and is independent of the DWARF version number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":159727,"byte_end":159803,"line_start":1357,"line_end":1357,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":160036,"byte_end":160048,"line_start":1366,"line_end":1366,"column_start":12,"column_end":24},"name":"augmentation","qualname":"<CommonInformationEntry<R>>::augmentation","value":"fn augmentation(&Self) -> Option<&Augmentation>","parent":null,"children":[],"decl_id":null,"docs":" Get the augmentation data, if any exists.","sig":null,"attributes":[{"value":"/ Get the augmentation data, if any exists.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":159870,"byte_end":159915,"line_start":1362,"line_end":1362,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":159920,"byte_end":159923,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ The only augmentation understood by `gimli` is that which is defined by","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":159928,"byte_end":160003,"line_start":1364,"line_end":1364,"column_start":5,"column_end":80}},{"value":"/ `.eh_frame`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":160008,"byte_end":160024,"line_start":1365,"line_end":1365,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":160181,"byte_end":160189,"line_start":1371,"line_end":1371,"column_start":12,"column_end":20},"name":"has_lsda","qualname":"<CommonInformationEntry<R>>::has_lsda","value":"fn has_lsda(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if this CIE's FDEs have a LSDA.\n","sig":null,"attributes":[{"value":"/ True if this CIE's FDEs have a LSDA.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":160129,"byte_end":160169,"line_start":1370,"line_end":1370,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":160356,"byte_end":160369,"line_start":1376,"line_end":1376,"column_start":12,"column_end":25},"name":"lsda_encoding","qualname":"<CommonInformationEntry<R>>::lsda_encoding","value":"fn lsda_encoding(&Self) -> Option<constants::DwEhPe>","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding of the LSDA address for this CIE's FDEs.\n","sig":null,"attributes":[{"value":"/ Return the encoding of the LSDA address for this CIE's FDEs.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":160280,"byte_end":160344,"line_start":1375,"line_end":1375,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":160577,"byte_end":160602,"line_start":1382,"line_end":1382,"column_start":12,"column_end":37},"name":"personality_with_encoding","qualname":"<CommonInformationEntry<R>>::personality_with_encoding","value":"fn personality_with_encoding(&Self) -> Option<(constants::DwEhPe, Pointer)>","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding and address of the personality routine handler\n for this CIE's FDEs.\n","sig":null,"attributes":[{"value":"/ Return the encoding and address of the personality routine handler","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":160466,"byte_end":160536,"line_start":1380,"line_end":1380,"column_start":5,"column_end":75}},{"value":"/ for this CIE's FDEs.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":160541,"byte_end":160565,"line_start":1381,"line_end":1381,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":160824,"byte_end":160835,"line_start":1388,"line_end":1388,"column_start":12,"column_end":23},"name":"personality","qualname":"<CommonInformationEntry<R>>::personality","value":"fn personality(&Self) -> Option<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Return the address of the personality routine handler\n for this CIE's FDEs.\n","sig":null,"attributes":[{"value":"/ Return the address of the personality routine handler","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":160726,"byte_end":160783,"line_start":1386,"line_end":1386,"column_start":5,"column_end":62}},{"value":"/ for this CIE's FDEs.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":160788,"byte_end":160812,"line_start":1387,"line_end":1387,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":161066,"byte_end":161086,"line_start":1396,"line_end":1396,"column_start":12,"column_end":32},"name":"fde_address_encoding","qualname":"<CommonInformationEntry<R>>::fde_address_encoding","value":"fn fde_address_encoding(&Self) -> Option<constants::DwEhPe>","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding of the addresses for this CIE's FDEs.\n","sig":null,"attributes":[{"value":"/ Return the encoding of the addresses for this CIE's FDEs.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":160993,"byte_end":161054,"line_start":1395,"line_end":1395,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":161275,"byte_end":161295,"line_start":1401,"line_end":1401,"column_start":12,"column_end":32},"name":"is_signal_trampoline","qualname":"<CommonInformationEntry<R>>::is_signal_trampoline","value":"fn is_signal_trampoline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if this CIE's FDEs are trampolines for signal handlers.\n","sig":null,"attributes":[{"value":"/ True if this CIE's FDEs are trampolines for signal handlers.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":161199,"byte_end":161263,"line_start":1400,"line_end":1400,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":161511,"byte_end":161532,"line_start":1407,"line_end":1407,"column_start":12,"column_end":33},"name":"code_alignment_factor","qualname":"<CommonInformationEntry<R>>::code_alignment_factor","value":"fn code_alignment_factor(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" > A constant that is factored out of all advance location instructions\n > (see Section 6.4.2.1).\n","sig":null,"attributes":[{"value":"/ > A constant that is factored out of all advance location instructions","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":161392,"byte_end":161466,"line_start":1405,"line_end":1405,"column_start":5,"column_end":79}},{"value":"/ > (see Section 6.4.2.1).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":161471,"byte_end":161499,"line_start":1406,"line_end":1406,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":161756,"byte_end":161777,"line_start":1413,"line_end":1413,"column_start":12,"column_end":33},"name":"data_alignment_factor","qualname":"<CommonInformationEntry<R>>::data_alignment_factor","value":"fn data_alignment_factor(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" > A constant that is factored out of certain offset instructions (see\n > below). The resulting value is (operand * data_alignment_factor).\n","sig":null,"attributes":[{"value":"/ > A constant that is factored out of certain offset instructions (see","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":161595,"byte_end":161668,"line_start":1411,"line_end":1411,"column_start":5,"column_end":78}},{"value":"/ > below). The resulting value is (operand * data_alignment_factor).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":161673,"byte_end":161744,"line_start":1412,"line_end":1412,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":162069,"byte_end":162092,"line_start":1420,"line_end":1420,"column_start":12,"column_end":35},"name":"return_address_register","qualname":"<CommonInformationEntry<R>>::return_address_register","value":"fn return_address_register(&Self) -> Register","parent":null,"children":[],"decl_id":null,"docs":" > An unsigned ... constant that indicates which column in the rule\n > table represents the return address of the function. Note that this\n > column might not correspond to an actual machine register.\n","sig":null,"attributes":[{"value":"/ > An unsigned ... constant that indicates which column in the rule","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":161840,"byte_end":161910,"line_start":1417,"line_end":1417,"column_start":5,"column_end":75}},{"value":"/ > table represents the return address of the function. Note that this","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":161915,"byte_end":161988,"line_start":1418,"line_end":1418,"column_start":5,"column_end":78}},{"value":"/ > column might not correspond to an actual machine register.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":161993,"byte_end":162057,"line_start":1419,"line_end":1419,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":6927},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":162321,"byte_end":162349,"line_start":1429,"line_end":1429,"column_start":12,"column_end":40},"name":"PartialFrameDescriptionEntry","qualname":"::read::cfi::PartialFrameDescriptionEntry","value":"PartialFrameDescriptionEntry {  }","parent":null,"children":[{"krate":0,"index":6931},{"krate":0,"index":6932},{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6935},{"krate":0,"index":6936},{"krate":0,"index":6937}],"decl_id":null,"docs":" A partially parsed `FrameDescriptionEntry`.","sig":null,"attributes":[{"value":"/ A partially parsed `FrameDescriptionEntry`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":162160,"byte_end":162207,"line_start":1425,"line_end":1425,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":162208,"byte_end":162211,"line_start":1426,"line_end":1426,"column_start":1,"column_end":4}},{"value":"/ Fully parsing this FDE requires first parsing its CIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":162212,"byte_end":162270,"line_start":1427,"line_end":1427,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":163396,"byte_end":163401,"line_start":1465,"line_end":1465,"column_start":12,"column_end":17},"name":"parse","qualname":"<PartialFrameDescriptionEntry>::parse","value":"fn parse<F>(&Self, F) -> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&Section, &BaseAddresses, Section::Offset) ->\nResult<CommonInformationEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" Fully parse this FDE.","sig":null,"attributes":[{"value":"/ Fully parse this FDE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":163154,"byte_end":163179,"line_start":1460,"line_end":1460,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":163184,"byte_end":163187,"line_start":1461,"line_end":1461,"column_start":5,"column_end":8}},{"value":"/ You must provide a function get its associated CIE (either by parsing it","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":163192,"byte_end":163268,"line_start":1462,"line_end":1462,"column_start":5,"column_end":81}},{"value":"/ on demand, or looking it up in some table mapping offsets to CIEs that","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":163273,"byte_end":163347,"line_start":1463,"line_end":1463,"column_start":5,"column_end":79}},{"value":"/ you've already parsed, etc.)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":163352,"byte_end":163384,"line_start":1464,"line_end":1464,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6967},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":163974,"byte_end":163995,"line_start":1484,"line_end":1484,"column_start":12,"column_end":33},"name":"FrameDescriptionEntry","qualname":"::read::cfi::FrameDescriptionEntry","value":"FrameDescriptionEntry {  }","parent":null,"children":[{"krate":0,"index":6970},{"krate":0,"index":6971},{"krate":0,"index":6972},{"krate":0,"index":6973},{"krate":0,"index":6974},{"krate":0,"index":6975},{"krate":0,"index":6976},{"krate":0,"index":6977},{"krate":0,"index":6978}],"decl_id":null,"docs":" A `FrameDescriptionEntry` is a set of CFA instructions for an address range.\n","sig":null,"attributes":[{"value":"/ A `FrameDescriptionEntry` is a set of CFA instructions for an address range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":163843,"byte_end":163923,"line_start":1482,"line_end":1482,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":168187,"byte_end":168191,"line_start":1609,"line_end":1609,"column_start":12,"column_end":16},"name":"rows","qualname":"<FrameDescriptionEntry<R>>::rows","value":"fn rows<'a,\nSection>(&Self, &'a Section, &'a BaseAddresses,\n&'a mut UninitializedUnwindContext<R>) -> Result<UnwindTable> where\nSection: UnwindSection<R>","parent":null,"children":[],"decl_id":null,"docs":" Return the table of unwind information for this FDE.\n","sig":null,"attributes":[{"value":"/ Return the table of unwind information for this FDE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":168105,"byte_end":168161,"line_start":1607,"line_end":1607,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":168166,"byte_end":168175,"line_start":1608,"line_end":1608,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":168814,"byte_end":168837,"line_start":1624,"line_end":1624,"column_start":12,"column_end":35},"name":"unwind_info_for_address","qualname":"<FrameDescriptionEntry<R>>::unwind_info_for_address","value":"fn unwind_info_for_address<Section>(&Self, &Section, &BaseAddresses,\n&mut UninitializedUnwindContext<R>, u64) -> Result<UnwindTableRow<R>> where\nSection: UnwindSection<R>","parent":null,"children":[],"decl_id":null,"docs":" Find the frame unwind information for the given address.","sig":null,"attributes":[{"value":"/ Find the frame unwind information for the given address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":168456,"byte_end":168516,"line_start":1618,"line_end":1618,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":168521,"byte_end":168524,"line_start":1619,"line_end":1619,"column_start":5,"column_end":8}},{"value":"/ If found, the unwind information is returned along with the reset","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":168529,"byte_end":168598,"line_start":1620,"line_end":1620,"column_start":5,"column_end":74}},{"value":"/ context in the form `Ok((unwind_info, context))`. If not found,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":168603,"byte_end":168670,"line_start":1621,"line_end":1621,"column_start":5,"column_end":72}},{"value":"/ `Err(gimli::Error::NoUnwindInfoForAddress)` is returned. If parsing or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":168675,"byte_end":168749,"line_start":1622,"line_end":1622,"column_start":5,"column_end":79}},{"value":"/ CFI evaluation fails, the error is returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":168754,"byte_end":168802,"line_start":1623,"line_end":1623,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":169627,"byte_end":169633,"line_start":1648,"line_end":1648,"column_start":12,"column_end":18},"name":"offset","qualname":"<FrameDescriptionEntry<R>>::offset","value":"fn offset(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this entry from the start of its containing section.\n","sig":null,"attributes":[{"value":"/ Get the offset of this entry from the start of its containing section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":169541,"byte_end":169615,"line_start":1647,"line_end":1647,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":169737,"byte_end":169740,"line_start":1653,"line_end":1653,"column_start":12,"column_end":15},"name":"cie","qualname":"<FrameDescriptionEntry<R>>::cie","value":"fn cie(&Self) -> &CommonInformationEntry<R>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this FDE's CIE.\n","sig":null,"attributes":[{"value":"/ Get a reference to this FDE's CIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":169687,"byte_end":169725,"line_start":1652,"line_end":1652,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":170117,"byte_end":170126,"line_start":1661,"line_end":1661,"column_start":12,"column_end":21},"name":"entry_len","qualname":"<FrameDescriptionEntry<R>>::entry_len","value":"fn entry_len(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" > A constant that gives the number of bytes of the header and\n > instruction stream for this function, not including the length field\n > itself (see Section 7.2.2). The size of the length field plus the value\n > of length must be an integral multiple of the address size.\n","sig":null,"attributes":[{"value":"/ > A constant that gives the number of bytes of the header and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":169809,"byte_end":169874,"line_start":1657,"line_end":1657,"column_start":5,"column_end":70}},{"value":"/ > instruction stream for this function, not including the length field","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":169879,"byte_end":169953,"line_start":1658,"line_end":1658,"column_start":5,"column_end":79}},{"value":"/ > itself (see Section 7.2.2). The size of the length field plus the value","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":169958,"byte_end":170035,"line_start":1659,"line_end":1659,"column_start":5,"column_end":82}},{"value":"/ > of length must be an integral multiple of the address size.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":170040,"byte_end":170105,"line_start":1660,"line_end":1660,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":170466,"byte_end":170478,"line_start":1672,"line_end":1672,"column_start":12,"column_end":24},"name":"instructions","qualname":"<FrameDescriptionEntry<R>>::instructions","value":"fn instructions<'a, Section>(&Self, &'a Section, &'a BaseAddresses)\n-> CallFrameInstructionIter where Section: UnwindSection<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this FDE's instructions.","sig":null,"attributes":[{"value":"/ Iterate over this FDE's instructions.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":170180,"byte_end":170221,"line_start":1665,"line_end":1665,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":170226,"byte_end":170229,"line_start":1666,"line_end":1666,"column_start":5,"column_end":8}},{"value":"/ Will not include the CIE's initial instructions, if you want those do","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":170234,"byte_end":170307,"line_start":1667,"line_end":1667,"column_start":5,"column_end":78}},{"value":"/ `fde.cie().instructions()` first.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":170312,"byte_end":170349,"line_start":1668,"line_end":1668,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":170354,"byte_end":170357,"line_start":1669,"line_end":1669,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":170362,"byte_end":170383,"line_start":1670,"line_end":1670,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":170388,"byte_end":170454,"line_start":1671,"line_end":1671,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171177,"byte_end":171192,"line_start":1693,"line_end":1693,"column_start":12,"column_end":27},"name":"initial_address","qualname":"<FrameDescriptionEntry<R>>::initial_address","value":"fn initial_address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The first address for which this entry has unwind information for.\n","sig":null,"attributes":[{"value":"/ The first address for which this entry has unwind information for.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171095,"byte_end":171165,"line_start":1692,"line_end":1692,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171352,"byte_end":171355,"line_start":1699,"line_end":1699,"column_start":12,"column_end":15},"name":"len","qualname":"<FrameDescriptionEntry<R>>::len","value":"fn len(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes of instructions that this entry has unwind\n information for.\n","sig":null,"attributes":[{"value":"/ The number of bytes of instructions that this entry has unwind","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171249,"byte_end":171315,"line_start":1697,"line_end":1697,"column_start":5,"column_end":71}},{"value":"/ information for.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171320,"byte_end":171340,"line_start":1698,"line_end":1698,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171631,"byte_end":171639,"line_start":1708,"line_end":1708,"column_start":12,"column_end":20},"name":"contains","qualname":"<FrameDescriptionEntry<R>>::contains","value":"fn contains(&Self, u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the given address is within this FDE, `false`\n otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if the given address is within this FDE, `false`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171410,"byte_end":171476,"line_start":1703,"line_end":1703,"column_start":5,"column_end":71}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171481,"byte_end":171495,"line_start":1704,"line_end":1704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171500,"byte_end":171503,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `entry.initial_address() <= address <","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171508,"byte_end":171571,"line_start":1706,"line_end":1706,"column_start":5,"column_end":68}},{"value":"/ entry.initial_address() + entry.len()`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171576,"byte_end":171619,"line_start":1707,"line_end":1707,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171906,"byte_end":171910,"line_start":1716,"line_end":1716,"column_start":12,"column_end":16},"name":"lsda","qualname":"<FrameDescriptionEntry<R>>::lsda","value":"fn lsda(&Self) -> Option<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" The address of this FDE's language-specific data area (LSDA), if it has\n any.\n","sig":null,"attributes":[{"value":"/ The address of this FDE's language-specific data area (LSDA), if it has","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171806,"byte_end":171881,"line_start":1714,"line_end":1714,"column_start":5,"column_end":80}},{"value":"/ any.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":171886,"byte_end":171894,"line_start":1715,"line_end":1715,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172108,"byte_end":172128,"line_start":1722,"line_end":1722,"column_start":12,"column_end":32},"name":"is_signal_trampoline","qualname":"<FrameDescriptionEntry<R>>::is_signal_trampoline","value":"fn is_signal_trampoline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this FDE's function is a trampoline for a signal handler.\n","sig":null,"attributes":[{"value":"/ Return true if this FDE's function is a trampoline for a signal handler.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172006,"byte_end":172082,"line_start":1720,"line_end":1720,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172087,"byte_end":172096,"line_start":1721,"line_end":1721,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172443,"byte_end":172454,"line_start":1730,"line_end":1730,"column_start":12,"column_end":23},"name":"personality","qualname":"<FrameDescriptionEntry<R>>::personality","value":"fn personality(&Self) -> Option<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Return the address of the FDE's function's personality routine\n handler. The personality routine does language-specific clean up when\n unwinding the stack frames with the intent to not run them again.\n","sig":null,"attributes":[{"value":"/ Return the address of the FDE's function's personality routine","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172199,"byte_end":172265,"line_start":1726,"line_end":1726,"column_start":5,"column_end":71}},{"value":"/ handler. The personality routine does language-specific clean up when","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172270,"byte_end":172343,"line_start":1727,"line_end":1727,"column_start":5,"column_end":78}},{"value":"/ unwinding the stack frames with the intent to not run them again.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172348,"byte_end":172417,"line_start":1728,"line_end":1728,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172422,"byte_end":172431,"line_start":1729,"line_end":1729,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7002},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173894,"byte_end":173920,"line_start":1766,"line_end":1766,"column_start":12,"column_end":38},"name":"UninitializedUnwindContext","qualname":"::read::cfi::UninitializedUnwindContext","value":"","parent":null,"children":[],"decl_id":null,"docs":" Common context needed when evaluating the call frame unwinding information.","sig":null,"attributes":[{"value":"/ Common context needed when evaluating the call frame unwinding information.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172525,"byte_end":172604,"line_start":1735,"line_end":1735,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172605,"byte_end":172608,"line_start":1736,"line_end":1736,"column_start":1,"column_end":4}},{"value":"/ To avoid re-allocating the context multiple times when evaluating multiple","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172609,"byte_end":172687,"line_start":1737,"line_end":1737,"column_start":1,"column_end":79}},{"value":"/ CFI programs, it can be reused. At first, a context is uninitialized","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172688,"byte_end":172760,"line_start":1738,"line_end":1738,"column_start":1,"column_end":73}},{"value":"/ (`UninitializedUnwindContext`). It can be initialized by providing the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172761,"byte_end":172835,"line_start":1739,"line_end":1739,"column_start":1,"column_end":75}},{"value":"/ `CommonInformationEntry` for the CFI program about to be evaluated and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172836,"byte_end":172910,"line_start":1740,"line_end":1740,"column_start":1,"column_end":75}},{"value":"/ calling `UninitializedUnwindContext::initialize`. The result is a `&mut UnwindContext`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":172911,"byte_end":173001,"line_start":1741,"line_end":1741,"column_start":1,"column_end":91}},{"value":"/ which borrows the uninitialized context, and can be used to evaluate and run a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173002,"byte_end":173084,"line_start":1742,"line_end":1742,"column_start":1,"column_end":83}},{"value":"/ `FrameDescriptionEntry`'s CFI program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173085,"byte_end":173127,"line_start":1743,"line_end":1743,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173128,"byte_end":173131,"line_start":1744,"line_end":1744,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173132,"byte_end":173139,"line_start":1745,"line_end":1745,"column_start":1,"column_end":8}},{"value":"/ use gimli::{UninitializedUnwindContext, UnwindTable};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173140,"byte_end":173197,"line_start":1746,"line_end":1746,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173198,"byte_end":173201,"line_start":1747,"line_end":1747,"column_start":1,"column_end":4}},{"value":"/ # fn foo<'a>(some_fde: gimli::FrameDescriptionEntry<gimli::EndianSlice<'a, gimli::LittleEndian>>)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173202,"byte_end":173303,"line_start":1748,"line_end":1748,"column_start":1,"column_end":102}},{"value":"/ #            -> gimli::Result<()> {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173304,"byte_end":173343,"line_start":1749,"line_end":1749,"column_start":1,"column_end":40}},{"value":"/ # let eh_frame: gimli::EhFrame<_> = unreachable!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173344,"byte_end":173399,"line_start":1750,"line_end":1750,"column_start":1,"column_end":56}},{"value":"/ # let bases = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173400,"byte_end":173435,"line_start":1751,"line_end":1751,"column_start":1,"column_end":36}},{"value":"/ // An uninitialized context.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173436,"byte_end":173468,"line_start":1752,"line_end":1752,"column_start":1,"column_end":33}},{"value":"/ let mut ctx = UninitializedUnwindContext::new();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173469,"byte_end":173521,"line_start":1753,"line_end":1753,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173522,"byte_end":173525,"line_start":1754,"line_end":1754,"column_start":1,"column_end":4}},{"value":"/ // Initialize the context by evaluating the CIE's initial instruction program,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173526,"byte_end":173608,"line_start":1755,"line_end":1755,"column_start":1,"column_end":83}},{"value":"/ // and generate the unwind table.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173609,"byte_end":173646,"line_start":1756,"line_end":1756,"column_start":1,"column_end":38}},{"value":"/ let mut table = some_fde.rows(&eh_frame, &bases, &mut ctx)?;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173647,"byte_end":173711,"line_start":1757,"line_end":1757,"column_start":1,"column_end":65}},{"value":"/ while let Some(row) = table.next_row()? {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173712,"byte_end":173757,"line_start":1758,"line_end":1758,"column_start":1,"column_end":46}},{"value":"/     // Do stuff with each row...","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173758,"byte_end":173794,"line_start":1759,"line_end":1759,"column_start":1,"column_end":37}},{"value":"/ #   let _ = row;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173795,"byte_end":173815,"line_start":1760,"line_end":1760,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173816,"byte_end":173821,"line_start":1761,"line_end":1761,"column_start":1,"column_end":6}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173822,"byte_end":173842,"line_start":1762,"line_end":1762,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173843,"byte_end":173850,"line_start":1763,"line_end":1763,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173851,"byte_end":173858,"line_start":1764,"line_end":1764,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":174070,"byte_end":174073,"line_start":1770,"line_end":1770,"column_start":12,"column_end":15},"name":"new","qualname":"<UninitializedUnwindContext<R>>::new","value":"fn new() -> UninitializedUnwindContext<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new call frame unwinding context.\n","sig":null,"attributes":[{"value":"/ Construct a new call frame unwinding context.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":174009,"byte_end":174058,"line_start":1769,"line_end":1769,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":174254,"byte_end":174261,"line_start":1776,"line_end":1776,"column_start":8,"column_end":15},"name":"default","qualname":"<UninitializedUnwindContext<R> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":174600,"byte_end":174610,"line_start":1788,"line_end":1788,"column_start":12,"column_end":22},"name":"initialize","qualname":"<UninitializedUnwindContext<R>>::initialize","value":"fn initialize<Section>(&mut Self, &Section, &BaseAddresses,\n&CommonInformationEntry<R>) -> Result<&mut UnwindContext<R>> where\nSection: UnwindSection<R>","parent":null,"children":[],"decl_id":null,"docs":" Run the CIE's initial instructions, creating and return an\n `UnwindContext`.\n","sig":null,"attributes":[{"value":"/ Run the CIE's initial instructions, creating and return an","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":174501,"byte_end":174563,"line_start":1786,"line_end":1786,"column_start":5,"column_end":67}},{"value":"/ `UnwindContext`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":174568,"byte_end":174588,"line_start":1787,"line_end":1787,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":7012},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":175183,"byte_end":175196,"line_start":1810,"line_end":1810,"column_start":12,"column_end":25},"name":"UnwindContext","qualname":"::read::cfi::UnwindContext","value":"UnwindContext {  }","parent":null,"children":[{"krate":0,"index":7014},{"krate":0,"index":7016},{"krate":0,"index":7017},{"krate":0,"index":7018}],"decl_id":null,"docs":" An unwinding context.\n","sig":null,"attributes":[{"value":"/ An unwinding context.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":175118,"byte_end":175143,"line_start":1808,"line_end":1808,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":179289,"byte_end":179291,"line_start":1945,"line_end":1945,"column_start":8,"column_end":10},"name":"eq","qualname":"<UnwindContext<R> as core::cmp::PartialEq>::eq","value":"fn eq(&Self, &UnwindContext<R>) -> bool","parent":{"krate":1,"index":2802},"children":[],"decl_id":{"krate":1,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7031},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":182205,"byte_end":182216,"line_start":2009,"line_end":2009,"column_start":12,"column_end":23},"name":"UnwindTable","qualname":"::read::cfi::UnwindTable","value":"UnwindTable {  }","parent":null,"children":[{"krate":0,"index":7034},{"krate":0,"index":7035},{"krate":0,"index":7036},{"krate":0,"index":7037},{"krate":0,"index":7038},{"krate":0,"index":7039},{"krate":0,"index":7040}],"decl_id":null,"docs":" The `UnwindTable` iteratively evaluates a `FrameDescriptionEntry`'s\n `CallFrameInstruction` program, yielding the each row one at a time.","sig":null,"attributes":[{"value":"/ The `UnwindTable` iteratively evaluates a `FrameDescriptionEntry`'s","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":179498,"byte_end":179569,"line_start":1952,"line_end":1952,"column_start":1,"column_end":72}},{"value":"/ `CallFrameInstruction` program, yielding the each row one at a time.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":179570,"byte_end":179642,"line_start":1953,"line_end":1953,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":179643,"byte_end":179646,"line_start":1954,"line_end":1954,"column_start":1,"column_end":4}},{"value":"/ > 6.4.1 Structure of Call Frame Information","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":179647,"byte_end":179694,"line_start":1955,"line_end":1955,"column_start":1,"column_end":48}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":179695,"byte_end":179700,"line_start":1956,"line_end":1956,"column_start":1,"column_end":6}},{"value":"/ > DWARF supports virtual unwinding by defining an architecture independent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":179701,"byte_end":179779,"line_start":1957,"line_end":1957,"column_start":1,"column_end":79}},{"value":"/ > basis for recording how procedures save and restore registers during their","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":179780,"byte_end":179860,"line_start":1958,"line_end":1958,"column_start":1,"column_end":81}},{"value":"/ > lifetimes. This basis must be augmented on some machines with specific","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":179861,"byte_end":179937,"line_start":1959,"line_end":1959,"column_start":1,"column_end":77}},{"value":"/ > information that is defined by an architecture specific ABI authoring","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":179938,"byte_end":180013,"line_start":1960,"line_end":1960,"column_start":1,"column_end":76}},{"value":"/ > committee, a hardware vendor, or a compiler producer. The body defining a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180014,"byte_end":180093,"line_start":1961,"line_end":1961,"column_start":1,"column_end":80}},{"value":"/ > specific augmentation is referred to below as the “augmenter.”","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180094,"byte_end":180166,"line_start":1962,"line_end":1962,"column_start":1,"column_end":69}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180167,"byte_end":180172,"line_start":1963,"line_end":1963,"column_start":1,"column_end":6}},{"value":"/ > Abstractly, this mechanism describes a very large table that has the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180173,"byte_end":180247,"line_start":1964,"line_end":1964,"column_start":1,"column_end":75}},{"value":"/ > following structure:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180248,"byte_end":180274,"line_start":1965,"line_end":1965,"column_start":1,"column_end":27}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180275,"byte_end":180280,"line_start":1966,"line_end":1966,"column_start":1,"column_end":6}},{"value":"/ > <table>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180281,"byte_end":180294,"line_start":1967,"line_end":1967,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180295,"byte_end":180307,"line_start":1968,"line_end":1968,"column_start":1,"column_end":13}},{"value":"/ >     <th>LOC</th><th>CFA</th><th>R0</th><th>R1</th><td>...</td><th>RN</th>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180308,"byte_end":180387,"line_start":1969,"line_end":1969,"column_start":1,"column_end":80}},{"value":"/ >   </tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180388,"byte_end":180401,"line_start":1970,"line_end":1970,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180402,"byte_end":180414,"line_start":1971,"line_end":1971,"column_start":1,"column_end":13}},{"value":"/ >     <th>L0</th> <td></td>   <td></td>  <td></td>  <td></td>   <td></td>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180415,"byte_end":180492,"line_start":1972,"line_end":1972,"column_start":1,"column_end":78}},{"value":"/ >   </tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180493,"byte_end":180506,"line_start":1973,"line_end":1973,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180507,"byte_end":180519,"line_start":1974,"line_end":1974,"column_start":1,"column_end":13}},{"value":"/ >     <th>L1</th> <td></td>   <td></td>  <td></td>  <td></td>   <td></td>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180520,"byte_end":180597,"line_start":1975,"line_end":1975,"column_start":1,"column_end":78}},{"value":"/ >   </tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180598,"byte_end":180611,"line_start":1976,"line_end":1976,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180612,"byte_end":180624,"line_start":1977,"line_end":1977,"column_start":1,"column_end":13}},{"value":"/ >     <td>...</td><td></td>   <td></td>  <td></td>  <td></td>   <td></td>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180625,"byte_end":180702,"line_start":1978,"line_end":1978,"column_start":1,"column_end":78}},{"value":"/ >   </tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180703,"byte_end":180716,"line_start":1979,"line_end":1979,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180717,"byte_end":180729,"line_start":1980,"line_end":1980,"column_start":1,"column_end":13}},{"value":"/ >     <th>LN</th> <td></td>   <td></td>  <td></td>  <td></td>   <td></td>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180730,"byte_end":180807,"line_start":1981,"line_end":1981,"column_start":1,"column_end":78}},{"value":"/ >   </tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180808,"byte_end":180821,"line_start":1982,"line_end":1982,"column_start":1,"column_end":14}},{"value":"/ > </table>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180822,"byte_end":180836,"line_start":1983,"line_end":1983,"column_start":1,"column_end":15}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180837,"byte_end":180842,"line_start":1984,"line_end":1984,"column_start":1,"column_end":6}},{"value":"/ > The first column indicates an address for every location that contains code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180843,"byte_end":180924,"line_start":1985,"line_end":1985,"column_start":1,"column_end":82}},{"value":"/ > in a program. (In shared objects, this is an object-relative offset.) The","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":180925,"byte_end":181004,"line_start":1986,"line_end":1986,"column_start":1,"column_end":80}},{"value":"/ > remaining columns contain virtual unwinding rules that are associated with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181005,"byte_end":181085,"line_start":1987,"line_end":1987,"column_start":1,"column_end":81}},{"value":"/ > the indicated location.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181086,"byte_end":181115,"line_start":1988,"line_end":1988,"column_start":1,"column_end":30}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181116,"byte_end":181121,"line_start":1989,"line_end":1989,"column_start":1,"column_end":6}},{"value":"/ > The CFA column defines the rule which computes the Canonical Frame Address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181122,"byte_end":181202,"line_start":1990,"line_end":1990,"column_start":1,"column_end":81}},{"value":"/ > value; it may be either a register and a signed offset that are added","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181203,"byte_end":181278,"line_start":1991,"line_end":1991,"column_start":1,"column_end":76}},{"value":"/ > together, or a DWARF expression that is evaluated.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181279,"byte_end":181335,"line_start":1992,"line_end":1992,"column_start":1,"column_end":57}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181336,"byte_end":181341,"line_start":1993,"line_end":1993,"column_start":1,"column_end":6}},{"value":"/ > The remaining columns are labeled by register number. This includes some","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181342,"byte_end":181420,"line_start":1994,"line_end":1994,"column_start":1,"column_end":79}},{"value":"/ > registers that have special designation on some architectures such as the PC","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181421,"byte_end":181503,"line_start":1995,"line_end":1995,"column_start":1,"column_end":83}},{"value":"/ > and the stack pointer register. (The actual mapping of registers for a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181504,"byte_end":181580,"line_start":1996,"line_end":1996,"column_start":1,"column_end":77}},{"value":"/ > particular architecture is defined by the augmenter.) The register columns","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181581,"byte_end":181661,"line_start":1997,"line_end":1997,"column_start":1,"column_end":81}},{"value":"/ > contain rules that describe whether a given register has been saved and the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181662,"byte_end":181743,"line_start":1998,"line_end":1998,"column_start":1,"column_end":82}},{"value":"/ > rule to find the value for the register in the previous frame.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181744,"byte_end":181812,"line_start":1999,"line_end":1999,"column_start":1,"column_end":69}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181813,"byte_end":181818,"line_start":2000,"line_end":2000,"column_start":1,"column_end":6}},{"value":"/ > ...","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181819,"byte_end":181828,"line_start":2001,"line_end":2001,"column_start":1,"column_end":10}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181829,"byte_end":181834,"line_start":2002,"line_end":2002,"column_start":1,"column_end":6}},{"value":"/ > This table would be extremely large if actually constructed as","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181835,"byte_end":181903,"line_start":2003,"line_end":2003,"column_start":1,"column_end":69}},{"value":"/ > described. Most of the entries at any point in the table are identical to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181904,"byte_end":181983,"line_start":2004,"line_end":2004,"column_start":1,"column_end":80}},{"value":"/ > the ones above them. The whole table can be represented quite compactly by","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":181984,"byte_end":182064,"line_start":2005,"line_end":2005,"column_start":1,"column_end":81}},{"value":"/ > recording just the differences starting at the beginning address of each","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":182065,"byte_end":182143,"line_start":2006,"line_end":2006,"column_start":1,"column_end":79}},{"value":"/ > subroutine in the program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":182144,"byte_end":182176,"line_start":2007,"line_end":2007,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":182779,"byte_end":182782,"line_start":2026,"line_end":2026,"column_start":12,"column_end":15},"name":"new","qualname":"<UnwindTable>::new","value":"fn new<Section>(&'a Section, &'a BaseAddresses,\n&'a mut UninitializedUnwindContext<R>, &FrameDescriptionEntry<R>)\n-> Result<UnwindTable> where Section: UnwindSection<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `UnwindTable` for the given\n `FrameDescriptionEntry`'s CFI unwinding program.\n","sig":null,"attributes":[{"value":"/ Construct a new `UnwindTable` for the given","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":182663,"byte_end":182710,"line_start":2024,"line_end":2024,"column_start":5,"column_end":52}},{"value":"/ `FrameDescriptionEntry`'s CFI unwinding program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":182715,"byte_end":182767,"line_start":2025,"line_end":2025,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":184677,"byte_end":184685,"line_start":2077,"line_end":2077,"column_start":12,"column_end":20},"name":"next_row","qualname":"<UnwindTable>::next_row","value":"fn next_row(&mut Self) -> Result<Option<&UnwindTableRow<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate call frame instructions until the next row of the table is\n completed, and return it.","sig":null,"attributes":[{"value":"/ Evaluate call frame instructions until the next row of the table is","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":184421,"byte_end":184492,"line_start":2072,"line_end":2072,"column_start":5,"column_end":76}},{"value":"/ completed, and return it.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":184497,"byte_end":184526,"line_start":2073,"line_end":2073,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":184531,"byte_end":184534,"line_start":2074,"line_end":2074,"column_start":5,"column_end":8}},{"value":"/ Unfortunately, this cannot be used with `FallibleIterator` because of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":184539,"byte_end":184612,"line_start":2075,"line_end":2075,"column_start":5,"column_end":78}},{"value":"/ the restricted lifetime of the yielded item.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":184617,"byte_end":184665,"line_start":2076,"line_end":2076,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":7045},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":199502,"byte_end":199518,"line_start":2501,"line_end":2501,"column_start":12,"column_end":28},"name":"RegisterRuleIter","qualname":"::read::cfi::RegisterRuleIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An unordered iterator for register rules.\n","sig":null,"attributes":[{"value":"/ An unordered iterator for register rules.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":199421,"byte_end":199466,"line_start":2499,"line_end":2499,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":199733,"byte_end":199737,"line_start":2508,"line_end":2508,"column_start":8,"column_end":12},"name":"next","qualname":"<RegisterRuleIter as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8193},"children":[],"decl_id":{"krate":1,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7058},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":200004,"byte_end":200018,"line_start":2516,"line_end":2516,"column_start":12,"column_end":26},"name":"UnwindTableRow","qualname":"::read::cfi::UnwindTableRow","value":"UnwindTableRow {  }","parent":null,"children":[{"krate":0,"index":7060},{"krate":0,"index":7061},{"krate":0,"index":7062},{"krate":0,"index":7063},{"krate":0,"index":7064}],"decl_id":null,"docs":" A row in the virtual unwind table that describes how to find the values of\n the registers in the *previous* frame for a range of PC addresses.\n","sig":null,"attributes":[{"value":"/ A row in the virtual unwind table that describes how to find the values of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":199804,"byte_end":199882,"line_start":2513,"line_end":2513,"column_start":1,"column_end":79}},{"value":"/ the registers in the *previous* frame for a range of PC addresses.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":199883,"byte_end":199953,"line_start":2514,"line_end":2514,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":200218,"byte_end":200225,"line_start":2525,"line_end":2525,"column_start":8,"column_end":15},"name":"default","qualname":"<UnwindTableRow<R> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":200752,"byte_end":200765,"line_start":2545,"line_end":2545,"column_start":12,"column_end":25},"name":"start_address","qualname":"<UnwindTableRow<R>>::start_address","value":"fn start_address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the starting PC address that this row applies to.\n","sig":null,"attributes":[{"value":"/ Get the starting PC address that this row applies to.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":200683,"byte_end":200740,"line_start":2544,"line_end":2544,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201187,"byte_end":201198,"line_start":2556,"line_end":2556,"column_start":12,"column_end":23},"name":"end_address","qualname":"<UnwindTableRow<R>>::end_address","value":"fn end_address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the end PC address where this row's register rules become\n unapplicable.","sig":null,"attributes":[{"value":"/ Get the end PC address where this row's register rules become","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":200820,"byte_end":200885,"line_start":2549,"line_end":2549,"column_start":5,"column_end":70}},{"value":"/ unapplicable.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":200890,"byte_end":200907,"line_start":2550,"line_end":2550,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":200912,"byte_end":200915,"line_start":2551,"line_end":2551,"column_start":5,"column_end":8}},{"value":"/ In other words, this row describes how to recover the last frame's","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":200920,"byte_end":200990,"line_start":2552,"line_end":2552,"column_start":5,"column_end":75}},{"value":"/ registers for all PCs where `row.start_address() <= PC <","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":200995,"byte_end":201055,"line_start":2553,"line_end":2553,"column_start":5,"column_end":65}},{"value":"/ row.end_address()`. This row does NOT describe how to recover registers","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201060,"byte_end":201135,"line_start":2554,"line_end":2554,"column_start":5,"column_end":80}},{"value":"/ when `PC == row.end_address()`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201140,"byte_end":201175,"line_start":2555,"line_end":2555,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201366,"byte_end":201374,"line_start":2562,"line_end":2562,"column_start":12,"column_end":20},"name":"contains","qualname":"<UnwindTableRow<R>>::contains","value":"fn contains(&Self, u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the given `address` is within this row's address range,\n `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Return `true` if the given `address` is within this row's address range,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201251,"byte_end":201327,"line_start":2560,"line_end":2560,"column_start":5,"column_end":81}},{"value":"/ `false` otherwise.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201332,"byte_end":201354,"line_start":2561,"line_end":2561,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201693,"byte_end":201708,"line_start":2570,"line_end":2570,"column_start":12,"column_end":27},"name":"saved_args_size","qualname":"<UnwindTableRow<R>>::saved_args_size","value":"fn saved_args_size(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of args currently on the stack.","sig":null,"attributes":[{"value":"/ Returns the amount of args currently on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201485,"byte_end":201539,"line_start":2566,"line_end":2566,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201544,"byte_end":201547,"line_start":2567,"line_end":2567,"column_start":5,"column_end":8}},{"value":"/ When unwinding, if the personality function requested a change in IP,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201552,"byte_end":201625,"line_start":2568,"line_end":2568,"column_start":5,"column_end":78}},{"value":"/ the SP needs to be adjusted by saved_args_size.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201630,"byte_end":201681,"line_start":2569,"line_end":2569,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201846,"byte_end":201849,"line_start":2575,"line_end":2575,"column_start":12,"column_end":15},"name":"cfa","qualname":"<UnwindTableRow<R>>::cfa","value":"fn cfa(&Self) -> &CfaRule<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical frame address (CFA) recovery rule for this row.\n","sig":null,"attributes":[{"value":"/ Get the canonical frame address (CFA) recovery rule for this row.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201765,"byte_end":201834,"line_start":2574,"line_end":2574,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205603,"byte_end":205611,"line_start":2623,"line_end":2623,"column_start":12,"column_end":20},"name":"register","qualname":"<UnwindTableRow<R>>::register","value":"fn register(&Self, Register) -> RegisterRule<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the register recovery rule for the given register number.","sig":null,"attributes":[{"value":"/ Get the register recovery rule for the given register number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201903,"byte_end":201968,"line_start":2579,"line_end":2579,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201973,"byte_end":201976,"line_start":2580,"line_end":2580,"column_start":5,"column_end":8}},{"value":"/ The register number mapping is architecture dependent. For example, in","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":201981,"byte_end":202055,"line_start":2581,"line_end":2581,"column_start":5,"column_end":79}},{"value":"/ the x86-64 ABI the register number mapping is defined in Figure 3.36:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202060,"byte_end":202133,"line_start":2582,"line_end":2582,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202138,"byte_end":202141,"line_start":2583,"line_end":2583,"column_start":5,"column_end":8}},{"value":"/ > Figure 3.36: DWARF Register Number Mapping","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202146,"byte_end":202194,"line_start":2584,"line_end":2584,"column_start":5,"column_end":53}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202199,"byte_end":202204,"line_start":2585,"line_end":2585,"column_start":5,"column_end":10}},{"value":"/ > <table>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202209,"byte_end":202222,"line_start":2586,"line_end":2586,"column_start":5,"column_end":18}},{"value":"/ >   <tr><th>Register Name</th>                    <th>Number</th>  <th>Abbreviation</th></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202227,"byte_end":202324,"line_start":2587,"line_end":2587,"column_start":5,"column_end":102}},{"value":"/ >   <tr><td>General Purpose Register RAX</td>     <td>0</td>       <td>%rax</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202329,"byte_end":202418,"line_start":2588,"line_end":2588,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RDX</td>     <td>1</td>       <td>%rdx</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202423,"byte_end":202512,"line_start":2589,"line_end":2589,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RCX</td>     <td>2</td>       <td>%rcx</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202517,"byte_end":202606,"line_start":2590,"line_end":2590,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RBX</td>     <td>3</td>       <td>%rbx</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202611,"byte_end":202700,"line_start":2591,"line_end":2591,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RSI</td>     <td>4</td>       <td>%rsi</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202705,"byte_end":202794,"line_start":2592,"line_end":2592,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RDI</td>     <td>5</td>       <td>%rdi</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202799,"byte_end":202888,"line_start":2593,"line_end":2593,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RBP</td>     <td>6</td>       <td>%rbp</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202893,"byte_end":202982,"line_start":2594,"line_end":2594,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>Stack Pointer Register RSP</td>       <td>7</td>       <td>%rsp</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":202987,"byte_end":203076,"line_start":2595,"line_end":2595,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>Extended Integer Registers 8-15</td>  <td>8-15</td>    <td>%r8-%r15</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":203081,"byte_end":203174,"line_start":2596,"line_end":2596,"column_start":5,"column_end":98}},{"value":"/ >   <tr><td>Return Address RA</td>                <td>16</td>      <td></td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":203179,"byte_end":203264,"line_start":2597,"line_end":2597,"column_start":5,"column_end":90}},{"value":"/ >   <tr><td>Vector Registers 0–7</td>             <td>17-24</td>   <td>%xmm0–%xmm7</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":203269,"byte_end":203369,"line_start":2598,"line_end":2598,"column_start":5,"column_end":101}},{"value":"/ >   <tr><td>Extended Vector Registers 8–15</td>   <td>25-32</td>   <td>%xmm8–%xmm15</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":203374,"byte_end":203475,"line_start":2599,"line_end":2599,"column_start":5,"column_end":102}},{"value":"/ >   <tr><td>Floating Point Registers 0–7</td>     <td>33-40</td>   <td>%st0–%st7</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":203480,"byte_end":203578,"line_start":2600,"line_end":2600,"column_start":5,"column_end":99}},{"value":"/ >   <tr><td>MMX Registers 0–7</td>                <td>41-48</td>   <td>%mm0–%mm7</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":203583,"byte_end":203681,"line_start":2601,"line_end":2601,"column_start":5,"column_end":99}},{"value":"/ >   <tr><td>Flag Register</td>                    <td>49</td>      <td>%rFLAGS</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":203686,"byte_end":203778,"line_start":2602,"line_end":2602,"column_start":5,"column_end":97}},{"value":"/ >   <tr><td>Segment Register ES</td>              <td>50</td>      <td>%es</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":203783,"byte_end":203871,"line_start":2603,"line_end":2603,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register CS</td>              <td>51</td>      <td>%cs</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":203876,"byte_end":203964,"line_start":2604,"line_end":2604,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register SS</td>              <td>52</td>      <td>%ss</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":203969,"byte_end":204057,"line_start":2605,"line_end":2605,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register DS</td>              <td>53</td>      <td>%ds</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":204062,"byte_end":204150,"line_start":2606,"line_end":2606,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register FS</td>              <td>54</td>      <td>%fs</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":204155,"byte_end":204243,"line_start":2607,"line_end":2607,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register GS</td>              <td>55</td>      <td>%gs</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":204248,"byte_end":204336,"line_start":2608,"line_end":2608,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Reserved</td>                         <td>56-57</td>   <td></td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":204341,"byte_end":204426,"line_start":2609,"line_end":2609,"column_start":5,"column_end":90}},{"value":"/ >   <tr><td>FS Base address</td>                  <td>58</td>      <td>%fs.base</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":204431,"byte_end":204524,"line_start":2610,"line_end":2610,"column_start":5,"column_end":98}},{"value":"/ >   <tr><td>GS Base address</td>                  <td>59</td>      <td>%gs.base</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":204529,"byte_end":204622,"line_start":2611,"line_end":2611,"column_start":5,"column_end":98}},{"value":"/ >   <tr><td>Reserved</td>                         <td>60-61</td>   <td></td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":204627,"byte_end":204712,"line_start":2612,"line_end":2612,"column_start":5,"column_end":90}},{"value":"/ >   <tr><td>Task Register</td>                    <td>62</td>      <td>%tr</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":204717,"byte_end":204805,"line_start":2613,"line_end":2613,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>LDT Register</td>                     <td>63</td>      <td>%ldtr</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":204810,"byte_end":204900,"line_start":2614,"line_end":2614,"column_start":5,"column_end":95}},{"value":"/ >   <tr><td>128-bit Media Control and Status</td> <td>64</td>      <td>%mxcsr</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":204905,"byte_end":204996,"line_start":2615,"line_end":2615,"column_start":5,"column_end":96}},{"value":"/ >   <tr><td>x87 Control Word</td>                 <td>65</td>      <td>%fcw</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205001,"byte_end":205090,"line_start":2616,"line_end":2616,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>x87 Status Word</td>                  <td>66</td>      <td>%fsw</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205095,"byte_end":205184,"line_start":2617,"line_end":2617,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>Upper Vector Registers 16–31</td>     <td>67-82</td>   <td>%xmm16–%xmm31</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205189,"byte_end":205291,"line_start":2618,"line_end":2618,"column_start":5,"column_end":103}},{"value":"/ >   <tr><td>Reserved</td>                         <td>83-117</td>  <td></td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205296,"byte_end":205381,"line_start":2619,"line_end":2619,"column_start":5,"column_end":90}},{"value":"/ >   <tr><td>Vector Mask Registers 0–7</td>        <td>118-125</td> <td>%k0–%k7</td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205386,"byte_end":205482,"line_start":2620,"line_end":2620,"column_start":5,"column_end":97}},{"value":"/ >   <tr><td>Reserved</td>                         <td>126-129</td> <td></td></tr>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205487,"byte_end":205572,"line_start":2621,"line_end":2621,"column_start":5,"column_end":90}},{"value":"/ > </table>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205577,"byte_end":205591,"line_start":2622,"line_end":2622,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206323,"byte_end":206332,"line_start":2642,"line_end":2642,"column_start":12,"column_end":21},"name":"registers","qualname":"<UnwindTableRow<R>>::registers","value":"fn registers(&Self) -> RegisterRuleIter<, R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all defined register `(number, rule)` pairs.","sig":null,"attributes":[{"value":"/ Iterate over all defined register `(number, rule)` pairs.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205708,"byte_end":205769,"line_start":2627,"line_end":2627,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205774,"byte_end":205777,"line_start":2628,"line_end":2628,"column_start":5,"column_end":8}},{"value":"/ The rules are not iterated in any guaranteed order. Any register that","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205782,"byte_end":205855,"line_start":2629,"line_end":2629,"column_start":5,"column_end":78}},{"value":"/ does not make an appearance in the iterator implicitly has the rule","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205860,"byte_end":205931,"line_start":2630,"line_end":2630,"column_start":5,"column_end":76}},{"value":"/ `RegisterRule::Undefined`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205936,"byte_end":205966,"line_start":2631,"line_end":2631,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205971,"byte_end":205974,"line_start":2632,"line_end":2632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205979,"byte_end":205986,"line_start":2633,"line_end":2633,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{EndianSlice, LittleEndian, UnwindTableRow};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":205991,"byte_end":206052,"line_start":2634,"line_end":2634,"column_start":5,"column_end":66}},{"value":"/ # fn foo<'input>(unwind_table_row: UnwindTableRow<EndianSlice<'input, LittleEndian>>) {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206057,"byte_end":206148,"line_start":2635,"line_end":2635,"column_start":5,"column_end":96}},{"value":"/ for &(register, ref rule) in unwind_table_row.registers() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206153,"byte_end":206216,"line_start":2636,"line_end":2636,"column_start":5,"column_end":68}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206221,"byte_end":206235,"line_start":2637,"line_end":2637,"column_start":5,"column_end":19}},{"value":"/     # drop(register); drop(rule);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206240,"byte_end":206277,"line_start":2638,"line_end":2638,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206282,"byte_end":206287,"line_start":2639,"line_end":2639,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206292,"byte_end":206299,"line_start":2640,"line_end":2640,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206304,"byte_end":206311,"line_start":2641,"line_end":2641,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":7084},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206596,"byte_end":206613,"line_start":2651,"line_end":2651,"column_start":5,"column_end":22},"name":"RegisterAndOffset","qualname":"::read::cfi::CfaRule::RegisterAndOffset","value":"CfaRule::RegisterAndOffset { register, offset }","parent":{"krate":0,"index":7082},"children":[],"decl_id":null,"docs":" The CFA is given offset from the given register's value.\n","sig":null,"attributes":[{"value":"/ The CFA is given offset from the given register's value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206531,"byte_end":206591,"line_start":2650,"line_end":2650,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":7085},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206676,"byte_end":206684,"line_start":2653,"line_end":2653,"column_start":9,"column_end":17},"name":"register","qualname":"::read::cfi::CfaRule::RegisterAndOffset::register","value":"common::Register","parent":{"krate":0,"index":7084},"children":[],"decl_id":null,"docs":" The register containing the base value.\n","sig":null,"attributes":[{"value":"/ The register containing the base value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206624,"byte_end":206667,"line_start":2652,"line_end":2652,"column_start":9,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7086},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206759,"byte_end":206765,"line_start":2655,"line_end":2655,"column_start":9,"column_end":15},"name":"offset","qualname":"::read::cfi::CfaRule::RegisterAndOffset::offset","value":"i64","parent":{"krate":0,"index":7084},"children":[],"decl_id":null,"docs":" The offset from the register's base value.\n","sig":null,"attributes":[{"value":"/ The offset from the register's base value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206704,"byte_end":206750,"line_start":2654,"line_end":2654,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7087},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206878,"byte_end":206888,"line_start":2659,"line_end":2659,"column_start":5,"column_end":15},"name":"Expression","qualname":"::read::cfi::CfaRule::Expression","value":"CfaRule::Expression(Expression<R>)","parent":{"krate":0,"index":7082},"children":[],"decl_id":null,"docs":" The CFA is obtained by evaluating this `Reader` as a DWARF expression\n program.\n","sig":null,"attributes":[{"value":"/ The CFA is obtained by evaluating this `Reader` as a DWARF expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206783,"byte_end":206856,"line_start":2657,"line_end":2657,"column_start":5,"column_end":78}},{"value":"/ program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206861,"byte_end":206873,"line_start":2658,"line_end":2658,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":7089},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206889,"byte_end":206902,"line_start":2659,"line_end":2659,"column_start":16,"column_end":29},"name":"0","qualname":"::read::cfi::CfaRule::Expression::0","value":"read::op::Expression<R>","parent":{"krate":0,"index":7087},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7082},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206506,"byte_end":206513,"line_start":2649,"line_end":2649,"column_start":10,"column_end":17},"name":"CfaRule","qualname":"::read::cfi::CfaRule","value":"enum CfaRule<R> where R: Reader {\n    RegisterAndOffset {\n            register: Register,\n            offset: i64,\n        },\n    Expression(Expression<R>),\n}","parent":null,"children":[{"krate":0,"index":7084},{"krate":0,"index":7087}],"decl_id":null,"docs":" The canonical frame address (CFA) recovery rules.\n","sig":null,"attributes":[{"value":"/ The canonical frame address (CFA) recovery rules.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206404,"byte_end":206457,"line_start":2647,"line_end":2647,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206956,"byte_end":206963,"line_start":2663,"line_end":2663,"column_start":8,"column_end":15},"name":"default","qualname":"<CfaRule<R> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7109},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207852,"byte_end":207861,"line_start":2692,"line_end":2692,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::read::cfi::RegisterRule::Undefined","value":"RegisterRule::Undefined","parent":{"krate":0,"index":7107},"children":[],"decl_id":null,"docs":" > A register that has this rule has no recoverable value in the previous\n > frame. (By convention, it is not preserved by a callee.)\n","sig":null,"attributes":[{"value":"/ > A register that has this rule has no recoverable value in the previous","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207704,"byte_end":207780,"line_start":2690,"line_end":2690,"column_start":5,"column_end":81}},{"value":"/ > frame. (By convention, it is not preserved by a callee.)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207785,"byte_end":207847,"line_start":2691,"line_end":2691,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7111},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208043,"byte_end":208052,"line_start":2697,"line_end":2697,"column_start":5,"column_end":14},"name":"SameValue","qualname":"::read::cfi::RegisterRule::SameValue","value":"RegisterRule::SameValue","parent":{"krate":0,"index":7107},"children":[],"decl_id":null,"docs":" > This register has not been modified from the previous frame. (By\n > convention, it is preserved by the callee, but the callee has not\n > modified it.)\n","sig":null,"attributes":[{"value":"/ > This register has not been modified from the previous frame. (By","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207868,"byte_end":207938,"line_start":2694,"line_end":2694,"column_start":5,"column_end":75}},{"value":"/ > convention, it is preserved by the callee, but the callee has not","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207943,"byte_end":208014,"line_start":2695,"line_end":2695,"column_start":5,"column_end":76}},{"value":"/ > modified it.)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208019,"byte_end":208038,"line_start":2696,"line_end":2696,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7113},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208204,"byte_end":208210,"line_start":2701,"line_end":2701,"column_start":5,"column_end":11},"name":"Offset","qualname":"::read::cfi::RegisterRule::Offset","value":"RegisterRule::Offset(i64)","parent":{"krate":0,"index":7107},"children":[],"decl_id":null,"docs":" \"The previous value of this register is saved at the address CFA+N where\n CFA is the current CFA value and N is a signed offset.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is saved at the address CFA+N where","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208059,"byte_end":208135,"line_start":2699,"line_end":2699,"column_start":5,"column_end":81}},{"value":"/ CFA is the current CFA value and N is a signed offset.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208140,"byte_end":208199,"line_start":2700,"line_end":2700,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":7115},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208211,"byte_end":208214,"line_start":2701,"line_end":2701,"column_start":12,"column_end":15},"name":"0","qualname":"::read::cfi::RegisterRule::Offset::0","value":"i64","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7116},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208356,"byte_end":208365,"line_start":2705,"line_end":2705,"column_start":5,"column_end":14},"name":"ValOffset","qualname":"::read::cfi::RegisterRule::ValOffset","value":"RegisterRule::ValOffset(i64)","parent":{"krate":0,"index":7107},"children":[],"decl_id":null,"docs":" \"The previous value of this register is the value CFA+N where CFA is the\n current CFA value and N is a signed offset.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is the value CFA+N where CFA is the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208222,"byte_end":208298,"line_start":2703,"line_end":2703,"column_start":5,"column_end":81}},{"value":"/ current CFA value and N is a signed offset.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208303,"byte_end":208351,"line_start":2704,"line_end":2704,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":7118},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208366,"byte_end":208369,"line_start":2705,"line_end":2705,"column_start":15,"column_end":18},"name":"0","qualname":"::read::cfi::RegisterRule::ValOffset::0","value":"i64","parent":{"krate":0,"index":7116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7119},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208473,"byte_end":208481,"line_start":2709,"line_end":2709,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::cfi::RegisterRule::Register","value":"RegisterRule::Register(Register)","parent":{"krate":0,"index":7107},"children":[],"decl_id":null,"docs":" \"The previous value of this register is stored in another register\n numbered R.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is stored in another register","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208377,"byte_end":208447,"line_start":2707,"line_end":2707,"column_start":5,"column_end":75}},{"value":"/ numbered R.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208452,"byte_end":208468,"line_start":2708,"line_end":2708,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":7121},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208482,"byte_end":208490,"line_start":2709,"line_end":2709,"column_start":14,"column_end":22},"name":"0","qualname":"::read::cfi::RegisterRule::Register::0","value":"common::Register","parent":{"krate":0,"index":7119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7122},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208622,"byte_end":208632,"line_start":2713,"line_end":2713,"column_start":5,"column_end":15},"name":"Expression","qualname":"::read::cfi::RegisterRule::Expression","value":"RegisterRule::Expression(Expression<R>)","parent":{"krate":0,"index":7107},"children":[],"decl_id":null,"docs":" \"The previous value of this register is located at the address produced\n by executing the DWARF expression.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is located at the address produced","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208498,"byte_end":208573,"line_start":2711,"line_end":2711,"column_start":5,"column_end":80}},{"value":"/ by executing the DWARF expression.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208578,"byte_end":208617,"line_start":2712,"line_end":2712,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":7124},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208633,"byte_end":208646,"line_start":2713,"line_end":2713,"column_start":16,"column_end":29},"name":"0","qualname":"::read::cfi::RegisterRule::Expression::0","value":"read::op::Expression<R>","parent":{"krate":0,"index":7122},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7125},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208765,"byte_end":208778,"line_start":2717,"line_end":2717,"column_start":5,"column_end":18},"name":"ValExpression","qualname":"::read::cfi::RegisterRule::ValExpression","value":"RegisterRule::ValExpression(Expression<R>)","parent":{"krate":0,"index":7107},"children":[],"decl_id":null,"docs":" \"The previous value of this register is the value produced by executing\n the DWARF expression.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is the value produced by executing","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208654,"byte_end":208729,"line_start":2715,"line_end":2715,"column_start":5,"column_end":80}},{"value":"/ the DWARF expression.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208734,"byte_end":208760,"line_start":2716,"line_end":2716,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":7127},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208779,"byte_end":208792,"line_start":2717,"line_end":2717,"column_start":19,"column_end":32},"name":"0","qualname":"::read::cfi::RegisterRule::ValExpression::0","value":"read::op::Expression<R>","parent":{"krate":0,"index":7125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7128},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208881,"byte_end":208894,"line_start":2720,"line_end":2720,"column_start":5,"column_end":18},"name":"Architectural","qualname":"::read::cfi::RegisterRule::Architectural","value":"RegisterRule::Architectural","parent":{"krate":0,"index":7107},"children":[],"decl_id":null,"docs":" \"The rule is defined externally to this specification by the augmenter.\"\n","sig":null,"attributes":[{"value":"/ \"The rule is defined externally to this specification by the augmenter.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208800,"byte_end":208876,"line_start":2719,"line_end":2719,"column_start":5,"column_end":81}}]},{"kind":"Enum","id":{"krate":0,"index":7107},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207674,"byte_end":207686,"line_start":2689,"line_end":2689,"column_start":10,"column_end":22},"name":"RegisterRule","qualname":"::read::cfi::RegisterRule","value":"enum RegisterRule<R> where R: Reader {\n    Undefined,\n    SameValue,\n    Offset(i64),\n    ValOffset(i64),\n    Register(Register),\n    Expression(Expression<R>),\n    ValExpression(Expression<R>),\n    Architectural,\n}","parent":null,"children":[{"krate":0,"index":7109},{"krate":0,"index":7111},{"krate":0,"index":7113},{"krate":0,"index":7116},{"krate":0,"index":7119},{"krate":0,"index":7122},{"krate":0,"index":7125},{"krate":0,"index":7128}],"decl_id":null,"docs":" An entry in the abstract CFI table that describes how to find the value of a\n register.","sig":null,"attributes":[{"value":"/ An entry in the abstract CFI table that describes how to find the value of a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207353,"byte_end":207433,"line_start":2682,"line_end":2682,"column_start":1,"column_end":81}},{"value":"/ register.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207434,"byte_end":207447,"line_start":2683,"line_end":2683,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207448,"byte_end":207451,"line_start":2684,"line_end":2684,"column_start":1,"column_end":4}},{"value":"/ \"The register columns contain rules that describe whether a given register","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207452,"byte_end":207530,"line_start":2685,"line_end":2685,"column_start":1,"column_end":79}},{"value":"/ has been saved and the rule to find the value for the register in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207531,"byte_end":207604,"line_start":2686,"line_end":2686,"column_start":1,"column_end":74}},{"value":"/ previous frame.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207605,"byte_end":207625,"line_start":2687,"line_end":2687,"column_start":1,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":7149},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209800,"byte_end":209806,"line_start":2745,"line_end":2745,"column_start":5,"column_end":11},"name":"SetLoc","qualname":"::read::cfi::CallFrameInstruction::SetLoc","value":"CallFrameInstruction::SetLoc { address }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_set_loc\n >\n > The DW_CFA_set_loc instruction takes a single operand that represents\n > a target address. The required action is to create a new table row\n > using the specified address as the location. All other values in the\n > new row are initially identical to the current row. The new location\n > value is always greater than the current one. If the segment_size\n > field of this FDE's CIE is non- zero, the initial location is preceded\n > by a segment selector of the given length.\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_set_loc","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209237,"byte_end":209260,"line_start":2736,"line_end":2736,"column_start":5,"column_end":28}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209265,"byte_end":209270,"line_start":2737,"line_end":2737,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_set_loc instruction takes a single operand that represents","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209275,"byte_end":209350,"line_start":2738,"line_end":2738,"column_start":5,"column_end":80}},{"value":"/ > a target address. The required action is to create a new table row","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209355,"byte_end":209427,"line_start":2739,"line_end":2739,"column_start":5,"column_end":77}},{"value":"/ > using the specified address as the location. All other values in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209432,"byte_end":209506,"line_start":2740,"line_end":2740,"column_start":5,"column_end":79}},{"value":"/ > new row are initially identical to the current row. The new location","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209511,"byte_end":209585,"line_start":2741,"line_end":2741,"column_start":5,"column_end":79}},{"value":"/ > value is always greater than the current one. If the segment_size","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209590,"byte_end":209661,"line_start":2742,"line_end":2742,"column_start":5,"column_end":76}},{"value":"/ > field of this FDE's CIE is non- zero, the initial location is preceded","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209666,"byte_end":209742,"line_start":2743,"line_end":2743,"column_start":5,"column_end":81}},{"value":"/ > by a segment selector of the given length.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209747,"byte_end":209795,"line_start":2744,"line_end":2744,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":7150},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209849,"byte_end":209856,"line_start":2747,"line_end":2747,"column_start":9,"column_end":16},"name":"address","qualname":"::read::cfi::CallFrameInstruction::SetLoc::address","value":"u64","parent":{"krate":0,"index":7149},"children":[],"decl_id":null,"docs":" The target address.\n","sig":null,"attributes":[{"value":"/ The target address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209817,"byte_end":209840,"line_start":2746,"line_end":2746,"column_start":9,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":7151},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210483,"byte_end":210493,"line_start":2761,"line_end":2761,"column_start":5,"column_end":15},"name":"AdvanceLoc","qualname":"::read::cfi::CallFrameInstruction::AdvanceLoc","value":"CallFrameInstruction::AdvanceLoc { delta }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" The `AdvanceLoc` instruction is used for all of `DW_CFA_advance_loc` and\n `DW_CFA_advance_loc{1,2,4}`.","sig":null,"attributes":[{"value":"/ The `AdvanceLoc` instruction is used for all of `DW_CFA_advance_loc` and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209875,"byte_end":209951,"line_start":2750,"line_end":2750,"column_start":5,"column_end":81}},{"value":"/ `DW_CFA_advance_loc{1,2,4}`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209956,"byte_end":209988,"line_start":2751,"line_end":2751,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209993,"byte_end":209996,"line_start":2752,"line_end":2752,"column_start":5,"column_end":8}},{"value":"/ > 2. DW_CFA_advance_loc","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210001,"byte_end":210028,"line_start":2753,"line_end":2753,"column_start":5,"column_end":32}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210033,"byte_end":210038,"line_start":2754,"line_end":2754,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_advance instruction takes a single operand (encoded with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210043,"byte_end":210116,"line_start":2755,"line_end":2755,"column_start":5,"column_end":78}},{"value":"/ > the opcode) that represents a constant delta. The required action is","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210121,"byte_end":210195,"line_start":2756,"line_end":2756,"column_start":5,"column_end":79}},{"value":"/ > to create a new table row with a location value that is computed by","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210200,"byte_end":210273,"line_start":2757,"line_end":2757,"column_start":5,"column_end":78}},{"value":"/ > taking the current entry’s location value and adding the value of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210278,"byte_end":210351,"line_start":2758,"line_end":2758,"column_start":5,"column_end":76}},{"value":"/ > delta * code_alignment_factor. All other values in the new row are","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210356,"byte_end":210428,"line_start":2759,"line_end":2759,"column_start":5,"column_end":77}},{"value":"/ > initially identical to the current row.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210433,"byte_end":210478,"line_start":2760,"line_end":2760,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7152},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210562,"byte_end":210567,"line_start":2763,"line_end":2763,"column_start":9,"column_end":14},"name":"delta","qualname":"::read::cfi::CallFrameInstruction::AdvanceLoc::delta","value":"u32","parent":{"krate":0,"index":7151},"children":[],"decl_id":null,"docs":" The delta to be added to the current address.\n","sig":null,"attributes":[{"value":"/ The delta to be added to the current address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210504,"byte_end":210553,"line_start":2762,"line_end":2762,"column_start":9,"column_end":58}}]},{"kind":"StructVariant","id":{"krate":0,"index":7153},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210923,"byte_end":210929,"line_start":2773,"line_end":2773,"column_start":5,"column_end":11},"name":"DefCfa","qualname":"::read::cfi::CallFrameInstruction::DefCfa","value":"CallFrameInstruction::DefCfa { register, offset }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_def_cfa\n >\n > The DW_CFA_def_cfa instruction takes two unsigned LEB128 operands\n > representing a register number and a (non-factored) offset. The\n > required action is to define the current CFA rule to use the provided\n > register and offset.\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_def_cfa","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210624,"byte_end":210647,"line_start":2767,"line_end":2767,"column_start":5,"column_end":28}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210652,"byte_end":210657,"line_start":2768,"line_end":2768,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa instruction takes two unsigned LEB128 operands","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210662,"byte_end":210733,"line_start":2769,"line_end":2769,"column_start":5,"column_end":76}},{"value":"/ > representing a register number and a (non-factored) offset. The","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210738,"byte_end":210807,"line_start":2770,"line_end":2770,"column_start":5,"column_end":74}},{"value":"/ > required action is to define the current CFA rule to use the provided","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210812,"byte_end":210887,"line_start":2771,"line_end":2771,"column_start":5,"column_end":80}},{"value":"/ > register and offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210892,"byte_end":210918,"line_start":2772,"line_end":2772,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":7154},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210982,"byte_end":210990,"line_start":2775,"line_end":2775,"column_start":9,"column_end":17},"name":"register","qualname":"::read::cfi::CallFrameInstruction::DefCfa::register","value":"common::Register","parent":{"krate":0,"index":7153},"children":[],"decl_id":null,"docs":" The target register's number.\n","sig":null,"attributes":[{"value":"/ The target register's number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":210940,"byte_end":210973,"line_start":2774,"line_end":2774,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7155},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211047,"byte_end":211053,"line_start":2777,"line_end":2777,"column_start":9,"column_end":15},"name":"offset","qualname":"::read::cfi::CallFrameInstruction::DefCfa::offset","value":"u64","parent":{"krate":0,"index":7153},"children":[],"decl_id":null,"docs":" The non-factored offset.\n","sig":null,"attributes":[{"value":"/ The non-factored offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211010,"byte_end":211038,"line_start":2776,"line_end":2776,"column_start":9,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":7156},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211478,"byte_end":211486,"line_start":2787,"line_end":2787,"column_start":5,"column_end":13},"name":"DefCfaSf","qualname":"::read::cfi::CallFrameInstruction::DefCfaSf","value":"CallFrameInstruction::DefCfaSf { register, factored_offset }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 2. DW_CFA_def_cfa_sf\n >\n > The DW_CFA_def_cfa_sf instruction takes two operands: an unsigned\n > LEB128 value representing a register number and a signed LEB128\n > factored offset. This instruction is identical to DW_CFA_def_cfa\n > except that the second operand is signed and factored. The resulting\n > offset is factored_offset * data_alignment_factor.\n","sig":null,"attributes":[{"value":"/ > 2. DW_CFA_def_cfa_sf","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211072,"byte_end":211098,"line_start":2780,"line_end":2780,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211103,"byte_end":211108,"line_start":2781,"line_end":2781,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_sf instruction takes two operands: an unsigned","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211113,"byte_end":211184,"line_start":2782,"line_end":2782,"column_start":5,"column_end":76}},{"value":"/ > LEB128 value representing a register number and a signed LEB128","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211189,"byte_end":211258,"line_start":2783,"line_end":2783,"column_start":5,"column_end":74}},{"value":"/ > factored offset. This instruction is identical to DW_CFA_def_cfa","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211263,"byte_end":211333,"line_start":2784,"line_end":2784,"column_start":5,"column_end":75}},{"value":"/ > except that the second operand is signed and factored. The resulting","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211338,"byte_end":211412,"line_start":2785,"line_end":2785,"column_start":5,"column_end":79}},{"value":"/ > offset is factored_offset * data_alignment_factor.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211417,"byte_end":211473,"line_start":2786,"line_end":2786,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":7157},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211539,"byte_end":211547,"line_start":2789,"line_end":2789,"column_start":9,"column_end":17},"name":"register","qualname":"::read::cfi::CallFrameInstruction::DefCfaSf::register","value":"common::Register","parent":{"krate":0,"index":7156},"children":[],"decl_id":null,"docs":" The target register's number.\n","sig":null,"attributes":[{"value":"/ The target register's number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211497,"byte_end":211530,"line_start":2788,"line_end":2788,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7158},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211600,"byte_end":211615,"line_start":2791,"line_end":2791,"column_start":9,"column_end":24},"name":"factored_offset","qualname":"::read::cfi::CallFrameInstruction::DefCfaSf::factored_offset","value":"i64","parent":{"krate":0,"index":7156},"children":[],"decl_id":null,"docs":" The factored offset.\n","sig":null,"attributes":[{"value":"/ The factored offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211567,"byte_end":211591,"line_start":2790,"line_end":2790,"column_start":9,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":7159},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212049,"byte_end":212063,"line_start":2801,"line_end":2801,"column_start":5,"column_end":19},"name":"DefCfaRegister","qualname":"::read::cfi::CallFrameInstruction::DefCfaRegister","value":"CallFrameInstruction::DefCfaRegister { register }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 3. DW_CFA_def_cfa_register\n >\n > The DW_CFA_def_cfa_register instruction takes a single unsigned LEB128\n > operand representing a register number. The required action is to\n > define the current CFA rule to use the provided register (but to keep\n > the old offset). This operation is valid only if the current CFA rule\n > is defined to use a register and offset.\n","sig":null,"attributes":[{"value":"/ > 3. DW_CFA_def_cfa_register","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211634,"byte_end":211666,"line_start":2794,"line_end":2794,"column_start":5,"column_end":37}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211671,"byte_end":211676,"line_start":2795,"line_end":2795,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_register instruction takes a single unsigned LEB128","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211681,"byte_end":211757,"line_start":2796,"line_end":2796,"column_start":5,"column_end":81}},{"value":"/ > operand representing a register number. The required action is to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211762,"byte_end":211833,"line_start":2797,"line_end":2797,"column_start":5,"column_end":76}},{"value":"/ > define the current CFA rule to use the provided register (but to keep","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211838,"byte_end":211913,"line_start":2798,"line_end":2798,"column_start":5,"column_end":80}},{"value":"/ > the old offset). This operation is valid only if the current CFA rule","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211918,"byte_end":211993,"line_start":2799,"line_end":2799,"column_start":5,"column_end":80}},{"value":"/ > is defined to use a register and offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":211998,"byte_end":212044,"line_start":2800,"line_end":2800,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":7160},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212116,"byte_end":212124,"line_start":2803,"line_end":2803,"column_start":9,"column_end":17},"name":"register","qualname":"::read::cfi::CallFrameInstruction::DefCfaRegister::register","value":"common::Register","parent":{"krate":0,"index":7159},"children":[],"decl_id":null,"docs":" The target register's number.\n","sig":null,"attributes":[{"value":"/ The target register's number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212074,"byte_end":212107,"line_start":2802,"line_end":2802,"column_start":9,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":7161},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212565,"byte_end":212577,"line_start":2813,"line_end":2813,"column_start":5,"column_end":17},"name":"DefCfaOffset","qualname":"::read::cfi::CallFrameInstruction::DefCfaOffset","value":"CallFrameInstruction::DefCfaOffset { offset }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 4. DW_CFA_def_cfa_offset\n >\n > The DW_CFA_def_cfa_offset instruction takes a single unsigned LEB128\n > operand representing a (non-factored) offset. The required action is\n > to define the current CFA rule to use the provided offset (but to keep\n > the old register). This operation is valid only if the current CFA\n > rule is defined to use a register and offset.\n","sig":null,"attributes":[{"value":"/ > 4. DW_CFA_def_cfa_offset","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212148,"byte_end":212178,"line_start":2806,"line_end":2806,"column_start":5,"column_end":35}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212183,"byte_end":212188,"line_start":2807,"line_end":2807,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_offset instruction takes a single unsigned LEB128","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212193,"byte_end":212267,"line_start":2808,"line_end":2808,"column_start":5,"column_end":79}},{"value":"/ > operand representing a (non-factored) offset. The required action is","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212272,"byte_end":212346,"line_start":2809,"line_end":2809,"column_start":5,"column_end":79}},{"value":"/ > to define the current CFA rule to use the provided offset (but to keep","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212351,"byte_end":212427,"line_start":2810,"line_end":2810,"column_start":5,"column_end":81}},{"value":"/ > the old register). This operation is valid only if the current CFA","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212432,"byte_end":212504,"line_start":2811,"line_end":2811,"column_start":5,"column_end":77}},{"value":"/ > rule is defined to use a register and offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212509,"byte_end":212560,"line_start":2812,"line_end":2812,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":7162},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212625,"byte_end":212631,"line_start":2815,"line_end":2815,"column_start":9,"column_end":15},"name":"offset","qualname":"::read::cfi::CallFrameInstruction::DefCfaOffset::offset","value":"u64","parent":{"krate":0,"index":7161},"children":[],"decl_id":null,"docs":" The non-factored offset.\n","sig":null,"attributes":[{"value":"/ The non-factored offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212588,"byte_end":212616,"line_start":2814,"line_end":2814,"column_start":9,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":7163},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213123,"byte_end":213137,"line_start":2826,"line_end":2826,"column_start":5,"column_end":19},"name":"DefCfaOffsetSf","qualname":"::read::cfi::CallFrameInstruction::DefCfaOffsetSf","value":"CallFrameInstruction::DefCfaOffsetSf { factored_offset }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 5. DW_CFA_def_cfa_offset_sf\n >\n > The DW_CFA_def_cfa_offset_sf instruction takes a signed LEB128 operand\n > representing a factored offset. This instruction is identical to\n > DW_CFA_def_cfa_offset except that the operand is signed and\n > factored. The resulting offset is factored_offset *\n > data_alignment_factor. This operation is valid only if the current CFA\n > rule is defined to use a register and offset.\n","sig":null,"attributes":[{"value":"/ > 5. DW_CFA_def_cfa_offset_sf","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212650,"byte_end":212683,"line_start":2818,"line_end":2818,"column_start":5,"column_end":38}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212688,"byte_end":212693,"line_start":2819,"line_end":2819,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_offset_sf instruction takes a signed LEB128 operand","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212698,"byte_end":212774,"line_start":2820,"line_end":2820,"column_start":5,"column_end":81}},{"value":"/ > representing a factored offset. This instruction is identical to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212779,"byte_end":212849,"line_start":2821,"line_end":2821,"column_start":5,"column_end":75}},{"value":"/ > DW_CFA_def_cfa_offset except that the operand is signed and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212854,"byte_end":212919,"line_start":2822,"line_end":2822,"column_start":5,"column_end":70}},{"value":"/ > factored. The resulting offset is factored_offset *","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212924,"byte_end":212981,"line_start":2823,"line_end":2823,"column_start":5,"column_end":62}},{"value":"/ > data_alignment_factor. This operation is valid only if the current CFA","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":212986,"byte_end":213062,"line_start":2824,"line_end":2824,"column_start":5,"column_end":81}},{"value":"/ > rule is defined to use a register and offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213067,"byte_end":213118,"line_start":2825,"line_end":2825,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":7164},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213181,"byte_end":213196,"line_start":2828,"line_end":2828,"column_start":9,"column_end":24},"name":"factored_offset","qualname":"::read::cfi::CallFrameInstruction::DefCfaOffsetSf::factored_offset","value":"i64","parent":{"krate":0,"index":7163},"children":[],"decl_id":null,"docs":" The factored offset.\n","sig":null,"attributes":[{"value":"/ The factored offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213148,"byte_end":213172,"line_start":2827,"line_end":2827,"column_start":9,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":7165},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213540,"byte_end":213556,"line_start":2837,"line_end":2837,"column_start":5,"column_end":21},"name":"DefCfaExpression","qualname":"::read::cfi::CallFrameInstruction::DefCfaExpression","value":"CallFrameInstruction::DefCfaExpression { expression }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 6. DW_CFA_def_cfa_expression\n >\n > The DW_CFA_def_cfa_expression instruction takes a single operand\n > encoded as a DW_FORM_exprloc value representing a DWARF\n > expression. The required action is to establish that expression as the\n > means by which the current CFA is computed.\n","sig":null,"attributes":[{"value":"/ > 6. DW_CFA_def_cfa_expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213215,"byte_end":213249,"line_start":2831,"line_end":2831,"column_start":5,"column_end":39}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213254,"byte_end":213259,"line_start":2832,"line_end":2832,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_expression instruction takes a single operand","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213264,"byte_end":213334,"line_start":2833,"line_end":2833,"column_start":5,"column_end":75}},{"value":"/ > encoded as a DW_FORM_exprloc value representing a DWARF","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213339,"byte_end":213400,"line_start":2834,"line_end":2834,"column_start":5,"column_end":66}},{"value":"/ > expression. The required action is to establish that expression as the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213405,"byte_end":213481,"line_start":2835,"line_end":2835,"column_start":5,"column_end":81}},{"value":"/ > means by which the current CFA is computed.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213486,"byte_end":213535,"line_start":2836,"line_end":2836,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":7166},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213601,"byte_end":213611,"line_start":2839,"line_end":2839,"column_start":9,"column_end":19},"name":"expression","qualname":"::read::cfi::CallFrameInstruction::DefCfaExpression::expression","value":"read::op::Expression<R>","parent":{"krate":0,"index":7165},"children":[],"decl_id":null,"docs":" The DWARF expression.\n","sig":null,"attributes":[{"value":"/ The DWARF expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213567,"byte_end":213592,"line_start":2838,"line_end":2838,"column_start":9,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":7167},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213945,"byte_end":213954,"line_start":2848,"line_end":2848,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::read::cfi::CallFrameInstruction::Undefined","value":"CallFrameInstruction::Undefined { register }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_undefined\n >\n > The DW_CFA_undefined instruction takes a single unsigned LEB128\n > operand that represents a register number. The required action is to\n > set the rule for the specified register to “undefined.”\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_undefined","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213682,"byte_end":213707,"line_start":2843,"line_end":2843,"column_start":5,"column_end":30}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213712,"byte_end":213717,"line_start":2844,"line_end":2844,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_undefined instruction takes a single unsigned LEB128","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213722,"byte_end":213791,"line_start":2845,"line_end":2845,"column_start":5,"column_end":74}},{"value":"/ > operand that represents a register number. The required action is to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213796,"byte_end":213870,"line_start":2846,"line_end":2846,"column_start":5,"column_end":79}},{"value":"/ > set the rule for the specified register to “undefined.”","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213875,"byte_end":213940,"line_start":2847,"line_end":2847,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":7168},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214007,"byte_end":214015,"line_start":2850,"line_end":2850,"column_start":9,"column_end":17},"name":"register","qualname":"::read::cfi::CallFrameInstruction::Undefined::register","value":"common::Register","parent":{"krate":0,"index":7167},"children":[],"decl_id":null,"docs":" The target register's number.\n","sig":null,"attributes":[{"value":"/ The target register's number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":213965,"byte_end":213998,"line_start":2849,"line_end":2849,"column_start":9,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":7169},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214305,"byte_end":214314,"line_start":2858,"line_end":2858,"column_start":5,"column_end":14},"name":"SameValue","qualname":"::read::cfi::CallFrameInstruction::SameValue","value":"CallFrameInstruction::SameValue { register }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 2. DW_CFA_same_value\n >\n > The DW_CFA_same_value instruction takes a single unsigned LEB128\n > operand that represents a register number. The required action is to\n > set the rule for the specified register to “same value.”\n","sig":null,"attributes":[{"value":"/ > 2. DW_CFA_same_value","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214039,"byte_end":214065,"line_start":2853,"line_end":2853,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214070,"byte_end":214075,"line_start":2854,"line_end":2854,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_same_value instruction takes a single unsigned LEB128","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214080,"byte_end":214150,"line_start":2855,"line_end":2855,"column_start":5,"column_end":75}},{"value":"/ > operand that represents a register number. The required action is to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214155,"byte_end":214229,"line_start":2856,"line_end":2856,"column_start":5,"column_end":79}},{"value":"/ > set the rule for the specified register to “same value.”","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214234,"byte_end":214300,"line_start":2857,"line_end":2857,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":7170},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214367,"byte_end":214375,"line_start":2860,"line_end":2860,"column_start":9,"column_end":17},"name":"register","qualname":"::read::cfi::CallFrameInstruction::SameValue::register","value":"common::Register","parent":{"krate":0,"index":7169},"children":[],"decl_id":null,"docs":" The target register's number.\n","sig":null,"attributes":[{"value":"/ The target register's number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214325,"byte_end":214358,"line_start":2859,"line_end":2859,"column_start":9,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":7171},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214936,"byte_end":214942,"line_start":2873,"line_end":2873,"column_start":5,"column_end":11},"name":"Offset","qualname":"::read::cfi::CallFrameInstruction::Offset","value":"CallFrameInstruction::Offset { register, factored_offset }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" The `Offset` instruction represents both `DW_CFA_offset` and\n `DW_CFA_offset_extended`.","sig":null,"attributes":[{"value":"/ The `Offset` instruction represents both `DW_CFA_offset` and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214399,"byte_end":214463,"line_start":2863,"line_end":2863,"column_start":5,"column_end":69}},{"value":"/ `DW_CFA_offset_extended`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214468,"byte_end":214497,"line_start":2864,"line_end":2864,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214502,"byte_end":214505,"line_start":2865,"line_end":2865,"column_start":5,"column_end":8}},{"value":"/ > 3. DW_CFA_offset","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214510,"byte_end":214532,"line_start":2866,"line_end":2866,"column_start":5,"column_end":27}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214537,"byte_end":214542,"line_start":2867,"line_end":2867,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_offset instruction takes two operands: a register number","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214547,"byte_end":214620,"line_start":2868,"line_end":2868,"column_start":5,"column_end":78}},{"value":"/ > (encoded with the opcode) and an unsigned LEB128 constant representing","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214625,"byte_end":214701,"line_start":2869,"line_end":2869,"column_start":5,"column_end":81}},{"value":"/ > a factored offset. The required action is to change the rule for the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214706,"byte_end":214780,"line_start":2870,"line_end":2870,"column_start":5,"column_end":79}},{"value":"/ > register indicated by the register number to be an offset(N) rule","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214785,"byte_end":214856,"line_start":2871,"line_end":2871,"column_start":5,"column_end":76}},{"value":"/ > where the value of N is factored offset * data_alignment_factor.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214861,"byte_end":214931,"line_start":2872,"line_end":2872,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":7172},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214995,"byte_end":215003,"line_start":2875,"line_end":2875,"column_start":9,"column_end":17},"name":"register","qualname":"::read::cfi::CallFrameInstruction::Offset::register","value":"common::Register","parent":{"krate":0,"index":7171},"children":[],"decl_id":null,"docs":" The target register's number.\n","sig":null,"attributes":[{"value":"/ The target register's number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":214953,"byte_end":214986,"line_start":2874,"line_end":2874,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7173},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215056,"byte_end":215071,"line_start":2877,"line_end":2877,"column_start":9,"column_end":24},"name":"factored_offset","qualname":"::read::cfi::CallFrameInstruction::Offset::factored_offset","value":"u64","parent":{"krate":0,"index":7171},"children":[],"decl_id":null,"docs":" The factored offset.\n","sig":null,"attributes":[{"value":"/ The factored offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215023,"byte_end":215047,"line_start":2876,"line_end":2876,"column_start":9,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":7174},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215530,"byte_end":215546,"line_start":2888,"line_end":2888,"column_start":5,"column_end":21},"name":"OffsetExtendedSf","qualname":"::read::cfi::CallFrameInstruction::OffsetExtendedSf","value":"CallFrameInstruction::OffsetExtendedSf { register, factored_offset }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 5. DW_CFA_offset_extended_sf\n >\n > The DW_CFA_offset_extended_sf instruction takes two operands: an\n > unsigned LEB128 value representing a register number and a signed\n > LEB128 factored offset. This instruction is identical to\n > DW_CFA_offset_extended except that the second operand is signed and\n > factored. The resulting offset is factored_offset *\n > data_alignment_factor.\n","sig":null,"attributes":[{"value":"/ > 5. DW_CFA_offset_extended_sf","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215090,"byte_end":215124,"line_start":2880,"line_end":2880,"column_start":5,"column_end":39}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215129,"byte_end":215134,"line_start":2881,"line_end":2881,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_offset_extended_sf instruction takes two operands: an","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215139,"byte_end":215209,"line_start":2882,"line_end":2882,"column_start":5,"column_end":75}},{"value":"/ > unsigned LEB128 value representing a register number and a signed","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215214,"byte_end":215285,"line_start":2883,"line_end":2883,"column_start":5,"column_end":76}},{"value":"/ > LEB128 factored offset. This instruction is identical to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215290,"byte_end":215352,"line_start":2884,"line_end":2884,"column_start":5,"column_end":67}},{"value":"/ > DW_CFA_offset_extended except that the second operand is signed and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215357,"byte_end":215430,"line_start":2885,"line_end":2885,"column_start":5,"column_end":78}},{"value":"/ > factored. The resulting offset is factored_offset *","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215435,"byte_end":215492,"line_start":2886,"line_end":2886,"column_start":5,"column_end":62}},{"value":"/ > data_alignment_factor.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215497,"byte_end":215525,"line_start":2887,"line_end":2887,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7175},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215599,"byte_end":215607,"line_start":2890,"line_end":2890,"column_start":9,"column_end":17},"name":"register","qualname":"::read::cfi::CallFrameInstruction::OffsetExtendedSf::register","value":"common::Register","parent":{"krate":0,"index":7174},"children":[],"decl_id":null,"docs":" The target register's number.\n","sig":null,"attributes":[{"value":"/ The target register's number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215557,"byte_end":215590,"line_start":2889,"line_end":2889,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7176},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215660,"byte_end":215675,"line_start":2892,"line_end":2892,"column_start":9,"column_end":24},"name":"factored_offset","qualname":"::read::cfi::CallFrameInstruction::OffsetExtendedSf::factored_offset","value":"i64","parent":{"krate":0,"index":7174},"children":[],"decl_id":null,"docs":" The factored offset.\n","sig":null,"attributes":[{"value":"/ The factored offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215627,"byte_end":215651,"line_start":2891,"line_end":2891,"column_start":9,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":7177},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216092,"byte_end":216101,"line_start":2902,"line_end":2902,"column_start":5,"column_end":14},"name":"ValOffset","qualname":"::read::cfi::CallFrameInstruction::ValOffset","value":"CallFrameInstruction::ValOffset { register, factored_offset }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 6. DW_CFA_val_offset\n >\n > The DW_CFA_val_offset instruction takes two unsigned LEB128 operands\n > representing a register number and a factored offset. The required\n > action is to change the rule for the register indicated by the\n > register number to be a val_offset(N) rule where the value of N is\n > factored_offset * data_alignment_factor.\n","sig":null,"attributes":[{"value":"/ > 6. DW_CFA_val_offset","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215694,"byte_end":215720,"line_start":2895,"line_end":2895,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215725,"byte_end":215730,"line_start":2896,"line_end":2896,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_val_offset instruction takes two unsigned LEB128 operands","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215735,"byte_end":215809,"line_start":2897,"line_end":2897,"column_start":5,"column_end":79}},{"value":"/ > representing a register number and a factored offset. The required","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215814,"byte_end":215886,"line_start":2898,"line_end":2898,"column_start":5,"column_end":77}},{"value":"/ > action is to change the rule for the register indicated by the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215891,"byte_end":215959,"line_start":2899,"line_end":2899,"column_start":5,"column_end":73}},{"value":"/ > register number to be a val_offset(N) rule where the value of N is","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":215964,"byte_end":216036,"line_start":2900,"line_end":2900,"column_start":5,"column_end":77}},{"value":"/ > factored_offset * data_alignment_factor.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216041,"byte_end":216087,"line_start":2901,"line_end":2901,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":7178},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216154,"byte_end":216162,"line_start":2904,"line_end":2904,"column_start":9,"column_end":17},"name":"register","qualname":"::read::cfi::CallFrameInstruction::ValOffset::register","value":"common::Register","parent":{"krate":0,"index":7177},"children":[],"decl_id":null,"docs":" The target register's number.\n","sig":null,"attributes":[{"value":"/ The target register's number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216112,"byte_end":216145,"line_start":2903,"line_end":2903,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7179},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216215,"byte_end":216230,"line_start":2906,"line_end":2906,"column_start":9,"column_end":24},"name":"factored_offset","qualname":"::read::cfi::CallFrameInstruction::ValOffset::factored_offset","value":"u64","parent":{"krate":0,"index":7177},"children":[],"decl_id":null,"docs":" The factored offset.\n","sig":null,"attributes":[{"value":"/ The factored offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216182,"byte_end":216206,"line_start":2905,"line_end":2905,"column_start":9,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":7180},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216664,"byte_end":216675,"line_start":2916,"line_end":2916,"column_start":5,"column_end":16},"name":"ValOffsetSf","qualname":"::read::cfi::CallFrameInstruction::ValOffsetSf","value":"CallFrameInstruction::ValOffsetSf { register, factored_offset }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 7. DW_CFA_val_offset_sf\n >\n > The DW_CFA_val_offset_sf instruction takes two operands: an unsigned\n > LEB128 value representing a register number and a signed LEB128\n > factored offset. This instruction is identical to DW_CFA_val_offset\n > except that the second operand is signed and factored. The resulting\n > offset is factored_offset * data_alignment_factor.\n","sig":null,"attributes":[{"value":"/ > 7. DW_CFA_val_offset_sf","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216249,"byte_end":216278,"line_start":2909,"line_end":2909,"column_start":5,"column_end":34}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216283,"byte_end":216288,"line_start":2910,"line_end":2910,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_val_offset_sf instruction takes two operands: an unsigned","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216293,"byte_end":216367,"line_start":2911,"line_end":2911,"column_start":5,"column_end":79}},{"value":"/ > LEB128 value representing a register number and a signed LEB128","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216372,"byte_end":216441,"line_start":2912,"line_end":2912,"column_start":5,"column_end":74}},{"value":"/ > factored offset. This instruction is identical to DW_CFA_val_offset","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216446,"byte_end":216519,"line_start":2913,"line_end":2913,"column_start":5,"column_end":78}},{"value":"/ > except that the second operand is signed and factored. The resulting","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216524,"byte_end":216598,"line_start":2914,"line_end":2914,"column_start":5,"column_end":79}},{"value":"/ > offset is factored_offset * data_alignment_factor.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216603,"byte_end":216659,"line_start":2915,"line_end":2915,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":7181},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216728,"byte_end":216736,"line_start":2918,"line_end":2918,"column_start":9,"column_end":17},"name":"register","qualname":"::read::cfi::CallFrameInstruction::ValOffsetSf::register","value":"common::Register","parent":{"krate":0,"index":7180},"children":[],"decl_id":null,"docs":" The target register's number.\n","sig":null,"attributes":[{"value":"/ The target register's number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216686,"byte_end":216719,"line_start":2917,"line_end":2917,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7182},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216789,"byte_end":216804,"line_start":2920,"line_end":2920,"column_start":9,"column_end":24},"name":"factored_offset","qualname":"::read::cfi::CallFrameInstruction::ValOffsetSf::factored_offset","value":"i64","parent":{"krate":0,"index":7180},"children":[],"decl_id":null,"docs":" The factored offset.\n","sig":null,"attributes":[{"value":"/ The factored offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216756,"byte_end":216780,"line_start":2919,"line_end":2919,"column_start":9,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":7183},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217112,"byte_end":217120,"line_start":2929,"line_end":2929,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::cfi::CallFrameInstruction::Register","value":"CallFrameInstruction::Register { dest_register, src_register }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 8. DW_CFA_register\n >\n > The DW_CFA_register instruction takes two unsigned LEB128 operands\n > representing register numbers. The required action is to set the rule\n > for the first register to be register(R) where R is the second\n > register.\n","sig":null,"attributes":[{"value":"/ > 8. DW_CFA_register","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216823,"byte_end":216847,"line_start":2923,"line_end":2923,"column_start":5,"column_end":29}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216852,"byte_end":216857,"line_start":2924,"line_end":2924,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_register instruction takes two unsigned LEB128 operands","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216862,"byte_end":216934,"line_start":2925,"line_end":2925,"column_start":5,"column_end":77}},{"value":"/ > representing register numbers. The required action is to set the rule","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":216939,"byte_end":217014,"line_start":2926,"line_end":2926,"column_start":5,"column_end":80}},{"value":"/ > for the first register to be register(R) where R is the second","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217019,"byte_end":217087,"line_start":2927,"line_end":2927,"column_start":5,"column_end":73}},{"value":"/ > register.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217092,"byte_end":217107,"line_start":2928,"line_end":2928,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":7184},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217199,"byte_end":217212,"line_start":2931,"line_end":2931,"column_start":9,"column_end":22},"name":"dest_register","qualname":"::read::cfi::CallFrameInstruction::Register::dest_register","value":"common::Register","parent":{"krate":0,"index":7183},"children":[],"decl_id":null,"docs":" The number of the register whose rule is being changed.\n","sig":null,"attributes":[{"value":"/ The number of the register whose rule is being changed.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217131,"byte_end":217190,"line_start":2930,"line_end":2930,"column_start":9,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":7185},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217330,"byte_end":217342,"line_start":2934,"line_end":2934,"column_start":9,"column_end":21},"name":"src_register","qualname":"::read::cfi::CallFrameInstruction::Register::src_register","value":"common::Register","parent":{"krate":0,"index":7183},"children":[],"decl_id":null,"docs":" The number of the register where the other register's value can be\n found.\n","sig":null,"attributes":[{"value":"/ The number of the register where the other register's value can be","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217232,"byte_end":217302,"line_start":2932,"line_end":2932,"column_start":9,"column_end":79}},{"value":"/ found.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217311,"byte_end":217321,"line_start":2933,"line_end":2933,"column_start":9,"column_end":19}}]},{"kind":"StructVariant","id":{"krate":0,"index":7186},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217957,"byte_end":217967,"line_start":2946,"line_end":2946,"column_start":5,"column_end":15},"name":"Expression","qualname":"::read::cfi::CallFrameInstruction::Expression","value":"CallFrameInstruction::Expression { register, expression }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 9. DW_CFA_expression\n >\n > The DW_CFA_expression instruction takes two operands: an unsigned\n > LEB128 value representing a register number, and a DW_FORM_block value\n > representing a DWARF expression. The required action is to change the\n > rule for the register indicated by the register number to be an\n > expression(E) rule where E is the DWARF expression. That is, the DWARF\n > expression computes the address. The value of the CFA is pushed on the\n > DWARF evaluation stack prior to execution of the DWARF expression.\n","sig":null,"attributes":[{"value":"/ > 9. DW_CFA_expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217366,"byte_end":217392,"line_start":2937,"line_end":2937,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217397,"byte_end":217402,"line_start":2938,"line_end":2938,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_expression instruction takes two operands: an unsigned","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217407,"byte_end":217478,"line_start":2939,"line_end":2939,"column_start":5,"column_end":76}},{"value":"/ > LEB128 value representing a register number, and a DW_FORM_block value","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217483,"byte_end":217559,"line_start":2940,"line_end":2940,"column_start":5,"column_end":81}},{"value":"/ > representing a DWARF expression. The required action is to change the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217564,"byte_end":217639,"line_start":2941,"line_end":2941,"column_start":5,"column_end":80}},{"value":"/ > rule for the register indicated by the register number to be an","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217644,"byte_end":217713,"line_start":2942,"line_end":2942,"column_start":5,"column_end":74}},{"value":"/ > expression(E) rule where E is the DWARF expression. That is, the DWARF","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217718,"byte_end":217794,"line_start":2943,"line_end":2943,"column_start":5,"column_end":81}},{"value":"/ > expression computes the address. The value of the CFA is pushed on the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217799,"byte_end":217875,"line_start":2944,"line_end":2944,"column_start":5,"column_end":81}},{"value":"/ > DWARF evaluation stack prior to execution of the DWARF expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217880,"byte_end":217952,"line_start":2945,"line_end":2945,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":7187},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218020,"byte_end":218028,"line_start":2948,"line_end":2948,"column_start":9,"column_end":17},"name":"register","qualname":"::read::cfi::CallFrameInstruction::Expression::register","value":"common::Register","parent":{"krate":0,"index":7186},"children":[],"decl_id":null,"docs":" The target register's number.\n","sig":null,"attributes":[{"value":"/ The target register's number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":217978,"byte_end":218011,"line_start":2947,"line_end":2947,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7188},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218082,"byte_end":218092,"line_start":2950,"line_end":2950,"column_start":9,"column_end":19},"name":"expression","qualname":"::read::cfi::CallFrameInstruction::Expression::expression","value":"read::op::Expression<R>","parent":{"krate":0,"index":7186},"children":[],"decl_id":null,"docs":" The DWARF expression.\n","sig":null,"attributes":[{"value":"/ The DWARF expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218048,"byte_end":218073,"line_start":2949,"line_end":2949,"column_start":9,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":7189},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218754,"byte_end":218767,"line_start":2963,"line_end":2963,"column_start":5,"column_end":18},"name":"ValExpression","qualname":"::read::cfi::CallFrameInstruction::ValExpression","value":"CallFrameInstruction::ValExpression { register, expression }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 10. DW_CFA_val_expression\n >\n > The DW_CFA_val_expression instruction takes two operands: an unsigned\n > LEB128 value representing a register number, and a DW_FORM_block value\n > representing a DWARF expression. The required action is to change the\n > rule for the register indicated by the register number to be a\n > val_expression(E) rule where E is the DWARF expression. That is, the\n > DWARF expression computes the value of the given register. The value\n > of the CFA is pushed on the DWARF evaluation stack prior to execution\n > of the DWARF expression.\n","sig":null,"attributes":[{"value":"/ > 10. DW_CFA_val_expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218121,"byte_end":218152,"line_start":2953,"line_end":2953,"column_start":5,"column_end":36}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218157,"byte_end":218162,"line_start":2954,"line_end":2954,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_val_expression instruction takes two operands: an unsigned","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218167,"byte_end":218242,"line_start":2955,"line_end":2955,"column_start":5,"column_end":80}},{"value":"/ > LEB128 value representing a register number, and a DW_FORM_block value","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218247,"byte_end":218323,"line_start":2956,"line_end":2956,"column_start":5,"column_end":81}},{"value":"/ > representing a DWARF expression. The required action is to change the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218328,"byte_end":218403,"line_start":2957,"line_end":2957,"column_start":5,"column_end":80}},{"value":"/ > rule for the register indicated by the register number to be a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218408,"byte_end":218476,"line_start":2958,"line_end":2958,"column_start":5,"column_end":73}},{"value":"/ > val_expression(E) rule where E is the DWARF expression. That is, the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218481,"byte_end":218555,"line_start":2959,"line_end":2959,"column_start":5,"column_end":79}},{"value":"/ > DWARF expression computes the value of the given register. The value","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218560,"byte_end":218634,"line_start":2960,"line_end":2960,"column_start":5,"column_end":79}},{"value":"/ > of the CFA is pushed on the DWARF evaluation stack prior to execution","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218639,"byte_end":218714,"line_start":2961,"line_end":2961,"column_start":5,"column_end":80}},{"value":"/ > of the DWARF expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218719,"byte_end":218749,"line_start":2962,"line_end":2962,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":7190},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218820,"byte_end":218828,"line_start":2965,"line_end":2965,"column_start":9,"column_end":17},"name":"register","qualname":"::read::cfi::CallFrameInstruction::ValExpression::register","value":"common::Register","parent":{"krate":0,"index":7189},"children":[],"decl_id":null,"docs":" The target register's number.\n","sig":null,"attributes":[{"value":"/ The target register's number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218778,"byte_end":218811,"line_start":2964,"line_end":2964,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7191},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218882,"byte_end":218892,"line_start":2967,"line_end":2967,"column_start":9,"column_end":19},"name":"expression","qualname":"::read::cfi::CallFrameInstruction::ValExpression::expression","value":"read::op::Expression<R>","parent":{"krate":0,"index":7189},"children":[],"decl_id":null,"docs":" The DWARF expression.\n","sig":null,"attributes":[{"value":"/ The DWARF expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218848,"byte_end":218873,"line_start":2966,"line_end":2966,"column_start":9,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":7192},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219362,"byte_end":219369,"line_start":2979,"line_end":2979,"column_start":5,"column_end":12},"name":"Restore","qualname":"::read::cfi::CallFrameInstruction::Restore","value":"CallFrameInstruction::Restore { register }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" The `Restore` instruction represents both `DW_CFA_restore` and\n `DW_CFA_restore_extended`.","sig":null,"attributes":[{"value":"/ The `Restore` instruction represents both `DW_CFA_restore` and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218921,"byte_end":218987,"line_start":2970,"line_end":2970,"column_start":5,"column_end":71}},{"value":"/ `DW_CFA_restore_extended`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":218992,"byte_end":219022,"line_start":2971,"line_end":2971,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219027,"byte_end":219030,"line_start":2972,"line_end":2972,"column_start":5,"column_end":8}},{"value":"/ > 11. DW_CFA_restore","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219035,"byte_end":219059,"line_start":2973,"line_end":2973,"column_start":5,"column_end":29}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219064,"byte_end":219069,"line_start":2974,"line_end":2974,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_restore instruction takes a single operand (encoded with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219074,"byte_end":219147,"line_start":2975,"line_end":2975,"column_start":5,"column_end":78}},{"value":"/ > the opcode) that represents a register number. The required action is","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219152,"byte_end":219227,"line_start":2976,"line_end":2976,"column_start":5,"column_end":80}},{"value":"/ > to change the rule for the indicated register to the rule assigned it","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219232,"byte_end":219307,"line_start":2977,"line_end":2977,"column_start":5,"column_end":80}},{"value":"/ > by the initial_instructions in the CIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219312,"byte_end":219357,"line_start":2978,"line_end":2978,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7193},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219418,"byte_end":219426,"line_start":2981,"line_end":2981,"column_start":9,"column_end":17},"name":"register","qualname":"::read::cfi::CallFrameInstruction::Restore::register","value":"common::Register","parent":{"krate":0,"index":7192},"children":[],"decl_id":null,"docs":" The register to be reset.\n","sig":null,"attributes":[{"value":"/ The register to be reset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219380,"byte_end":219409,"line_start":2980,"line_end":2980,"column_start":9,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7194},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219711,"byte_end":219724,"line_start":2990,"line_end":2990,"column_start":5,"column_end":18},"name":"RememberState","qualname":"::read::cfi::CallFrameInstruction::RememberState","value":"CallFrameInstruction::RememberState","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_remember_state\n >\n > The DW_CFA_remember_state instruction takes no operands. The required\n > action is to push the set of rules for every register onto an implicit\n > stack.\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_remember_state","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219488,"byte_end":219518,"line_start":2985,"line_end":2985,"column_start":5,"column_end":35}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219523,"byte_end":219528,"line_start":2986,"line_end":2986,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_remember_state instruction takes no operands. The required","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219533,"byte_end":219608,"line_start":2987,"line_end":2987,"column_start":5,"column_end":80}},{"value":"/ > action is to push the set of rules for every register onto an implicit","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219613,"byte_end":219689,"line_start":2988,"line_end":2988,"column_start":5,"column_end":81}},{"value":"/ > stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219694,"byte_end":219706,"line_start":2989,"line_end":2989,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7196},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219966,"byte_end":219978,"line_start":2997,"line_end":2997,"column_start":5,"column_end":17},"name":"RestoreState","qualname":"::read::cfi::CallFrameInstruction::RestoreState","value":"CallFrameInstruction::RestoreState","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 2. DW_CFA_restore_state\n >\n > The DW_CFA_restore_state instruction takes no operands. The required\n > action is to pop the set of rules off the implicit stack and place\n > them in the current row.\n","sig":null,"attributes":[{"value":"/ > 2. DW_CFA_restore_state","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219731,"byte_end":219760,"line_start":2992,"line_end":2992,"column_start":5,"column_end":34}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219765,"byte_end":219770,"line_start":2993,"line_end":2993,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_restore_state instruction takes no operands. The required","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219775,"byte_end":219849,"line_start":2994,"line_end":2994,"column_start":5,"column_end":79}},{"value":"/ > action is to pop the set of rules off the implicit stack and place","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219854,"byte_end":219926,"line_start":2995,"line_end":2995,"column_start":5,"column_end":77}},{"value":"/ > them in the current row.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219931,"byte_end":219961,"line_start":2996,"line_end":2996,"column_start":5,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":7198},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220296,"byte_end":220304,"line_start":3006,"line_end":3006,"column_start":5,"column_end":13},"name":"ArgsSize","qualname":"::read::cfi::CallFrameInstruction::ArgsSize","value":"CallFrameInstruction::ArgsSize { size }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > DW_CFA_GNU_args_size\n >\n > GNU Extension\n >\n > The DW_CFA_GNU_args_size instruction takes an unsigned LEB128 operand\n > representing an argument size. This instruction specifies the total of\n > the size of the arguments which have been pushed onto the stack.\n","sig":null,"attributes":[{"value":"/ > DW_CFA_GNU_args_size","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":219985,"byte_end":220011,"line_start":2999,"line_end":2999,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220016,"byte_end":220021,"line_start":3000,"line_end":3000,"column_start":5,"column_end":10}},{"value":"/ > GNU Extension","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220026,"byte_end":220045,"line_start":3001,"line_end":3001,"column_start":5,"column_end":24}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220050,"byte_end":220055,"line_start":3002,"line_end":3002,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_GNU_args_size instruction takes an unsigned LEB128 operand","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220060,"byte_end":220135,"line_start":3003,"line_end":3003,"column_start":5,"column_end":80}},{"value":"/ > representing an argument size. This instruction specifies the total of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220140,"byte_end":220216,"line_start":3004,"line_end":3004,"column_start":5,"column_end":81}},{"value":"/ > the size of the arguments which have been pushed onto the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220221,"byte_end":220291,"line_start":3005,"line_end":3005,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":7199},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220391,"byte_end":220395,"line_start":3008,"line_end":3008,"column_start":9,"column_end":13},"name":"size","qualname":"::read::cfi::CallFrameInstruction::ArgsSize::size","value":"u64","parent":{"krate":0,"index":7198},"children":[],"decl_id":null,"docs":" The size of the arguments which have been pushed onto the stack\n","sig":null,"attributes":[{"value":"/ The size of the arguments which have been pushed onto the stack","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220315,"byte_end":220382,"line_start":3007,"line_end":3007,"column_start":9,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7200},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220635,"byte_end":220638,"line_start":3016,"line_end":3016,"column_start":5,"column_end":8},"name":"Nop","qualname":"::read::cfi::CallFrameInstruction::Nop","value":"CallFrameInstruction::Nop","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_nop\n >\n > The DW_CFA_nop instruction has no operands and no required actions. It\n > is used as padding to make a CIE or FDE an appropriate size.\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_nop","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220449,"byte_end":220468,"line_start":3012,"line_end":3012,"column_start":5,"column_end":24}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220473,"byte_end":220478,"line_start":3013,"line_end":3013,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_nop instruction has no operands and no required actions. It","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220483,"byte_end":220559,"line_start":3014,"line_end":3014,"column_start":5,"column_end":81}},{"value":"/ > is used as padding to make a CIE or FDE an appropriate size.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220564,"byte_end":220630,"line_start":3015,"line_end":3015,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":7147},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209163,"byte_end":209183,"line_start":2734,"line_end":2734,"column_start":10,"column_end":30},"name":"CallFrameInstruction","qualname":"::read::cfi::CallFrameInstruction","value":"enum CallFrameInstruction<R> where R: Reader {\n    SetLoc {\n            address: u64,\n        },\n    AdvanceLoc {\n            delta: u32,\n        },\n    DefCfa {\n            register: Register,\n            offset: u64,\n        },\n    DefCfaSf {\n            register: Register,\n            factored_offset: i64,\n        },\n    DefCfaRegister {\n            register: Register,\n        },\n    DefCfaOffset {\n            offset: u64,\n        },\n    DefCfaOffsetSf {\n            factored_offset: i64,\n        },\n    DefCfaExpression {\n            expression: Expression<R>,\n        },\n    Undefined {\n            register: Register,\n        },\n    SameValue {\n            register: Register,\n        },\n    Offset {\n            register: Register,\n            factored_offset: u64,\n        },\n    OffsetExtendedSf {\n            register: Register,\n            factored_offset: i64,\n        },\n    ValOffset {\n            register: Register,\n            factored_offset: u64,\n        },\n    ValOffsetSf {\n            register: Register,\n            factored_offset: i64,\n        },\n    Register {\n            dest_register: Register,\n            src_register: Register,\n        },\n    Expression {\n            register: Register,\n            expression: Expression<R>,\n        },\n    ValExpression {\n            register: Register,\n            expression: Expression<R>,\n        },\n    Restore {\n            register: Register,\n        },\n    RememberState,\n    RestoreState,\n    ArgsSize {\n            size: u64,\n        },\n    Nop,\n}","parent":null,"children":[{"krate":0,"index":7149},{"krate":0,"index":7151},{"krate":0,"index":7153},{"krate":0,"index":7156},{"krate":0,"index":7159},{"krate":0,"index":7161},{"krate":0,"index":7163},{"krate":0,"index":7165},{"krate":0,"index":7167},{"krate":0,"index":7169},{"krate":0,"index":7171},{"krate":0,"index":7174},{"krate":0,"index":7177},{"krate":0,"index":7180},{"krate":0,"index":7183},{"krate":0,"index":7186},{"krate":0,"index":7189},{"krate":0,"index":7192},{"krate":0,"index":7194},{"krate":0,"index":7196},{"krate":0,"index":7198},{"krate":0,"index":7200}],"decl_id":null,"docs":" A parsed call frame instruction.\n","sig":null,"attributes":[{"value":"/ A parsed call frame instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":209078,"byte_end":209114,"line_start":2732,"line_end":2732,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":7219},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":228750,"byte_end":228774,"line_start":3228,"line_end":3228,"column_start":12,"column_end":36},"name":"CallFrameInstructionIter","qualname":"::read::cfi::CallFrameInstructionIter","value":"CallFrameInstructionIter {  }","parent":null,"children":[{"krate":0,"index":7222},{"krate":0,"index":7223},{"krate":0,"index":7224}],"decl_id":null,"docs":" A lazy iterator parsing call frame instructions.","sig":null,"attributes":[{"value":"/ A lazy iterator parsing call frame instructions.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":228569,"byte_end":228621,"line_start":3223,"line_end":3223,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":228622,"byte_end":228625,"line_start":3224,"line_end":3224,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":228626,"byte_end":228647,"line_start":3225,"line_end":3225,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":228648,"byte_end":228714,"line_start":3226,"line_end":3226,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":229020,"byte_end":229024,"line_start":3236,"line_end":3236,"column_start":12,"column_end":16},"name":"next","qualname":"<CallFrameInstructionIter>::next","value":"fn next(&mut Self) -> Result<Option<CallFrameInstruction<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the next call frame instruction.\n","sig":null,"attributes":[{"value":"/ Parse the next call frame instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":228966,"byte_end":229008,"line_start":3235,"line_end":3235,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":229641,"byte_end":229645,"line_start":3257,"line_end":3257,"column_start":8,"column_end":12},"name":"next","qualname":"<CallFrameInstructionIter as fallible_iterator::FallibleIterator>::next","value":"fn next(&mut Self) -> ::core::result::Result<Option<Self::Item>, Self::Error>","parent":{"krate":25,"index":59},"children":[],"decl_id":{"krate":25,"index":62},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7234},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230258,"byte_end":230264,"line_start":3280,"line_end":3280,"column_start":5,"column_end":11},"name":"Direct","qualname":"::read::cfi::Pointer::Direct","value":"Pointer::Direct(u64)","parent":{"krate":0,"index":7233},"children":[],"decl_id":null,"docs":" This value is the decoded pointer value.\n","sig":null,"attributes":[{"value":"/ This value is the decoded pointer value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230209,"byte_end":230253,"line_start":3279,"line_end":3279,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":7236},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230265,"byte_end":230268,"line_start":3280,"line_end":3280,"column_start":12,"column_end":15},"name":"0","qualname":"::read::cfi::Pointer::Direct::0","value":"u64","parent":{"krate":0,"index":7234},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7237},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230573,"byte_end":230581,"line_start":3288,"line_end":3288,"column_start":5,"column_end":13},"name":"Indirect","qualname":"::read::cfi::Pointer::Indirect","value":"Pointer::Indirect(u64)","parent":{"krate":0,"index":7233},"children":[],"decl_id":null,"docs":" This value is *not* the pointer value, but points to the address of\n where the real pointer value lives. In other words, deref this pointer\n to get the real pointer value.","sig":null,"attributes":[{"value":"/ This value is *not* the pointer value, but points to the address of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230276,"byte_end":230347,"line_start":3282,"line_end":3282,"column_start":5,"column_end":76}},{"value":"/ where the real pointer value lives. In other words, deref this pointer","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230352,"byte_end":230426,"line_start":3283,"line_end":3283,"column_start":5,"column_end":79}},{"value":"/ to get the real pointer value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230431,"byte_end":230465,"line_start":3284,"line_end":3284,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230470,"byte_end":230473,"line_start":3285,"line_end":3285,"column_start":5,"column_end":8}},{"value":"/ Chase this pointer at your own risk: do you trust the DWARF data it came","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230478,"byte_end":230554,"line_start":3286,"line_end":3286,"column_start":5,"column_end":81}},{"value":"/ from?","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230559,"byte_end":230568,"line_start":3287,"line_end":3287,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":7239},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230582,"byte_end":230585,"line_start":3288,"line_end":3288,"column_start":14,"column_end":17},"name":"0","qualname":"::read::cfi::Pointer::Indirect::0","value":"u64","parent":{"krate":0,"index":7237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7233},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230195,"byte_end":230202,"line_start":3278,"line_end":3278,"column_start":10,"column_end":17},"name":"Pointer","qualname":"::read::cfi::Pointer","value":"enum Pointer { Direct(u64), Indirect(u64), }","parent":null,"children":[{"krate":0,"index":7234},{"krate":0,"index":7237}],"decl_id":null,"docs":" A decoded pointer.\n","sig":null,"attributes":[{"value":"/ A decoded pointer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230118,"byte_end":230140,"line_start":3276,"line_end":3276,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230639,"byte_end":230646,"line_start":3293,"line_end":3293,"column_start":8,"column_end":15},"name":"default","qualname":"<Pointer as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230622,"byte_end":230631,"line_start":3292,"line_end":3292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230745,"byte_end":230749,"line_start":3300,"line_end":3300,"column_start":8,"column_end":12},"name":"into","qualname":"<Pointer as core::convert::Into>::into","value":"fn into(Self) -> u64","parent":{"krate":1,"index":3053},"children":[],"decl_id":{"krate":1,"index":3055},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230728,"byte_end":230737,"line_start":3299,"line_end":3299,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7267},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":369602,"byte_end":369607,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Dwarf","qualname":"::read::dwarf::Dwarf","value":"Dwarf { debug_abbrev, debug_addr, debug_info, debug_line, debug_line_str, debug_str, debug_str_offsets, debug_str_sup, debug_types, locations, ranges }","parent":null,"children":[{"krate":0,"index":7269},{"krate":0,"index":7270},{"krate":0,"index":7271},{"krate":0,"index":7272},{"krate":0,"index":7273},{"krate":0,"index":7274},{"krate":0,"index":7275},{"krate":0,"index":7276},{"krate":0,"index":7277},{"krate":0,"index":7278},{"krate":0,"index":7279}],"decl_id":null,"docs":" All of the commonly used DWARF sections, and other common information.\n","sig":null,"attributes":[{"value":"/ All of the commonly used DWARF sections, and other common information.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":369490,"byte_end":369564,"line_start":19,"line_end":19,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":7269},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":369658,"byte_end":369670,"line_start":23,"line_end":23,"column_start":9,"column_end":21},"name":"debug_abbrev","qualname":"::read::dwarf::Dwarf::debug_abbrev","value":"read::abbrev::DebugAbbrev<R>","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":" The `.debug_abbrev` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_abbrev` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":369617,"byte_end":369649,"line_start":22,"line_end":22,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7270},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":369732,"byte_end":369742,"line_start":26,"line_end":26,"column_start":9,"column_end":19},"name":"debug_addr","qualname":"::read::dwarf::Dwarf::debug_addr","value":"read::addr::DebugAddr<R>","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":" The `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_addr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":369693,"byte_end":369723,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":7271},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":369802,"byte_end":369812,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"name":"debug_info","qualname":"::read::dwarf::Dwarf::debug_info","value":"read::unit::DebugInfo<R>","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":" The `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_info` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":369763,"byte_end":369793,"line_start":28,"line_end":28,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":7272},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":369872,"byte_end":369882,"line_start":32,"line_end":32,"column_start":9,"column_end":19},"name":"debug_line","qualname":"::read::dwarf::Dwarf::debug_line","value":"read::line::DebugLine<R>","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":" The `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":369833,"byte_end":369863,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":7273},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":369946,"byte_end":369960,"line_start":35,"line_end":35,"column_start":9,"column_end":23},"name":"debug_line_str","qualname":"::read::dwarf::Dwarf::debug_line_str","value":"read::str::DebugLineStr<R>","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":" The `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":369903,"byte_end":369937,"line_start":34,"line_end":34,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":7274},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370022,"byte_end":370031,"line_start":38,"line_end":38,"column_start":9,"column_end":18},"name":"debug_str","qualname":"::read::dwarf::Dwarf::debug_str","value":"read::str::DebugStr<R>","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":" The `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":369984,"byte_end":370013,"line_start":37,"line_end":37,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":7275},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370097,"byte_end":370114,"line_start":41,"line_end":41,"column_start":9,"column_end":26},"name":"debug_str_offsets","qualname":"::read::dwarf::Dwarf::debug_str_offsets","value":"read::str::DebugStrOffsets<R>","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":" The `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370051,"byte_end":370088,"line_start":40,"line_end":40,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7276},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370211,"byte_end":370224,"line_start":44,"line_end":44,"column_start":9,"column_end":22},"name":"debug_str_sup","qualname":"::read::dwarf::Dwarf::debug_str_sup","value":"read::str::DebugStr<R>","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":" The `.debug_str` section for a supplementary object file.\n","sig":null,"attributes":[{"value":"/ The `.debug_str` section for a supplementary object file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370141,"byte_end":370202,"line_start":43,"line_end":43,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":7277},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370284,"byte_end":370295,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"name":"debug_types","qualname":"::read::dwarf::Dwarf::debug_types","value":"read::unit::DebugTypes<R>","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":" The `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_types` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370244,"byte_end":370275,"line_start":46,"line_end":46,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7278},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370400,"byte_end":370409,"line_start":50,"line_end":50,"column_start":9,"column_end":18},"name":"locations","qualname":"::read::dwarf::Dwarf::locations","value":"read::loclists::LocationLists<R>","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":" The location lists in the `.debug_loc` and `.debug_loclists` sections.\n","sig":null,"attributes":[{"value":"/ The location lists in the `.debug_loc` and `.debug_loclists` sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370317,"byte_end":370391,"line_start":49,"line_end":49,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":7279},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370517,"byte_end":370523,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"ranges","qualname":"::read::dwarf::Dwarf::ranges","value":"read::rnglists::RangeLists<R>","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":" The range lists in the `.debug_ranges` and `.debug_rnglists` sections.\n","sig":null,"attributes":[{"value":"/ The range lists in the `.debug_ranges` and `.debug_rnglists` sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370434,"byte_end":370508,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":371117,"byte_end":371121,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"load","qualname":"<Dwarf<T>>::load","value":"fn load<F1, F2, E>(F1, F2) -> core::result::Result<Self, E> where\nF1: FnMut(SectionId) -> core::result::Result<T, E>, F2: FnMut(SectionId) ->\ncore::result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Try to load the DWARF sections using the given loader functions.","sig":null,"attributes":[{"value":"/ Try to load the DWARF sections using the given loader functions.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370566,"byte_end":370634,"line_start":57,"line_end":57,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370639,"byte_end":370642,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ `section` loads a DWARF section from the main object file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370647,"byte_end":370709,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/ `sup` loads a DWARF sections from the supplementary object file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370714,"byte_end":370782,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ These functions should return an empty section if the section does not exist.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370787,"byte_end":370868,"line_start":61,"line_end":61,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370873,"byte_end":370876,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The provided callback functions may either directly return a `Reader` instance","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370881,"byte_end":370963,"line_start":63,"line_end":63,"column_start":5,"column_end":87}},{"value":"/ (such as `EndianSlice`), or they may return some other type and then convert","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370968,"byte_end":371048,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ that type into a `Reader` using `Dwarf::borrow`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":371053,"byte_end":371105,"line_start":65,"line_end":65,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":373523,"byte_end":373529,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Dwarf<T>>::borrow","value":"fn borrow<'a, F, R>(&'a Self, F) -> Dwarf<R> where F: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dwarf` structure that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `Dwarf` structure that references the data in `self`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372276,"byte_end":372342,"line_start":91,"line_end":91,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372347,"byte_end":372350,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372355,"byte_end":372420,"line_start":93,"line_end":93,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372425,"byte_end":372428,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372433,"byte_end":372453,"line_start":95,"line_end":95,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372458,"byte_end":372461,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ It can be useful to load DWARF sections into owned data structures,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372466,"byte_end":372537,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ such as `Vec`. However, we do not implement the `Reader` trait","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372542,"byte_end":372608,"line_start":98,"line_end":98,"column_start":5,"column_end":71}},{"value":"/ for `Vec`, because it would be very inefficient, but this trait","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372613,"byte_end":372680,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/ is required for all of the methods that parse the DWARF data.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372685,"byte_end":372750,"line_start":100,"line_end":100,"column_start":5,"column_end":70}},{"value":"/ So we first load the DWARF sections into `Vec`s, and then use","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372755,"byte_end":372820,"line_start":101,"line_end":101,"column_start":5,"column_end":70}},{"value":"/ `borrow` to create `Reader`s that reference the data.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372825,"byte_end":372882,"line_start":102,"line_end":102,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372887,"byte_end":372890,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372895,"byte_end":372913,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ # fn example() -> Result<(), gimli::Error> {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372918,"byte_end":372966,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/ # let loader = |name| -> Result<_, gimli::Error> { unimplemented!() };","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":372971,"byte_end":373045,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ # let sup_loader = |name| { unimplemented!() };","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":373050,"byte_end":373101,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/ // Read the DWARF sections into `Vec`s with whatever object loader you're using.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":373106,"byte_end":373190,"line_start":108,"line_end":108,"column_start":5,"column_end":89}},{"value":"/ let owned_dwarf: gimli::Dwarf<Vec<u8>> = gimli::Dwarf::load(loader, sup_loader)?;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":373195,"byte_end":373280,"line_start":109,"line_end":109,"column_start":5,"column_end":90}},{"value":"/ // Create references to the DWARF sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":373285,"byte_end":373332,"line_start":110,"line_end":110,"column_start":5,"column_end":52}},{"value":"/ let dwarf = owned_dwarf.borrow(|section| {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":373337,"byte_end":373383,"line_start":111,"line_end":111,"column_start":5,"column_end":51}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":373388,"byte_end":373450,"line_start":112,"line_end":112,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":373455,"byte_end":373462,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":373467,"byte_end":373487,"line_start":114,"line_end":114,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":373492,"byte_end":373499,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":373504,"byte_end":373511,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374604,"byte_end":374609,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"units","qualname":"<Dwarf<R>>::units","value":"fn units(&Self) -> CompilationUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the compilation- and partial-unit headers in the\n `.debug_info` section.","sig":null,"attributes":[{"value":"/ Iterate the compilation- and partial-unit headers in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374382,"byte_end":374442,"line_start":138,"line_end":138,"column_start":5,"column_end":65}},{"value":"/ `.debug_info` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374447,"byte_end":374473,"line_start":139,"line_end":139,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374478,"byte_end":374481,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374486,"byte_end":374507,"line_start":141,"line_end":141,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374512,"byte_end":374578,"line_start":142,"line_end":142,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374583,"byte_end":374592,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374787,"byte_end":374791,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"unit","qualname":"<Dwarf<R>>::unit","value":"fn unit(&Self, CompilationUnitHeader<R>) -> Result<Unit<R>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Unit` from the given compilation unit header.\n","sig":null,"attributes":[{"value":"/ Construct a new `Unit` from the given compilation unit header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374695,"byte_end":374761,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374766,"byte_end":374775,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375092,"byte_end":375102,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"type_units","qualname":"<Dwarf<R>>::type_units","value":"fn type_units(&Self) -> TypeUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the type-unit headers in the `.debug_types` section.","sig":null,"attributes":[{"value":"/ Iterate the type-unit headers in the `.debug_types` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374897,"byte_end":374961,"line_start":154,"line_end":154,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374966,"byte_end":374969,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374974,"byte_end":374995,"line_start":156,"line_end":156,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375000,"byte_end":375066,"line_start":157,"line_end":157,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375071,"byte_end":375080,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375267,"byte_end":375276,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"type_unit","qualname":"<Dwarf<R>>::type_unit","value":"fn type_unit(&Self, TypeUnitHeader<R>) -> Result<Unit<R>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Unit` from the given type unit header.\n","sig":null,"attributes":[{"value":"/ Construct a new `Unit` from the given type unit header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375182,"byte_end":375241,"line_start":163,"line_end":163,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375246,"byte_end":375255,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375508,"byte_end":375521,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<Dwarf<R>>::abbreviations","value":"fn abbreviations(&Self, &CompilationUnitHeader<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse the abbreviations for a compilation unit.\n","sig":null,"attributes":[{"value":"/ Parse the abbreviations for a compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375385,"byte_end":375436,"line_start":169,"line_end":169,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375487,"byte_end":375496,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375763,"byte_end":375781,"line_start":179,"line_end":179,"column_start":12,"column_end":30},"name":"type_abbreviations","qualname":"<Dwarf<R>>::type_abbreviations","value":"fn type_abbreviations(&Self, &TypeUnitHeader<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse the abbreviations for a type unit.\n","sig":null,"attributes":[{"value":"/ Parse the abbreviations for a type unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375647,"byte_end":375691,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375742,"byte_end":375751,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375974,"byte_end":375987,"line_start":185,"line_end":185,"column_start":12,"column_end":25},"name":"string_offset","qualname":"<Dwarf<R>>::string_offset","value":"fn string_offset(&Self, &Unit<R>, DebugStrOffsetsIndex<R::Offset>)\n-> Result<DebugStrOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Return the string offset at the given index.\n","sig":null,"attributes":[{"value":"/ Return the string offset at the given index.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375900,"byte_end":375948,"line_start":183,"line_end":183,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":375953,"byte_end":375962,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376327,"byte_end":376333,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"string","qualname":"<Dwarf<R>>::string","value":"fn string(&Self, DebugStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Return the string at the given offset in `.debug_str`.\n","sig":null,"attributes":[{"value":"/ Return the string at the given offset in `.debug_str`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376243,"byte_end":376301,"line_start":194,"line_end":194,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376306,"byte_end":376315,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376530,"byte_end":376541,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"line_string","qualname":"<Dwarf<R>>::line_string","value":"fn line_string(&Self, DebugLineStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Return the string at the given offset in `.debug_line_str`.\n","sig":null,"attributes":[{"value":"/ Return the string at the given offset in `.debug_line_str`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376441,"byte_end":376504,"line_start":200,"line_end":200,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376509,"byte_end":376518,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":377354,"byte_end":377365,"line_start":220,"line_end":220,"column_start":12,"column_end":23},"name":"attr_string","qualname":"<Dwarf<R>>::attr_string","value":"fn attr_string(&Self, &Unit<R>, AttributeValue<R>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Return an attribute value as a string slice.","sig":null,"attributes":[{"value":"/ Return an attribute value as a string slice.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376658,"byte_end":376706,"line_start":206,"line_end":206,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376711,"byte_end":376714,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376719,"byte_end":376756,"line_start":208,"line_end":208,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376761,"byte_end":376764,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ - an inline `DW_FORM_string` string","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376769,"byte_end":376808,"line_start":210,"line_end":210,"column_start":5,"column_end":44}},{"value":"/ - a `DW_FORM_strp` reference to an offset into the `.debug_str` section","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376813,"byte_end":376888,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ - a `DW_FORM_strp_sup` reference to an offset into a supplementary","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376893,"byte_end":376963,"line_start":212,"line_end":212,"column_start":5,"column_end":75}},{"value":"/ object file","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376968,"byte_end":376983,"line_start":213,"line_end":213,"column_start":5,"column_end":20}},{"value":"/ - a `DW_FORM_line_strp` reference to an offset into the `.debug_line_str`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":376988,"byte_end":377065,"line_start":214,"line_end":214,"column_start":5,"column_end":82}},{"value":"/ section","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":377070,"byte_end":377081,"line_start":215,"line_end":215,"column_start":5,"column_end":16}},{"value":"/ - a `DW_FORM_strx` index into the `.debug_str_offsets` entries for the unit","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":377086,"byte_end":377165,"line_start":216,"line_end":216,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":377170,"byte_end":377173,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ then return the attribute's string value. Returns an error if the attribute","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":377178,"byte_end":377257,"line_start":218,"line_end":218,"column_start":5,"column_end":84}},{"value":"/ value does not have a string form, or if a string form has an invalid value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":377262,"byte_end":377342,"line_start":219,"line_end":219,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":378229,"byte_end":378236,"line_start":239,"line_end":239,"column_start":12,"column_end":19},"name":"address","qualname":"<Dwarf<R>>::address","value":"fn address(&Self, &Unit<R>, DebugAddrIndex<R::Offset>) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Return the address at the given index.\n","sig":null,"attributes":[{"value":"/ Return the address at the given index.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":378175,"byte_end":378217,"line_start":238,"line_end":238,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":378488,"byte_end":378501,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"ranges_offset","qualname":"<Dwarf<R>>::ranges_offset","value":"fn ranges_offset(&Self, &Unit<R>, DebugRngListsIndex<R::Offset>)\n-> Result<RangeListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Return the range list offset at the given index.\n","sig":null,"attributes":[{"value":"/ Return the range list offset at the given index.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":378424,"byte_end":378476,"line_start":244,"line_end":244,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":378814,"byte_end":378820,"line_start":255,"line_end":255,"column_start":12,"column_end":18},"name":"ranges","qualname":"<Dwarf<R>>::ranges","value":"fn ranges(&Self, &Unit<R>, RangeListsOffset<R::Offset>)\n-> Result<RngListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `RangeListEntry`s starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Iterate over the `RangeListEntry`s starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":378734,"byte_end":378802,"line_start":254,"line_end":254,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":379541,"byte_end":379559,"line_start":278,"line_end":278,"column_start":12,"column_end":30},"name":"attr_ranges_offset","qualname":"<Dwarf<R>>::attr_ranges_offset","value":"fn attr_ranges_offset(&Self, &Unit<R>, AttributeValue<R>)\n-> Result<Option<RangeListsOffset<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a range list offset.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as a range list offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":379121,"byte_end":379181,"line_start":269,"line_end":269,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":379186,"byte_end":379189,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":379194,"byte_end":379231,"line_start":271,"line_end":271,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":379236,"byte_end":379239,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_sec_offset` reference to the `.debug_ranges` or `.debug_rnglists` sections","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":379244,"byte_end":379335,"line_start":273,"line_end":273,"column_start":5,"column_end":96}},{"value":"/ - a `DW_FORM_rnglistx` index into the `.debug_rnglists` entries for the unit","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":379340,"byte_end":379420,"line_start":274,"line_end":274,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":379425,"byte_end":379428,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ then return the range list offset of the range list.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":379433,"byte_end":379489,"line_start":276,"line_end":276,"column_start":5,"column_end":61}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":379494,"byte_end":379529,"line_start":277,"line_end":277,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":380363,"byte_end":380374,"line_start":299,"line_end":299,"column_start":12,"column_end":23},"name":"attr_ranges","qualname":"<Dwarf<R>>::attr_ranges","value":"fn attr_ranges(&Self, &Unit<R>, AttributeValue<R>)\n-> Result<Option<RngListIter<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a range list entry iterator.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as a range list entry iterator.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":379928,"byte_end":379996,"line_start":290,"line_end":290,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":380001,"byte_end":380004,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":380009,"byte_end":380046,"line_start":292,"line_end":292,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":380051,"byte_end":380054,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_sec_offset` reference to the `.debug_ranges` or `.debug_rnglists` sections","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":380059,"byte_end":380150,"line_start":294,"line_end":294,"column_start":5,"column_end":96}},{"value":"/ - a `DW_FORM_rnglistx` index into the `.debug_rnglists` entries for the unit","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":380155,"byte_end":380235,"line_start":295,"line_end":295,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":380240,"byte_end":380243,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ then return an iterator over the entries in the range list.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":380248,"byte_end":380311,"line_start":297,"line_end":297,"column_start":5,"column_end":68}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":380316,"byte_end":380351,"line_start":298,"line_end":298,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":380829,"byte_end":380839,"line_start":313,"line_end":313,"column_start":12,"column_end":22},"name":"die_ranges","qualname":"<Dwarf<R>>::die_ranges","value":"fn die_ranges(&Self, &Unit<R>, &DebuggingInformationEntry<, , R>)\n-> Result<RangeIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator for the address ranges of a `DebuggingInformationEntry`.","sig":null,"attributes":[{"value":"/ Return an iterator for the address ranges of a `DebuggingInformationEntry`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":380660,"byte_end":380739,"line_start":310,"line_end":310,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":380744,"byte_end":380747,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This uses `DW_AT_low_pc`, `DW_AT_high_pc` and `DW_AT_ranges`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":380752,"byte_end":380817,"line_start":312,"line_end":312,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":382441,"byte_end":382452,"line_start":354,"line_end":354,"column_start":12,"column_end":23},"name":"unit_ranges","qualname":"<Dwarf<R>>::unit_ranges","value":"fn unit_ranges(&Self, &Unit<R>) -> Result<RangeIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator for the address ranges of a `Unit`.","sig":null,"attributes":[{"value":"/ Return an iterator for the address ranges of a `Unit`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":382245,"byte_end":382303,"line_start":350,"line_end":350,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":382308,"byte_end":382311,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This uses `DW_AT_low_pc`, `DW_AT_high_pc` and `DW_AT_ranges` of the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":382316,"byte_end":382387,"line_start":352,"line_end":352,"column_start":5,"column_end":76}},{"value":"/ root `DebuggingInformationEntry`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":382392,"byte_end":382429,"line_start":353,"line_end":353,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":382778,"byte_end":382794,"line_start":362,"line_end":362,"column_start":12,"column_end":28},"name":"locations_offset","qualname":"<Dwarf<R>>::locations_offset","value":"fn locations_offset(&Self, &Unit<R>, DebugLocListsIndex<R::Offset>)\n-> Result<LocationListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Return the location list offset at the given index.\n","sig":null,"attributes":[{"value":"/ Return the location list offset at the given index.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":382711,"byte_end":382766,"line_start":361,"line_end":361,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":383116,"byte_end":383125,"line_start":372,"line_end":372,"column_start":12,"column_end":21},"name":"locations","qualname":"<Dwarf<R>>::locations","value":"fn locations(&Self, &Unit<R>, LocationListsOffset<R::Offset>)\n-> Result<LocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `LocationListEntry`s starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Iterate over the `LocationListEntry`s starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":383033,"byte_end":383104,"line_start":371,"line_end":371,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":383861,"byte_end":383882,"line_start":395,"line_end":395,"column_start":12,"column_end":33},"name":"attr_locations_offset","qualname":"<Dwarf<R>>::attr_locations_offset","value":"fn attr_locations_offset(&Self, &Unit<R>, AttributeValue<R>)\n-> Result<Option<LocationListsOffset<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a location list offset.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as a location list offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":383435,"byte_end":383498,"line_start":386,"line_end":386,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":383503,"byte_end":383506,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":383511,"byte_end":383548,"line_start":388,"line_end":388,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":383553,"byte_end":383556,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_sec_offset` reference to the `.debug_loc` or `.debug_loclists` sections","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":383561,"byte_end":383649,"line_start":390,"line_end":390,"column_start":5,"column_end":93}},{"value":"/ - a `DW_FORM_loclistx` index into the `.debug_loclists` entries for the unit","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":383654,"byte_end":383734,"line_start":391,"line_end":391,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":383739,"byte_end":383742,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ then return the location list offset of the location list.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":383747,"byte_end":383809,"line_start":393,"line_end":393,"column_start":5,"column_end":67}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":383814,"byte_end":383849,"line_start":394,"line_end":394,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":384729,"byte_end":384743,"line_start":418,"line_end":418,"column_start":12,"column_end":26},"name":"attr_locations","qualname":"<Dwarf<R>>::attr_locations","value":"fn attr_locations(&Self, &Unit<R>, AttributeValue<R>)\n-> Result<Option<LocListIter<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a location list entry iterator.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as a location list entry iterator.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":384291,"byte_end":384362,"line_start":409,"line_end":409,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":384367,"byte_end":384370,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":384375,"byte_end":384412,"line_start":411,"line_end":411,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":384417,"byte_end":384420,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_sec_offset` reference to the `.debug_loc` or `.debug_loclists` sections","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":384425,"byte_end":384513,"line_start":413,"line_end":413,"column_start":5,"column_end":93}},{"value":"/ - a `DW_FORM_loclistx` index into the `.debug_loclists` entries for the unit","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":384518,"byte_end":384598,"line_start":414,"line_end":414,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":384603,"byte_end":384606,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ then return an iterator over the entries in the location list.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":384611,"byte_end":384677,"line_start":416,"line_end":416,"column_start":5,"column_end":71}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":384682,"byte_end":384717,"line_start":417,"line_end":417,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":385213,"byte_end":385229,"line_start":432,"line_end":432,"column_start":12,"column_end":28},"name":"lookup_offset_id","qualname":"<Dwarf<R>>::lookup_offset_id","value":"fn lookup_offset_id(&Self, ReaderOffsetId)\n-> Option<(bool, SectionId, R::Offset)>","parent":null,"children":[],"decl_id":null,"docs":" Call `Reader::lookup_offset_id` for each section, and return the first match.","sig":null,"attributes":[{"value":"/ Call `Reader::lookup_offset_id` for each section, and return the first match.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":385035,"byte_end":385116,"line_start":429,"line_end":429,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":385121,"byte_end":385124,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The first element of the tuple is `true` for supplementary sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":385129,"byte_end":385201,"line_start":431,"line_end":431,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":386341,"byte_end":386353,"line_start":454,"line_end":454,"column_start":12,"column_end":24},"name":"format_error","qualname":"<Dwarf<R>>::format_error","value":"fn format_error(&Self, Error) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representation of the given error.","sig":null,"attributes":[{"value":"/ Returns a string representation of the given error.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":386169,"byte_end":386224,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":386229,"byte_end":386232,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ This uses information from the DWARF sections to provide more information in some cases.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":386237,"byte_end":386329,"line_start":453,"line_end":453,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":7286},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387105,"byte_end":387109,"line_start":478,"line_end":478,"column_start":12,"column_end":16},"name":"Unit","qualname":"::read::dwarf::Unit","value":"Unit { offset, header, abbreviations, name, comp_dir, low_pc, str_offsets_base, addr_base, loclists_base, rnglists_base, line_program }","parent":null,"children":[{"krate":0,"index":7289},{"krate":0,"index":7290},{"krate":0,"index":7291},{"krate":0,"index":7292},{"krate":0,"index":7293},{"krate":0,"index":7294},{"krate":0,"index":7295},{"krate":0,"index":7296},{"krate":0,"index":7297},{"krate":0,"index":7298},{"krate":0,"index":7299}],"decl_id":null,"docs":" All of the commonly used information for a unit in the `.debug_info` or `.debug_types`\n sections.\n","sig":null,"attributes":[{"value":"/ All of the commonly used information for a unit in the `.debug_info` or `.debug_types`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":386972,"byte_end":387062,"line_start":475,"line_end":475,"column_start":1,"column_end":91}},{"value":"/ sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387063,"byte_end":387076,"line_start":476,"line_end":476,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":7289},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387259,"byte_end":387265,"line_start":484,"line_end":484,"column_start":9,"column_end":15},"name":"offset","qualname":"::read::dwarf::Unit::offset","value":"common::UnitSectionOffset<Offset>","parent":{"krate":0,"index":7286},"children":[],"decl_id":null,"docs":" The section offset of the unit.\n","sig":null,"attributes":[{"value":"/ The section offset of the unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387215,"byte_end":387250,"line_start":483,"line_end":483,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":7290},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387335,"byte_end":387341,"line_start":487,"line_end":487,"column_start":9,"column_end":15},"name":"header","qualname":"::read::dwarf::Unit::header","value":"read::unit::UnitHeader<R, Offset>","parent":{"krate":0,"index":7286},"children":[],"decl_id":null,"docs":" The header of the unit.\n","sig":null,"attributes":[{"value":"/ The header of the unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387299,"byte_end":387326,"line_start":486,"line_end":486,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7291},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387422,"byte_end":387435,"line_start":490,"line_end":490,"column_start":9,"column_end":22},"name":"abbreviations","qualname":"::read::dwarf::Unit::abbreviations","value":"read::abbrev::Abbreviations","parent":{"krate":0,"index":7286},"children":[],"decl_id":null,"docs":" The parsed abbreviations for the unit.\n","sig":null,"attributes":[{"value":"/ The parsed abbreviations for the unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387371,"byte_end":387413,"line_start":489,"line_end":489,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":7292},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387509,"byte_end":387513,"line_start":493,"line_end":493,"column_start":9,"column_end":13},"name":"name","qualname":"::read::dwarf::Unit::name","value":"core::option::Option<R>","parent":{"krate":0,"index":7286},"children":[],"decl_id":null,"docs":" The `DW_AT_name` attribute of the unit.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_name` attribute of the unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387457,"byte_end":387500,"line_start":492,"line_end":492,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":7293},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387587,"byte_end":387595,"line_start":496,"line_end":496,"column_start":9,"column_end":17},"name":"comp_dir","qualname":"::read::dwarf::Unit::comp_dir","value":"core::option::Option<R>","parent":{"krate":0,"index":7286},"children":[],"decl_id":null,"docs":" The `DW_AT_comp_dir` attribute of the unit.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_comp_dir` attribute of the unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387531,"byte_end":387578,"line_start":495,"line_end":495,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7294},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387682,"byte_end":387688,"line_start":499,"line_end":499,"column_start":9,"column_end":15},"name":"low_pc","qualname":"::read::dwarf::Unit::low_pc","value":"u64","parent":{"krate":0,"index":7286},"children":[],"decl_id":null,"docs":" The `DW_AT_low_pc` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_low_pc` attribute of the unit. Defaults to 0.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387613,"byte_end":387673,"line_start":498,"line_end":498,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":7295},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387779,"byte_end":387795,"line_start":502,"line_end":502,"column_start":9,"column_end":25},"name":"str_offsets_base","qualname":"::read::dwarf::Unit::str_offsets_base","value":"common::DebugStrOffsetsBase<Offset>","parent":{"krate":0,"index":7286},"children":[],"decl_id":null,"docs":" The `DW_AT_str_offsets_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_str_offsets_base` attribute of the unit. Defaults to 0.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387700,"byte_end":387770,"line_start":501,"line_end":501,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":7296},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387903,"byte_end":387912,"line_start":505,"line_end":505,"column_start":9,"column_end":18},"name":"addr_base","qualname":"::read::dwarf::Unit::addr_base","value":"common::DebugAddrBase<Offset>","parent":{"krate":0,"index":7286},"children":[],"decl_id":null,"docs":" The `DW_AT_addr_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_addr_base` attribute of the unit. Defaults to 0.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387831,"byte_end":387894,"line_start":504,"line_end":504,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":7297},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":388018,"byte_end":388031,"line_start":508,"line_end":508,"column_start":9,"column_end":22},"name":"loclists_base","qualname":"::read::dwarf::Unit::loclists_base","value":"common::DebugLocListsBase<Offset>","parent":{"krate":0,"index":7286},"children":[],"decl_id":null,"docs":" The `DW_AT_loclists_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_loclists_base` attribute of the unit. Defaults to 0.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":387942,"byte_end":388009,"line_start":507,"line_end":507,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":7298},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":388141,"byte_end":388154,"line_start":511,"line_end":511,"column_start":9,"column_end":22},"name":"rnglists_base","qualname":"::read::dwarf::Unit::rnglists_base","value":"common::DebugRngListsBase<Offset>","parent":{"krate":0,"index":7286},"children":[],"decl_id":null,"docs":" The `DW_AT_rnglists_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_rnglists_base` attribute of the unit. Defaults to 0.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":388065,"byte_end":388132,"line_start":510,"line_end":510,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":7299},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":388237,"byte_end":388249,"line_start":514,"line_end":514,"column_start":9,"column_end":21},"name":"line_program","qualname":"::read::dwarf::Unit::line_program","value":"core::option::Option<read::line::IncompleteLineProgram<R, Offset>>","parent":{"krate":0,"index":7286},"children":[],"decl_id":null,"docs":" The line number program of the unit.\n","sig":null,"attributes":[{"value":"/ The line number program of the unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":388188,"byte_end":388228,"line_start":513,"line_end":513,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":388418,"byte_end":388421,"line_start":520,"line_end":520,"column_start":12,"column_end":15},"name":"new","qualname":"<Unit<R>>::new","value":"fn new(&Dwarf<R>, CompilationUnitHeader<R>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Unit` from the given compilation unit header.\n","sig":null,"attributes":[{"value":"/ Construct a new `Unit` from the given compilation unit header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":388326,"byte_end":388392,"line_start":518,"line_end":518,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":388397,"byte_end":388406,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":388739,"byte_end":388752,"line_start":530,"line_end":530,"column_start":12,"column_end":25},"name":"new_type_unit","qualname":"<Unit<R>>::new_type_unit","value":"fn new_type_unit(&Dwarf<R>, TypeUnitHeader<R>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Unit` from the given type unit header.\n","sig":null,"attributes":[{"value":"/ Construct a new `Unit` from the given type unit header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":388654,"byte_end":388713,"line_start":528,"line_end":528,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":388718,"byte_end":388727,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":392618,"byte_end":392626,"line_start":632,"line_end":632,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Unit<R>>::encoding","value":"fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this unit.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":392543,"byte_end":392592,"line_start":630,"line_end":630,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":392597,"byte_end":392606,"line_start":631,"line_end":631,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":392763,"byte_end":392768,"line_start":637,"line_end":637,"column_start":12,"column_end":17},"name":"entry","qualname":"<Unit<R>>::entry","value":"fn entry(&Self, UnitOffset<R::Offset>)\n-> Result<DebuggingInformationEntry<, , R>>","parent":null,"children":[],"decl_id":null,"docs":" Read the `DebuggingInformationEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Read the `DebuggingInformationEntry` at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":392690,"byte_end":392751,"line_start":636,"line_end":636,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":392995,"byte_end":393002,"line_start":643,"line_end":643,"column_start":12,"column_end":19},"name":"entries","qualname":"<Unit<R>>::entries","value":"fn entries(&Self) -> EntriesCursor<, , R>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":392915,"byte_end":392969,"line_start":641,"line_end":641,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":392974,"byte_end":392983,"line_start":642,"line_end":642,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393209,"byte_end":393226,"line_start":650,"line_end":650,"column_start":12,"column_end":29},"name":"entries_at_offset","qualname":"<Unit<R>>::entries_at_offset","value":"fn entries_at_offset(&Self, UnitOffset<R::Offset>)\n-> Result<EntriesCursor<, , R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393092,"byte_end":393145,"line_start":647,"line_end":647,"column_start":5,"column_end":58}},{"value":"/ starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393150,"byte_end":393183,"line_start":648,"line_end":648,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393188,"byte_end":393197,"line_start":649,"line_end":649,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393500,"byte_end":393512,"line_start":657,"line_end":657,"column_start":12,"column_end":24},"name":"entries_tree","qualname":"<Unit<R>>::entries_tree","value":"fn entries_tree(&Self, Option<UnitOffset<R::Offset>>)\n-> Result<EntriesTree<, , R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s as a tree\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s as a tree","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393373,"byte_end":393436,"line_start":654,"line_end":654,"column_start":5,"column_end":68}},{"value":"/ starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393441,"byte_end":393474,"line_start":655,"line_end":655,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393479,"byte_end":393488,"line_start":656,"line_end":656,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393755,"byte_end":393766,"line_start":663,"line_end":663,"column_start":12,"column_end":23},"name":"entries_raw","qualname":"<Unit<R>>::entries_raw","value":"fn entries_raw(&Self, Option<UnitOffset<R::Offset>>)\n-> Result<EntriesRaw<, , R>>","parent":null,"children":[],"decl_id":null,"docs":" Read the raw data that defines the Debugging Information Entries.\n","sig":null,"attributes":[{"value":"/ Read the raw data that defines the Debugging Information Entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393660,"byte_end":393729,"line_start":661,"line_end":661,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393734,"byte_end":393743,"line_start":662,"line_end":662,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":394165,"byte_end":394179,"line_start":672,"line_end":672,"column_start":12,"column_end":26},"name":"to_unit_offset","qualname":"<UnitSectionOffset<T>>::to_unit_offset","value":"fn to_unit_offset<R>(&Self, &Unit<R>) -> Option<UnitOffset<T>> where\nR: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the given unit,\n instead of relative to the start of the section.\n Returns `None` if the offset is not within the unit entries.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the given unit,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393959,"byte_end":394027,"line_start":669,"line_end":669,"column_start":5,"column_end":73}},{"value":"/ instead of relative to the start of the section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":394032,"byte_end":394084,"line_start":670,"line_end":670,"column_start":5,"column_end":57}},{"value":"/ Returns `None` if the offset is not within the unit entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":394089,"byte_end":394153,"line_start":671,"line_end":671,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":395279,"byte_end":395301,"line_start":703,"line_end":703,"column_start":12,"column_end":34},"name":"to_unit_section_offset","qualname":"<UnitOffset<T>>::to_unit_section_offset","value":"fn to_unit_section_offset<R>(&Self, &Unit<R>) -> UnitSectionOffset<T> where\nR: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the .debug_info section,\n instead of relative to the start of the given compilation unit.","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the .debug_info section,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":395061,"byte_end":395138,"line_start":699,"line_end":699,"column_start":5,"column_end":82}},{"value":"/ instead of relative to the start of the given compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":395143,"byte_end":395210,"line_start":700,"line_end":700,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":395215,"byte_end":395218,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ Does not check that the offset is valid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":395223,"byte_end":395267,"line_start":702,"line_end":702,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":7304},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":395958,"byte_end":395967,"line_start":722,"line_end":722,"column_start":12,"column_end":21},"name":"RangeIter","qualname":"::read::dwarf::RangeIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator for the address ranges of a `DebuggingInformationEntry`.","sig":null,"attributes":[{"value":"/ An iterator for the address ranges of a `DebuggingInformationEntry`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":395791,"byte_end":395863,"line_start":718,"line_end":718,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":395864,"byte_end":395867,"line_start":719,"line_end":719,"column_start":1,"column_end":4}},{"value":"/ Returned by `Dwarf::die_ranges` and `Dwarf::unit_ranges`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":395868,"byte_end":395929,"line_start":720,"line_end":720,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":396156,"byte_end":396163,"line_start":731,"line_end":731,"column_start":8,"column_end":15},"name":"default","qualname":"<RangeIter<R> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":396323,"byte_end":396327,"line_start":738,"line_end":738,"column_start":12,"column_end":16},"name":"next","qualname":"<RangeIter<R>>::next","value":"fn next(&mut Self) -> Result<Option<Range>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next range.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":396268,"byte_end":396311,"line_start":737,"line_end":737,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":396720,"byte_end":396724,"line_start":752,"line_end":752,"column_start":8,"column_end":12},"name":"next","qualname":"<RangeIter<R> as fallible_iterator::FallibleIterator>::next","value":"fn next(&mut Self) -> ::core::result::Result<Option<Self::Item>, Self::Error>","parent":{"krate":25,"index":59},"children":[],"decl_id":{"krate":25,"index":62},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":396703,"byte_end":396712,"line_start":751,"line_end":751,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7322},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":398998,"byte_end":399009,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"EndianSlice","qualname":"::read::endian_slice::EndianSlice","value":"EndianSlice {  }","parent":null,"children":[{"krate":0,"index":7325},{"krate":0,"index":7326}],"decl_id":null,"docs":" A `&[u8]` slice with endianity metadata.","sig":null,"attributes":[{"value":"/ A `&[u8]` slice with endianity metadata.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":398789,"byte_end":398833,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":398834,"byte_end":398837,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This implements the `Reader` trait, which is used for all reading of DWARF sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":398838,"byte_end":398926,"line_start":13,"line_end":13,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399284,"byte_end":399287,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<EndianSlice>::new","value":"fn new(&'input [u8], Endian) -> EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `EndianSlice` with the given slice and endianity.\n","sig":null,"attributes":[{"value":"/ Construct a new `EndianSlice` with the given slice and endianity.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399189,"byte_end":399258,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399263,"byte_end":399272,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399576,"byte_end":399579,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"buf","qualname":"<EndianSlice>::buf","value":"fn buf(&Self) -> &'input [u8]","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the raw slice.\n","sig":null,"attributes":[{"value":"/ Return a reference to the raw slice.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399407,"byte_end":399447,"line_start":33,"line_end":33,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399452,"byte_end":399461,"line_start":34,"line_end":34,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n\"Method renamed to EndianSlice::slice; use that instead.\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399485,"byte_end":399564,"line_start":36,"line_end":36,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399701,"byte_end":399706,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"slice","qualname":"<EndianSlice>::slice","value":"fn slice(&Self) -> &'input [u8]","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the raw slice.\n","sig":null,"attributes":[{"value":"/ Return a reference to the raw slice.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399635,"byte_end":399675,"line_start":41,"line_end":41,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399680,"byte_end":399689,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399989,"byte_end":399997,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"split_at","qualname":"<EndianSlice>::split_at","value":"fn split_at(&Self, usize) -> (EndianSlice, EndianSlice)","parent":null,"children":[],"decl_id":null,"docs":" Split the slice in two at the given index, resulting in the tuple where\n the first item has range [0, idx), and the second has range [idx,\n len). Panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Split the slice in two at the given index, resulting in the tuple where","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399762,"byte_end":399837,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ the first item has range [0, idx), and the second has range [idx,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399842,"byte_end":399911,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/ len). Panics if the index is out of bounds.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399916,"byte_end":399963,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399968,"byte_end":399977,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":400270,"byte_end":400274,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"find","qualname":"<EndianSlice>::find","value":"fn find(&Self, u8) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Find the first occurence of a byte in the slice, and return its index.\n","sig":null,"attributes":[{"value":"/ Find the first occurence of a byte in the slice, and return its index.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":400170,"byte_end":400244,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":400249,"byte_end":400258,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":400498,"byte_end":400509,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"offset_from","qualname":"<EndianSlice>::offset_from","value":"fn offset_from(&Self, EndianSlice) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the offset of the start of the slice relative to the start\n of the given slice.\n","sig":null,"attributes":[{"value":"/ Return the offset of the start of the slice relative to the start","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":400375,"byte_end":400444,"line_start":64,"line_end":64,"column_start":5,"column_end":74}},{"value":"/ of the given slice.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":400449,"byte_end":400472,"line_start":65,"line_end":65,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":400477,"byte_end":400486,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":401001,"byte_end":401010,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"to_string","qualname":"<EndianSlice>::to_string","value":"fn to_string(&Self) -> Result<&'input str>","parent":null,"children":[],"decl_id":null,"docs":" Converts the slice to a string using `str::from_utf8`.","sig":null,"attributes":[{"value":"/ Converts the slice to a string using `str::from_utf8`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":400842,"byte_end":400900,"line_start":75,"line_end":75,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":400905,"byte_end":400908,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the slice contains invalid characters.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":400913,"byte_end":400975,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":400980,"byte_end":400989,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":401249,"byte_end":401264,"line_start":86,"line_end":86,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<EndianSlice>::to_string_lossy","value":"fn to_string_lossy(&Self) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Converts the slice to a string, including invalid characters,\n using `String::from_utf8_lossy`.\n","sig":null,"attributes":[{"value":"/ Converts the slice to a string, including invalid characters,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":401117,"byte_end":401182,"line_start":83,"line_end":83,"column_start":5,"column_end":70}},{"value":"/ using `String::from_utf8_lossy`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":401187,"byte_end":401223,"line_start":84,"line_end":84,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":401228,"byte_end":401237,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402449,"byte_end":402454,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"range","qualname":"<EndianSlice>::range","value":"fn range(&Self, Range<usize>) -> EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" Take the given `start..end` range of the underlying slice and return a\n new `EndianSlice`.","sig":null,"attributes":[{"value":"/ Take the given `start..end` range of the underlying slice and return a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402024,"byte_end":402098,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ new `EndianSlice`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402103,"byte_end":402125,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402130,"byte_end":402133,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402138,"byte_end":402145,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use gimli::{EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402150,"byte_end":402193,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402198,"byte_end":402201,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let slice = &[0x01, 0x02, 0x03, 0x04];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402206,"byte_end":402248,"line_start":118,"line_end":118,"column_start":5,"column_end":47}},{"value":"/ let endian_slice = EndianSlice::new(slice, LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402253,"byte_end":402314,"line_start":119,"line_end":119,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(endian_slice.range(1..3),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402319,"byte_end":402359,"line_start":120,"line_end":120,"column_start":5,"column_end":45}},{"value":"/            EndianSlice::new(&slice[1..3], LittleEndian));","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402364,"byte_end":402425,"line_start":121,"line_end":121,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402430,"byte_end":402437,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403052,"byte_end":403062,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"range_from","qualname":"<EndianSlice>::range_from","value":"fn range_from(&Self, RangeFrom<usize>) -> EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" Take the given `start..` range of the underlying slice and return a new\n `EndianSlice`.","sig":null,"attributes":[{"value":"/ Take the given `start..` range of the underlying slice and return a new","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402627,"byte_end":402702,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ `EndianSlice`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402707,"byte_end":402725,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402730,"byte_end":402733,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402738,"byte_end":402745,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use gimli::{EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402750,"byte_end":402793,"line_start":134,"line_end":134,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402798,"byte_end":402801,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let slice = &[0x01, 0x02, 0x03, 0x04];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402806,"byte_end":402848,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/ let endian_slice = EndianSlice::new(slice, LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402853,"byte_end":402914,"line_start":137,"line_end":137,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(endian_slice.range_from(2..),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402919,"byte_end":402963,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/            EndianSlice::new(&slice[2..], LittleEndian));","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":402968,"byte_end":403028,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403033,"byte_end":403040,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403660,"byte_end":403668,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"range_to","qualname":"<EndianSlice>::range_to","value":"fn range_to(&Self, RangeTo<usize>) -> EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" Take the given `..end` range of the underlying slice and return a new\n `EndianSlice`.","sig":null,"attributes":[{"value":"/ Take the given `..end` range of the underlying slice and return a new","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403239,"byte_end":403312,"line_start":148,"line_end":148,"column_start":5,"column_end":78}},{"value":"/ `EndianSlice`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403317,"byte_end":403335,"line_start":149,"line_end":149,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403340,"byte_end":403343,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403348,"byte_end":403355,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use gimli::{EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403360,"byte_end":403403,"line_start":152,"line_end":152,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403408,"byte_end":403411,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let slice = &[0x01, 0x02, 0x03, 0x04];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403416,"byte_end":403458,"line_start":154,"line_end":154,"column_start":5,"column_end":47}},{"value":"/ let endian_slice = EndianSlice::new(slice, LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403463,"byte_end":403524,"line_start":155,"line_end":155,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(endian_slice.range_to(..3),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403529,"byte_end":403571,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/            EndianSlice::new(&slice[..3], LittleEndian));","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403576,"byte_end":403636,"line_start":157,"line_end":157,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403641,"byte_end":403648,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403967,"byte_end":403972,"line_start":172,"line_end":172,"column_start":8,"column_end":13},"name":"index","qualname":"<EndianSlice as core::ops::Index>::index","value":"fn index(&Self, usize) -> &Self::Output","parent":{"krate":1,"index":3454},"children":[],"decl_id":{"krate":1,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404184,"byte_end":404189,"line_start":182,"line_end":182,"column_start":8,"column_end":13},"name":"index","qualname":"<EndianSlice as core::ops::Index>::index","value":"fn index(&Self, RangeFrom<usize>) -> &Self::Output","parent":{"krate":1,"index":3454},"children":[],"decl_id":{"krate":1,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404394,"byte_end":404399,"line_start":192,"line_end":192,"column_start":8,"column_end":13},"name":"deref","qualname":"<EndianSlice as core::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":1,"index":3369},"children":[],"decl_id":{"krate":1,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404564,"byte_end":404568,"line_start":201,"line_end":201,"column_start":8,"column_end":12},"name":"into","qualname":"<EndianSlice as core::convert::Into>::into","value":"fn into(Self) -> &'input [u8]","parent":{"krate":1,"index":3053},"children":[],"decl_id":{"krate":1,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404785,"byte_end":404791,"line_start":214,"line_end":214,"column_start":8,"column_end":14},"name":"endian","qualname":"<EndianSlice as read::reader::Reader>::endian","value":"fn endian(&Self) -> Endian","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1209},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404768,"byte_end":404777,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404859,"byte_end":404862,"line_start":219,"line_end":219,"column_start":8,"column_end":11},"name":"len","qualname":"<EndianSlice as read::reader::Reader>::len","value":"fn len(&Self) -> usize","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1210},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404842,"byte_end":404851,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404934,"byte_end":404942,"line_start":224,"line_end":224,"column_start":8,"column_end":16},"name":"is_empty","qualname":"<EndianSlice as read::reader::Reader>::is_empty","value":"fn is_empty(&Self) -> bool","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1225},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404917,"byte_end":404926,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":405018,"byte_end":405023,"line_start":229,"line_end":229,"column_start":8,"column_end":13},"name":"empty","qualname":"<EndianSlice as read::reader::Reader>::empty","value":"fn empty(&mut Self)","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1211},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":405001,"byte_end":405010,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":405091,"byte_end":405099,"line_start":234,"line_end":234,"column_start":8,"column_end":16},"name":"truncate","qualname":"<EndianSlice as read::reader::Reader>::truncate","value":"fn truncate(&mut Self, usize) -> Result<()>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1212},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":405074,"byte_end":405083,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":405350,"byte_end":405361,"line_start":244,"line_end":244,"column_start":8,"column_end":19},"name":"offset_from","qualname":"<EndianSlice as read::reader::Reader>::offset_from","value":"fn offset_from(&Self, &Self) -> usize","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1213},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":405333,"byte_end":405342,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":405453,"byte_end":405462,"line_start":249,"line_end":249,"column_start":8,"column_end":17},"name":"offset_id","qualname":"<EndianSlice as read::reader::Reader>::offset_id","value":"fn offset_id(&Self) -> ReaderOffsetId","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1214},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":405436,"byte_end":405445,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":405569,"byte_end":405585,"line_start":254,"line_end":254,"column_start":8,"column_end":24},"name":"lookup_offset_id","qualname":"<EndianSlice as read::reader::Reader>::lookup_offset_id","value":"fn lookup_offset_id(&Self, ReaderOffsetId) -> Option<Self::Offset>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1215},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":405552,"byte_end":405561,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":405929,"byte_end":405933,"line_start":266,"line_end":266,"column_start":8,"column_end":12},"name":"find","qualname":"<EndianSlice as read::reader::Reader>::find","value":"fn find(&Self, u8) -> Result<usize>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1216},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":405912,"byte_end":405921,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":406089,"byte_end":406093,"line_start":272,"line_end":272,"column_start":8,"column_end":12},"name":"skip","qualname":"<EndianSlice as read::reader::Reader>::skip","value":"fn skip(&mut Self, usize) -> Result<()>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1217},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":406072,"byte_end":406081,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":406344,"byte_end":406349,"line_start":282,"line_end":282,"column_start":8,"column_end":13},"name":"split","qualname":"<EndianSlice as read::reader::Reader>::split","value":"fn split(&mut Self, usize) -> Result<Self>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1218},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":406327,"byte_end":406336,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":406511,"byte_end":406519,"line_start":288,"line_end":288,"column_start":8,"column_end":16},"name":"to_slice","qualname":"<EndianSlice as read::reader::Reader>::to_slice","value":"fn to_slice(&Self) -> Result<Cow<, [u8]>>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1219},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":406494,"byte_end":406503,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":406608,"byte_end":406617,"line_start":293,"line_end":293,"column_start":8,"column_end":17},"name":"to_string","qualname":"<EndianSlice as read::reader::Reader>::to_string","value":"fn to_string(&Self) -> Result<Cow<, str>>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1220},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":406591,"byte_end":406600,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":406801,"byte_end":406816,"line_start":301,"line_end":301,"column_start":8,"column_end":23},"name":"to_string_lossy","qualname":"<EndianSlice as read::reader::Reader>::to_string_lossy","value":"fn to_string_lossy(&Self) -> Result<Cow<, str>>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1221},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":406784,"byte_end":406793,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":406922,"byte_end":406932,"line_start":306,"line_end":306,"column_start":8,"column_end":18},"name":"read_slice","qualname":"<EndianSlice as read::reader::Reader>::read_slice","value":"fn read_slice(&mut Self, &mut [u8]) -> Result<()>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1222},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":406905,"byte_end":406914,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408482,"byte_end":408495,"line_start":28,"line_end":28,"column_start":10,"column_end":23},"name":"EndianRcSlice","qualname":"::read::endian_reader::EndianRcSlice","value":"EndianReader<Endian, Rc<[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" A reference counted, non-thread-safe slice of bytes and associated\n endianity.","sig":null,"attributes":[{"value":"/ A reference counted, non-thread-safe slice of bytes and associated","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408167,"byte_end":408237,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ endianity.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408238,"byte_end":408252,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408253,"byte_end":408256,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408257,"byte_end":408264,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408265,"byte_end":408296,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ use std::rc::Rc;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408297,"byte_end":408317,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408318,"byte_end":408321,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let buf = Rc::from(&[1, 2, 3, 4][..]);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408322,"byte_end":408364,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/ let reader = gimli::EndianRcSlice::new(buf, gimli::NativeEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408365,"byte_end":408434,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ # let _ = reader;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408435,"byte_end":408456,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408457,"byte_end":408464,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408465,"byte_end":408472,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408867,"byte_end":408881,"line_start":42,"line_end":42,"column_start":10,"column_end":24},"name":"EndianArcSlice","qualname":"::read::endian_reader::EndianArcSlice","value":"EndianReader<Endian, Arc<[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" An atomically reference counted, thread-safe slice of bytes and associated\n endianity.","sig":null,"attributes":[{"value":"/ An atomically reference counted, thread-safe slice of bytes and associated","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408539,"byte_end":408617,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ endianity.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408618,"byte_end":408632,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408633,"byte_end":408636,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408637,"byte_end":408644,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408645,"byte_end":408676,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408677,"byte_end":408700,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408701,"byte_end":408704,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let buf = Arc::from(&[1, 2, 3, 4][..]);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408705,"byte_end":408748,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ let reader = gimli::EndianArcSlice::new(buf, gimli::NativeEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408749,"byte_end":408819,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/ # let _ = reader;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408820,"byte_end":408841,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408842,"byte_end":408849,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408850,"byte_end":408857,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7362},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411480,"byte_end":411492,"line_start":120,"line_end":120,"column_start":12,"column_end":24},"name":"EndianReader","qualname":"::read::endian_reader::EndianReader","value":"EndianReader {  }","parent":null,"children":[{"krate":0,"index":7365},{"krate":0,"index":7366}],"decl_id":null,"docs":" An easy way to define a custom `Reader` implementation with a reference to a\n generic buffer of bytes and an associated endianity.","sig":null,"attributes":[{"value":"/ An easy way to define a custom `Reader` implementation with a reference to a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":408926,"byte_end":409006,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ generic buffer of bytes and an associated endianity.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409007,"byte_end":409063,"line_start":45,"line_end":45,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409064,"byte_end":409067,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that the whole original buffer is kept alive in memory even if there is","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409068,"byte_end":409148,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/ only one reader that references only a handful of bytes from that original","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409149,"byte_end":409227,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ buffer. That is, `EndianReader` will not do any copying, moving, or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409228,"byte_end":409299,"line_start":49,"line_end":49,"column_start":1,"column_end":72}},{"value":"/ compacting in order to free up unused regions of the original buffer. If you","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409300,"byte_end":409380,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ require this kind of behavior, it is up to you to implement `Reader`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409381,"byte_end":409453,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ directly by-hand.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409454,"byte_end":409475,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409476,"byte_end":409479,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409480,"byte_end":409493,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409494,"byte_end":409497,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Say you have an `mmap`ed file that you want to serve as a `gimli::Reader`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409498,"byte_end":409576,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ You can wrap that `mmap`ed file up in a `MmapFile` type and use","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409577,"byte_end":409644,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/ `EndianReader<Rc<MmapFile>>` or `EndianReader<Arc<MmapFile>>` as readers as","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409645,"byte_end":409724,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ long as `MmapFile` dereferences to the underlying `[u8]` data.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409725,"byte_end":409791,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409792,"byte_end":409795,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409796,"byte_end":409803,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409804,"byte_end":409820,"line_start":62,"line_end":62,"column_start":1,"column_end":17}},{"value":"/ use std::ops::Deref;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409821,"byte_end":409845,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/ use std::path::Path;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409846,"byte_end":409870,"line_start":64,"line_end":64,"column_start":1,"column_end":25}},{"value":"/ use std::slice;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409871,"byte_end":409890,"line_start":65,"line_end":65,"column_start":1,"column_end":20}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409891,"byte_end":409914,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409915,"byte_end":409918,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ /// A type that represents an `mmap`ed file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409919,"byte_end":409967,"line_start":68,"line_end":68,"column_start":1,"column_end":49}},{"value":"/ #[derive(Debug)]","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409968,"byte_end":409988,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/ pub struct MmapFile {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":409989,"byte_end":410014,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/     ptr: *const u8,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410015,"byte_end":410038,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/     len: usize,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410039,"byte_end":410058,"line_start":72,"line_end":72,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410059,"byte_end":410064,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410065,"byte_end":410068,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ impl MmapFile {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410069,"byte_end":410088,"line_start":75,"line_end":75,"column_start":1,"column_end":20}},{"value":"/     pub fn new(path: &Path) -> io::Result<MmapFile> {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410089,"byte_end":410146,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/         // Call `mmap` and check for errors and all that...","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410147,"byte_end":410210,"line_start":77,"line_end":77,"column_start":1,"column_end":64}},{"value":"/ #       unimplemented!()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410211,"byte_end":410239,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410240,"byte_end":410249,"line_start":79,"line_end":79,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410250,"byte_end":410255,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410256,"byte_end":410259,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl Drop for MmapFile {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410260,"byte_end":410288,"line_start":82,"line_end":82,"column_start":1,"column_end":29}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410289,"byte_end":410317,"line_start":83,"line_end":83,"column_start":1,"column_end":29}},{"value":"/         // Call `munmap` to clean up after ourselves...","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410318,"byte_end":410377,"line_start":84,"line_end":84,"column_start":1,"column_end":60}},{"value":"/ #       unimplemented!()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410378,"byte_end":410406,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410407,"byte_end":410416,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410417,"byte_end":410422,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410423,"byte_end":410426,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // And `MmapFile` can deref to a slice of the `mmap`ed region of memory.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410427,"byte_end":410503,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ impl Deref for MmapFile {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410504,"byte_end":410533,"line_start":90,"line_end":90,"column_start":1,"column_end":30}},{"value":"/     type Target = [u8];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410534,"byte_end":410561,"line_start":91,"line_end":91,"column_start":1,"column_end":28}},{"value":"/     fn deref(&self) -> &[u8] {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410562,"byte_end":410596,"line_start":92,"line_end":92,"column_start":1,"column_end":35}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410597,"byte_end":410617,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/             slice::from_raw_parts(self.ptr, self.len)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410618,"byte_end":410675,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"/         }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410676,"byte_end":410689,"line_start":95,"line_end":95,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410690,"byte_end":410699,"line_start":96,"line_end":96,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410700,"byte_end":410705,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410706,"byte_end":410709,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ /// A type that represents a shared `mmap`ed file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410710,"byte_end":410764,"line_start":99,"line_end":99,"column_start":1,"column_end":55}},{"value":"/ #[derive(Debug, Clone)]","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410765,"byte_end":410792,"line_start":100,"line_end":100,"column_start":1,"column_end":28}},{"value":"/ pub struct ArcMmapFile(Arc<MmapFile>);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410793,"byte_end":410835,"line_start":101,"line_end":101,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410836,"byte_end":410839,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ // And `ArcMmapFile` can deref to a slice of the `mmap`ed region of memory.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410840,"byte_end":410919,"line_start":103,"line_end":103,"column_start":1,"column_end":80}},{"value":"/ impl Deref for ArcMmapFile {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410920,"byte_end":410952,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/     type Target = [u8];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410953,"byte_end":410980,"line_start":105,"line_end":105,"column_start":1,"column_end":28}},{"value":"/     fn deref(&self) -> &[u8] {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":410981,"byte_end":411015,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         &self.0","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411016,"byte_end":411035,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411036,"byte_end":411045,"line_start":108,"line_end":108,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411046,"byte_end":411051,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411052,"byte_end":411055,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ // These are both valid for any `Rc` or `Arc`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411056,"byte_end":411106,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/ unsafe impl gimli::StableDeref for ArcMmapFile {}","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411107,"byte_end":411160,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"/ unsafe impl gimli::CloneStableDeref for ArcMmapFile {}","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411161,"byte_end":411219,"line_start":113,"line_end":113,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411220,"byte_end":411223,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ /// A `gimli::Reader` that is backed by an `mmap`ed file!","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411224,"byte_end":411285,"line_start":115,"line_end":115,"column_start":1,"column_end":62}},{"value":"/ pub type MmapFileReader<Endian> = gimli::EndianReader<Endian, ArcMmapFile>;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411286,"byte_end":411365,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ # fn test(_: &MmapFileReader<gimli::NativeEndian>) { }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411366,"byte_end":411424,"line_start":117,"line_end":117,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411425,"byte_end":411432,"line_start":118,"line_end":118,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411852,"byte_end":411854,"line_start":135,"line_end":135,"column_start":8,"column_end":10},"name":"eq","qualname":"<EndianReader<Endian, T1> as core::cmp::PartialEq>::eq","value":"fn eq(&Self, &EndianReader<Endian, T2>) -> bool","parent":{"krate":1,"index":2802},"children":[],"decl_id":{"krate":1,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":414641,"byte_end":414644,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"new","qualname":"<EndianReader<Endian, T>>::new","value":"fn new(T, Endian) -> EndianReader<Endian, T>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `EndianReader` with the given bytes.\n","sig":null,"attributes":[{"value":"/ Construct a new `EndianReader` with the given bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":414559,"byte_end":414615,"line_start":227,"line_end":227,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":414620,"byte_end":414629,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":414894,"byte_end":414899,"line_start":238,"line_end":238,"column_start":12,"column_end":17},"name":"bytes","qualname":"<EndianReader<Endian, T>>::bytes","value":"fn bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the raw bytes underlying this reader.\n","sig":null,"attributes":[{"value":"/ Return a reference to the raw bytes underlying this reader.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":414805,"byte_end":414868,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":414873,"byte_end":414882,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415955,"byte_end":415960,"line_start":272,"line_end":272,"column_start":12,"column_end":17},"name":"range","qualname":"<EndianReader<Endian, T>>::range","value":"fn range(&Self, Range<usize>) -> EndianReader<Endian, T>","parent":null,"children":[],"decl_id":null,"docs":" Take the given `start..end` range of the underlying buffer and return a\n new `EndianReader`.","sig":null,"attributes":[{"value":"/ Take the given `start..end` range of the underlying buffer and return a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415357,"byte_end":415432,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ new `EndianReader`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415437,"byte_end":415460,"line_start":255,"line_end":255,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415465,"byte_end":415468,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415473,"byte_end":415480,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415485,"byte_end":415516,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ use gimli::{EndianReader, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415521,"byte_end":415565,"line_start":259,"line_end":259,"column_start":5,"column_end":49}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415570,"byte_end":415593,"line_start":260,"line_end":260,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415598,"byte_end":415601,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let buf = Arc::<[u8]>::from(&[0x01, 0x02, 0x03, 0x04][..]);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415606,"byte_end":415669,"line_start":262,"line_end":262,"column_start":5,"column_end":68}},{"value":"/ let reader = EndianReader::new(buf.clone(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415674,"byte_end":415736,"line_start":263,"line_end":263,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(reader.range(1..3),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415741,"byte_end":415775,"line_start":264,"line_end":264,"column_start":5,"column_end":39}},{"value":"/            EndianReader::new(&buf[1..3], LittleEndian));","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415780,"byte_end":415840,"line_start":265,"line_end":265,"column_start":5,"column_end":65}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415845,"byte_end":415852,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415857,"byte_end":415864,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415869,"byte_end":415872,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415877,"byte_end":415889,"line_start":269,"line_end":269,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415894,"byte_end":415897,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Panics if the range is out of bounds.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415902,"byte_end":415943,"line_start":271,"line_end":271,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416739,"byte_end":416749,"line_start":297,"line_end":297,"column_start":12,"column_end":22},"name":"range_from","qualname":"<EndianReader<Endian, T>>::range_from","value":"fn range_from(&Self, RangeFrom<usize>) -> EndianReader<Endian, T>","parent":null,"children":[],"decl_id":null,"docs":" Take the given `start..` range of the underlying buffer and return a new\n `EndianReader`.","sig":null,"attributes":[{"value":"/ Take the given `start..` range of the underlying buffer and return a new","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416141,"byte_end":416217,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ `EndianReader`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416222,"byte_end":416241,"line_start":280,"line_end":280,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416246,"byte_end":416249,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416254,"byte_end":416261,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416266,"byte_end":416297,"line_start":283,"line_end":283,"column_start":5,"column_end":36}},{"value":"/ use gimli::{EndianReader, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416302,"byte_end":416346,"line_start":284,"line_end":284,"column_start":5,"column_end":49}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416351,"byte_end":416374,"line_start":285,"line_end":285,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416379,"byte_end":416382,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let buf = Arc::<[u8]>::from(&[0x01, 0x02, 0x03, 0x04][..]);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416387,"byte_end":416450,"line_start":287,"line_end":287,"column_start":5,"column_end":68}},{"value":"/ let reader = EndianReader::new(buf.clone(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416455,"byte_end":416517,"line_start":288,"line_end":288,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(reader.range_from(2..),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416522,"byte_end":416560,"line_start":289,"line_end":289,"column_start":5,"column_end":43}},{"value":"/            EndianReader::new(&buf[2..], LittleEndian));","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416565,"byte_end":416624,"line_start":290,"line_end":290,"column_start":5,"column_end":64}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416629,"byte_end":416636,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416641,"byte_end":416648,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416653,"byte_end":416656,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416661,"byte_end":416673,"line_start":294,"line_end":294,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416678,"byte_end":416681,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ Panics if the range is out of bounds.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416686,"byte_end":416727,"line_start":296,"line_end":296,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417491,"byte_end":417499,"line_start":321,"line_end":321,"column_start":12,"column_end":20},"name":"range_to","qualname":"<EndianReader<Endian, T>>::range_to","value":"fn range_to(&Self, RangeTo<usize>) -> EndianReader<Endian, T>","parent":null,"children":[],"decl_id":null,"docs":" Take the given `..end` range of the underlying buffer and return a new\n `EndianReader`.","sig":null,"attributes":[{"value":"/ Take the given `..end` range of the underlying buffer and return a new","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416897,"byte_end":416971,"line_start":303,"line_end":303,"column_start":5,"column_end":79}},{"value":"/ `EndianReader`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":416976,"byte_end":416995,"line_start":304,"line_end":304,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417000,"byte_end":417003,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417008,"byte_end":417015,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417020,"byte_end":417051,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/ use gimli::{EndianReader, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417056,"byte_end":417100,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417105,"byte_end":417128,"line_start":309,"line_end":309,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417133,"byte_end":417136,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ let buf = Arc::<[u8]>::from(&[0x01, 0x02, 0x03, 0x04][..]);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417141,"byte_end":417204,"line_start":311,"line_end":311,"column_start":5,"column_end":68}},{"value":"/ let reader = EndianReader::new(buf.clone(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417209,"byte_end":417271,"line_start":312,"line_end":312,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(reader.range_to(..3),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417276,"byte_end":417312,"line_start":313,"line_end":313,"column_start":5,"column_end":41}},{"value":"/            EndianReader::new(&buf[..3], LittleEndian));","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417317,"byte_end":417376,"line_start":314,"line_end":314,"column_start":5,"column_end":64}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417381,"byte_end":417388,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417393,"byte_end":417400,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417405,"byte_end":417408,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417413,"byte_end":417425,"line_start":318,"line_end":318,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417430,"byte_end":417433,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Panics if the range is out of bounds.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417438,"byte_end":417479,"line_start":320,"line_end":320,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417810,"byte_end":417815,"line_start":334,"line_end":334,"column_start":8,"column_end":13},"name":"index","qualname":"<EndianReader<Endian, T> as core::ops::Index>::index","value":"fn index(&Self, usize) -> &Self::Output","parent":{"krate":1,"index":3454},"children":[],"decl_id":{"krate":1,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418068,"byte_end":418073,"line_start":345,"line_end":345,"column_start":8,"column_end":13},"name":"index","qualname":"<EndianReader<Endian, T> as core::ops::Index>::index","value":"fn index(&Self, RangeFrom<usize>) -> &Self::Output","parent":{"krate":1,"index":3454},"children":[],"decl_id":{"krate":1,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418319,"byte_end":418324,"line_start":356,"line_end":356,"column_start":8,"column_end":13},"name":"deref","qualname":"<EndianReader<Endian, T> as core::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":1,"index":3369},"children":[],"decl_id":{"krate":1,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418584,"byte_end":418590,"line_start":370,"line_end":370,"column_start":8,"column_end":14},"name":"endian","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::endian","value":"fn endian(&Self) -> Endian","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1209},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418567,"byte_end":418576,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418658,"byte_end":418661,"line_start":375,"line_end":375,"column_start":8,"column_end":11},"name":"len","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::len","value":"fn len(&Self) -> usize","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1210},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418641,"byte_end":418650,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418733,"byte_end":418738,"line_start":380,"line_end":380,"column_start":8,"column_end":13},"name":"empty","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::empty","value":"fn empty(&mut Self)","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1211},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418716,"byte_end":418725,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418812,"byte_end":418820,"line_start":385,"line_end":385,"column_start":8,"column_end":16},"name":"truncate","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::truncate","value":"fn truncate(&mut Self, usize) -> Result<()>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1212},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418795,"byte_end":418804,"line_start":384,"line_end":384,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":419058,"byte_end":419069,"line_start":395,"line_end":395,"column_start":8,"column_end":19},"name":"offset_from","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::offset_from","value":"fn offset_from(&Self, &EndianReader<Endian, T>) -> usize","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1213},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":419041,"byte_end":419050,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":419424,"byte_end":419433,"line_start":404,"line_end":404,"column_start":8,"column_end":17},"name":"offset_id","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::offset_id","value":"fn offset_id(&Self) -> ReaderOffsetId","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1214},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":419407,"byte_end":419416,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":419542,"byte_end":419558,"line_start":409,"line_end":409,"column_start":8,"column_end":24},"name":"lookup_offset_id","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::lookup_offset_id","value":"fn lookup_offset_id(&Self, ReaderOffsetId) -> Option<Self::Offset>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1215},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":419525,"byte_end":419534,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":419906,"byte_end":419910,"line_start":421,"line_end":421,"column_start":8,"column_end":12},"name":"find","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::find","value":"fn find(&Self, u8) -> Result<usize>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1216},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":419889,"byte_end":419898,"line_start":420,"line_end":420,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":420121,"byte_end":420125,"line_start":429,"line_end":429,"column_start":8,"column_end":12},"name":"skip","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::skip","value":"fn skip(&mut Self, usize) -> Result<()>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1217},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":420104,"byte_end":420113,"line_start":428,"line_end":428,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":420359,"byte_end":420364,"line_start":439,"line_end":439,"column_start":8,"column_end":13},"name":"split","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::split","value":"fn split(&mut Self, usize) -> Result<Self>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1218},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":420342,"byte_end":420351,"line_start":438,"line_end":438,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":420672,"byte_end":420680,"line_start":451,"line_end":451,"column_start":8,"column_end":16},"name":"to_slice","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::to_slice","value":"fn to_slice(&Self) -> Result<Cow<, [u8]>>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1219},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":420655,"byte_end":420664,"line_start":450,"line_end":450,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":420771,"byte_end":420780,"line_start":456,"line_end":456,"column_start":8,"column_end":17},"name":"to_string","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::to_string","value":"fn to_string(&Self) -> Result<Cow<, str>>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1220},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":420754,"byte_end":420763,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":420966,"byte_end":420981,"line_start":464,"line_end":464,"column_start":8,"column_end":23},"name":"to_string_lossy","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::to_string_lossy","value":"fn to_string_lossy(&Self) -> Result<Cow<, str>>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1221},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":420949,"byte_end":420958,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":421089,"byte_end":421099,"line_start":469,"line_end":469,"column_start":8,"column_end":18},"name":"read_slice","qualname":"<EndianReader<Endian, T> as read::reader::Reader>::read_slice","value":"fn read_slice(&mut Self, &mut [u8]) -> Result<()>","parent":{"krate":0,"index":1206},"children":[],"decl_id":{"krate":0,"index":1222},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":421072,"byte_end":421081,"line_start":468,"line_end":468,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7411},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426484,"byte_end":426498,"line_start":17,"line_end":17,"column_start":12,"column_end":26},"name":"ReaderOffsetId","qualname":"::read::reader::ReaderOffsetId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an offset within a section reader.","sig":null,"attributes":[{"value":"/ An identifier for an offset within a section reader.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426122,"byte_end":426178,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426179,"byte_end":426182,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This is used for error reporting. The meaning of this value is specific to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426183,"byte_end":426261,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ each reader implementation. The values should be chosen to be unique amongst","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426262,"byte_end":426342,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ all readers. If values are not unique then errors may point to the wrong reader.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426343,"byte_end":426427,"line_start":15,"line_end":15,"column_start":1,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":7413},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426499,"byte_end":426506,"line_start":17,"line_end":17,"column_start":27,"column_end":34},"name":"0","qualname":"::read::reader::ReaderOffsetId::0","value":"u64","parent":{"krate":0,"index":7411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426658,"byte_end":426670,"line_start":22,"line_end":22,"column_start":11,"column_end":23},"name":"ReaderOffset","qualname":"::read::reader::ReaderOffset","value":"ReaderOffset: Debug + Copy + Eq + Ord + Hash + Add<Output = Self> + AddAssign + Sub<Output =\nSelf>","parent":null,"children":[{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178}],"decl_id":null,"docs":" A trait for offsets with a DWARF section.","sig":null,"attributes":[{"value":"/ A trait for offsets with a DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426510,"byte_end":426555,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426556,"byte_end":426559,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This allows consumers to choose a size that is appropriate for their address space.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426560,"byte_end":426647,"line_start":21,"line_end":21,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426805,"byte_end":426812,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::read::reader::ReaderOffset::from_u8","value":"fn from_u8(u8) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":null,"docs":" Convert a u8 to an offset.\n","sig":null,"attributes":[{"value":"/ Convert a u8 to an offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426767,"byte_end":426797,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426878,"byte_end":426886,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"from_u16","qualname":"::read::reader::ReaderOffset::from_u16","value":"fn from_u16(u16) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":null,"docs":" Convert a u16 to an offset.\n","sig":null,"attributes":[{"value":"/ Convert a u16 to an offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426839,"byte_end":426870,"line_start":28,"line_end":28,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426954,"byte_end":426962,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"from_i16","qualname":"::read::reader::ReaderOffset::from_i16","value":"fn from_i16(i16) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":null,"docs":" Convert an i16 to an offset.\n","sig":null,"attributes":[{"value":"/ Convert an i16 to an offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426914,"byte_end":426946,"line_start":31,"line_end":31,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427029,"byte_end":427037,"line_start":35,"line_end":35,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::read::reader::ReaderOffset::from_u32","value":"fn from_u32(u32) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":null,"docs":" Convert a u32 to an offset.\n","sig":null,"attributes":[{"value":"/ Convert a u32 to an offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426990,"byte_end":427021,"line_start":34,"line_end":34,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427182,"byte_end":427190,"line_start":40,"line_end":40,"column_start":8,"column_end":16},"name":"from_u64","qualname":"::read::reader::ReaderOffset::from_u64","value":"fn from_u64(u64) -> Result<Self>","parent":{"krate":0,"index":1170},"children":[],"decl_id":null,"docs":" Convert a u64 to an offset.","sig":null,"attributes":[{"value":"/ Convert a u64 to an offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427065,"byte_end":427096,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427101,"byte_end":427104,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Returns `Error::UnsupportedOffset` if the value is too large.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427109,"byte_end":427174,"line_start":39,"line_end":39,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427265,"byte_end":427273,"line_start":43,"line_end":43,"column_start":8,"column_end":16},"name":"into_u64","qualname":"::read::reader::ReaderOffset::into_u64","value":"fn into_u64(Self) -> u64","parent":{"krate":0,"index":1170},"children":[],"decl_id":null,"docs":" Convert an offset to a u64.\n","sig":null,"attributes":[{"value":"/ Convert an offset to a u64.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427226,"byte_end":427257,"line_start":42,"line_end":42,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427358,"byte_end":427370,"line_start":46,"line_end":46,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::read::reader::ReaderOffset::wrapping_add","value":"fn wrapping_add(Self, Self) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":null,"docs":" Wrapping (modular) addition. Computes `self + other`.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) addition. Computes `self + other`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427293,"byte_end":427350,"line_start":45,"line_end":45,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427461,"byte_end":427472,"line_start":49,"line_end":49,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::read::reader::ReaderOffset::checked_sub","value":"fn checked_sub(Self, Self) -> Option<Self>","parent":{"krate":0,"index":1170},"children":[],"decl_id":null,"docs":" Checked subtraction. Computes `self - other`.\n","sig":null,"attributes":[{"value":"/ Checked subtraction. Computes `self - other`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427404,"byte_end":427453,"line_start":48,"line_end":48,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427561,"byte_end":427568,"line_start":54,"line_end":54,"column_start":8,"column_end":15},"name":"from_u8","qualname":"<u64 as read::reader::ReaderOffset>::from_u8","value":"fn from_u8(u8) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427544,"byte_end":427553,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427645,"byte_end":427653,"line_start":59,"line_end":59,"column_start":8,"column_end":16},"name":"from_u16","qualname":"<u64 as read::reader::ReaderOffset>::from_u16","value":"fn from_u16(u16) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1172},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427628,"byte_end":427637,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427731,"byte_end":427739,"line_start":64,"line_end":64,"column_start":8,"column_end":16},"name":"from_i16","qualname":"<u64 as read::reader::ReaderOffset>::from_i16","value":"fn from_i16(i16) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1173},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427714,"byte_end":427723,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427813,"byte_end":427821,"line_start":69,"line_end":69,"column_start":8,"column_end":16},"name":"from_u32","qualname":"<u64 as read::reader::ReaderOffset>::from_u32","value":"fn from_u32(u32) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1174},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427796,"byte_end":427805,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427899,"byte_end":427907,"line_start":74,"line_end":74,"column_start":8,"column_end":16},"name":"from_u64","qualname":"<u64 as read::reader::ReaderOffset>::from_u64","value":"fn from_u64(u64) -> Result<Self>","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1175},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427882,"byte_end":427891,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427986,"byte_end":427994,"line_start":79,"line_end":79,"column_start":8,"column_end":16},"name":"into_u64","qualname":"<u64 as read::reader::ReaderOffset>::into_u64","value":"fn into_u64(Self) -> u64","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1176},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":427969,"byte_end":427978,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428051,"byte_end":428063,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"<u64 as read::reader::ReaderOffset>::wrapping_add","value":"fn wrapping_add(Self, Self) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1177},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428034,"byte_end":428043,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428154,"byte_end":428165,"line_start":89,"line_end":89,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"<u64 as read::reader::ReaderOffset>::checked_sub","value":"fn checked_sub(Self, Self) -> Option<Self>","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1178},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428137,"byte_end":428146,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428293,"byte_end":428300,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"from_u8","qualname":"<u32 as read::reader::ReaderOffset>::from_u8","value":"fn from_u8(u8) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428276,"byte_end":428285,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428377,"byte_end":428385,"line_start":101,"line_end":101,"column_start":8,"column_end":16},"name":"from_u16","qualname":"<u32 as read::reader::ReaderOffset>::from_u16","value":"fn from_u16(u16) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1172},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428360,"byte_end":428369,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428463,"byte_end":428471,"line_start":106,"line_end":106,"column_start":8,"column_end":16},"name":"from_i16","qualname":"<u32 as read::reader::ReaderOffset>::from_i16","value":"fn from_i16(i16) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1173},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428446,"byte_end":428455,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428545,"byte_end":428553,"line_start":111,"line_end":111,"column_start":8,"column_end":16},"name":"from_u32","qualname":"<u32 as read::reader::ReaderOffset>::from_u32","value":"fn from_u32(u32) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1174},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428528,"byte_end":428537,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428620,"byte_end":428628,"line_start":116,"line_end":116,"column_start":8,"column_end":16},"name":"from_u64","qualname":"<u32 as read::reader::ReaderOffset>::from_u64","value":"fn from_u64(u64) -> Result<Self>","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1175},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428603,"byte_end":428612,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428863,"byte_end":428871,"line_start":126,"line_end":126,"column_start":8,"column_end":16},"name":"into_u64","qualname":"<u32 as read::reader::ReaderOffset>::into_u64","value":"fn into_u64(Self) -> u64","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1176},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428846,"byte_end":428855,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428939,"byte_end":428951,"line_start":131,"line_end":131,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"<u32 as read::reader::ReaderOffset>::wrapping_add","value":"fn wrapping_add(Self, Self) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1177},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":428922,"byte_end":428931,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429042,"byte_end":429053,"line_start":136,"line_end":136,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"<u32 as read::reader::ReaderOffset>::checked_sub","value":"fn checked_sub(Self, Self) -> Option<Self>","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1178},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429025,"byte_end":429034,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429183,"byte_end":429190,"line_start":143,"line_end":143,"column_start":8,"column_end":15},"name":"from_u8","qualname":"<usize as read::reader::ReaderOffset>::from_u8","value":"fn from_u8(u8) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429166,"byte_end":429175,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429265,"byte_end":429273,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"from_u16","qualname":"<usize as read::reader::ReaderOffset>::from_u16","value":"fn from_u16(u16) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1172},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429248,"byte_end":429257,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429349,"byte_end":429357,"line_start":153,"line_end":153,"column_start":8,"column_end":16},"name":"from_i16","qualname":"<usize as read::reader::ReaderOffset>::from_i16","value":"fn from_i16(i16) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1173},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429332,"byte_end":429341,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429433,"byte_end":429441,"line_start":158,"line_end":158,"column_start":8,"column_end":16},"name":"from_u32","qualname":"<usize as read::reader::ReaderOffset>::from_u32","value":"fn from_u32(u32) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1174},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429416,"byte_end":429425,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429517,"byte_end":429525,"line_start":163,"line_end":163,"column_start":8,"column_end":16},"name":"from_u64","qualname":"<usize as read::reader::ReaderOffset>::from_u64","value":"fn from_u64(u64) -> Result<Self>","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1175},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429500,"byte_end":429509,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429758,"byte_end":429766,"line_start":173,"line_end":173,"column_start":8,"column_end":16},"name":"into_u64","qualname":"<usize as read::reader::ReaderOffset>::into_u64","value":"fn into_u64(Self) -> u64","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1176},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429741,"byte_end":429750,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429830,"byte_end":429842,"line_start":178,"line_end":178,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"<usize as read::reader::ReaderOffset>::wrapping_add","value":"fn wrapping_add(Self, Self) -> Self","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1177},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429813,"byte_end":429822,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429933,"byte_end":429944,"line_start":183,"line_end":183,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"<usize as read::reader::ReaderOffset>::checked_sub","value":"fn checked_sub(Self, Self) -> Option<Self>","parent":{"krate":0,"index":1170},"children":[],"decl_id":{"krate":0,"index":1178},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":429916,"byte_end":429925,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431617,"byte_end":431623,"line_start":207,"line_end":207,"column_start":11,"column_end":17},"name":"Reader","qualname":"::read::reader::Reader","value":"Reader: Debug + Clone","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259}],"decl_id":null,"docs":" A trait for reading the data from a DWARF section.","sig":null,"attributes":[{"value":"/ A trait for reading the data from a DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430023,"byte_end":430077,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430078,"byte_end":430081,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ All read operations advance the section offset of the reader","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430082,"byte_end":430146,"line_start":190,"line_end":190,"column_start":1,"column_end":65}},{"value":"/ unless specified otherwise.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430147,"byte_end":430178,"line_start":191,"line_end":191,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430179,"byte_end":430182,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ ## Choosing a `Reader` Implementation","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430183,"byte_end":430224,"line_start":193,"line_end":193,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430225,"byte_end":430228,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ `gimli` comes with a few different `Reader` implementations and lets you","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430229,"byte_end":430305,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/ choose the one that is right for your use case. A `Reader` is essentially a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430306,"byte_end":430385,"line_start":196,"line_end":196,"column_start":1,"column_end":80}},{"value":"/ view into the raw bytes that make up some DWARF, but this view might borrow","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430386,"byte_end":430465,"line_start":197,"line_end":197,"column_start":1,"column_end":80}},{"value":"/ the underlying data or use reference counting ownership, and it might be","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430466,"byte_end":430542,"line_start":198,"line_end":198,"column_start":1,"column_end":77}},{"value":"/ thread safe or not.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430543,"byte_end":430566,"line_start":199,"line_end":199,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430567,"byte_end":430570,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ | Implementation    | Ownership         | Thread Safe | Notes |","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430571,"byte_end":430638,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/ |:------------------|:------------------|:------------|:------|","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430639,"byte_end":430706,"line_start":202,"line_end":202,"column_start":1,"column_end":68}},{"value":"/ | [`EndianSlice`](./struct.EndianSlice.html)        | Borrowed          | Yes         | Fastest, but requires that all of your code work with borrows. |","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430707,"byte_end":430863,"line_start":203,"line_end":203,"column_start":1,"column_end":157}},{"value":"/ | [`EndianRcSlice`](./struct.EndianRcSlice.html)    | Reference counted | No          | Shared ownership via reference counting, which alleviates the borrow restrictions of `EndianSlice` but imposes reference counting increments and decrements. Cannot be sent across threads, because the reference count is not atomic. |","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":430864,"byte_end":431188,"line_start":204,"line_end":204,"column_start":1,"column_end":325}},{"value":"/ | [`EndianArcSlice`](./struct.EndianArcSlice.html)  | Reference counted | Yes         | The same as `EndianRcSlice`, but uses atomic reference counting, and therefore reference counting operations are slower but `EndianArcSlice`s may be sent across threads. |","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431189,"byte_end":431452,"line_start":205,"line_end":205,"column_start":1,"column_end":264}},{"value":"/ | [`EndianReader<T>`](./struct.EndianReader.html)   | Same as `T`       | Same as `T` | Escape hatch for easily defining your own type of `Reader`. |","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431453,"byte_end":431606,"line_start":206,"line_end":206,"column_start":1,"column_end":154}}]},{"kind":"Type","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431696,"byte_end":431702,"line_start":209,"line_end":209,"column_start":10,"column_end":16},"name":"Endian","qualname":"::read::reader::Reader::Endian","value":"type Endian: Endianity;","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The endianity of bytes that are read.\n","sig":null,"attributes":[{"value":"/ The endianity of bytes that are read.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431645,"byte_end":431686,"line_start":208,"line_end":208,"column_start":5,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431772,"byte_end":431778,"line_start":212,"line_end":212,"column_start":10,"column_end":16},"name":"Offset","qualname":"::read::reader::Reader::Offset","value":"type Offset: ReaderOffset;","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The type used for offsets and lengths.\n","sig":null,"attributes":[{"value":"/ The type used for offsets and lengths.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431720,"byte_end":431762,"line_start":211,"line_end":211,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431855,"byte_end":431861,"line_start":215,"line_end":215,"column_start":8,"column_end":14},"name":"endian","qualname":"::read::reader::Reader::endian","value":"fn endian(&Self) -> Self::Endian","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Return the endianity of bytes that are read.\n","sig":null,"attributes":[{"value":"/ Return the endianity of bytes that are read.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431799,"byte_end":431847,"line_start":214,"line_end":214,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431940,"byte_end":431943,"line_start":218,"line_end":218,"column_start":8,"column_end":11},"name":"len","qualname":"::read::reader::Reader::len","value":"fn len(&Self) -> Self::Offset","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Return the number of bytes remaining.\n","sig":null,"attributes":[{"value":"/ Return the number of bytes remaining.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431891,"byte_end":431932,"line_start":217,"line_end":217,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432027,"byte_end":432032,"line_start":221,"line_end":221,"column_start":8,"column_end":13},"name":"empty","qualname":"::read::reader::Reader::empty","value":"fn empty(&mut Self)","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Set the number of bytes remaining to zero.\n","sig":null,"attributes":[{"value":"/ Set the number of bytes remaining to zero.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431973,"byte_end":432019,"line_start":220,"line_end":220,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432120,"byte_end":432128,"line_start":224,"line_end":224,"column_start":8,"column_end":16},"name":"truncate","qualname":"::read::reader::Reader::truncate","value":"fn truncate(&mut Self, Self::Offset) -> Result<()>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Set the number of bytes remaining to the specified length.\n","sig":null,"attributes":[{"value":"/ Set the number of bytes remaining to the specified length.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432050,"byte_end":432112,"line_start":223,"line_end":223,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432403,"byte_end":432414,"line_start":231,"line_end":231,"column_start":8,"column_end":19},"name":"offset_from","qualname":"::read::reader::Reader::offset_from","value":"fn offset_from(&Self, &Self) -> Self::Offset","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Return the offset of this reader's data relative to the start of\n the given base reader's data.","sig":null,"attributes":[{"value":"/ Return the offset of this reader's data relative to the start of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432179,"byte_end":432247,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/ the given base reader's data.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432252,"byte_end":432285,"line_start":227,"line_end":227,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432290,"byte_end":432293,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ May panic if this reader's data is not contained within the given","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432298,"byte_end":432367,"line_start":229,"line_end":229,"column_start":5,"column_end":74}},{"value":"/ base reader's data.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432372,"byte_end":432395,"line_start":230,"line_end":230,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432520,"byte_end":432529,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"offset_id","qualname":"::read::reader::Reader::offset_id","value":"fn offset_id(&Self) -> ReaderOffsetId","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Return an identifier for the current reader offset.\n","sig":null,"attributes":[{"value":"/ Return an identifier for the current reader offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432457,"byte_end":432512,"line_start":233,"line_end":233,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432668,"byte_end":432684,"line_start":238,"line_end":238,"column_start":8,"column_end":24},"name":"lookup_offset_id","qualname":"::read::reader::Reader::lookup_offset_id","value":"fn lookup_offset_id(&Self, ReaderOffsetId) -> Option<Self::Offset>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Return the offset corresponding to the given `id` if\n it is associated with this reader.\n","sig":null,"attributes":[{"value":"/ Return the offset corresponding to the given `id` if","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432561,"byte_end":432617,"line_start":236,"line_end":236,"column_start":5,"column_end":61}},{"value":"/ it is associated with this reader.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432622,"byte_end":432660,"line_start":237,"line_end":237,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432859,"byte_end":432863,"line_start":242,"line_end":242,"column_start":8,"column_end":12},"name":"find","qualname":"::read::reader::Reader::find","value":"fn find(&Self, u8) -> Result<Self::Offset>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Find the index of the first occurence of the given byte.\n The offset of the reader is not changed.\n","sig":null,"attributes":[{"value":"/ Find the index of the first occurence of the given byte.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432742,"byte_end":432802,"line_start":240,"line_end":240,"column_start":5,"column_end":65}},{"value":"/ The offset of the reader is not changed.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432807,"byte_end":432851,"line_start":241,"line_end":241,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432961,"byte_end":432965,"line_start":245,"line_end":245,"column_start":8,"column_end":12},"name":"skip","qualname":"::read::reader::Reader::skip","value":"fn skip(&mut Self, Self::Offset) -> Result<()>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Discard the specified number of bytes.\n","sig":null,"attributes":[{"value":"/ Discard the specified number of bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":432911,"byte_end":432953,"line_start":244,"line_end":244,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433201,"byte_end":433206,"line_start":251,"line_end":251,"column_start":8,"column_end":13},"name":"split","qualname":"::read::reader::Reader::split","value":"fn split(&mut Self, Self::Offset) -> Result<Self>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Split a reader in two.","sig":null,"attributes":[{"value":"/ Split a reader in two.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433016,"byte_end":433042,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433047,"byte_end":433050,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ A new reader is returned that can be used to read the next","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433055,"byte_end":433117,"line_start":249,"line_end":249,"column_start":5,"column_end":67}},{"value":"/ `len` bytes, and `self` is advanced so that it reads the remainder.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433122,"byte_end":433193,"line_start":250,"line_end":250,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433487,"byte_end":433495,"line_start":259,"line_end":259,"column_start":8,"column_end":16},"name":"to_slice","qualname":"::read::reader::Reader::to_slice","value":"fn to_slice(&Self) -> Result<Cow<, [u8]>>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Return all remaining data as a clone-on-write slice.","sig":null,"attributes":[{"value":"/ Return all remaining data as a clone-on-write slice.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433259,"byte_end":433315,"line_start":253,"line_end":253,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433320,"byte_end":433323,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ The slice will be borrowed where possible, but some readers may","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433328,"byte_end":433395,"line_start":255,"line_end":255,"column_start":5,"column_end":72}},{"value":"/ always return an owned vector.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433400,"byte_end":433434,"line_start":256,"line_end":256,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433439,"byte_end":433442,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Does not advance the reader.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433447,"byte_end":433479,"line_start":258,"line_end":258,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433835,"byte_end":433844,"line_start":269,"line_end":269,"column_start":8,"column_end":17},"name":"to_string","qualname":"::read::reader::Reader::to_string","value":"fn to_string(&Self) -> Result<Cow<, str>>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Convert all remaining data to a clone-on-write string.","sig":null,"attributes":[{"value":"/ Convert all remaining data to a clone-on-write string.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433530,"byte_end":433588,"line_start":261,"line_end":261,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433593,"byte_end":433596,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The string will be borrowed where possible, but some readers may","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433601,"byte_end":433669,"line_start":263,"line_end":263,"column_start":5,"column_end":73}},{"value":"/ always return an owned string.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433674,"byte_end":433708,"line_start":264,"line_end":264,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433713,"byte_end":433716,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Does not advance the reader.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433721,"byte_end":433753,"line_start":266,"line_end":266,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433758,"byte_end":433761,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the data contains invalid characters.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433766,"byte_end":433827,"line_start":268,"line_end":268,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434139,"byte_end":434154,"line_start":277,"line_end":277,"column_start":8,"column_end":23},"name":"to_string_lossy","qualname":"::read::reader::Reader::to_string_lossy","value":"fn to_string_lossy(&Self) -> Result<Cow<, str>>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Convert all remaining data to a clone-on-write string, including invalid characters.","sig":null,"attributes":[{"value":"/ Convert all remaining data to a clone-on-write string, including invalid characters.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433878,"byte_end":433966,"line_start":271,"line_end":271,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433971,"byte_end":433974,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The string will be borrowed where possible, but some readers may","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":433979,"byte_end":434047,"line_start":273,"line_end":273,"column_start":5,"column_end":73}},{"value":"/ always return an owned string.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434052,"byte_end":434086,"line_start":274,"line_end":274,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434091,"byte_end":434094,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Does not advance the reader.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434099,"byte_end":434131,"line_start":276,"line_end":276,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434242,"byte_end":434252,"line_start":280,"line_end":280,"column_start":8,"column_end":18},"name":"read_slice","qualname":"::read::reader::Reader::read_slice","value":"fn read_slice(&mut Self, &mut [u8]) -> Result<()>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read exactly `buf.len()` bytes into `buf`.\n","sig":null,"attributes":[{"value":"/ Read exactly `buf.len()` bytes into `buf`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434188,"byte_end":434234,"line_start":279,"line_end":279,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434342,"byte_end":434355,"line_start":284,"line_end":284,"column_start":8,"column_end":21},"name":"read_u8_array","qualname":"::read::reader::Reader::read_u8_array","value":"fn read_u8_array<A>(&mut Self) -> Result<A> where A: Sized + Default +\nAsMut<[u8]>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read a u8 array.\n","sig":null,"attributes":[{"value":"/ Read a u8 array.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434300,"byte_end":434320,"line_start":282,"line_end":282,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434325,"byte_end":434334,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434653,"byte_end":434661,"line_start":295,"line_end":295,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::read::reader::Reader::is_empty","value":"fn is_empty(&Self) -> bool","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Return true if the number of bytes remaining is zero.\n","sig":null,"attributes":[{"value":"/ Return true if the number of bytes remaining is zero.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434574,"byte_end":434631,"line_start":293,"line_end":293,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434636,"byte_end":434645,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434773,"byte_end":434780,"line_start":301,"line_end":301,"column_start":8,"column_end":15},"name":"read_u8","qualname":"::read::reader::Reader::read_u8","value":"fn read_u8(&mut Self) -> Result<u8>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read a u8.\n","sig":null,"attributes":[{"value":"/ Read a u8.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434737,"byte_end":434751,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434756,"byte_end":434765,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434921,"byte_end":434928,"line_start":308,"line_end":308,"column_start":8,"column_end":15},"name":"read_i8","qualname":"::read::reader::Reader::read_i8","value":"fn read_i8(&mut Self) -> Result<i8>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read an i8.\n","sig":null,"attributes":[{"value":"/ Read an i8.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434884,"byte_end":434899,"line_start":306,"line_end":306,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":434904,"byte_end":434913,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435075,"byte_end":435083,"line_start":315,"line_end":315,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::read::reader::Reader::read_u16","value":"fn read_u16(&mut Self) -> Result<u16>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read a u16.\n","sig":null,"attributes":[{"value":"/ Read a u16.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435038,"byte_end":435053,"line_start":313,"line_end":313,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435058,"byte_end":435067,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435248,"byte_end":435256,"line_start":322,"line_end":322,"column_start":8,"column_end":16},"name":"read_i16","qualname":"::read::reader::Reader::read_i16","value":"fn read_i16(&mut Self) -> Result<i16>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read an i16.\n","sig":null,"attributes":[{"value":"/ Read an i16.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435210,"byte_end":435226,"line_start":320,"line_end":320,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435231,"byte_end":435240,"line_start":321,"line_end":321,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435420,"byte_end":435428,"line_start":329,"line_end":329,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::read::reader::Reader::read_u32","value":"fn read_u32(&mut Self) -> Result<u32>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read a u32.\n","sig":null,"attributes":[{"value":"/ Read a u32.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435383,"byte_end":435398,"line_start":327,"line_end":327,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435403,"byte_end":435412,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435593,"byte_end":435601,"line_start":336,"line_end":336,"column_start":8,"column_end":16},"name":"read_i32","qualname":"::read::reader::Reader::read_i32","value":"fn read_i32(&mut Self) -> Result<i32>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read an i32.\n","sig":null,"attributes":[{"value":"/ Read an i32.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435555,"byte_end":435571,"line_start":334,"line_end":334,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435576,"byte_end":435585,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435765,"byte_end":435773,"line_start":343,"line_end":343,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::read::reader::Reader::read_u64","value":"fn read_u64(&mut Self) -> Result<u64>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read a u64.\n","sig":null,"attributes":[{"value":"/ Read a u64.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435728,"byte_end":435743,"line_start":341,"line_end":341,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435748,"byte_end":435757,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435938,"byte_end":435946,"line_start":350,"line_end":350,"column_start":8,"column_end":16},"name":"read_i64","qualname":"::read::reader::Reader::read_i64","value":"fn read_i64(&mut Self) -> Result<i64>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read an i64.\n","sig":null,"attributes":[{"value":"/ Read an i64.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435900,"byte_end":435916,"line_start":348,"line_end":348,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":435921,"byte_end":435930,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436110,"byte_end":436118,"line_start":357,"line_end":357,"column_start":8,"column_end":16},"name":"read_f32","qualname":"::read::reader::Reader::read_f32","value":"fn read_f32(&mut Self) -> Result<f32>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read a f32.\n","sig":null,"attributes":[{"value":"/ Read a f32.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436073,"byte_end":436088,"line_start":355,"line_end":355,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436093,"byte_end":436102,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436282,"byte_end":436290,"line_start":364,"line_end":364,"column_start":8,"column_end":16},"name":"read_f64","qualname":"::read::reader::Reader::read_f64","value":"fn read_f64(&mut Self) -> Result<f64>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read a f64.\n","sig":null,"attributes":[{"value":"/ Read a f64.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436245,"byte_end":436260,"line_start":362,"line_end":362,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436265,"byte_end":436274,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436558,"byte_end":436567,"line_start":375,"line_end":375,"column_start":8,"column_end":17},"name":"read_uint","qualname":"::read::reader::Reader::read_uint","value":"fn read_uint(&mut Self, usize) -> Result<u64>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read an unsigned n-bytes integer u64.","sig":null,"attributes":[{"value":"/ Read an unsigned n-bytes integer u64.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436417,"byte_end":436458,"line_start":369,"line_end":369,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436463,"byte_end":436466,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436471,"byte_end":436483,"line_start":371,"line_end":371,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436488,"byte_end":436491,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Panics when nbytes < 1 or nbytes > 8","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436496,"byte_end":436536,"line_start":373,"line_end":373,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436541,"byte_end":436550,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436812,"byte_end":436838,"line_start":382,"line_end":382,"column_start":8,"column_end":34},"name":"read_null_terminated_slice","qualname":"::read::reader::Reader::read_null_terminated_slice","value":"fn read_null_terminated_slice(&mut Self) -> Result<Self>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read a null-terminated slice, and return it (excluding the null).\n","sig":null,"attributes":[{"value":"/ Read a null-terminated slice, and return it (excluding the null).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":436735,"byte_end":436804,"line_start":381,"line_end":381,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":437062,"byte_end":437074,"line_start":390,"line_end":390,"column_start":8,"column_end":20},"name":"read_uleb128","qualname":"::read::reader::Reader::read_uleb128","value":"fn read_uleb128(&mut Self) -> Result<u64>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 encoded integer.\n","sig":null,"attributes":[{"value":"/ Read an unsigned LEB128 encoded integer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":437010,"byte_end":437054,"line_start":389,"line_end":389,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":437199,"byte_end":437215,"line_start":395,"line_end":395,"column_start":8,"column_end":24},"name":"read_uleb128_u16","qualname":"::read::reader::Reader::read_uleb128_u16","value":"fn read_uleb128_u16(&mut Self) -> Result<u16>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 encoded u16.\n","sig":null,"attributes":[{"value":"/ Read an unsigned LEB128 encoded u16.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":437151,"byte_end":437191,"line_start":394,"line_end":394,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":437336,"byte_end":437348,"line_start":400,"line_end":400,"column_start":8,"column_end":20},"name":"read_sleb128","qualname":"::read::reader::Reader::read_sleb128","value":"fn read_sleb128(&mut Self) -> Result<i64>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read a signed LEB128 encoded integer.\n","sig":null,"attributes":[{"value":"/ Read a signed LEB128 encoded integer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":437287,"byte_end":437328,"line_start":399,"line_end":399,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":437599,"byte_end":437618,"line_start":408,"line_end":408,"column_start":8,"column_end":27},"name":"read_initial_length","qualname":"::read::reader::Reader::read_initial_length","value":"fn read_initial_length(&mut Self) -> Result<(Self::Offset, Format)>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read an initial length field.","sig":null,"attributes":[{"value":"/ Read an initial length field.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":437423,"byte_end":437456,"line_start":404,"line_end":404,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":437461,"byte_end":437464,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This field is encoded as either a 32-bit length or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":437469,"byte_end":437523,"line_start":406,"line_end":406,"column_start":5,"column_end":59}},{"value":"/ a 64-bit length, and the returned `Format` indicates which.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":437528,"byte_end":437591,"line_start":407,"line_end":407,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":438252,"byte_end":438264,"line_start":424,"line_end":424,"column_start":8,"column_end":20},"name":"read_address","qualname":"::read::reader::Reader::read_address","value":"fn read_address(&mut Self, u8) -> Result<u64>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Read an address-sized integer, and return it as a `u64`.\n","sig":null,"attributes":[{"value":"/ Read an address-sized integer, and return it as a `u64`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":438184,"byte_end":438244,"line_start":423,"line_end":423,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":438804,"byte_end":438813,"line_start":438,"line_end":438,"column_start":8,"column_end":17},"name":"read_word","qualname":"::read::reader::Reader::read_word","value":"fn read_word(&mut Self, Format) -> Result<Self::Offset>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Parse a word-sized integer according to the DWARF format.","sig":null,"attributes":[{"value":"/ Parse a word-sized integer according to the DWARF format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":438613,"byte_end":438674,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":438679,"byte_end":438682,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ These are always used to encode section offsets or lengths,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":438687,"byte_end":438750,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/ and so have a type of `Self::Offset`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":438755,"byte_end":438796,"line_start":437,"line_end":437,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":439158,"byte_end":439169,"line_start":447,"line_end":447,"column_start":8,"column_end":19},"name":"read_length","qualname":"::read::reader::Reader::read_length","value":"fn read_length(&mut Self, Format) -> Result<Self::Offset>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Parse a word-sized section length according to the DWARF format.\n","sig":null,"attributes":[{"value":"/ Parse a word-sized section length according to the DWARF format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":439068,"byte_end":439136,"line_start":445,"line_end":445,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":439141,"byte_end":439150,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":439355,"byte_end":439366,"line_start":453,"line_end":453,"column_start":8,"column_end":19},"name":"read_offset","qualname":"::read::reader::Reader::read_offset","value":"fn read_offset(&mut Self, Format) -> Result<Self::Offset>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Parse a word-sized section offset according to the DWARF format.\n","sig":null,"attributes":[{"value":"/ Parse a word-sized section offset according to the DWARF format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":439265,"byte_end":439333,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":439338,"byte_end":439347,"line_start":452,"line_end":452,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":439594,"byte_end":439611,"line_start":460,"line_end":460,"column_start":8,"column_end":25},"name":"read_sized_offset","qualname":"::read::reader::Reader::read_sized_offset","value":"fn read_sized_offset(&mut Self, u8) -> Result<Self::Offset>","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" Parse a section offset of the given size.","sig":null,"attributes":[{"value":"/ Parse a section offset of the given size.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":439462,"byte_end":439507,"line_start":457,"line_end":457,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":439512,"byte_end":439515,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This is used for `DW_FORM_ref_addr` values in DWARF version 2.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":439520,"byte_end":439586,"line_start":459,"line_end":459,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":7426},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":440593,"byte_end":440604,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"DebugAbbrev","qualname":"::read::abbrev::DebugAbbrev","value":"DebugAbbrev {  }","parent":null,"children":[{"krate":0,"index":7428}],"decl_id":null,"docs":" The `DebugAbbrev` struct represents the abbreviations describing\n `DebuggingInformationEntry`s' attribute names and forms found in the\n `.debug_abbrev` section.\n","sig":null,"attributes":[{"value":"/ The `DebugAbbrev` struct represents the abbreviations describing","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":440372,"byte_end":440440,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ `DebuggingInformationEntry`s' attribute names and forms found in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":440441,"byte_end":440513,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ `.debug_abbrev` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":440514,"byte_end":440542,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441345,"byte_end":441348,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugAbbrev<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugAbbrev` instance from the data in the `.debug_abbrev`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugAbbrev` instance from the data in the `.debug_abbrev`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":440739,"byte_end":440818,"line_start":26,"line_end":26,"column_start":5,"column_end":84}},{"value":"/ section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":440823,"byte_end":440835,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":440840,"byte_end":440843,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_abbrev` section and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":440848,"byte_end":440925,"line_start":29,"line_end":29,"column_start":5,"column_end":82}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":440930,"byte_end":441000,"line_start":30,"line_end":30,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441005,"byte_end":441044,"line_start":31,"line_end":31,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441049,"byte_end":441052,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441057,"byte_end":441064,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugAbbrev, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441069,"byte_end":441112,"line_start":34,"line_end":34,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441117,"byte_end":441120,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441125,"byte_end":441166,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_abbrev_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441171,"byte_end":441225,"line_start":37,"line_end":37,"column_start":5,"column_end":59}},{"value":"/ let debug_abbrev = DebugAbbrev::new(read_debug_abbrev_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441230,"byte_end":441321,"line_start":38,"line_end":38,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441326,"byte_end":441333,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441709,"byte_end":441722,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<DebugAbbrev<R>>::abbreviations","value":"fn abbreviations(&Self, DebugAbbrevOffset<R::Offset>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse the abbreviations at the given `offset` within this\n `.debug_abbrev` section.","sig":null,"attributes":[{"value":"/ Parse the abbreviations at the given `offset` within this","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441524,"byte_end":441585,"line_start":46,"line_end":46,"column_start":5,"column_end":66}},{"value":"/ `.debug_abbrev` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441590,"byte_end":441618,"line_start":47,"line_end":47,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441623,"byte_end":441626,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The `offset` should generally be retrieved from a unit header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441631,"byte_end":441697,"line_start":49,"line_end":49,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442643,"byte_end":442649,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugAbbrev<T>>::borrow","value":"fn borrow<'a, F, R>(&'a Self, F) -> DebugAbbrev<R> where F: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugAbbrev` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugAbbrev` section that references the data in `self`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442009,"byte_end":442079,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442084,"byte_end":442087,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442092,"byte_end":442157,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442162,"byte_end":442165,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442170,"byte_end":442190,"line_start":65,"line_end":65,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442195,"byte_end":442198,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442203,"byte_end":442221,"line_start":67,"line_end":67,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442226,"byte_end":442271,"line_start":68,"line_end":68,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442276,"byte_end":442360,"line_start":69,"line_end":69,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugAbbrev<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442365,"byte_end":442433,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442438,"byte_end":442485,"line_start":71,"line_end":71,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442490,"byte_end":442540,"line_start":72,"line_end":72,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442545,"byte_end":442607,"line_start":73,"line_end":73,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442612,"byte_end":442619,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442624,"byte_end":442631,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442855,"byte_end":442857,"line_start":85,"line_end":85,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugAbbrev<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442920,"byte_end":442926,"line_start":89,"line_end":89,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugAbbrev<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":443030,"byte_end":443034,"line_start":95,"line_end":95,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugAbbrev<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7440},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":443358,"byte_end":443371,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"Abbreviations","qualname":"::read::abbrev::Abbreviations","value":"Abbreviations {  }","parent":null,"children":[{"krate":0,"index":7441},{"krate":0,"index":7442}],"decl_id":null,"docs":" A set of type abbreviations.","sig":null,"attributes":[{"value":"/ A set of type abbreviations.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":443145,"byte_end":443177,"line_start":102,"line_end":102,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":443178,"byte_end":443181,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Construct an `Abbreviations` instance with the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":443182,"byte_end":443232,"line_start":104,"line_end":104,"column_start":1,"column_end":51}},{"value":"/ [`abbreviations()`](struct.UnitHeader.html#method.abbreviations)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":443233,"byte_end":443301,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ method.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":443302,"byte_end":443313,"line_start":106,"line_end":106,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":445133,"byte_end":445136,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"get","qualname":"<Abbreviations>::get","value":"fn get(&Self, u64) -> Option<&Abbreviation>","parent":null,"children":[],"decl_id":null,"docs":" Get the abbreviation associated with the given code.\n","sig":null,"attributes":[{"value":"/ Get the abbreviation associated with the given code.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":445051,"byte_end":445107,"line_start":154,"line_end":154,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":445112,"byte_end":445121,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7449},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":446034,"byte_end":446046,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"Abbreviation","qualname":"::read::abbrev::Abbreviation","value":"Abbreviation {  }","parent":null,"children":[{"krate":0,"index":7450},{"krate":0,"index":7451},{"krate":0,"index":7452},{"krate":0,"index":7453}],"decl_id":null,"docs":" An abbreviation describes the shape of a `DebuggingInformationEntry`'s type:\n its code, tag type, whether it has children, and its set of attributes.\n","sig":null,"attributes":[{"value":"/ An abbreviation describes the shape of a `DebuggingInformationEntry`'s type:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":445827,"byte_end":445907,"line_start":179,"line_end":179,"column_start":1,"column_end":81}},{"value":"/ its code, tag type, whether it has children, and its set of attributes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":445908,"byte_end":445983,"line_start":180,"line_end":180,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":446682,"byte_end":446686,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"code","qualname":"<Abbreviation>::code","value":"fn code(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get this abbreviation's code.\n","sig":null,"attributes":[{"value":"/ Get this abbreviation's code.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":446623,"byte_end":446656,"line_start":210,"line_end":210,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":446661,"byte_end":446670,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":446790,"byte_end":446793,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"tag","qualname":"<Abbreviation>::tag","value":"fn tag(&Self) -> constants::DwTag","parent":null,"children":[],"decl_id":null,"docs":" Get this abbreviation's tag.\n","sig":null,"attributes":[{"value":"/ Get this abbreviation's tag.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":446732,"byte_end":446764,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":446769,"byte_end":446778,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":446951,"byte_end":446963,"line_start":224,"line_end":224,"column_start":12,"column_end":24},"name":"has_children","qualname":"<Abbreviation>::has_children","value":"fn has_children(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this abbreviation's type has children, false otherwise.\n","sig":null,"attributes":[{"value":"/ Return true if this abbreviation's type has children, false otherwise.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":446851,"byte_end":446925,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":446930,"byte_end":446939,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":447113,"byte_end":447123,"line_start":230,"line_end":230,"column_start":12,"column_end":22},"name":"attributes","qualname":"<Abbreviation>::attributes","value":"fn attributes(&Self) -> &[AttributeSpecification]","parent":null,"children":[],"decl_id":null,"docs":" Get this abbreviation's attributes.\n","sig":null,"attributes":[{"value":"/ Get this abbreviation's attributes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":447048,"byte_end":447087,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":447092,"byte_end":447101,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7475},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":451243,"byte_end":451265,"line_start":373,"line_end":373,"column_start":12,"column_end":34},"name":"AttributeSpecification","qualname":"::read::abbrev::AttributeSpecification","value":"AttributeSpecification {  }","parent":null,"children":[{"krate":0,"index":7476},{"krate":0,"index":7477},{"krate":0,"index":7478}],"decl_id":null,"docs":" The description of an attribute in an abbreviated type. It is a pair of name\n and form.\n","sig":null,"attributes":[{"value":"/ The description of an attribute in an abbreviated type. It is a pair of name","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":451092,"byte_end":451172,"line_start":370,"line_end":370,"column_start":1,"column_end":81}},{"value":"/ and form.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":451173,"byte_end":451186,"line_start":371,"line_end":371,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":451525,"byte_end":451528,"line_start":383,"line_end":383,"column_start":12,"column_end":15},"name":"new","qualname":"<AttributeSpecification>::new","value":"fn new(constants::DwAt, constants::DwForm, Option<i64>)\n-> AttributeSpecification","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `AttributeSpecification` from the given name and form\n and implicit const value.\n","sig":null,"attributes":[{"value":"/ Construct a new `AttributeSpecification` from the given name and form","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":451392,"byte_end":451465,"line_start":380,"line_end":380,"column_start":5,"column_end":78}},{"value":"/ and implicit const value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":451470,"byte_end":451499,"line_start":381,"line_end":381,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":451504,"byte_end":451513,"line_start":382,"line_end":382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452106,"byte_end":452110,"line_start":401,"line_end":401,"column_start":12,"column_end":16},"name":"name","qualname":"<AttributeSpecification>::name","value":"fn name(&Self) -> constants::DwAt","parent":null,"children":[],"decl_id":null,"docs":" Get the attribute's name.\n","sig":null,"attributes":[{"value":"/ Get the attribute's name.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452051,"byte_end":452080,"line_start":399,"line_end":399,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452085,"byte_end":452094,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452223,"byte_end":452227,"line_start":407,"line_end":407,"column_start":12,"column_end":16},"name":"form","qualname":"<AttributeSpecification>::form","value":"fn form(&Self) -> constants::DwForm","parent":null,"children":[],"decl_id":null,"docs":" Get the attribute's form.\n","sig":null,"attributes":[{"value":"/ Get the attribute's form.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452168,"byte_end":452197,"line_start":405,"line_end":405,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452202,"byte_end":452211,"line_start":406,"line_end":406,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452358,"byte_end":452378,"line_start":413,"line_end":413,"column_start":12,"column_end":32},"name":"implicit_const_value","qualname":"<AttributeSpecification>::implicit_const_value","value":"fn implicit_const_value(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the attribute's implicit const value.\n","sig":null,"attributes":[{"value":"/ Get the attribute's implicit const value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452287,"byte_end":452332,"line_start":411,"line_end":411,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452337,"byte_end":452346,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452723,"byte_end":452727,"line_start":422,"line_end":422,"column_start":12,"column_end":16},"name":"size","qualname":"<AttributeSpecification>::size","value":"fn size<R>(&Self, &UnitHeader<R>) -> Option<usize> where R: Reader","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the attribute, in bytes.","sig":null,"attributes":[{"value":"/ Return the size of the attribute, in bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452505,"byte_end":452552,"line_start":418,"line_end":418,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452557,"byte_end":452560,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Note that because some attributes are variably sized, the size cannot","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452565,"byte_end":452638,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ always be known without parsing, in which case we return `None`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":452643,"byte_end":452711,"line_start":421,"line_end":421,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":7514},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472107,"byte_end":472118,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"ArangeEntry","qualname":"::read::aranges::ArangeEntry","value":"ArangeEntry {  }","parent":null,"children":[{"krate":0,"index":7516},{"krate":0,"index":7517},{"krate":0,"index":7518},{"krate":0,"index":7519}],"decl_id":null,"docs":" A single parsed arange.\n","sig":null,"attributes":[{"value":"/ A single parsed arange.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472029,"byte_end":472056,"line_start":19,"line_end":19,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472354,"byte_end":472361,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"segment","qualname":"<ArangeEntry<T>>::segment","value":"fn segment(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Return the segment selector of this arange.\n","sig":null,"attributes":[{"value":"/ Return the segment selector of this arange.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472281,"byte_end":472328,"line_start":29,"line_end":29,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472333,"byte_end":472342,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472492,"byte_end":472499,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"address","qualname":"<ArangeEntry<T>>::address","value":"fn address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the beginning address of this arange.\n","sig":null,"attributes":[{"value":"/ Return the beginning address of this arange.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472418,"byte_end":472466,"line_start":35,"line_end":35,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472471,"byte_end":472480,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472611,"byte_end":472617,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"length","qualname":"<ArangeEntry<T>>::length","value":"fn length(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the length of this arange.\n","sig":null,"attributes":[{"value":"/ Return the length of this arange.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472548,"byte_end":472585,"line_start":41,"line_end":41,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472590,"byte_end":472599,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472758,"byte_end":472775,"line_start":49,"line_end":49,"column_start":12,"column_end":29},"name":"debug_info_offset","qualname":"<ArangeEntry<T>>::debug_info_offset","value":"fn debug_info_offset(&Self) -> DebugInfoOffset<T>","parent":null,"children":[],"decl_id":null,"docs":" Return the offset into the .debug_info section for this arange.\n","sig":null,"attributes":[{"value":"/ Return the offset into the .debug_info section for this arange.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472665,"byte_end":472732,"line_start":47,"line_end":47,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472737,"byte_end":472746,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472907,"byte_end":472918,"line_start":55,"line_end":55,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<ArangeEntry<T> as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &ArangeEntry<T>) -> Option<Ordering>","parent":{"krate":1,"index":2848},"children":[],"decl_id":{"krate":1,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":473063,"byte_end":473066,"line_start":61,"line_end":61,"column_start":8,"column_end":11},"name":"cmp","qualname":"<ArangeEntry<T> as core::cmp::Ord>::cmp","value":"fn cmp(&Self, &ArangeEntry<T>) -> Ordering","parent":{"krate":1,"index":2838},"children":[],"decl_id":{"krate":1,"index":2839},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7546},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":476745,"byte_end":476757,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"DebugAranges","qualname":"::read::aranges::DebugAranges","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `DebugAranges` struct represents the DWARF address range information\n found in the `.debug_aranges` section.\n","sig":null,"attributes":[{"value":"/ The `DebugAranges` struct represents the DWARF address range information","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":476590,"byte_end":476666,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ found in the `.debug_aranges` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":476667,"byte_end":476709,"line_start":165,"line_end":165,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477490,"byte_end":477493,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugAranges<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugAranges` instance from the data in the `.debug_aranges`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugAranges` instance from the data in the `.debug_aranges`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":476902,"byte_end":476983,"line_start":173,"line_end":173,"column_start":5,"column_end":86}},{"value":"/ section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":476988,"byte_end":477000,"line_start":174,"line_end":174,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477005,"byte_end":477008,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_aranges` section and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477013,"byte_end":477091,"line_start":176,"line_end":176,"column_start":5,"column_end":83}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477096,"byte_end":477166,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477171,"byte_end":477210,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477215,"byte_end":477218,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477223,"byte_end":477230,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugAranges, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477235,"byte_end":477279,"line_start":181,"line_end":181,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477284,"byte_end":477287,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477292,"byte_end":477311,"line_start":183,"line_end":183,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_aranges_section = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477316,"byte_end":477363,"line_start":184,"line_end":184,"column_start":5,"column_end":52}},{"value":"/ let debug_aranges =","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477368,"byte_end":477391,"line_start":185,"line_end":185,"column_start":5,"column_end":28}},{"value":"/     DebugAranges::new(read_debug_aranges_section(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477396,"byte_end":477466,"line_start":186,"line_end":186,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477471,"byte_end":477478,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478224,"byte_end":478229,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"name":"items","qualname":"<DebugAranges<R>>::items","value":"fn items(&Self) -> ArangeEntryIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the aranges in the `.debug_aranges` section.","sig":null,"attributes":[{"value":"/ Iterate the aranges in the `.debug_aranges` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477672,"byte_end":477728,"line_start":194,"line_end":194,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477733,"byte_end":477736,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477741,"byte_end":477748,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugAranges, EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477753,"byte_end":477810,"line_start":197,"line_end":197,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477815,"byte_end":477818,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477823,"byte_end":477842,"line_start":199,"line_end":199,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_aranges_section = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477847,"byte_end":477894,"line_start":200,"line_end":200,"column_start":5,"column_end":52}},{"value":"/ let debug_aranges = DebugAranges::new(read_debug_aranges_section(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477899,"byte_end":477985,"line_start":201,"line_end":201,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477990,"byte_end":477993,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_aranges.items();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477998,"byte_end":478039,"line_start":203,"line_end":203,"column_start":5,"column_end":46}},{"value":"/ while let Some(arange) = iter.next().unwrap() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478044,"byte_end":478095,"line_start":204,"line_end":204,"column_start":5,"column_end":56}},{"value":"/     println!(\"arange starts at {}, has length {}\", arange.address(), arange.length());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478100,"byte_end":478190,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478195,"byte_end":478200,"line_start":206,"line_end":206,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478205,"byte_end":478212,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478366,"byte_end":478368,"line_start":214,"line_end":214,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugAranges<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478432,"byte_end":478438,"line_start":218,"line_end":218,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugAranges<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478540,"byte_end":478544,"line_start":224,"line_end":224,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugAranges<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7556},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478847,"byte_end":478862,"line_start":234,"line_end":234,"column_start":12,"column_end":27},"name":"ArangeEntryIter","qualname":"::read::aranges::ArangeEntryIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the aranges from a `.debug_aranges` section.","sig":null,"attributes":[{"value":"/ An iterator over the aranges from a `.debug_aranges` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478653,"byte_end":478718,"line_start":229,"line_end":229,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478719,"byte_end":478722,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478723,"byte_end":478744,"line_start":231,"line_end":231,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478745,"byte_end":478811,"line_start":232,"line_end":232,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":479348,"byte_end":479352,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"next","qualname":"<ArangeEntryIter<R>>::next","value":"fn next(&mut Self) -> Result<Option<ArangeEntry<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next arange.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next arange.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478954,"byte_end":479006,"line_start":237,"line_end":237,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":479011,"byte_end":479014,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Returns the newly parsed arange as `Ok(Some(arange))`. Returns `Ok(None)`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":479019,"byte_end":479096,"line_start":239,"line_end":239,"column_start":5,"column_end":82}},{"value":"/ when iteration is complete and all aranges have already been parsed and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":479101,"byte_end":479176,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ yielded. If an error occurs while parsing the next arange, then this error","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":479181,"byte_end":479259,"line_start":241,"line_end":241,"column_start":5,"column_end":83}},{"value":"/ is returned as `Err(e)`, and all subsequent calls return `Ok(None)`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":479264,"byte_end":479336,"line_start":242,"line_end":242,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":479626,"byte_end":479630,"line_start":253,"line_end":253,"column_start":8,"column_end":12},"name":"next","qualname":"<ArangeEntryIter<R> as fallible_iterator::FallibleIterator>::next","value":"fn next(&mut Self) -> ::core::result::Result<Option<Self::Item>, Self::Error>","parent":{"krate":25,"index":59},"children":[],"decl_id":{"krate":25,"index":62},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7566},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485388,"byte_end":485397,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"DebugLine","qualname":"::read::line::DebugLine","value":"DebugLine {  }","parent":null,"children":[{"krate":0,"index":7568}],"decl_id":null,"docs":" The `DebugLine` struct contains the source location to instruction mapping\n found in the `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ The `DebugLine` struct contains the source location to instruction mapping","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485219,"byte_end":485297,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ found in the `.debug_line` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485298,"byte_end":485337,"line_start":14,"line_end":14,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486118,"byte_end":486121,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugLine<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugLine` instance from the data in the `.debug_line`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugLine` instance from the data in the `.debug_line`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485528,"byte_end":485603,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485608,"byte_end":485620,"line_start":25,"line_end":25,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485625,"byte_end":485628,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_line` section and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485633,"byte_end":485708,"line_start":27,"line_end":27,"column_start":5,"column_end":80}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485713,"byte_end":485783,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485788,"byte_end":485827,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485832,"byte_end":485835,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485840,"byte_end":485847,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugLine, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485852,"byte_end":485893,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485898,"byte_end":485901,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485906,"byte_end":485947,"line_start":34,"line_end":34,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_line_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485952,"byte_end":486004,"line_start":35,"line_end":35,"column_start":5,"column_end":57}},{"value":"/ let debug_line = DebugLine::new(read_debug_line_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486009,"byte_end":486094,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486099,"byte_end":486106,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":487443,"byte_end":487450,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"program","qualname":"<DebugLine<R>>::program","value":"fn program(&Self, DebugLineOffset<R::Offset>, u8, Option<R>, Option<R>)\n-> Result<IncompleteLineProgram<R>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the line number program whose header is at the given `offset` in the\n `.debug_line` section.","sig":null,"attributes":[{"value":"/ Parse the line number program whose header is at the given `offset` in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486291,"byte_end":486369,"line_start":44,"line_end":44,"column_start":5,"column_end":83}},{"value":"/ `.debug_line` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486374,"byte_end":486400,"line_start":45,"line_end":45,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486405,"byte_end":486408,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The `address_size` must match the compilation unit that the lines apply to.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486413,"byte_end":486492,"line_start":47,"line_end":47,"column_start":5,"column_end":84}},{"value":"/ The `comp_dir` should be from the `DW_AT_comp_dir` attribute of the compilation","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486497,"byte_end":486580,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ unit. The `comp_name` should be from the `DW_AT_name` attribute of the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486585,"byte_end":486659,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486664,"byte_end":486685,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486690,"byte_end":486693,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486698,"byte_end":486716,"line_start":52,"line_end":52,"column_start":5,"column_end":23}},{"value":"/ use gimli::{DebugLine, DebugLineOffset, IncompleteLineProgram, EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486721,"byte_end":486815,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486820,"byte_end":486823,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486828,"byte_end":486847,"line_start":55,"line_end":55,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_line_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486852,"byte_end":486904,"line_start":56,"line_end":56,"column_start":5,"column_end":57}},{"value":"/ let debug_line = DebugLine::new(read_debug_line_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486909,"byte_end":486994,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486999,"byte_end":487002,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ // In a real example, we'd grab the offset via a compilation unit","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":487007,"byte_end":487076,"line_start":59,"line_end":59,"column_start":5,"column_end":74}},{"value":"/ // entry's `DW_AT_stmt_list` attribute, and the address size from that","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":487081,"byte_end":487155,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ // unit directly.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":487160,"byte_end":487181,"line_start":61,"line_end":61,"column_start":5,"column_end":26}},{"value":"/ let offset = DebugLineOffset(0);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":487186,"byte_end":487222,"line_start":62,"line_end":62,"column_start":5,"column_end":41}},{"value":"/ let address_size = 8;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":487227,"byte_end":487252,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":487257,"byte_end":487260,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let program = debug_line.program(offset, address_size, None, None)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":487265,"byte_end":487335,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/     .expect(\"should have found a header at that offset, and parsed it OK\");","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":487340,"byte_end":487419,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":487424,"byte_end":487431,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488569,"byte_end":488575,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugLine<T>>::borrow","value":"fn borrow<'a, F, R>(&'a Self, F) -> DebugLine<R> where F: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugLine` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugLine` section that references the data in `self`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":487939,"byte_end":488007,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488012,"byte_end":488015,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488020,"byte_end":488085,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488090,"byte_end":488093,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488098,"byte_end":488118,"line_start":88,"line_end":88,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488123,"byte_end":488126,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488131,"byte_end":488149,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488154,"byte_end":488199,"line_start":91,"line_end":91,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488204,"byte_end":488288,"line_start":92,"line_end":92,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugLine<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488293,"byte_end":488359,"line_start":93,"line_end":93,"column_start":5,"column_end":71}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488364,"byte_end":488411,"line_start":94,"line_end":94,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488416,"byte_end":488466,"line_start":95,"line_end":95,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488471,"byte_end":488533,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488538,"byte_end":488545,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488550,"byte_end":488557,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488775,"byte_end":488777,"line_start":108,"line_end":108,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugLine<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488838,"byte_end":488844,"line_start":112,"line_end":112,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugLine<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488944,"byte_end":488948,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugLine<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1559},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489205,"byte_end":489222,"line_start":125,"line_end":125,"column_start":10,"column_end":27},"name":"LineNumberProgram","qualname":"::read::line::LineNumberProgram","value":"dyn LineProgram<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberProgram` has been renamed to `LineProgram`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `LineNumberProgram` has been renamed to `LineProgram`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489032,"byte_end":489102,"line_start":123,"line_end":123,"column_start":1,"column_end":71}},{"value":"deprecated(note =\n\"LineNumberProgram has been renamed to LineProgram, use that instead.\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489103,"byte_end":489195,"line_start":124,"line_end":124,"column_start":1,"column_end":93}}]},{"kind":"Trait","id":{"krate":0,"index":1562},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489460,"byte_end":489471,"line_start":130,"line_end":130,"column_start":11,"column_end":22},"name":"LineProgram","qualname":"::read::line::LineProgram","value":"LineProgram<R, Offset = <R as Reader>::Offset>","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1566}],"decl_id":null,"docs":" A `LineProgram` provides access to a `LineProgramHeader` and\n a way to add files to the files table if necessary. Gimli consumers should\n never need to use or see this trait.\n","sig":null,"attributes":[{"value":"/ A `LineProgram` provides access to a `LineProgramHeader` and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489265,"byte_end":489329,"line_start":127,"line_end":127,"column_start":1,"column_end":65}},{"value":"/ a way to add files to the files table if necessary. Gimli consumers should","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489330,"byte_end":489408,"line_start":128,"line_end":128,"column_start":1,"column_end":79}},{"value":"/ never need to use or see this trait.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489409,"byte_end":489449,"line_start":129,"line_end":129,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489637,"byte_end":489643,"line_start":136,"line_end":136,"column_start":8,"column_end":14},"name":"header","qualname":"::read::line::LineProgram::header","value":"fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":{"krate":0,"index":1562},"children":[],"decl_id":null,"docs":" Get a reference to the held `LineProgramHeader`.\n","sig":null,"attributes":[{"value":"/ Get a reference to the held `LineProgramHeader`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489577,"byte_end":489629,"line_start":135,"line_end":135,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489743,"byte_end":489751,"line_start":138,"line_end":138,"column_start":8,"column_end":16},"name":"add_file","qualname":"::read::line::LineProgram::add_file","value":"fn add_file(&mut Self, FileEntry<R, Offset>)","parent":{"krate":0,"index":1562},"children":[],"decl_id":null,"docs":" Add a file to the file table if necessary.\n","sig":null,"attributes":[{"value":"/ Add a file to the file table if necessary.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489689,"byte_end":489735,"line_start":137,"line_end":137,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489944,"byte_end":489950,"line_start":146,"line_end":146,"column_start":8,"column_end":14},"name":"header","qualname":"<IncompleteLineProgram<R, Offset> as read::line::LineProgram>::header","value":"fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":{"krate":0,"index":1562},"children":[],"decl_id":{"krate":0,"index":1565},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":490027,"byte_end":490035,"line_start":149,"line_end":149,"column_start":8,"column_end":16},"name":"add_file","qualname":"<IncompleteLineProgram<R, Offset> as read::line::LineProgram>::add_file","value":"fn add_file(&mut Self, FileEntry<R, Offset>)","parent":{"krate":0,"index":1562},"children":[],"decl_id":{"krate":0,"index":1566},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":490296,"byte_end":490302,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"header","qualname":"<&'program CompleteLineProgram<R, Offset> as read::line::LineProgram>::header","value":"fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":{"krate":0,"index":1562},"children":[],"decl_id":{"krate":0,"index":1565},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":490379,"byte_end":490387,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"add_file","qualname":"<&'program CompleteLineProgram<R, Offset> as read::line::LineProgram>::add_file","value":"fn add_file(&mut Self, FileEntry<R, Offset>)","parent":{"krate":0,"index":1562},"children":[],"decl_id":{"krate":0,"index":1566},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1578},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":490644,"byte_end":490656,"line_start":169,"line_end":169,"column_start":10,"column_end":22},"name":"StateMachine","qualname":"::read::line::StateMachine","value":"LineRows<R, Program, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `StateMachine` has been renamed to `LineRows`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `StateMachine` has been renamed to `LineRows`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":490487,"byte_end":490549,"line_start":167,"line_end":167,"column_start":1,"column_end":63}},{"value":"deprecated(note =\n\"StateMachine has been renamed to LineRows, use that instead.\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":490550,"byte_end":490634,"line_start":168,"line_end":168,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":7580},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":491037,"byte_end":491045,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"LineRows","qualname":"::read::line::LineRows","value":"LineRows {  }","parent":null,"children":[{"krate":0,"index":7584},{"krate":0,"index":7585},{"krate":0,"index":7586}],"decl_id":null,"docs":" Executes a `LineProgram` to iterate over the rows in the matrix of line number information.","sig":null,"attributes":[{"value":"/ Executes a `LineProgram` to iterate over the rows in the matrix of line number information.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":490710,"byte_end":490805,"line_start":171,"line_end":171,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":490806,"byte_end":490809,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ \"The hypothetical machine used by a consumer of the line number information","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":490810,"byte_end":490889,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"/ to expand the byte-coded instruction stream into a matrix of line number","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":490890,"byte_end":490966,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"/ information.\" -- Section 6.2.1","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":490967,"byte_end":491001,"line_start":175,"line_end":175,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":492567,"byte_end":492573,"line_start":229,"line_end":229,"column_start":12,"column_end":18},"name":"header","qualname":"<LineRows<R, Program, Offset>>::header","value":"fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the header for this state machine's line number\n program.\n","sig":null,"attributes":[{"value":"/ Get a reference to the header for this state machine's line number","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":492454,"byte_end":492524,"line_start":226,"line_end":226,"column_start":5,"column_end":75}},{"value":"/ program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":492529,"byte_end":492541,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":492546,"byte_end":492555,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":493199,"byte_end":493207,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"next_row","qualname":"<LineRows<R, Program, Offset>>::next_row","value":"fn next_row(&mut Self)\n-> Result<Option<(&LineProgramHeader<R, Offset>, &LineRow)>>","parent":null,"children":[],"decl_id":null,"docs":" Parse and execute the next instructions in the line number program until\n another row in the line number matrix is computed.","sig":null,"attributes":[{"value":"/ Parse and execute the next instructions in the line number program until","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":492657,"byte_end":492733,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ another row in the line number matrix is computed.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":492738,"byte_end":492792,"line_start":234,"line_end":234,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":492797,"byte_end":492800,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The freshly computed row is returned as `Ok(Some((header, row)))`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":492805,"byte_end":492875,"line_start":236,"line_end":236,"column_start":5,"column_end":75}},{"value":"/ If the matrix is complete, and there are no more new rows in the line","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":492880,"byte_end":492953,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ number matrix, then `Ok(None)` is returned. If there was an error parsing","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":492958,"byte_end":493035,"line_start":238,"line_end":238,"column_start":5,"column_end":82}},{"value":"/ an instruction, then `Err(e)` is returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":493040,"byte_end":493086,"line_start":239,"line_end":239,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":493091,"byte_end":493094,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Unfortunately, the references mean that this cannot be a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":493099,"byte_end":493159,"line_start":241,"line_end":241,"column_start":5,"column_end":65}},{"value":"/ `FallibleIterator`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":493164,"byte_end":493187,"line_start":242,"line_end":242,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1598},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494203,"byte_end":494209,"line_start":266,"line_end":266,"column_start":10,"column_end":16},"name":"Opcode","qualname":"::read::line::Opcode","value":"LineInstruction<R, <R as Reader>::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `Opcode` has been renamed to `LineInstruction`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `Opcode` has been renamed to `LineInstruction`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494044,"byte_end":494107,"line_start":264,"line_end":264,"column_start":1,"column_end":64}},{"value":"deprecated(note =\n\"Opcode has been renamed to LineInstruction, use that instead.\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494108,"byte_end":494193,"line_start":265,"line_end":265,"column_start":1,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7600},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495411,"byte_end":495418,"line_start":298,"line_end":298,"column_start":5,"column_end":12},"name":"Special","qualname":"::read::line::LineInstruction::Special","value":"LineInstruction::Special(u8)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" > ### 6.2.5.1 Special Opcodes\n >\n > Each ubyte special opcode has the following effect on the state machine:\n >\n >   1. Add a signed integer to the line register.\n >\n >   2. Modify the operation pointer by incrementing the address and\n >   op_index registers as described below.\n >\n >   3. Append a row to the matrix using the current values of the state\n >   machine registers.\n >\n >   4. Set the basic_block register to “false.”\n >\n >   5. Set the prologue_end register to “false.”\n >\n >   6. Set the epilogue_begin register to “false.”\n >\n >   7. Set the discriminator register to 0.\n >\n > All of the special opcodes do those same seven things; they differ from\n > one another only in what values they add to the line, address and\n > op_index registers.\n","sig":null,"attributes":[{"value":"/ > ### 6.2.5.1 Special Opcodes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494480,"byte_end":494513,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494518,"byte_end":494523,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ > Each ubyte special opcode has the following effect on the state machine:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494528,"byte_end":494606,"line_start":277,"line_end":277,"column_start":5,"column_end":83}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494611,"byte_end":494616,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ >   1. Add a signed integer to the line register.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494621,"byte_end":494674,"line_start":279,"line_end":279,"column_start":5,"column_end":58}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494679,"byte_end":494684,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ >   2. Modify the operation pointer by incrementing the address and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494689,"byte_end":494760,"line_start":281,"line_end":281,"column_start":5,"column_end":76}},{"value":"/ >   op_index registers as described below.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494765,"byte_end":494811,"line_start":282,"line_end":282,"column_start":5,"column_end":51}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494816,"byte_end":494821,"line_start":283,"line_end":283,"column_start":5,"column_end":10}},{"value":"/ >   3. Append a row to the matrix using the current values of the state","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494826,"byte_end":494901,"line_start":284,"line_end":284,"column_start":5,"column_end":80}},{"value":"/ >   machine registers.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494906,"byte_end":494932,"line_start":285,"line_end":285,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494937,"byte_end":494942,"line_start":286,"line_end":286,"column_start":5,"column_end":10}},{"value":"/ >   4. Set the basic_block register to “false.”","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494947,"byte_end":495002,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495007,"byte_end":495012,"line_start":288,"line_end":288,"column_start":5,"column_end":10}},{"value":"/ >   5. Set the prologue_end register to “false.”","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495017,"byte_end":495073,"line_start":289,"line_end":289,"column_start":5,"column_end":57}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495078,"byte_end":495083,"line_start":290,"line_end":290,"column_start":5,"column_end":10}},{"value":"/ >   6. Set the epilogue_begin register to “false.”","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495088,"byte_end":495146,"line_start":291,"line_end":291,"column_start":5,"column_end":59}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495151,"byte_end":495156,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ >   7. Set the discriminator register to 0.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495161,"byte_end":495208,"line_start":293,"line_end":293,"column_start":5,"column_end":52}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495213,"byte_end":495218,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ > All of the special opcodes do those same seven things; they differ from","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495223,"byte_end":495300,"line_start":295,"line_end":295,"column_start":5,"column_end":82}},{"value":"/ > one another only in what values they add to the line, address and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495305,"byte_end":495376,"line_start":296,"line_end":296,"column_start":5,"column_end":76}},{"value":"/ > op_index registers.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495381,"byte_end":495406,"line_start":297,"line_end":297,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":7602},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495419,"byte_end":495421,"line_start":298,"line_end":298,"column_start":13,"column_end":15},"name":"0","qualname":"::read::line::LineInstruction::Special::0","value":"u8","parent":{"krate":0,"index":7600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7603},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495704,"byte_end":495708,"line_start":304,"line_end":304,"column_start":5,"column_end":9},"name":"Copy","qualname":"::read::line::LineInstruction::Copy","value":"LineInstruction::Copy","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" \"[`LineInstruction::Copy`] appends a row to the matrix using the current\n values of the state machine registers. Then it sets the discriminator\n register to 0, and sets the basic_block, prologue_end and epilogue_begin\n registers to “false.”\"\n","sig":null,"attributes":[{"value":"/ \"[`LineInstruction::Copy`] appends a row to the matrix using the current","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495429,"byte_end":495505,"line_start":300,"line_end":300,"column_start":5,"column_end":81}},{"value":"/ values of the state machine registers. Then it sets the discriminator","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495510,"byte_end":495583,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/ register to 0, and sets the basic_block, prologue_end and epilogue_begin","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495588,"byte_end":495664,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/ registers to “false.”\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495669,"byte_end":495699,"line_start":303,"line_end":303,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7605},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495923,"byte_end":495932,"line_start":309,"line_end":309,"column_start":5,"column_end":14},"name":"AdvancePc","qualname":"::read::line::LineInstruction::AdvancePc","value":"LineInstruction::AdvancePc(u64)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" \"The DW_LNS_advance_pc opcode takes a single unsigned LEB128 operand as\n the operation advance and modifies the address and op_index registers\n [the same as `LineInstruction::Special`]\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_advance_pc opcode takes a single unsigned LEB128 operand as","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495715,"byte_end":495790,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ the operation advance and modifies the address and op_index registers","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495795,"byte_end":495868,"line_start":307,"line_end":307,"column_start":5,"column_end":78}},{"value":"/ [the same as `LineInstruction::Special`]\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495873,"byte_end":495918,"line_start":308,"line_end":308,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7607},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495933,"byte_end":495936,"line_start":309,"line_end":309,"column_start":15,"column_end":18},"name":"0","qualname":"::read::line::LineInstruction::AdvancePc::0","value":"u64","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7608},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496093,"byte_end":496104,"line_start":313,"line_end":313,"column_start":5,"column_end":16},"name":"AdvanceLine","qualname":"::read::line::LineInstruction::AdvanceLine","value":"LineInstruction::AdvanceLine(i64)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" \"The DW_LNS_advance_line opcode takes a single signed LEB128 operand and\n adds that value to the line register of the state machine.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_advance_line opcode takes a single signed LEB128 operand and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":495944,"byte_end":496020,"line_start":311,"line_end":311,"column_start":5,"column_end":81}},{"value":"/ adds that value to the line register of the state machine.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496025,"byte_end":496088,"line_start":312,"line_end":312,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":7610},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496105,"byte_end":496108,"line_start":313,"line_end":313,"column_start":17,"column_end":20},"name":"0","qualname":"::read::line::LineInstruction::AdvanceLine::0","value":"i64","parent":{"krate":0,"index":7608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7611},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496257,"byte_end":496264,"line_start":317,"line_end":317,"column_start":5,"column_end":12},"name":"SetFile","qualname":"::read::line::LineInstruction::SetFile","value":"LineInstruction::SetFile(u64)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_file opcode takes a single unsigned LEB128 operand and\n stores it in the file register of the state machine.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_set_file opcode takes a single unsigned LEB128 operand and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496116,"byte_end":496190,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/ stores it in the file register of the state machine.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496195,"byte_end":496252,"line_start":316,"line_end":316,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":7613},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496265,"byte_end":496268,"line_start":317,"line_end":317,"column_start":13,"column_end":16},"name":"0","qualname":"::read::line::LineInstruction::SetFile::0","value":"u64","parent":{"krate":0,"index":7611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7614},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496421,"byte_end":496430,"line_start":321,"line_end":321,"column_start":5,"column_end":14},"name":"SetColumn","qualname":"::read::line::LineInstruction::SetColumn","value":"LineInstruction::SetColumn(u64)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_column opcode takes a single unsigned LEB128 operand and\n stores it in the column register of the state machine.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_set_column opcode takes a single unsigned LEB128 operand and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496276,"byte_end":496352,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ stores it in the column register of the state machine.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496357,"byte_end":496416,"line_start":320,"line_end":320,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":7616},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496431,"byte_end":496434,"line_start":321,"line_end":321,"column_start":15,"column_end":18},"name":"0","qualname":"::read::line::LineInstruction::SetColumn::0","value":"u64","parent":{"krate":0,"index":7614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7617},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496613,"byte_end":496628,"line_start":326,"line_end":326,"column_start":5,"column_end":20},"name":"NegateStatement","qualname":"::read::line::LineInstruction::NegateStatement","value":"LineInstruction::NegateStatement","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" \"The DW_LNS_negate_stmt opcode takes no operands. It sets the is_stmt\n register of the state machine to the logical negation of its current\n value.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_negate_stmt opcode takes no operands. It sets the is_stmt","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496442,"byte_end":496515,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ register of the state machine to the logical negation of its current","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496520,"byte_end":496592,"line_start":324,"line_end":324,"column_start":5,"column_end":77}},{"value":"/ value.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496597,"byte_end":496608,"line_start":325,"line_end":325,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7619},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496775,"byte_end":496788,"line_start":330,"line_end":330,"column_start":5,"column_end":18},"name":"SetBasicBlock","qualname":"::read::line::LineInstruction::SetBasicBlock","value":"LineInstruction::SetBasicBlock","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_basic_block opcode takes no operands. It sets the\n basic_block register of the state machine to “true.”\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_set_basic_block opcode takes no operands. It sets the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496635,"byte_end":496704,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/ basic_block register of the state machine to “true.”\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496709,"byte_end":496770,"line_start":329,"line_end":329,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7621},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497543,"byte_end":497553,"line_start":343,"line_end":343,"column_start":5,"column_end":15},"name":"ConstAddPc","qualname":"::read::line::LineInstruction::ConstAddPc","value":"LineInstruction::ConstAddPc","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" > The DW_LNS_const_add_pc opcode takes no operands. It advances the\n > address and op_index registers by the increments corresponding to\n > special opcode 255.\n >\n > When the line number program needs to advance the address by a small\n > amount, it can use a single special opcode, which occupies a single\n > byte. When it needs to advance the address by up to twice the range of\n > the last special opcode, it can use DW_LNS_const_add_pc followed by a\n > special opcode, for a total of two bytes. Only if it needs to advance\n > the address by more than twice that range will it need to use both\n > DW_LNS_advance_pc and a special opcode, requiring three or more bytes.\n","sig":null,"attributes":[{"value":"/ > The DW_LNS_const_add_pc opcode takes no operands. It advances the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496795,"byte_end":496866,"line_start":332,"line_end":332,"column_start":5,"column_end":76}},{"value":"/ > address and op_index registers by the increments corresponding to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496871,"byte_end":496942,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ > special opcode 255.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496947,"byte_end":496972,"line_start":334,"line_end":334,"column_start":5,"column_end":30}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496977,"byte_end":496982,"line_start":335,"line_end":335,"column_start":5,"column_end":10}},{"value":"/ > When the line number program needs to advance the address by a small","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":496987,"byte_end":497061,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ > amount, it can use a single special opcode, which occupies a single","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497066,"byte_end":497139,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ > byte. When it needs to advance the address by up to twice the range of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497144,"byte_end":497220,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ > the last special opcode, it can use DW_LNS_const_add_pc followed by a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497225,"byte_end":497300,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ > special opcode, for a total of two bytes. Only if it needs to advance","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497305,"byte_end":497380,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ > the address by more than twice that range will it need to use both","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497385,"byte_end":497457,"line_start":341,"line_end":341,"column_start":5,"column_end":77}},{"value":"/ > DW_LNS_advance_pc and a special opcode, requiring three or more bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497462,"byte_end":497538,"line_start":342,"line_end":342,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7623},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497953,"byte_end":497963,"line_start":350,"line_end":350,"column_start":5,"column_end":15},"name":"FixedAddPc","qualname":"::read::line::LineInstruction::FixedAddPc","value":"LineInstruction::FixedAddPc(u16)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" > The DW_LNS_fixed_advance_pc opcode takes a single uhalf (unencoded)\n > operand and adds it to the address register of the state machine and\n > sets the op_index register to 0. This is the only standard opcode whose\n > operand is not a variable length number. It also does not multiply the\n > operand by the minimum_instruction_length field of the header.\n","sig":null,"attributes":[{"value":"/ > The DW_LNS_fixed_advance_pc opcode takes a single uhalf (unencoded)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497560,"byte_end":497633,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ > operand and adds it to the address register of the state machine and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497638,"byte_end":497712,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ > sets the op_index register to 0. This is the only standard opcode whose","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497717,"byte_end":497794,"line_start":347,"line_end":347,"column_start":5,"column_end":82}},{"value":"/ > operand is not a variable length number. It also does not multiply the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497799,"byte_end":497875,"line_start":348,"line_end":348,"column_start":5,"column_end":81}},{"value":"/ > operand by the minimum_instruction_length field of the header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497880,"byte_end":497948,"line_start":349,"line_end":349,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":7625},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497964,"byte_end":497967,"line_start":350,"line_end":350,"column_start":16,"column_end":19},"name":"0","qualname":"::read::line::LineInstruction::FixedAddPc::0","value":"u16","parent":{"krate":0,"index":7623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7626},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498067,"byte_end":498081,"line_start":353,"line_end":353,"column_start":5,"column_end":19},"name":"SetPrologueEnd","qualname":"::read::line::LineInstruction::SetPrologueEnd","value":"LineInstruction::SetPrologueEnd","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" \"[`LineInstruction::SetPrologueEnd`] sets the prologue_end register to “true”.\"\n","sig":null,"attributes":[{"value":"/ \"[`LineInstruction::SetPrologueEnd`] sets the prologue_end register to “true”.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":497975,"byte_end":498062,"line_start":352,"line_end":352,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7628},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498192,"byte_end":498208,"line_start":357,"line_end":357,"column_start":5,"column_end":21},"name":"SetEpilogueBegin","qualname":"::read::line::LineInstruction::SetEpilogueBegin","value":"LineInstruction::SetEpilogueBegin","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" \"[`LineInstruction::SetEpilogueBegin`] sets the epilogue_begin register to\n “true”.\"\n","sig":null,"attributes":[{"value":"/ \"[`LineInstruction::SetEpilogueBegin`] sets the epilogue_begin register to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498088,"byte_end":498166,"line_start":355,"line_end":355,"column_start":5,"column_end":83}},{"value":"/ “true”.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498171,"byte_end":498187,"line_start":356,"line_end":356,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7630},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498362,"byte_end":498368,"line_start":361,"line_end":361,"column_start":5,"column_end":11},"name":"SetIsa","qualname":"::read::line::LineInstruction::SetIsa","value":"LineInstruction::SetIsa(u64)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_isa opcode takes a single unsigned LEB128 operand and\n stores that value in the isa register of the state machine.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_set_isa opcode takes a single unsigned LEB128 operand and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498215,"byte_end":498288,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/ stores that value in the isa register of the state machine.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498293,"byte_end":498357,"line_start":360,"line_end":360,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":7632},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498369,"byte_end":498372,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"0","qualname":"::read::line::LineInstruction::SetIsa::0","value":"u64","parent":{"krate":0,"index":7630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7633},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498435,"byte_end":498451,"line_start":364,"line_end":364,"column_start":5,"column_end":21},"name":"UnknownStandard0","qualname":"::read::line::LineInstruction::UnknownStandard0","value":"LineInstruction::UnknownStandard0(constants::DwLns)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" An unknown standard opcode with zero operands.\n","sig":null,"attributes":[{"value":"/ An unknown standard opcode with zero operands.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498380,"byte_end":498430,"line_start":363,"line_end":363,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":7635},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498452,"byte_end":498468,"line_start":364,"line_end":364,"column_start":22,"column_end":38},"name":"0","qualname":"::read::line::LineInstruction::UnknownStandard0::0","value":"constants::DwLns","parent":{"krate":0,"index":7633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7636},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498529,"byte_end":498545,"line_start":367,"line_end":367,"column_start":5,"column_end":21},"name":"UnknownStandard1","qualname":"::read::line::LineInstruction::UnknownStandard1","value":"LineInstruction::UnknownStandard1(constants::DwLns, u64)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" An unknown standard opcode with one operand.\n","sig":null,"attributes":[{"value":"/ An unknown standard opcode with one operand.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498476,"byte_end":498524,"line_start":366,"line_end":366,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":7638},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498546,"byte_end":498562,"line_start":367,"line_end":367,"column_start":22,"column_end":38},"name":"0","qualname":"::read::line::LineInstruction::UnknownStandard1::0","value":"constants::DwLns","parent":{"krate":0,"index":7636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7639},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498564,"byte_end":498567,"line_start":367,"line_end":367,"column_start":40,"column_end":43},"name":"1","qualname":"::read::line::LineInstruction::UnknownStandard1::1","value":"u64","parent":{"krate":0,"index":7636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7640},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498634,"byte_end":498650,"line_start":370,"line_end":370,"column_start":5,"column_end":21},"name":"UnknownStandardN","qualname":"::read::line::LineInstruction::UnknownStandardN","value":"LineInstruction::UnknownStandardN(constants::DwLns, R)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" An unknown standard opcode with multiple operands.\n","sig":null,"attributes":[{"value":"/ An unknown standard opcode with multiple operands.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498575,"byte_end":498629,"line_start":369,"line_end":369,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":7642},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498651,"byte_end":498667,"line_start":370,"line_end":370,"column_start":22,"column_end":38},"name":"0","qualname":"::read::line::LineInstruction::UnknownStandardN::0","value":"constants::DwLns","parent":{"krate":0,"index":7640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7643},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498669,"byte_end":498670,"line_start":370,"line_end":370,"column_start":40,"column_end":41},"name":"1","qualname":"::read::line::LineInstruction::UnknownStandardN::1","value":"R","parent":{"krate":0,"index":7640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7644},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499220,"byte_end":499231,"line_start":379,"line_end":379,"column_start":5,"column_end":16},"name":"EndSequence","qualname":"::read::line::LineInstruction::EndSequence","value":"LineInstruction::EndSequence","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" > [`LineInstruction::EndSequence`] sets the end_sequence register of the state\n > machine to “true” and appends a row to the matrix using the current\n > values of the state-machine registers. Then it resets the registers to\n > the initial values specified above (see Section 6.2.2). Every line\n > number program sequence must end with a DW_LNE_end_sequence instruction\n > which creates a row whose address is that of the byte after the last\n > target machine instruction of the sequence.\n","sig":null,"attributes":[{"value":"/ > [`LineInstruction::EndSequence`] sets the end_sequence register of the state","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498678,"byte_end":498760,"line_start":372,"line_end":372,"column_start":5,"column_end":87}},{"value":"/ > machine to “true” and appends a row to the matrix using the current","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498765,"byte_end":498842,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/ > values of the state-machine registers. Then it resets the registers to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498847,"byte_end":498923,"line_start":374,"line_end":374,"column_start":5,"column_end":81}},{"value":"/ > the initial values specified above (see Section 6.2.2). Every line","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":498928,"byte_end":499000,"line_start":375,"line_end":375,"column_start":5,"column_end":77}},{"value":"/ > number program sequence must end with a DW_LNE_end_sequence instruction","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499005,"byte_end":499082,"line_start":376,"line_end":376,"column_start":5,"column_end":82}},{"value":"/ > which creates a row whose address is that of the byte after the last","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499087,"byte_end":499161,"line_start":377,"line_end":377,"column_start":5,"column_end":79}},{"value":"/ > target machine instruction of the sequence.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499166,"byte_end":499215,"line_start":378,"line_end":378,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7646},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499741,"byte_end":499751,"line_start":389,"line_end":389,"column_start":5,"column_end":15},"name":"SetAddress","qualname":"::read::line::LineInstruction::SetAddress","value":"LineInstruction::SetAddress(u64)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" > The DW_LNE_set_address opcode takes a single relocatable address as an\n > operand. The size of the operand is the size of an address on the target\n > machine. It sets the address register to the value given by the\n > relocatable address and sets the op_index register to 0.\n >\n > All of the other line number program opcodes that affect the address\n > register add a delta to it. This instruction stores a relocatable value\n > into it instead.\n","sig":null,"attributes":[{"value":"/ > The DW_LNE_set_address opcode takes a single relocatable address as an","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499238,"byte_end":499314,"line_start":381,"line_end":381,"column_start":5,"column_end":81}},{"value":"/ > operand. The size of the operand is the size of an address on the target","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499319,"byte_end":499397,"line_start":382,"line_end":382,"column_start":5,"column_end":83}},{"value":"/ > machine. It sets the address register to the value given by the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499402,"byte_end":499471,"line_start":383,"line_end":383,"column_start":5,"column_end":74}},{"value":"/ > relocatable address and sets the op_index register to 0.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499476,"byte_end":499538,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499543,"byte_end":499548,"line_start":385,"line_end":385,"column_start":5,"column_end":10}},{"value":"/ > All of the other line number program opcodes that affect the address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499553,"byte_end":499627,"line_start":386,"line_end":386,"column_start":5,"column_end":79}},{"value":"/ > register add a delta to it. This instruction stores a relocatable value","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499632,"byte_end":499709,"line_start":387,"line_end":387,"column_start":5,"column_end":82}},{"value":"/ > into it instead.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499714,"byte_end":499736,"line_start":388,"line_end":388,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":7648},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499752,"byte_end":499755,"line_start":389,"line_end":389,"column_start":16,"column_end":19},"name":"0","qualname":"::read::line::LineInstruction::SetAddress::0","value":"u64","parent":{"krate":0,"index":7646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7649},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499905,"byte_end":499915,"line_start":393,"line_end":393,"column_start":5,"column_end":15},"name":"DefineFile","qualname":"::read::line::LineInstruction::DefineFile","value":"LineInstruction::DefineFile(FileEntry<R, Offset>)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" Defines a new source file in the line number program and appends it to\n the line number program header's list of source files.\n","sig":null,"attributes":[{"value":"/ Defines a new source file in the line number program and appends it to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499763,"byte_end":499837,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ the line number program header's list of source files.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499842,"byte_end":499900,"line_start":392,"line_end":392,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":7651},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499916,"byte_end":499936,"line_start":393,"line_end":393,"column_start":16,"column_end":36},"name":"0","qualname":"::read::line::LineInstruction::DefineFile::0","value":"read::line::FileEntry<R, Offset>","parent":{"krate":0,"index":7649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7652},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":500113,"byte_end":500129,"line_start":398,"line_end":398,"column_start":5,"column_end":21},"name":"SetDiscriminator","qualname":"::read::line::LineInstruction::SetDiscriminator","value":"LineInstruction::SetDiscriminator(u64)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" \"The DW_LNE_set_discriminator opcode takes a single parameter, an\n unsigned LEB128 integer. It sets the discriminator register to the new\n value.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNE_set_discriminator opcode takes a single parameter, an","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":499944,"byte_end":500013,"line_start":395,"line_end":395,"column_start":5,"column_end":74}},{"value":"/ unsigned LEB128 integer. It sets the discriminator register to the new","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":500018,"byte_end":500092,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ value.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":500097,"byte_end":500108,"line_start":397,"line_end":397,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":7654},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":500130,"byte_end":500133,"line_start":398,"line_end":398,"column_start":22,"column_end":25},"name":"0","qualname":"::read::line::LineInstruction::SetDiscriminator::0","value":"u64","parent":{"krate":0,"index":7652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7655},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":500216,"byte_end":500231,"line_start":401,"line_end":401,"column_start":5,"column_end":20},"name":"UnknownExtended","qualname":"::read::line::LineInstruction::UnknownExtended","value":"LineInstruction::UnknownExtended(constants::DwLne, R)","parent":{"krate":0,"index":7597},"children":[],"decl_id":null,"docs":" An unknown extended opcode and the slice of its unparsed operands.\n","sig":null,"attributes":[{"value":"/ An unknown extended opcode and the slice of its unparsed operands.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":500141,"byte_end":500211,"line_start":400,"line_end":400,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":7657},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":500232,"byte_end":500248,"line_start":401,"line_end":401,"column_start":21,"column_end":37},"name":"0","qualname":"::read::line::LineInstruction::UnknownExtended::0","value":"constants::DwLne","parent":{"krate":0,"index":7655},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7658},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":500250,"byte_end":500251,"line_start":401,"line_end":401,"column_start":39,"column_end":40},"name":"1","qualname":"::read::line::LineInstruction::UnknownExtended::1","value":"R","parent":{"krate":0,"index":7655},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7597},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494359,"byte_end":494374,"line_start":270,"line_end":270,"column_start":10,"column_end":25},"name":"LineInstruction","qualname":"::read::line::LineInstruction","value":"enum LineInstruction<R, Offset = <R as Reader>::Offset> where R: Reader<Offset\n    = Offset>, Offset: ReaderOffset {\n    Special(u8),\n    Copy,\n    AdvancePc(u64),\n    AdvanceLine(i64),\n    SetFile(u64),\n    SetColumn(u64),\n    NegateStatement,\n    SetBasicBlock,\n    ConstAddPc,\n    FixedAddPc(u16),\n    SetPrologueEnd,\n    SetEpilogueBegin,\n    SetIsa(u64),\n    UnknownStandard0(constants::DwLns),\n    UnknownStandard1(constants::DwLns, u64),\n    UnknownStandardN(constants::DwLns, R),\n    EndSequence,\n    SetAddress(u64),\n    DefineFile(FileEntry<R, Offset>),\n    SetDiscriminator(u64),\n    UnknownExtended(constants::DwLne, R),\n}","parent":null,"children":[{"krate":0,"index":7600},{"krate":0,"index":7603},{"krate":0,"index":7605},{"krate":0,"index":7608},{"krate":0,"index":7611},{"krate":0,"index":7614},{"krate":0,"index":7617},{"krate":0,"index":7619},{"krate":0,"index":7621},{"krate":0,"index":7623},{"krate":0,"index":7626},{"krate":0,"index":7628},{"krate":0,"index":7630},{"krate":0,"index":7633},{"krate":0,"index":7636},{"krate":0,"index":7640},{"krate":0,"index":7644},{"krate":0,"index":7646},{"krate":0,"index":7649},{"krate":0,"index":7652},{"krate":0,"index":7655}],"decl_id":null,"docs":" A parsed line number program instruction.\n","sig":null,"attributes":[{"value":"/ A parsed line number program instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":494259,"byte_end":494304,"line_start":268,"line_end":268,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":505038,"byte_end":505041,"line_start":527,"line_end":527,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LineInstruction<R, Offset> as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> result::Result<(), fmt::Error>","parent":{"krate":1,"index":9914},"children":[],"decl_id":{"krate":1,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":507802,"byte_end":507813,"line_start":576,"line_end":576,"column_start":10,"column_end":21},"name":"OpcodesIter","qualname":"::read::line::OpcodesIter","value":"LineInstructions<R>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `OpcodesIter` has been renamed to `LineInstructions`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `OpcodesIter` has been renamed to `LineInstructions`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":507631,"byte_end":507700,"line_start":574,"line_end":574,"column_start":1,"column_end":70}},{"value":"deprecated(note =\n\"OpcodesIter has been renamed to LineInstructions, use that instead.\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":507701,"byte_end":507792,"line_start":575,"line_end":575,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":7685},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508049,"byte_end":508065,"line_start":584,"line_end":584,"column_start":12,"column_end":28},"name":"LineInstructions","qualname":"::read::line::LineInstructions","value":"LineInstructions {  }","parent":null,"children":[{"krate":0,"index":7687}],"decl_id":null,"docs":" An iterator yielding parsed instructions.","sig":null,"attributes":[{"value":"/ An iterator yielding parsed instructions.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":507841,"byte_end":507886,"line_start":578,"line_end":578,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":507887,"byte_end":507890,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ See","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":507891,"byte_end":507898,"line_start":580,"line_end":580,"column_start":1,"column_end":8}},{"value":"/ [`LineProgramHeader::instructions`](./struct.LineProgramHeader.html#method.instructions)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":507899,"byte_end":507991,"line_start":581,"line_end":581,"column_start":1,"column_end":93}},{"value":"/ for more details.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":507992,"byte_end":508013,"line_start":582,"line_end":582,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":509045,"byte_end":509061,"line_start":610,"line_end":610,"column_start":12,"column_end":28},"name":"next_instruction","qualname":"<LineInstructions<R>>::next_instruction","value":"fn next_instruction(&mut Self, &LineProgramHeader<R>)\n-> Result<Option<LineInstruction<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next instruction.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508452,"byte_end":508509,"line_start":598,"line_end":598,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508514,"byte_end":508517,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ Returns the newly parsed instruction as `Ok(Some(instruction))`. Returns","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508522,"byte_end":508598,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/ `Ok(None)` when iteration is complete and all instructions have already been","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508603,"byte_end":508683,"line_start":601,"line_end":601,"column_start":5,"column_end":85}},{"value":"/ parsed and yielded. If an error occurs while parsing the next attribute,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508688,"byte_end":508764,"line_start":602,"line_end":602,"column_start":5,"column_end":81}},{"value":"/ then this error is returned as `Err(e)`, and all subsequent calls return","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508769,"byte_end":508845,"line_start":603,"line_end":603,"column_start":5,"column_end":81}},{"value":"/ `Ok(None)`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508850,"byte_end":508865,"line_start":604,"line_end":604,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508870,"byte_end":508873,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ Unfortunately, the `header` parameter means that this cannot be a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508878,"byte_end":508947,"line_start":606,"line_end":606,"column_start":5,"column_end":74}},{"value":"/ `FallibleIterator`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508952,"byte_end":508975,"line_start":607,"line_end":607,"column_start":5,"column_end":28}},{"value":"allow(clippy :: inline_always)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508980,"byte_end":509011,"line_start":608,"line_end":608,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":509016,"byte_end":509033,"line_start":609,"line_end":609,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1617},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":509633,"byte_end":509646,"line_start":630,"line_end":630,"column_start":10,"column_end":23},"name":"LineNumberRow","qualname":"::read::line::LineNumberRow","value":"LineRow","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberRow` has been renamed to `LineRow`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `LineNumberRow` has been renamed to `LineRow`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":509476,"byte_end":509538,"line_start":628,"line_end":628,"column_start":1,"column_end":63}},{"value":"deprecated(note =\n\"LineNumberRow has been renamed to LineRow, use that instead.\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":509539,"byte_end":509623,"line_start":629,"line_end":629,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":7694},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":509867,"byte_end":509874,"line_start":636,"line_end":636,"column_start":12,"column_end":19},"name":"LineRow","qualname":"::read::line::LineRow","value":"LineRow {  }","parent":null,"children":[{"krate":0,"index":7695},{"krate":0,"index":7696},{"krate":0,"index":7697},{"krate":0,"index":7698},{"krate":0,"index":7699},{"krate":0,"index":7700},{"krate":0,"index":7701},{"krate":0,"index":7702},{"krate":0,"index":7703},{"krate":0,"index":7704},{"krate":0,"index":7705},{"krate":0,"index":7706}],"decl_id":null,"docs":" A row in the line number program's resulting matrix.","sig":null,"attributes":[{"value":"/ A row in the line number program's resulting matrix.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":509659,"byte_end":509715,"line_start":632,"line_end":632,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":509716,"byte_end":509719,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ Each row is a copy of the registers of the state machine, as defined in section 6.2.2.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":509720,"byte_end":509810,"line_start":634,"line_end":634,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":510221,"byte_end":510224,"line_start":653,"line_end":653,"column_start":12,"column_end":15},"name":"new","qualname":"<LineRow>::new","value":"fn new<R>(&LineProgramHeader<R>) -> Self where R: Reader","parent":null,"children":[],"decl_id":null,"docs":" Create a line number row in the initial state for the given program.\n","sig":null,"attributes":[{"value":"/ Create a line number row in the initial state for the given program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":510137,"byte_end":510209,"line_start":652,"line_end":652,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511314,"byte_end":511321,"line_start":680,"line_end":680,"column_start":12,"column_end":19},"name":"address","qualname":"<LineRow>::address","value":"fn address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"The program-counter value corresponding to a machine instruction\n generated by the compiler.\"\n","sig":null,"attributes":[{"value":"/ \"The program-counter value corresponding to a machine instruction","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511183,"byte_end":511252,"line_start":677,"line_end":677,"column_start":5,"column_end":74}},{"value":"/ generated by the compiler.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511257,"byte_end":511288,"line_start":678,"line_end":678,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511293,"byte_end":511302,"line_start":679,"line_end":679,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511797,"byte_end":511805,"line_start":692,"line_end":692,"column_start":12,"column_end":20},"name":"op_index","qualname":"<LineRow>::op_index","value":"fn op_index(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" > An unsigned integer representing the index of an operation within a VLIW\n > instruction. The index of the first operation is 0. For non-VLIW\n > architectures, this register will always be 0.\n >\n > The address and op_index registers, taken together, form an operation\n > pointer that can reference any individual operation with the\n > instruction stream.\n","sig":null,"attributes":[{"value":"/ > An unsigned integer representing the index of an operation within a VLIW","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511370,"byte_end":511448,"line_start":684,"line_end":684,"column_start":5,"column_end":83}},{"value":"/ > instruction. The index of the first operation is 0. For non-VLIW","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511453,"byte_end":511523,"line_start":685,"line_end":685,"column_start":5,"column_end":75}},{"value":"/ > architectures, this register will always be 0.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511528,"byte_end":511580,"line_start":686,"line_end":686,"column_start":5,"column_end":57}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511585,"byte_end":511590,"line_start":687,"line_end":687,"column_start":5,"column_end":10}},{"value":"/ > The address and op_index registers, taken together, form an operation","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511595,"byte_end":511670,"line_start":688,"line_end":688,"column_start":5,"column_end":80}},{"value":"/ > pointer that can reference any individual operation with the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511675,"byte_end":511741,"line_start":689,"line_end":689,"column_start":5,"column_end":71}},{"value":"/ > instruction stream.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511746,"byte_end":511771,"line_start":690,"line_end":690,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511776,"byte_end":511785,"line_start":691,"line_end":691,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511997,"byte_end":512007,"line_start":699,"line_end":699,"column_start":12,"column_end":22},"name":"file_index","qualname":"<LineRow>::file_index","value":"fn file_index(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer indicating the identity of the source file\n corresponding to a machine instruction.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned integer indicating the identity of the source file","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511855,"byte_end":511922,"line_start":696,"line_end":696,"column_start":5,"column_end":72}},{"value":"/ corresponding to a machine instruction.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511927,"byte_end":511971,"line_start":697,"line_end":697,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":511976,"byte_end":511985,"line_start":698,"line_end":698,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":512148,"byte_end":512152,"line_start":705,"line_end":705,"column_start":12,"column_end":16},"name":"file","qualname":"<LineRow>::file","value":"fn file<'header, R>(&Self, &'header LineProgramHeader<R>)\n-> Option<&'header FileEntry<R>> where R: Reader","parent":null,"children":[],"decl_id":null,"docs":" The source file corresponding to the current machine instruction.\n","sig":null,"attributes":[{"value":"/ The source file corresponding to the current machine instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":512053,"byte_end":512122,"line_start":703,"line_end":703,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":512127,"byte_end":512136,"line_start":704,"line_end":704,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":512559,"byte_end":512563,"line_start":716,"line_end":716,"column_start":12,"column_end":16},"name":"line","qualname":"<LineRow>::line","value":"fn line(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer indicating a source line number. Lines are numbered\n beginning at 1. The compiler may emit the value 0 in cases where an\n instruction cannot be attributed to any source line.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned integer indicating a source line number. Lines are numbered","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":512319,"byte_end":512395,"line_start":712,"line_end":712,"column_start":5,"column_end":81}},{"value":"/ beginning at 1. The compiler may emit the value 0 in cases where an","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":512400,"byte_end":512471,"line_start":713,"line_end":713,"column_start":5,"column_end":76}},{"value":"/ instruction cannot be attributed to any source line.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":512476,"byte_end":512533,"line_start":714,"line_end":714,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":512538,"byte_end":512547,"line_start":715,"line_end":715,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":512948,"byte_end":512954,"line_start":728,"line_end":728,"column_start":12,"column_end":18},"name":"column","qualname":"<LineRow>::column","value":"fn column(&Self) -> ColumnType","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer indicating a column number within a source\n line. Columns are numbered beginning at 1. The value 0 is reserved to\n indicate that a statement begins at the “left edge” of the line.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned integer indicating a column number within a source","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":512699,"byte_end":512766,"line_start":724,"line_end":724,"column_start":5,"column_end":72}},{"value":"/ line. Columns are numbered beginning at 1. The value 0 is reserved to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":512771,"byte_end":512844,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ indicate that a statement begins at the “left edge” of the line.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":512849,"byte_end":512922,"line_start":726,"line_end":726,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":512927,"byte_end":512936,"line_start":727,"line_end":727,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513406,"byte_end":513413,"line_start":741,"line_end":741,"column_start":12,"column_end":19},"name":"is_stmt","qualname":"<LineRow>::is_stmt","value":"fn is_stmt(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current instruction is a recommended\n breakpoint location. A recommended breakpoint location is intended to\n “represent” a line, a statement and/or a semantically distinct subpart\n of a statement.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current instruction is a recommended","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513123,"byte_end":513194,"line_start":736,"line_end":736,"column_start":5,"column_end":76}},{"value":"/ breakpoint location. A recommended breakpoint location is intended to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513199,"byte_end":513272,"line_start":737,"line_end":737,"column_start":5,"column_end":78}},{"value":"/ “represent” a line, a statement and/or a semantically distinct subpart","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513277,"byte_end":513355,"line_start":738,"line_end":738,"column_start":5,"column_end":79}},{"value":"/ of a statement.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513360,"byte_end":513380,"line_start":739,"line_end":739,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513385,"byte_end":513394,"line_start":740,"line_end":740,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513587,"byte_end":513598,"line_start":748,"line_end":748,"column_start":12,"column_end":23},"name":"basic_block","qualname":"<LineRow>::basic_block","value":"fn basic_block(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current instruction is the beginning of a\n basic block.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current instruction is the beginning of a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513463,"byte_end":513539,"line_start":745,"line_end":745,"column_start":5,"column_end":81}},{"value":"/ basic block.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513544,"byte_end":513561,"line_start":746,"line_end":746,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513566,"byte_end":513575,"line_start":747,"line_end":747,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513947,"byte_end":513959,"line_start":757,"line_end":757,"column_start":12,"column_end":24},"name":"end_sequence","qualname":"<LineRow>::end_sequence","value":"fn end_sequence(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current address is that of the first byte\n after the end of a sequence of target machine instructions. end_sequence\n terminates a sequence of lines; therefore other information in the same\n row is not meaningful.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current address is that of the first byte","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513652,"byte_end":513728,"line_start":752,"line_end":752,"column_start":5,"column_end":81}},{"value":"/ after the end of a sequence of target machine instructions. end_sequence","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513733,"byte_end":513809,"line_start":753,"line_end":753,"column_start":5,"column_end":81}},{"value":"/ terminates a sequence of lines; therefore other information in the same","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513814,"byte_end":513889,"line_start":754,"line_end":754,"column_start":5,"column_end":80}},{"value":"/ row is not meaningful.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513894,"byte_end":513921,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":513926,"byte_end":513935,"line_start":756,"line_end":756,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514208,"byte_end":514220,"line_start":765,"line_end":765,"column_start":12,"column_end":24},"name":"prologue_end","qualname":"<LineRow>::prologue_end","value":"fn prologue_end(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current address is one (of possibly many)\n where execution should be suspended for an entry breakpoint of a\n function.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current address is one (of possibly many)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514014,"byte_end":514090,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/ where execution should be suspended for an entry breakpoint of a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514095,"byte_end":514163,"line_start":762,"line_end":762,"column_start":5,"column_end":73}},{"value":"/ function.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514168,"byte_end":514182,"line_start":763,"line_end":763,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514187,"byte_end":514196,"line_start":764,"line_end":764,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514468,"byte_end":514482,"line_start":773,"line_end":773,"column_start":12,"column_end":26},"name":"epilogue_begin","qualname":"<LineRow>::epilogue_begin","value":"fn epilogue_begin(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current address is one (of possibly many)\n where execution should be suspended for an exit breakpoint of a\n function.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current address is one (of possibly many)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514275,"byte_end":514351,"line_start":769,"line_end":769,"column_start":5,"column_end":81}},{"value":"/ where execution should be suspended for an exit breakpoint of a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514356,"byte_end":514423,"line_start":770,"line_end":770,"column_start":5,"column_end":72}},{"value":"/ function.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514428,"byte_end":514442,"line_start":771,"line_end":771,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514447,"byte_end":514456,"line_start":772,"line_end":772,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514989,"byte_end":514992,"line_start":786,"line_end":786,"column_start":12,"column_end":15},"name":"isa","qualname":"<LineRow>::isa","value":"fn isa(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Tag for the current instruction set architecture.","sig":null,"attributes":[{"value":"/ Tag for the current instruction set architecture.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514539,"byte_end":514592,"line_start":777,"line_end":777,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514597,"byte_end":514600,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ > An unsigned integer whose value encodes the applicable instruction set","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514605,"byte_end":514681,"line_start":779,"line_end":779,"column_start":5,"column_end":81}},{"value":"/ > architecture for the current instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514686,"byte_end":514733,"line_start":780,"line_end":780,"column_start":5,"column_end":52}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514738,"byte_end":514743,"line_start":781,"line_end":781,"column_start":5,"column_end":10}},{"value":"/ > The encoding of instruction sets should be shared by all users of a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514748,"byte_end":514821,"line_start":782,"line_end":782,"column_start":5,"column_end":78}},{"value":"/ > given architecture. It is recommended that this encoding be defined by","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514826,"byte_end":514902,"line_start":783,"line_end":783,"column_start":5,"column_end":81}},{"value":"/ > the ABI authoring committee for each architecture.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514907,"byte_end":514963,"line_start":784,"line_end":784,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":514968,"byte_end":514977,"line_start":785,"line_end":785,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515476,"byte_end":515489,"line_start":797,"line_end":797,"column_start":12,"column_end":25},"name":"discriminator","qualname":"<LineRow>::discriminator","value":"fn discriminator(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer identifying the block to which the current\n instruction belongs. Discriminator values are assigned arbitrarily by\n the DWARF producer and serve to distinguish among multiple blocks that\n may all be associated with the same source file, line, and column. Where\n only one block exists for a given source position, the discriminator\n value should be zero.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned integer identifying the block to which the current","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515037,"byte_end":515104,"line_start":790,"line_end":790,"column_start":5,"column_end":72}},{"value":"/ instruction belongs. Discriminator values are assigned arbitrarily by","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515109,"byte_end":515182,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/ the DWARF producer and serve to distinguish among multiple blocks that","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515187,"byte_end":515261,"line_start":792,"line_end":792,"column_start":5,"column_end":79}},{"value":"/ may all be associated with the same source file, line, and column. Where","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515266,"byte_end":515342,"line_start":793,"line_end":793,"column_start":5,"column_end":81}},{"value":"/ only one block exists for a given source position, the discriminator","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515347,"byte_end":515419,"line_start":794,"line_end":794,"column_start":5,"column_end":77}},{"value":"/ value should be zero.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515424,"byte_end":515450,"line_start":795,"line_end":795,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515455,"byte_end":515464,"line_start":796,"line_end":796,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515745,"byte_end":515752,"line_start":806,"line_end":806,"column_start":12,"column_end":19},"name":"execute","qualname":"<LineRow>::execute","value":"fn execute<R, Program>(&mut Self, LineInstruction<R>, &mut Program) -> bool\nwhere Program: LineProgram<R>, R: Reader","parent":null,"children":[],"decl_id":null,"docs":" Execute the given instruction, and return true if a new row in the\n line number matrix needs to be generated.","sig":null,"attributes":[{"value":"/ Execute the given instruction, and return true if a new row in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515544,"byte_end":515614,"line_start":801,"line_end":801,"column_start":5,"column_end":75}},{"value":"/ line number matrix needs to be generated.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515619,"byte_end":515664,"line_start":802,"line_end":802,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515669,"byte_end":515672,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ Unknown opcodes are treated as no-ops.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515677,"byte_end":515719,"line_start":804,"line_end":804,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":515724,"byte_end":515733,"line_start":805,"line_end":805,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":518869,"byte_end":518874,"line_start":912,"line_end":912,"column_start":12,"column_end":17},"name":"reset","qualname":"<LineRow>::reset","value":"fn reset<R>(&mut Self, &LineProgramHeader<R>) where R: Reader","parent":null,"children":[],"decl_id":null,"docs":" Perform any reset that was required after copying the previous row.\n","sig":null,"attributes":[{"value":"/ Perform any reset that was required after copying the previous row.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":518772,"byte_end":518843,"line_start":910,"line_end":910,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":518848,"byte_end":518857,"line_start":911,"line_end":911,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7720},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":521844,"byte_end":521852,"line_start":991,"line_end":991,"column_start":5,"column_end":13},"name":"LeftEdge","qualname":"::read::line::ColumnType::LeftEdge","value":"ColumnType::LeftEdge","parent":{"krate":0,"index":7719},"children":[],"decl_id":null,"docs":" The `LeftEdge` means that the statement begins at the start of the new\n line.\n","sig":null,"attributes":[{"value":"/ The `LeftEdge` means that the statement begins at the start of the new","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":521751,"byte_end":521825,"line_start":989,"line_end":989,"column_start":5,"column_end":79}},{"value":"/ line.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":521830,"byte_end":521839,"line_start":990,"line_end":990,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7722},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":521908,"byte_end":521914,"line_start":993,"line_end":993,"column_start":5,"column_end":11},"name":"Column","qualname":"::read::line::ColumnType::Column","value":"ColumnType::Column(u64)","parent":{"krate":0,"index":7719},"children":[],"decl_id":null,"docs":" A column number, whose range begins at 1.\n","sig":null,"attributes":[{"value":"/ A column number, whose range begins at 1.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":521858,"byte_end":521903,"line_start":992,"line_end":992,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7724},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":521915,"byte_end":521918,"line_start":993,"line_end":993,"column_start":12,"column_end":15},"name":"0","qualname":"::read::line::ColumnType::Column::0","value":"u64","parent":{"krate":0,"index":7722},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7719},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":521734,"byte_end":521744,"line_start":988,"line_end":988,"column_start":10,"column_end":20},"name":"ColumnType","qualname":"::read::line::ColumnType","value":"enum ColumnType { LeftEdge, Column(u64), }","parent":null,"children":[{"krate":0,"index":7720},{"krate":0,"index":7722}],"decl_id":null,"docs":" The type of column that a row is referring to.\n","sig":null,"attributes":[{"value":"/ The type of column that a row is referring to.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":521612,"byte_end":521662,"line_start":986,"line_end":986,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1648},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522101,"byte_end":522119,"line_start":998,"line_end":998,"column_start":10,"column_end":28},"name":"LineNumberSequence","qualname":"::read::line::LineNumberSequence","value":"LineSequence<R>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberSequence` has been renamed to `LineSequence`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `LineNumberSequence` has been renamed to `LineSequence`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":521924,"byte_end":521996,"line_start":996,"line_end":996,"column_start":1,"column_end":73}},{"value":"deprecated(note =\n\"LineNumberSequence has been renamed to LineSequence, use that instead.\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":521997,"byte_end":522091,"line_start":997,"line_end":997,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":7741},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522386,"byte_end":522398,"line_start":1004,"line_end":1004,"column_start":12,"column_end":24},"name":"LineSequence","qualname":"::read::line::LineSequence","value":"LineSequence { start, end }","parent":null,"children":[{"krate":0,"index":7743},{"krate":0,"index":7744},{"krate":0,"index":7745}],"decl_id":null,"docs":" A sequence within a line number program.  A sequence, as defined in section\n 6.2.5 of the standard, is a linear subset of a line number program within\n which addresses are monotonically increasing.\n","sig":null,"attributes":[{"value":"/ A sequence within a line number program.  A sequence, as defined in section","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522143,"byte_end":522222,"line_start":1000,"line_end":1000,"column_start":1,"column_end":80}},{"value":"/ 6.2.5 of the standard, is a linear subset of a line number program within","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522223,"byte_end":522300,"line_start":1001,"line_end":1001,"column_start":1,"column_end":78}},{"value":"/ which addresses are monotonically increasing.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522301,"byte_end":522350,"line_start":1002,"line_end":1002,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7743},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522519,"byte_end":522524,"line_start":1007,"line_end":1007,"column_start":9,"column_end":14},"name":"start","qualname":"::read::line::LineSequence::start","value":"u64","parent":{"krate":0,"index":7741},"children":[],"decl_id":null,"docs":" The first address that is covered by this sequence within the line number\n program.\n","sig":null,"attributes":[{"value":"/ The first address that is covered by this sequence within the line number","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522416,"byte_end":522493,"line_start":1005,"line_end":1005,"column_start":5,"column_end":82}},{"value":"/ program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522498,"byte_end":522510,"line_start":1006,"line_end":1006,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":7744},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522644,"byte_end":522647,"line_start":1010,"line_end":1010,"column_start":9,"column_end":12},"name":"end","qualname":"::read::line::LineSequence::end","value":"u64","parent":{"krate":0,"index":7741},"children":[],"decl_id":null,"docs":" The first address that is *not* covered by this sequence within the line\n number program.\n","sig":null,"attributes":[{"value":"/ The first address that is *not* covered by this sequence within the line","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522535,"byte_end":522611,"line_start":1008,"line_end":1008,"column_start":5,"column_end":81}},{"value":"/ number program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522616,"byte_end":522635,"line_start":1009,"line_end":1009,"column_start":5,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":1650},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522899,"byte_end":522922,"line_start":1018,"line_end":1018,"column_start":10,"column_end":33},"name":"LineNumberProgramHeader","qualname":"::read::line::LineNumberProgramHeader","value":"LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberProgramHeader` has been renamed to `LineProgramHeader`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `LineNumberProgramHeader` has been renamed to `LineProgramHeader`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522696,"byte_end":522778,"line_start":1014,"line_end":1014,"column_start":1,"column_end":83}},{"value":"deprecated(note =\n\"LineNumberProgramHeader has been renamed to LineProgramHeader, use that instead.\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522779,"byte_end":522889,"line_start":1015,"line_end":1017,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":7752},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":523135,"byte_end":523152,"line_start":1023,"line_end":1023,"column_start":12,"column_end":29},"name":"LineProgramHeader","qualname":"::read::line::LineProgramHeader","value":"LineProgramHeader {  }","parent":null,"children":[{"krate":0,"index":7755},{"krate":0,"index":7756},{"krate":0,"index":7757},{"krate":0,"index":7758},{"krate":0,"index":7759},{"krate":0,"index":7760},{"krate":0,"index":7761},{"krate":0,"index":7762},{"krate":0,"index":7763},{"krate":0,"index":7764},{"krate":0,"index":7765},{"krate":0,"index":7766},{"krate":0,"index":7767},{"krate":0,"index":7768}],"decl_id":null,"docs":" A header for a line number program in the `.debug_line` section, as defined\n in section 6.2.4 of the standard.\n","sig":null,"attributes":[{"value":"/ A header for a line number program in the `.debug_line` section, as defined","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":522967,"byte_end":523046,"line_start":1020,"line_end":1020,"column_start":1,"column_end":80}},{"value":"/ in section 6.2.4 of the standard.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":523047,"byte_end":523084,"line_start":1021,"line_end":1021,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525226,"byte_end":525232,"line_start":1082,"line_end":1082,"column_start":12,"column_end":18},"name":"offset","qualname":"<LineProgramHeader<R, Offset>>::offset","value":"fn offset(&Self) -> DebugLineOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the offset of the line number program header in the `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ Return the offset of the line number program header in the `.debug_line` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525129,"byte_end":525214,"line_start":1081,"line_end":1081,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525438,"byte_end":525449,"line_start":1088,"line_end":1088,"column_start":12,"column_end":23},"name":"unit_length","qualname":"<LineProgramHeader<R, Offset>>::unit_length","value":"fn unit_length(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the line number program and header, not including\n the length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Return the length of the line number program and header, not including","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525303,"byte_end":525377,"line_start":1086,"line_end":1086,"column_start":5,"column_end":79}},{"value":"/ the length of the encoded length itself.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525382,"byte_end":525426,"line_start":1087,"line_end":1087,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525586,"byte_end":525594,"line_start":1093,"line_end":1093,"column_start":12,"column_end":20},"name":"encoding","qualname":"<LineProgramHeader<R, Offset>>::encoding","value":"fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this header's line program.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this header's line program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525508,"byte_end":525574,"line_start":1092,"line_end":1092,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525711,"byte_end":525718,"line_start":1098,"line_end":1098,"column_start":12,"column_end":19},"name":"version","qualname":"<LineProgramHeader<R, Offset>>::version","value":"fn version(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the version of this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the version of this header's line program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525649,"byte_end":525699,"line_start":1097,"line_end":1097,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525912,"byte_end":525925,"line_start":1104,"line_end":1104,"column_start":12,"column_end":25},"name":"header_length","qualname":"<LineProgramHeader<R, Offset>>::header_length","value":"fn header_length(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the encoded line number program header, not including\n the length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Get the length of the encoded line number program header, not including","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525776,"byte_end":525851,"line_start":1102,"line_end":1102,"column_start":5,"column_end":80}},{"value":"/ the length of the encoded length itself.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525856,"byte_end":525900,"line_start":1103,"line_end":1103,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526052,"byte_end":526064,"line_start":1109,"line_end":1109,"column_start":12,"column_end":24},"name":"address_size","qualname":"<LineProgramHeader<R, Offset>>::address_size","value":"fn address_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the size in bytes of a target machine address.\n","sig":null,"attributes":[{"value":"/ Get the size in bytes of a target machine address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525986,"byte_end":526040,"line_start":1108,"line_end":1108,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526202,"byte_end":526208,"line_start":1114,"line_end":1114,"column_start":12,"column_end":18},"name":"format","qualname":"<LineProgramHeader<R, Offset>>::format","value":"fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Whether this line program is encoded in 64- or 32-bit DWARF.\n","sig":null,"attributes":[{"value":"/ Whether this line program is encoded in 64- or 32-bit DWARF.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526126,"byte_end":526190,"line_start":1113,"line_end":1113,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526348,"byte_end":526361,"line_start":1119,"line_end":1119,"column_start":12,"column_end":25},"name":"line_encoding","qualname":"<LineProgramHeader<R, Offset>>::line_encoding","value":"fn line_encoding(&Self) -> LineEncoding","parent":null,"children":[],"decl_id":null,"docs":" Get the line encoding parameters for this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the line encoding parameters for this header's line program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526268,"byte_end":526336,"line_start":1118,"line_end":1118,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526539,"byte_end":526565,"line_start":1125,"line_end":1125,"column_start":12,"column_end":38},"name":"minimum_instruction_length","qualname":"<LineProgramHeader<R, Offset>>::minimum_instruction_length","value":"fn minimum_instruction_length(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum instruction length any instruction in this header's line\n program may have.\n","sig":null,"attributes":[{"value":"/ Get the minimum instruction length any instruction in this header's line","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526425,"byte_end":526501,"line_start":1123,"line_end":1123,"column_start":5,"column_end":81}},{"value":"/ program may have.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526506,"byte_end":526527,"line_start":1124,"line_end":1124,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526763,"byte_end":526797,"line_start":1131,"line_end":1131,"column_start":12,"column_end":46},"name":"maximum_operations_per_instruction","qualname":"<LineProgramHeader<R, Offset>>::maximum_operations_per_instruction","value":"fn maximum_operations_per_instruction(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the maximum number of operations each instruction in this header's\n line program may have.\n","sig":null,"attributes":[{"value":"/ Get the maximum number of operations each instruction in this header's","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526646,"byte_end":526720,"line_start":1129,"line_end":1129,"column_start":5,"column_end":79}},{"value":"/ line program may have.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526725,"byte_end":526751,"line_start":1130,"line_end":1130,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526989,"byte_end":527004,"line_start":1137,"line_end":1137,"column_start":12,"column_end":27},"name":"default_is_stmt","qualname":"<LineProgramHeader<R, Offset>>::default_is_stmt","value":"fn default_is_stmt(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get the default value of the `is_stmt` register for this header's line\n program.\n","sig":null,"attributes":[{"value":"/ Get the default value of the `is_stmt` register for this header's line","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526886,"byte_end":526960,"line_start":1135,"line_end":1135,"column_start":5,"column_end":79}},{"value":"/ program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":526965,"byte_end":526977,"line_start":1136,"line_end":1136,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527141,"byte_end":527150,"line_start":1142,"line_end":1142,"column_start":12,"column_end":21},"name":"line_base","qualname":"<LineProgramHeader<R, Offset>>::line_base","value":"fn line_base(&Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Get the line base for this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the line base for this header's line program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527076,"byte_end":527129,"line_start":1141,"line_end":1141,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527280,"byte_end":527290,"line_start":1147,"line_end":1147,"column_start":12,"column_end":22},"name":"line_range","qualname":"<LineProgramHeader<R, Offset>>::line_range","value":"fn line_range(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the line range for this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the line range for this header's line program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527214,"byte_end":527268,"line_start":1146,"line_end":1146,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527418,"byte_end":527429,"line_start":1152,"line_end":1152,"column_start":12,"column_end":23},"name":"opcode_base","qualname":"<LineProgramHeader<R, Offset>>::opcode_base","value":"fn opcode_base(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get opcode base for this header's line program.\n","sig":null,"attributes":[{"value":"/ Get opcode base for this header's line program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527355,"byte_end":527406,"line_start":1151,"line_end":1151,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527600,"byte_end":527623,"line_start":1158,"line_end":1158,"column_start":12,"column_end":35},"name":"standard_opcode_lengths","qualname":"<LineProgramHeader<R, Offset>>::standard_opcode_lengths","value":"fn standard_opcode_lengths(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" An array of `u8` that specifies the number of LEB128 operands for\n each of the standard opcodes.\n","sig":null,"attributes":[{"value":"/ An array of `u8` that specifies the number of LEB128 operands for","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527481,"byte_end":527550,"line_start":1156,"line_end":1156,"column_start":5,"column_end":74}},{"value":"/ each of the standard opcodes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527555,"byte_end":527588,"line_start":1157,"line_end":1157,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527740,"byte_end":527762,"line_start":1163,"line_end":1163,"column_start":12,"column_end":34},"name":"directory_entry_format","qualname":"<LineProgramHeader<R, Offset>>::directory_entry_format","value":"fn directory_entry_format(&Self) -> &[FileEntryFormat]","parent":null,"children":[],"decl_id":null,"docs":" Get the format of a directory entry.\n","sig":null,"attributes":[{"value":"/ Get the format of a directory entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527688,"byte_end":527728,"line_start":1162,"line_end":1162,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":528105,"byte_end":528124,"line_start":1171,"line_end":1171,"column_start":12,"column_end":31},"name":"include_directories","qualname":"<LineProgramHeader<R, Offset>>::include_directories","value":"fn include_directories(&Self) -> &[AttributeValue<R, Offset>]","parent":null,"children":[],"decl_id":null,"docs":" Get the set of include directories for this header's line program.","sig":null,"attributes":[{"value":"/ Get the set of include directories for this header's line program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527846,"byte_end":527916,"line_start":1167,"line_end":1167,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527921,"byte_end":527924,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ For DWARF version <= 4, the compilation's current directory is not included","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":527929,"byte_end":528008,"line_start":1169,"line_end":1169,"column_start":5,"column_end":84}},{"value":"/ in the return value, but is implicitly considered to be in the set per spec.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":528013,"byte_end":528093,"line_start":1170,"line_end":1170,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":528370,"byte_end":528379,"line_start":1178,"line_end":1178,"column_start":12,"column_end":21},"name":"directory","qualname":"<LineProgramHeader<R, Offset>>::directory","value":"fn directory(&Self, u64) -> Option<AttributeValue<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" The include directory with the given directory index.","sig":null,"attributes":[{"value":"/ The include directory with the given directory index.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":528215,"byte_end":528272,"line_start":1175,"line_end":1175,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":528277,"byte_end":528280,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ A directory index of 0 corresponds to the compilation unit directory.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":528285,"byte_end":528358,"line_start":1177,"line_end":1177,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":528896,"byte_end":528918,"line_start":1192,"line_end":1192,"column_start":12,"column_end":34},"name":"file_name_entry_format","qualname":"<LineProgramHeader<R, Offset>>::file_name_entry_format","value":"fn file_name_entry_format(&Self) -> &[FileEntryFormat]","parent":null,"children":[],"decl_id":null,"docs":" Get the format of a file name entry.\n","sig":null,"attributes":[{"value":"/ Get the format of a file name entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":528844,"byte_end":528884,"line_start":1191,"line_end":1191,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":529180,"byte_end":529198,"line_start":1200,"line_end":1200,"column_start":12,"column_end":30},"name":"file_has_timestamp","qualname":"<LineProgramHeader<R, Offset>>::file_has_timestamp","value":"fn file_has_timestamp(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the file entries may have valid timestamps.","sig":null,"attributes":[{"value":"/ Return true if the file entries may have valid timestamps.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":529002,"byte_end":529064,"line_start":1196,"line_end":1196,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":529069,"byte_end":529072,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ Only returns false if we definitely know that all timestamp fields","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":529077,"byte_end":529147,"line_start":1198,"line_end":1198,"column_start":5,"column_end":75}},{"value":"/ are invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":529152,"byte_end":529168,"line_start":1199,"line_end":1199,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":529587,"byte_end":529600,"line_start":1212,"line_end":1212,"column_start":12,"column_end":25},"name":"file_has_size","qualname":"<LineProgramHeader<R, Offset>>::file_has_size","value":"fn file_has_size(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the file entries may have valid sizes.","sig":null,"attributes":[{"value":"/ Return true if the file entries may have valid sizes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":529419,"byte_end":529476,"line_start":1208,"line_end":1208,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":529481,"byte_end":529484,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ Only returns false if we definitely know that all size fields","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":529489,"byte_end":529554,"line_start":1210,"line_end":1210,"column_start":5,"column_end":70}},{"value":"/ are invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":529559,"byte_end":529575,"line_start":1211,"line_end":1211,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":529896,"byte_end":529908,"line_start":1221,"line_end":1221,"column_start":12,"column_end":24},"name":"file_has_md5","qualname":"<LineProgramHeader<R, Offset>>::file_has_md5","value":"fn file_has_md5(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the file name entry format contains an MD5 field.\n","sig":null,"attributes":[{"value":"/ Return true if the file name entry format contains an MD5 field.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":529816,"byte_end":529884,"line_start":1220,"line_end":1220,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530143,"byte_end":530153,"line_start":1228,"line_end":1228,"column_start":12,"column_end":22},"name":"file_names","qualname":"<LineProgramHeader<R, Offset>>::file_names","value":"fn file_names(&Self) -> &[FileEntry<R, Offset>]","parent":null,"children":[],"decl_id":null,"docs":" Get the list of source files that appear in this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the list of source files that appear in this header's line program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530056,"byte_end":530131,"line_start":1227,"line_end":1227,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530469,"byte_end":530473,"line_start":1237,"line_end":1237,"column_start":12,"column_end":16},"name":"file","qualname":"<LineProgramHeader<R, Offset>>::file","value":"fn file(&Self, u64) -> Option<&FileEntry<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" The source file with the given file index.","sig":null,"attributes":[{"value":"/ The source file with the given file index.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530230,"byte_end":530276,"line_start":1232,"line_end":1232,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530281,"byte_end":530284,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ A file index of 0 corresponds to the compilation unit file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530289,"byte_end":530352,"line_start":1234,"line_end":1234,"column_start":5,"column_end":68}},{"value":"/ Note that a file index of 0 is invalid for DWARF version <= 4,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530357,"byte_end":530423,"line_start":1235,"line_end":1235,"column_start":5,"column_end":71}},{"value":"/ but we support it anyway.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530428,"byte_end":530457,"line_start":1236,"line_end":1236,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531539,"byte_end":531554,"line_start":1268,"line_end":1268,"column_start":12,"column_end":27},"name":"raw_program_buf","qualname":"<LineProgramHeader<R, Offset>>::raw_program_buf","value":"fn raw_program_buf(&Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get the raw, un-parsed `EndianSlice` containing this header's line number\n program.","sig":null,"attributes":[{"value":"/ Get the raw, un-parsed `EndianSlice` containing this header's line number","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530842,"byte_end":530919,"line_start":1250,"line_end":1250,"column_start":5,"column_end":82}},{"value":"/ program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530924,"byte_end":530936,"line_start":1251,"line_end":1251,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530941,"byte_end":530944,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530949,"byte_end":530956,"line_start":1253,"line_end":1253,"column_start":5,"column_end":12}},{"value":"/ # fn foo() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530961,"byte_end":530977,"line_start":1254,"line_end":1254,"column_start":5,"column_end":21}},{"value":"/ use gimli::{LineProgramHeader, EndianSlice, NativeEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":530982,"byte_end":531044,"line_start":1255,"line_end":1255,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531049,"byte_end":531052,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ fn get_line_number_program_header<'a>() -> LineProgramHeader<EndianSlice<'a, NativeEndian>> {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531057,"byte_end":531154,"line_start":1257,"line_end":1257,"column_start":5,"column_end":102}},{"value":"/     // Get a line number program header from some offset in a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531159,"byte_end":531224,"line_start":1258,"line_end":1258,"column_start":5,"column_end":70}},{"value":"/     // `.debug_line` section...","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531229,"byte_end":531264,"line_start":1259,"line_end":1259,"column_start":5,"column_end":40}},{"value":"/ #   unimplemented!()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531269,"byte_end":531293,"line_start":1260,"line_end":1260,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531298,"byte_end":531303,"line_start":1261,"line_end":1261,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531308,"byte_end":531311,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ let header = get_line_number_program_header();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531316,"byte_end":531366,"line_start":1263,"line_end":1263,"column_start":5,"column_end":55}},{"value":"/ let raw_program = header.raw_program_buf();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531371,"byte_end":531418,"line_start":1264,"line_end":1264,"column_start":5,"column_end":52}},{"value":"/ println!(\"The length of the raw program in bytes is {}\", raw_program.len());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531423,"byte_end":531503,"line_start":1265,"line_end":1265,"column_start":5,"column_end":85}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531508,"byte_end":531515,"line_start":1266,"line_end":1266,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531520,"byte_end":531527,"line_start":1267,"line_end":1267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531727,"byte_end":531739,"line_start":1274,"line_end":1274,"column_start":12,"column_end":24},"name":"instructions","qualname":"<LineProgramHeader<R, Offset>>::instructions","value":"fn instructions(&Self) -> LineInstructions<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the instructions in this header's line number program, parsing\n them as we go.\n","sig":null,"attributes":[{"value":"/ Iterate over the instructions in this header's line number program, parsing","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531613,"byte_end":531692,"line_start":1272,"line_end":1272,"column_start":5,"column_end":84}},{"value":"/ them as we go.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":531697,"byte_end":531715,"line_start":1273,"line_end":1273,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1688},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":536667,"byte_end":536694,"line_start":1426,"line_end":1426,"column_start":10,"column_end":37},"name":"IncompleteLineNumberProgram","qualname":"::read::line::IncompleteLineNumberProgram","value":"IncompleteLineProgram<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `IncompleteLineNumberProgram` has been renamed to `IncompleteLineProgram`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `IncompleteLineNumberProgram` has been renamed to `IncompleteLineProgram`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":536448,"byte_end":536538,"line_start":1422,"line_end":1422,"column_start":1,"column_end":91}},{"value":"deprecated(note =\n\"IncompleteLineNumberProgram has been renamed to IncompleteLineProgram, use that instead.\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":536539,"byte_end":536657,"line_start":1423,"line_end":1425,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":7792},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":536856,"byte_end":536877,"line_start":1430,"line_end":1430,"column_start":12,"column_end":33},"name":"IncompleteLineProgram","qualname":"::read::line::IncompleteLineProgram","value":"IncompleteLineProgram {  }","parent":null,"children":[{"krate":0,"index":7795}],"decl_id":null,"docs":" A line number program that has not been run to completion.\n","sig":null,"attributes":[{"value":"/ A line number program that has not been run to completion.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":536743,"byte_end":536805,"line_start":1428,"line_end":1428,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537209,"byte_end":537215,"line_start":1444,"line_end":1444,"column_start":12,"column_end":18},"name":"header","qualname":"<IncompleteLineProgram<R, Offset>>::header","value":"fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `LineProgramHeader` for this program.\n","sig":null,"attributes":[{"value":"/ Retrieve the `LineProgramHeader` for this program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537143,"byte_end":537197,"line_start":1443,"line_end":1443,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537420,"byte_end":537424,"line_start":1450,"line_end":1450,"column_start":12,"column_end":16},"name":"rows","qualname":"<IncompleteLineProgram<R, Offset>>::rows","value":"fn rows(Self) -> OneShotLineRows<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LineRows` for executing this program to iterate\n over rows in the line information matrix.\n","sig":null,"attributes":[{"value":"/ Construct a new `LineRows` for executing this program to iterate","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537290,"byte_end":537358,"line_start":1448,"line_end":1448,"column_start":5,"column_end":73}},{"value":"/ over rows in the line information matrix.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537363,"byte_end":537408,"line_start":1449,"line_end":1449,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":538414,"byte_end":538423,"line_start":1475,"line_end":1475,"column_start":12,"column_end":21},"name":"sequences","qualname":"<IncompleteLineProgram<R, Offset>>::sequences","value":"fn sequences(Self)\n-> Result<(CompleteLineProgram<R, Offset>, Vec<LineSequence<R>>)>","parent":null,"children":[],"decl_id":null,"docs":" Execute the line number program, completing the `IncompleteLineProgram`\n into a `CompleteLineProgram` and producing an array of sequences within\n the line number program that can later be used with\n `CompleteLineProgram::resume_from`.","sig":null,"attributes":[{"value":"/ Execute the line number program, completing the `IncompleteLineProgram`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537509,"byte_end":537584,"line_start":1454,"line_end":1454,"column_start":5,"column_end":80}},{"value":"/ into a `CompleteLineProgram` and producing an array of sequences within","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537589,"byte_end":537664,"line_start":1455,"line_end":1455,"column_start":5,"column_end":80}},{"value":"/ the line number program that can later be used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537669,"byte_end":537724,"line_start":1456,"line_end":1456,"column_start":5,"column_end":60}},{"value":"/ `CompleteLineProgram::resume_from`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537729,"byte_end":537768,"line_start":1457,"line_end":1457,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537773,"byte_end":537776,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537781,"byte_end":537788,"line_start":1459,"line_end":1459,"column_start":5,"column_end":12}},{"value":"/ # fn foo() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537793,"byte_end":537809,"line_start":1460,"line_end":1460,"column_start":5,"column_end":21}},{"value":"/ use gimli::{IncompleteLineProgram, EndianSlice, NativeEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537814,"byte_end":537880,"line_start":1461,"line_end":1461,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537885,"byte_end":537888,"line_start":1462,"line_end":1462,"column_start":5,"column_end":8}},{"value":"/ fn get_line_number_program<'a>() -> IncompleteLineProgram<EndianSlice<'a, NativeEndian>> {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537893,"byte_end":537987,"line_start":1463,"line_end":1463,"column_start":5,"column_end":99}},{"value":"/     // Get a line number program from some offset in a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537992,"byte_end":538050,"line_start":1464,"line_end":1464,"column_start":5,"column_end":63}},{"value":"/     // `.debug_line` section...","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":538055,"byte_end":538090,"line_start":1465,"line_end":1465,"column_start":5,"column_end":40}},{"value":"/ #   unimplemented!()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":538095,"byte_end":538119,"line_start":1466,"line_end":1466,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":538124,"byte_end":538129,"line_start":1467,"line_end":1467,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":538134,"byte_end":538137,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ let program = get_line_number_program();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":538142,"byte_end":538186,"line_start":1469,"line_end":1469,"column_start":5,"column_end":49}},{"value":"/ let (program, sequences) = program.sequences().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":538191,"byte_end":538251,"line_start":1470,"line_end":1470,"column_start":5,"column_end":65}},{"value":"/ println!(\"There are {} sequences in this line number program\", sequences.len());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":538256,"byte_end":538340,"line_start":1471,"line_end":1471,"column_start":5,"column_end":89}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":538345,"byte_end":538352,"line_start":1472,"line_end":1472,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":538357,"byte_end":538364,"line_start":1473,"line_end":1473,"column_start":5,"column_end":12}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":538369,"byte_end":538402,"line_start":1474,"line_end":1474,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1697},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":539978,"byte_end":540003,"line_start":1519,"line_end":1519,"column_start":10,"column_end":35},"name":"CompleteLineNumberProgram","qualname":"::read::line::CompleteLineNumberProgram","value":"CompleteLineProgram<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `CompleteLineNumberProgram` has been renamed to `CompleteLineProgram`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `CompleteLineNumberProgram` has been renamed to `CompleteLineProgram`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":539767,"byte_end":539853,"line_start":1515,"line_end":1515,"column_start":1,"column_end":87}},{"value":"deprecated(note =\n\"CompleteLineNumberProgram has been renamed to CompleteLineProgram, use that instead.\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":539854,"byte_end":539968,"line_start":1516,"line_end":1518,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":7819},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540170,"byte_end":540189,"line_start":1523,"line_end":1523,"column_start":12,"column_end":31},"name":"CompleteLineProgram","qualname":"::read::line::CompleteLineProgram","value":"CompleteLineProgram {  }","parent":null,"children":[{"krate":0,"index":7822}],"decl_id":null,"docs":" A line number program that has previously been run to completion.\n","sig":null,"attributes":[{"value":"/ A line number program that has previously been run to completion.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540050,"byte_end":540119,"line_start":1521,"line_end":1521,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540519,"byte_end":540525,"line_start":1537,"line_end":1537,"column_start":12,"column_end":18},"name":"header","qualname":"<CompleteLineProgram<R, Offset>>::header","value":"fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `LineProgramHeader` for this program.\n","sig":null,"attributes":[{"value":"/ Retrieve the `LineProgramHeader` for this program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540453,"byte_end":540507,"line_start":1536,"line_end":1536,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541390,"byte_end":541401,"line_start":1562,"line_end":1562,"column_start":12,"column_end":23},"name":"resume_from","qualname":"<CompleteLineProgram<R, Offset>>::resume_from","value":"fn resume_from<'program>(&'program Self, &LineSequence<R>) -> ResumedLineRows","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LineRows` for executing the subset of the line\n number program identified by 'sequence' and  generating the line information\n matrix.","sig":null,"attributes":[{"value":"/ Construct a new `LineRows` for executing the subset of the line","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540600,"byte_end":540667,"line_start":1541,"line_end":1541,"column_start":5,"column_end":72}},{"value":"/ number program identified by 'sequence' and  generating the line information","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540672,"byte_end":540752,"line_start":1542,"line_end":1542,"column_start":5,"column_end":85}},{"value":"/ matrix.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540757,"byte_end":540768,"line_start":1543,"line_end":1543,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540773,"byte_end":540776,"line_start":1544,"line_end":1544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540781,"byte_end":540788,"line_start":1545,"line_end":1545,"column_start":5,"column_end":12}},{"value":"/ # fn foo() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540793,"byte_end":540809,"line_start":1546,"line_end":1546,"column_start":5,"column_end":21}},{"value":"/ use gimli::{IncompleteLineProgram, EndianSlice, NativeEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540814,"byte_end":540880,"line_start":1547,"line_end":1547,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540885,"byte_end":540888,"line_start":1548,"line_end":1548,"column_start":5,"column_end":8}},{"value":"/ fn get_line_number_program<'a>() -> IncompleteLineProgram<EndianSlice<'a, NativeEndian>> {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540893,"byte_end":540987,"line_start":1549,"line_end":1549,"column_start":5,"column_end":99}},{"value":"/     // Get a line number program from some offset in a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540992,"byte_end":541050,"line_start":1550,"line_end":1550,"column_start":5,"column_end":63}},{"value":"/     // `.debug_line` section...","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541055,"byte_end":541090,"line_start":1551,"line_end":1551,"column_start":5,"column_end":40}},{"value":"/ #   unimplemented!()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541095,"byte_end":541119,"line_start":1552,"line_end":1552,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541124,"byte_end":541129,"line_start":1553,"line_end":1553,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541134,"byte_end":541137,"line_start":1554,"line_end":1554,"column_start":5,"column_end":8}},{"value":"/ let program = get_line_number_program();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541142,"byte_end":541186,"line_start":1555,"line_end":1555,"column_start":5,"column_end":49}},{"value":"/ let (program, sequences) = program.sequences().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541191,"byte_end":541251,"line_start":1556,"line_end":1556,"column_start":5,"column_end":65}},{"value":"/ for sequence in &sequences {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541256,"byte_end":541288,"line_start":1557,"line_end":1557,"column_start":5,"column_end":37}},{"value":"/     let mut sm = program.resume_from(sequence);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541293,"byte_end":541344,"line_start":1558,"line_end":1558,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541349,"byte_end":541354,"line_start":1559,"line_end":1559,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541359,"byte_end":541366,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541371,"byte_end":541378,"line_start":1561,"line_end":1561,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7846},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541694,"byte_end":541703,"line_start":1572,"line_end":1572,"column_start":12,"column_end":21},"name":"FileEntry","qualname":"::read::line::FileEntry","value":"FileEntry {  }","parent":null,"children":[{"krate":0,"index":7849},{"krate":0,"index":7850},{"krate":0,"index":7851},{"krate":0,"index":7852},{"krate":0,"index":7853}],"decl_id":null,"docs":" An entry in the `LineProgramHeader`'s `file_names` set.\n","sig":null,"attributes":[{"value":"/ An entry in the `LineProgramHeader`'s `file_names` set.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541578,"byte_end":541637,"line_start":1570,"line_end":1570,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":542886,"byte_end":542895,"line_start":1611,"line_end":1611,"column_start":12,"column_end":21},"name":"path_name","qualname":"<FileEntry<R, Offset>>::path_name","value":"fn path_name(&Self) -> AttributeValue<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" > A slice containing the full or relative path name of\n > a source file. If the entry contains a file name or a relative path\n > name, the file is located relative to either the compilation directory\n > (as specified by the DW_AT_comp_dir attribute given in the compilation\n > unit) or one of the directories in the include_directories section.\n","sig":null,"attributes":[{"value":"/ > A slice containing the full or relative path name of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":542498,"byte_end":542556,"line_start":1606,"line_end":1606,"column_start":5,"column_end":63}},{"value":"/ > a source file. If the entry contains a file name or a relative path","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":542561,"byte_end":542634,"line_start":1607,"line_end":1607,"column_start":5,"column_end":78}},{"value":"/ > name, the file is located relative to either the compilation directory","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":542639,"byte_end":542715,"line_start":1608,"line_end":1608,"column_start":5,"column_end":81}},{"value":"/ > (as specified by the DW_AT_comp_dir attribute given in the compilation","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":542720,"byte_end":542796,"line_start":1609,"line_end":1609,"column_start":5,"column_end":81}},{"value":"/ > unit) or one of the directories in the include_directories section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":542801,"byte_end":542874,"line_start":1610,"line_end":1610,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543560,"byte_end":543575,"line_start":1626,"line_end":1626,"column_start":12,"column_end":27},"name":"directory_index","qualname":"<FileEntry<R, Offset>>::directory_index","value":"fn directory_index(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" > An unsigned LEB128 number representing the directory index of the\n > directory in which the file was found.\n >\n > ...\n >\n > The directory index represents an entry in the include_directories\n > section of the line number program header. The index is 0 if the file\n > was found in the current directory of the compilation, 1 if it was found\n > in the first directory in the include_directories section, and so\n > on. The directory index is ignored for file names that represent full\n > path names.\n","sig":null,"attributes":[{"value":"/ > An unsigned LEB128 number representing the directory index of the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":542976,"byte_end":543047,"line_start":1615,"line_end":1615,"column_start":5,"column_end":76}},{"value":"/ > directory in which the file was found.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543052,"byte_end":543096,"line_start":1616,"line_end":1616,"column_start":5,"column_end":49}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543101,"byte_end":543106,"line_start":1617,"line_end":1617,"column_start":5,"column_end":10}},{"value":"/ > ...","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543111,"byte_end":543120,"line_start":1618,"line_end":1618,"column_start":5,"column_end":14}},{"value":"/ >","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543125,"byte_end":543130,"line_start":1619,"line_end":1619,"column_start":5,"column_end":10}},{"value":"/ > The directory index represents an entry in the include_directories","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543135,"byte_end":543207,"line_start":1620,"line_end":1620,"column_start":5,"column_end":77}},{"value":"/ > section of the line number program header. The index is 0 if the file","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543212,"byte_end":543287,"line_start":1621,"line_end":1621,"column_start":5,"column_end":80}},{"value":"/ > was found in the current directory of the compilation, 1 if it was found","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543292,"byte_end":543370,"line_start":1622,"line_end":1622,"column_start":5,"column_end":83}},{"value":"/ > in the first directory in the include_directories section, and so","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543375,"byte_end":543446,"line_start":1623,"line_end":1623,"column_start":5,"column_end":76}},{"value":"/ > on. The directory index is ignored for file names that represent full","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543451,"byte_end":543526,"line_start":1624,"line_end":1624,"column_start":5,"column_end":80}},{"value":"/ > path names.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543531,"byte_end":543548,"line_start":1625,"line_end":1625,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543760,"byte_end":543769,"line_start":1633,"line_end":1633,"column_start":12,"column_end":21},"name":"directory","qualname":"<FileEntry<R, Offset>>::directory","value":"fn directory(&Self, &LineProgramHeader<R>)\n-> Option<AttributeValue<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Get this file's directory.","sig":null,"attributes":[{"value":"/ Get this file's directory.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543632,"byte_end":543662,"line_start":1630,"line_end":1630,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543667,"byte_end":543670,"line_start":1631,"line_end":1631,"column_start":5,"column_end":8}},{"value":"/ A directory index of 0 corresponds to the compilation unit directory.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543675,"byte_end":543748,"line_start":1632,"line_end":1632,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544017,"byte_end":544026,"line_start":1639,"line_end":1639,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<FileEntry<R, Offset>>::timestamp","value":"fn timestamp(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The implementation-defined time of last modification of the file,\n or 0 if not available.\n","sig":null,"attributes":[{"value":"/ The implementation-defined time of last modification of the file,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543905,"byte_end":543974,"line_start":1637,"line_end":1637,"column_start":5,"column_end":74}},{"value":"/ or 0 if not available.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":543979,"byte_end":544005,"line_start":1638,"line_end":1638,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544273,"byte_end":544290,"line_start":1647,"line_end":1647,"column_start":12,"column_end":29},"name":"last_modification","qualname":"<FileEntry<R, Offset>>::last_modification","value":"fn last_modification(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned LEB128 number representing the time of last modification of\n the file, or 0 if not available.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned LEB128 number representing the time of last modification of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544077,"byte_end":544153,"line_start":1643,"line_end":1643,"column_start":5,"column_end":81}},{"value":"/ the file, or 0 if not available.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544158,"byte_end":544195,"line_start":1644,"line_end":1644,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544410,"byte_end":544414,"line_start":1652,"line_end":1652,"column_start":12,"column_end":16},"name":"size","qualname":"<FileEntry<R, Offset>>::size","value":"fn size(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The size of the file in bytes, or 0 if not available.\n","sig":null,"attributes":[{"value":"/ The size of the file in bytes, or 0 if not available.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544341,"byte_end":544398,"line_start":1651,"line_end":1651,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544646,"byte_end":544652,"line_start":1660,"line_end":1660,"column_start":12,"column_end":18},"name":"length","qualname":"<FileEntry<R, Offset>>::length","value":"fn length(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned LEB128 number representing the length in bytes of the file,\n or 0 if not available.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned LEB128 number representing the length in bytes of the file,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544460,"byte_end":544536,"line_start":1656,"line_end":1656,"column_start":5,"column_end":81}},{"value":"/ or 0 if not available.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544541,"byte_end":544568,"line_start":1657,"line_end":1657,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544836,"byte_end":544839,"line_start":1667,"line_end":1667,"column_start":12,"column_end":15},"name":"md5","qualname":"<FileEntry<R, Offset>>::md5","value":"fn md5(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" A 16-byte MD5 digest of the file contents.","sig":null,"attributes":[{"value":"/ A 16-byte MD5 digest of the file contents.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544698,"byte_end":544744,"line_start":1664,"line_end":1664,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544749,"byte_end":544752,"line_start":1665,"line_end":1665,"column_start":5,"column_end":8}},{"value":"/ Only valid if `LineProgramHeader::file_has_md5` returns `true`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544757,"byte_end":544824,"line_start":1666,"line_end":1666,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":7882},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":545019,"byte_end":545034,"line_start":1674,"line_end":1674,"column_start":12,"column_end":27},"name":"FileEntryFormat","qualname":"::read::line::FileEntryFormat","value":"FileEntryFormat { content_type, form }","parent":null,"children":[{"krate":0,"index":7883},{"krate":0,"index":7884}],"decl_id":null,"docs":" The format of a component of an include directory or file name entry.\n","sig":null,"attributes":[{"value":"/ The format of a component of an include directory or file name entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":544889,"byte_end":544962,"line_start":1672,"line_end":1672,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":7883},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":545115,"byte_end":545127,"line_start":1676,"line_end":1676,"column_start":9,"column_end":21},"name":"content_type","qualname":"::read::line::FileEntryFormat::content_type","value":"constants::DwLnct","parent":{"krate":0,"index":7882},"children":[],"decl_id":null,"docs":" The type of information that is represented by the component.\n","sig":null,"attributes":[{"value":"/ The type of information that is represented by the component.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":545041,"byte_end":545106,"line_start":1675,"line_end":1675,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":7884},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":545207,"byte_end":545211,"line_start":1679,"line_end":1679,"column_start":9,"column_end":13},"name":"form","qualname":"::read::line::FileEntryFormat::form","value":"constants::DwForm","parent":{"krate":0,"index":7882},"children":[],"decl_id":null,"docs":" The encoding form of the component value.\n","sig":null,"attributes":[{"value":"/ The encoding form of the component value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":545153,"byte_end":545198,"line_start":1678,"line_end":1678,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7897},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":591634,"byte_end":591642,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"DebugLoc","qualname":"::read::loclists::DebugLoc","value":"DebugLoc {  }","parent":null,"children":[{"krate":0,"index":7899}],"decl_id":null,"docs":" The raw contents of the `.debug_loc` section.\n","sig":null,"attributes":[{"value":"/ The raw contents of the `.debug_loc` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":591534,"byte_end":591583,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592354,"byte_end":592357,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugLoc<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugLoc` instance from the data in the `.debug_loc`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugLoc` instance from the data in the `.debug_loc`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":591772,"byte_end":591845,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/ section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":591850,"byte_end":591862,"line_start":23,"line_end":23,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":591867,"byte_end":591870,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_loc` section and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":591875,"byte_end":591949,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":591954,"byte_end":592024,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592029,"byte_end":592068,"line_start":27,"line_end":27,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592073,"byte_end":592076,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592081,"byte_end":592088,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugLoc, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592093,"byte_end":592133,"line_start":30,"line_end":30,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592138,"byte_end":592141,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592146,"byte_end":592187,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_loc_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592192,"byte_end":592243,"line_start":33,"line_end":33,"column_start":5,"column_end":56}},{"value":"/ let debug_loc = DebugLoc::new(read_debug_loc_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592248,"byte_end":592330,"line_start":34,"line_end":34,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592335,"byte_end":592342,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592514,"byte_end":592516,"line_start":42,"line_end":42,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugLoc<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592576,"byte_end":592582,"line_start":46,"line_end":46,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugLoc<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592670,"byte_end":592674,"line_start":52,"line_end":52,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugLoc<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7911},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592886,"byte_end":592899,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"DebugLocLists","qualname":"::read::loclists::DebugLocLists","value":"DebugLocLists {  }","parent":null,"children":[{"krate":0,"index":7913}],"decl_id":null,"docs":" The `DebugLocLists` struct represents the DWARF data\n found in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ The `DebugLocLists` struct represents the DWARF data","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592735,"byte_end":592791,"line_start":57,"line_end":57,"column_start":1,"column_end":57}},{"value":"/ found in the `.debug_loclists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592792,"byte_end":592835,"line_start":58,"line_end":58,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593645,"byte_end":593648,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugLocLists<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugLocLists` instance from the data in the `.debug_loclists`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugLocLists` instance from the data in the `.debug_loclists`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593023,"byte_end":593106,"line_start":68,"line_end":68,"column_start":5,"column_end":88}},{"value":"/ section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593111,"byte_end":593123,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593128,"byte_end":593131,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_loclists` section and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593136,"byte_end":593215,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593220,"byte_end":593290,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593295,"byte_end":593334,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593339,"byte_end":593342,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593347,"byte_end":593354,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugLocLists, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593359,"byte_end":593404,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593409,"byte_end":593412,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593417,"byte_end":593458,"line_start":78,"line_end":78,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_loclists_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593463,"byte_end":593519,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/ let debug_loclists = DebugLocLists::new(read_debug_loclists_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593524,"byte_end":593621,"line_start":80,"line_end":80,"column_start":5,"column_end":102}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593626,"byte_end":593633,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593810,"byte_end":593812,"line_start":88,"line_end":88,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugLocLists<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593877,"byte_end":593883,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugLocLists<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593976,"byte_end":593980,"line_start":98,"line_end":98,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugLocLists<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7933},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":595663,"byte_end":595676,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"LocationLists","qualname":"::read::loclists::LocationLists","value":"LocationLists {  }","parent":null,"children":[{"krate":0,"index":7935},{"krate":0,"index":7936}],"decl_id":null,"docs":" The DWARF data found in `.debug_loc` and `.debug_loclists` sections.\n","sig":null,"attributes":[{"value":"/ The DWARF data found in `.debug_loc` and `.debug_loclists` sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":595540,"byte_end":595612,"line_start":161,"line_end":161,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":595912,"byte_end":595915,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<LocationLists<R>>::new","value":"fn new(DebugLoc<R>, DebugLocLists<R>) -> LocationLists<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LocationLists` instance from the data in the `.debug_loc` and\n `.debug_loclists` sections.\n","sig":null,"attributes":[{"value":"/ Construct a new `LocationLists` instance from the data in the `.debug_loc` and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":595782,"byte_end":595864,"line_start":169,"line_end":169,"column_start":5,"column_end":87}},{"value":"/ `.debug_loclists` sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":595869,"byte_end":595900,"line_start":170,"line_end":170,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596751,"byte_end":596757,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"borrow","qualname":"<LocationLists<T>>::borrow","value":"fn borrow<'a, F, R>(&'a Self, F) -> LocationLists<R> where F: FnMut(&'a T) ->\nR","parent":null,"children":[],"decl_id":null,"docs":" Create a `LocationLists` that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `LocationLists` that references the data in `self`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596121,"byte_end":596185,"line_start":180,"line_end":180,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596190,"byte_end":596193,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596198,"byte_end":596263,"line_start":182,"line_end":182,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596268,"byte_end":596271,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596276,"byte_end":596296,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596301,"byte_end":596304,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596309,"byte_end":596327,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596332,"byte_end":596377,"line_start":187,"line_end":187,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596382,"byte_end":596466,"line_start":188,"line_end":188,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::LocationLists<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596471,"byte_end":596541,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596546,"byte_end":596593,"line_start":190,"line_end":190,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596598,"byte_end":596648,"line_start":191,"line_end":191,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596653,"byte_end":596715,"line_start":192,"line_end":192,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596720,"byte_end":596727,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596732,"byte_end":596739,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597573,"byte_end":597582,"line_start":218,"line_end":218,"column_start":12,"column_end":21},"name":"locations","qualname":"<LocationLists<R>>::locations","value":"fn locations(&Self, LocationListsOffset<R::Offset>, Encoding, u64,\n&DebugAddr<R>, DebugAddrBase<R::Offset>) -> Result<LocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `LocationListEntry`s starting at the given offset.","sig":null,"attributes":[{"value":"/ Iterate over the `LocationListEntry`s starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597077,"byte_end":597148,"line_start":207,"line_end":207,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597153,"byte_end":597156,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The `unit_encoding` must match the compilation unit that the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597161,"byte_end":597225,"line_start":209,"line_end":209,"column_start":5,"column_end":69}},{"value":"/ offset was contained in.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597230,"byte_end":597258,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597263,"byte_end":597266,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ The `base_address` should be obtained from the `DW_AT_low_pc` attribute in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597271,"byte_end":597353,"line_start":212,"line_end":212,"column_start":5,"column_end":87}},{"value":"/ `DW_TAG_compile_unit` entry for the compilation unit that contains this location","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597358,"byte_end":597442,"line_start":213,"line_end":213,"column_start":5,"column_end":89}},{"value":"/ list.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597447,"byte_end":597456,"line_start":214,"line_end":214,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597461,"byte_end":597464,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597469,"byte_end":597490,"line_start":216,"line_end":216,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597495,"byte_end":597561,"line_start":217,"line_end":217,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598451,"byte_end":598464,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"name":"raw_locations","qualname":"<LocationLists<R>>::raw_locations","value":"fn raw_locations(&Self, LocationListsOffset<R::Offset>, Encoding)\n-> Result<RawLocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the raw `LocationListEntry`s starting at the given offset.","sig":null,"attributes":[{"value":"/ Iterate over the raw `LocationListEntry`s starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598021,"byte_end":598096,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598101,"byte_end":598104,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The `unit_encoding` must match the compilation unit that the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598109,"byte_end":598173,"line_start":236,"line_end":236,"column_start":5,"column_end":69}},{"value":"/ offset was contained in.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598178,"byte_end":598206,"line_start":237,"line_end":237,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598211,"byte_end":598214,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This iterator does not perform any processing of the location entries,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598219,"byte_end":598293,"line_start":239,"line_end":239,"column_start":5,"column_end":79}},{"value":"/ such as handling base addresses.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598298,"byte_end":598334,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598339,"byte_end":598342,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598347,"byte_end":598368,"line_start":242,"line_end":242,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598373,"byte_end":598439,"line_start":243,"line_end":243,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":599208,"byte_end":599218,"line_start":264,"line_end":264,"column_start":12,"column_end":22},"name":"get_offset","qualname":"<LocationLists<R>>::get_offset","value":"fn get_offset(&Self, Encoding, DebugLocListsBase<R::Offset>,\nDebugLocListsIndex<R::Offset>) -> Result<LocationListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `.debug_loclists` offset at the given `base` and `index`.","sig":null,"attributes":[{"value":"/ Returns the `.debug_loclists` offset at the given `base` and `index`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598870,"byte_end":598943,"line_start":258,"line_end":258,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598948,"byte_end":598951,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The `base` must be the `DW_AT_loclists_base` value from the compilation unit DIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":598956,"byte_end":599041,"line_start":260,"line_end":260,"column_start":5,"column_end":90}},{"value":"/ This is an offset that points to the first entry following the header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":599046,"byte_end":599120,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":599125,"byte_end":599128,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The `index` is the value of a `DW_FORM_loclistx` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":599133,"byte_end":599196,"line_start":263,"line_end":263,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":599865,"byte_end":599881,"line_start":282,"line_end":282,"column_start":12,"column_end":28},"name":"lookup_offset_id","qualname":"<LocationLists<R>>::lookup_offset_id","value":"fn lookup_offset_id(&Self, ReaderOffsetId) -> Option<(SectionId, R::Offset)>","parent":null,"children":[],"decl_id":null,"docs":" Call `Reader::lookup_offset_id` for each section, and return the first match.\n","sig":null,"attributes":[{"value":"/ Call `Reader::lookup_offset_id` for each section, and return the first match.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":599772,"byte_end":599853,"line_start":281,"line_end":281,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":7948},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600262,"byte_end":600276,"line_start":294,"line_end":294,"column_start":12,"column_end":26},"name":"RawLocListIter","qualname":"::read::loclists::RawLocListIter","value":"RawLocListIter {  }","parent":null,"children":[{"krate":0,"index":7950},{"krate":0,"index":7951}],"decl_id":null,"docs":" A raw iterator over a location list.","sig":null,"attributes":[{"value":"/ A raw iterator over a location list.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600077,"byte_end":600117,"line_start":289,"line_end":289,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600118,"byte_end":600121,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ This iterator does not perform any processing of the location entries,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600122,"byte_end":600196,"line_start":291,"line_end":291,"column_start":1,"column_end":75}},{"value":"/ such as handling base addresses.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600197,"byte_end":600233,"line_start":292,"line_end":292,"column_start":1,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":7957},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600477,"byte_end":600496,"line_start":303,"line_end":303,"column_start":5,"column_end":24},"name":"AddressOrOffsetPair","qualname":"::read::loclists::RawLocListEntry::AddressOrOffsetPair","value":"RawLocListEntry::AddressOrOffsetPair { begin, end, data }","parent":{"krate":0,"index":7955},"children":[],"decl_id":null,"docs":" A location from DWARF version <= 4.\n","sig":null,"attributes":[{"value":"/ A location from DWARF version <= 4.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600433,"byte_end":600472,"line_start":302,"line_end":302,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":7958},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600567,"byte_end":600572,"line_start":305,"line_end":305,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::loclists::RawLocListEntry::AddressOrOffsetPair::begin","value":"u64","parent":{"krate":0,"index":7957},"children":[],"decl_id":null,"docs":" Start of range. May be an address or an offset.\n","sig":null,"attributes":[{"value":"/ Start of range. May be an address or an offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600507,"byte_end":600558,"line_start":304,"line_end":304,"column_start":9,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":7959},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600645,"byte_end":600648,"line_start":307,"line_end":307,"column_start":9,"column_end":12},"name":"end","qualname":"::read::loclists::RawLocListEntry::AddressOrOffsetPair::end","value":"u64","parent":{"krate":0,"index":7957},"children":[],"decl_id":null,"docs":" End of range. May be an address or an offset.\n","sig":null,"attributes":[{"value":"/ End of range. May be an address or an offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600587,"byte_end":600636,"line_start":306,"line_end":306,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":7960},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600686,"byte_end":600690,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"name":"data","qualname":"::read::loclists::RawLocListEntry::AddressOrOffsetPair::data","value":"read::op::Expression<R>","parent":{"krate":0,"index":7957},"children":[],"decl_id":null,"docs":" expression\n","sig":null,"attributes":[{"value":"/ expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600663,"byte_end":600677,"line_start":308,"line_end":308,"column_start":9,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":7961},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600746,"byte_end":600757,"line_start":312,"line_end":312,"column_start":5,"column_end":16},"name":"BaseAddress","qualname":"::read::loclists::RawLocListEntry::BaseAddress","value":"RawLocListEntry::BaseAddress { addr }","parent":{"krate":0,"index":7955},"children":[],"decl_id":null,"docs":" DW_LLE_base_address\n","sig":null,"attributes":[{"value":"/ DW_LLE_base_address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600718,"byte_end":600741,"line_start":311,"line_end":311,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7962},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600793,"byte_end":600797,"line_start":314,"line_end":314,"column_start":9,"column_end":13},"name":"addr","qualname":"::read::loclists::RawLocListEntry::BaseAddress::addr","value":"u64","parent":{"krate":0,"index":7961},"children":[],"decl_id":null,"docs":" base address\n","sig":null,"attributes":[{"value":"/ base address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600768,"byte_end":600784,"line_start":313,"line_end":313,"column_start":9,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":7963},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600844,"byte_end":600856,"line_start":317,"line_end":317,"column_start":5,"column_end":17},"name":"BaseAddressx","qualname":"::read::loclists::RawLocListEntry::BaseAddressx","value":"RawLocListEntry::BaseAddressx { addr }","parent":{"krate":0,"index":7955},"children":[],"decl_id":null,"docs":" DW_LLE_base_addressx\n","sig":null,"attributes":[{"value":"/ DW_LLE_base_addressx","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600815,"byte_end":600839,"line_start":316,"line_end":316,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":7964},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600892,"byte_end":600896,"line_start":319,"line_end":319,"column_start":9,"column_end":13},"name":"addr","qualname":"::read::loclists::RawLocListEntry::BaseAddressx::addr","value":"common::DebugAddrIndex<<R as read::reader::Reader>::Offset>","parent":{"krate":0,"index":7963},"children":[],"decl_id":null,"docs":" base address\n","sig":null,"attributes":[{"value":"/ base address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600867,"byte_end":600883,"line_start":318,"line_end":318,"column_start":9,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":7965},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600963,"byte_end":600973,"line_start":322,"line_end":322,"column_start":5,"column_end":15},"name":"StartxEndx","qualname":"::read::loclists::RawLocListEntry::StartxEndx","value":"RawLocListEntry::StartxEndx { begin, end, data }","parent":{"krate":0,"index":7955},"children":[],"decl_id":null,"docs":" DW_LLE_startx_endx\n","sig":null,"attributes":[{"value":"/ DW_LLE_startx_endx","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600936,"byte_end":600958,"line_start":321,"line_end":321,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":7966},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601011,"byte_end":601016,"line_start":324,"line_end":324,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::loclists::RawLocListEntry::StartxEndx::begin","value":"common::DebugAddrIndex<<R as read::reader::Reader>::Offset>","parent":{"krate":0,"index":7965},"children":[],"decl_id":null,"docs":" start of range\n","sig":null,"attributes":[{"value":"/ start of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600984,"byte_end":601002,"line_start":323,"line_end":323,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":7967},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601078,"byte_end":601081,"line_start":326,"line_end":326,"column_start":9,"column_end":12},"name":"end","qualname":"::read::loclists::RawLocListEntry::StartxEndx::end","value":"common::DebugAddrIndex<<R as read::reader::Reader>::Offset>","parent":{"krate":0,"index":7965},"children":[],"decl_id":null,"docs":" end of range\n","sig":null,"attributes":[{"value":"/ end of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601053,"byte_end":601069,"line_start":325,"line_end":325,"column_start":9,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":7968},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601141,"byte_end":601145,"line_start":328,"line_end":328,"column_start":9,"column_end":13},"name":"data","qualname":"::read::loclists::RawLocListEntry::StartxEndx::data","value":"read::op::Expression<R>","parent":{"krate":0,"index":7965},"children":[],"decl_id":null,"docs":" expression\n","sig":null,"attributes":[{"value":"/ expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601118,"byte_end":601132,"line_start":327,"line_end":327,"column_start":9,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":7969},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601202,"byte_end":601214,"line_start":331,"line_end":331,"column_start":5,"column_end":17},"name":"StartxLength","qualname":"::read::loclists::RawLocListEntry::StartxLength","value":"RawLocListEntry::StartxLength { begin, length, data }","parent":{"krate":0,"index":7955},"children":[],"decl_id":null,"docs":" DW_LLE_startx_length\n","sig":null,"attributes":[{"value":"/ DW_LLE_startx_length","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601173,"byte_end":601197,"line_start":330,"line_end":330,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":7970},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601252,"byte_end":601257,"line_start":333,"line_end":333,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::loclists::RawLocListEntry::StartxLength::begin","value":"common::DebugAddrIndex<<R as read::reader::Reader>::Offset>","parent":{"krate":0,"index":7969},"children":[],"decl_id":null,"docs":" start of range\n","sig":null,"attributes":[{"value":"/ start of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601225,"byte_end":601243,"line_start":332,"line_end":332,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":7971},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601322,"byte_end":601328,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"name":"length","qualname":"::read::loclists::RawLocListEntry::StartxLength::length","value":"u64","parent":{"krate":0,"index":7969},"children":[],"decl_id":null,"docs":" length of range\n","sig":null,"attributes":[{"value":"/ length of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601294,"byte_end":601313,"line_start":334,"line_end":334,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7972},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601366,"byte_end":601370,"line_start":337,"line_end":337,"column_start":9,"column_end":13},"name":"data","qualname":"::read::loclists::RawLocListEntry::StartxLength::data","value":"read::op::Expression<R>","parent":{"krate":0,"index":7969},"children":[],"decl_id":null,"docs":" expression\n","sig":null,"attributes":[{"value":"/ expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601343,"byte_end":601357,"line_start":336,"line_end":336,"column_start":9,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":7973},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601425,"byte_end":601435,"line_start":340,"line_end":340,"column_start":5,"column_end":15},"name":"OffsetPair","qualname":"::read::loclists::RawLocListEntry::OffsetPair","value":"RawLocListEntry::OffsetPair { begin, end, data }","parent":{"krate":0,"index":7955},"children":[],"decl_id":null,"docs":" DW_LLE_offset_pair\n","sig":null,"attributes":[{"value":"/ DW_LLE_offset_pair","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601398,"byte_end":601420,"line_start":339,"line_end":339,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":7974},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601473,"byte_end":601478,"line_start":342,"line_end":342,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::loclists::RawLocListEntry::OffsetPair::begin","value":"u64","parent":{"krate":0,"index":7973},"children":[],"decl_id":null,"docs":" start of range\n","sig":null,"attributes":[{"value":"/ start of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601446,"byte_end":601464,"line_start":341,"line_end":341,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":7975},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601518,"byte_end":601521,"line_start":344,"line_end":344,"column_start":9,"column_end":12},"name":"end","qualname":"::read::loclists::RawLocListEntry::OffsetPair::end","value":"u64","parent":{"krate":0,"index":7973},"children":[],"decl_id":null,"docs":" end of range\n","sig":null,"attributes":[{"value":"/ end of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601493,"byte_end":601509,"line_start":343,"line_end":343,"column_start":9,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":7976},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601559,"byte_end":601563,"line_start":346,"line_end":346,"column_start":9,"column_end":13},"name":"data","qualname":"::read::loclists::RawLocListEntry::OffsetPair::data","value":"read::op::Expression<R>","parent":{"krate":0,"index":7973},"children":[],"decl_id":null,"docs":" expression\n","sig":null,"attributes":[{"value":"/ expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601536,"byte_end":601550,"line_start":345,"line_end":345,"column_start":9,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":7977},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601623,"byte_end":601638,"line_start":349,"line_end":349,"column_start":5,"column_end":20},"name":"DefaultLocation","qualname":"::read::loclists::RawLocListEntry::DefaultLocation","value":"RawLocListEntry::DefaultLocation { data }","parent":{"krate":0,"index":7955},"children":[],"decl_id":null,"docs":" DW_LLE_default_location\n","sig":null,"attributes":[{"value":"/ DW_LLE_default_location","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601591,"byte_end":601618,"line_start":348,"line_end":348,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7978},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601672,"byte_end":601676,"line_start":351,"line_end":351,"column_start":9,"column_end":13},"name":"data","qualname":"::read::loclists::RawLocListEntry::DefaultLocation::data","value":"read::op::Expression<R>","parent":{"krate":0,"index":7977},"children":[],"decl_id":null,"docs":" expression\n","sig":null,"attributes":[{"value":"/ expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601649,"byte_end":601663,"line_start":350,"line_end":350,"column_start":9,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":7979},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601729,"byte_end":601737,"line_start":354,"line_end":354,"column_start":5,"column_end":13},"name":"StartEnd","qualname":"::read::loclists::RawLocListEntry::StartEnd","value":"RawLocListEntry::StartEnd { begin, end, data }","parent":{"krate":0,"index":7955},"children":[],"decl_id":null,"docs":" DW_LLE_start_end\n","sig":null,"attributes":[{"value":"/ DW_LLE_start_end","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601704,"byte_end":601724,"line_start":353,"line_end":353,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":7980},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601775,"byte_end":601780,"line_start":356,"line_end":356,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::loclists::RawLocListEntry::StartEnd::begin","value":"u64","parent":{"krate":0,"index":7979},"children":[],"decl_id":null,"docs":" start of range\n","sig":null,"attributes":[{"value":"/ start of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601748,"byte_end":601766,"line_start":355,"line_end":355,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":7981},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601820,"byte_end":601823,"line_start":358,"line_end":358,"column_start":9,"column_end":12},"name":"end","qualname":"::read::loclists::RawLocListEntry::StartEnd::end","value":"u64","parent":{"krate":0,"index":7979},"children":[],"decl_id":null,"docs":" end of range\n","sig":null,"attributes":[{"value":"/ end of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601795,"byte_end":601811,"line_start":357,"line_end":357,"column_start":9,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":7982},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601861,"byte_end":601865,"line_start":360,"line_end":360,"column_start":9,"column_end":13},"name":"data","qualname":"::read::loclists::RawLocListEntry::StartEnd::data","value":"read::op::Expression<R>","parent":{"krate":0,"index":7979},"children":[],"decl_id":null,"docs":" expression\n","sig":null,"attributes":[{"value":"/ expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601838,"byte_end":601852,"line_start":359,"line_end":359,"column_start":9,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":7983},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601921,"byte_end":601932,"line_start":363,"line_end":363,"column_start":5,"column_end":16},"name":"StartLength","qualname":"::read::loclists::RawLocListEntry::StartLength","value":"RawLocListEntry::StartLength { begin, length, data }","parent":{"krate":0,"index":7955},"children":[],"decl_id":null,"docs":" DW_LLE_start_length\n","sig":null,"attributes":[{"value":"/ DW_LLE_start_length","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601893,"byte_end":601916,"line_start":362,"line_end":362,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7984},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601970,"byte_end":601975,"line_start":365,"line_end":365,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::loclists::RawLocListEntry::StartLength::begin","value":"u64","parent":{"krate":0,"index":7983},"children":[],"decl_id":null,"docs":" start of range\n","sig":null,"attributes":[{"value":"/ start of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601943,"byte_end":601961,"line_start":364,"line_end":364,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":7985},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":602018,"byte_end":602024,"line_start":367,"line_end":367,"column_start":9,"column_end":15},"name":"length","qualname":"::read::loclists::RawLocListEntry::StartLength::length","value":"u64","parent":{"krate":0,"index":7983},"children":[],"decl_id":null,"docs":" length of range\n","sig":null,"attributes":[{"value":"/ length of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":601990,"byte_end":602009,"line_start":366,"line_end":366,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7986},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":602062,"byte_end":602066,"line_start":369,"line_end":369,"column_start":9,"column_end":13},"name":"data","qualname":"::read::loclists::RawLocListEntry::StartLength::data","value":"read::op::Expression<R>","parent":{"krate":0,"index":7983},"children":[],"decl_id":null,"docs":" expression\n","sig":null,"attributes":[{"value":"/ expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":602039,"byte_end":602053,"line_start":368,"line_end":368,"column_start":9,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":7955},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600400,"byte_end":600415,"line_start":301,"line_end":301,"column_start":10,"column_end":25},"name":"RawLocListEntry","qualname":"::read::loclists::RawLocListEntry","value":"enum RawLocListEntry<R> where R: Reader {\n    AddressOrOffsetPair {\n            begin: u64,\n            end: u64,\n            data: Expression<R>,\n        },\n    BaseAddress {\n            addr: u64,\n        },\n    BaseAddressx {\n            addr: DebugAddrIndex<R::Offset>,\n        },\n    StartxEndx {\n            begin: DebugAddrIndex<R::Offset>,\n            end: DebugAddrIndex<R::Offset>,\n            data: Expression<R>,\n        },\n    StartxLength {\n            begin: DebugAddrIndex<R::Offset>,\n            length: u64,\n            data: Expression<R>,\n        },\n    OffsetPair {\n            begin: u64,\n            end: u64,\n            data: Expression<R>,\n        },\n    DefaultLocation {\n            data: Expression<R>,\n        },\n    StartEnd {\n            begin: u64,\n            end: u64,\n            data: Expression<R>,\n        },\n    StartLength {\n            begin: u64,\n            length: u64,\n            data: Expression<R>,\n        },\n}","parent":null,"children":[{"krate":0,"index":7957},{"krate":0,"index":7961},{"krate":0,"index":7963},{"krate":0,"index":7965},{"krate":0,"index":7969},{"krate":0,"index":7973},{"krate":0,"index":7977},{"krate":0,"index":7979},{"krate":0,"index":7983}],"decl_id":null,"docs":" A raw entry in .debug_loclists.\n","sig":null,"attributes":[{"value":"/ A raw entry in .debug_loclists.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":600331,"byte_end":600366,"line_start":299,"line_end":299,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":605242,"byte_end":605245,"line_start":442,"line_end":442,"column_start":12,"column_end":15},"name":"new","qualname":"<RawLocListIter<R>>::new","value":"fn new(R, Encoding) -> RawLocListIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `RawLocListIter`.\n","sig":null,"attributes":[{"value":"/ Construct a `RawLocListIter`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":605197,"byte_end":605230,"line_start":441,"line_end":441,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":605411,"byte_end":605415,"line_start":447,"line_end":447,"column_start":12,"column_end":16},"name":"next","qualname":"<RawLocListIter<R>>::next","value":"fn next(&mut Self) -> Result<Option<RawLocListEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next location.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next location.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":605353,"byte_end":605399,"line_start":446,"line_end":446,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":606073,"byte_end":606077,"line_start":472,"line_end":472,"column_start":8,"column_end":12},"name":"next","qualname":"<RawLocListIter<R> as fallible_iterator::FallibleIterator>::next","value":"fn next(&mut Self) -> ::core::result::Result<Option<Self::Item>, Self::Error>","parent":{"krate":25,"index":59},"children":[],"decl_id":{"krate":25,"index":62},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7993},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":606474,"byte_end":606485,"line_start":483,"line_end":483,"column_start":12,"column_end":23},"name":"LocListIter","qualname":"::read::loclists::LocListIter","value":"LocListIter {  }","parent":null,"children":[{"krate":0,"index":7995},{"krate":0,"index":7996},{"krate":0,"index":7997},{"krate":0,"index":7998}],"decl_id":null,"docs":" An iterator over a location list.","sig":null,"attributes":[{"value":"/ An iterator over a location list.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":606194,"byte_end":606231,"line_start":477,"line_end":477,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":606232,"byte_end":606235,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ This iterator internally handles processing of base address selection entries","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":606236,"byte_end":606317,"line_start":479,"line_end":479,"column_start":1,"column_end":82}},{"value":"/ and list end entries.  Thus, it only returns location entries that are valid","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":606318,"byte_end":606398,"line_start":480,"line_end":480,"column_start":1,"column_end":81}},{"value":"/ and already adjusted for the base address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":606399,"byte_end":606445,"line_start":481,"line_end":481,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":607285,"byte_end":607289,"line_start":513,"line_end":513,"column_start":12,"column_end":16},"name":"next","qualname":"<LocListIter<R>>::next","value":"fn next(&mut Self) -> Result<Option<LocationListEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next location.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next location.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":607227,"byte_end":607273,"line_start":512,"line_end":512,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":609896,"byte_end":609900,"line_start":585,"line_end":585,"column_start":8,"column_end":12},"name":"next","qualname":"<LocListIter<R> as fallible_iterator::FallibleIterator>::next","value":"fn next(&mut Self) -> ::core::result::Result<Option<Self::Item>, Self::Error>","parent":{"krate":25,"index":59},"children":[],"decl_id":{"krate":25,"index":62},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8002},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":610155,"byte_end":610172,"line_start":592,"line_end":592,"column_start":12,"column_end":29},"name":"LocationListEntry","qualname":"::read::loclists::LocationListEntry","value":"LocationListEntry { range, data }","parent":null,"children":[{"krate":0,"index":8004},{"krate":0,"index":8005}],"decl_id":null,"docs":" A location list entry from the `.debug_loc` or `.debug_loclists` sections.\n","sig":null,"attributes":[{"value":"/ A location list entry from the `.debug_loc` or `.debug_loclists` sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":610014,"byte_end":610092,"line_start":590,"line_end":590,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":8004},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":610253,"byte_end":610258,"line_start":594,"line_end":594,"column_start":9,"column_end":14},"name":"range","qualname":"::read::loclists::LocationListEntry::range","value":"read::rnglists::Range","parent":{"krate":0,"index":8002},"children":[],"decl_id":null,"docs":" The address range that this location is valid for.\n","sig":null,"attributes":[{"value":"/ The address range that this location is valid for.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":610190,"byte_end":610244,"line_start":593,"line_end":593,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":8005},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":610335,"byte_end":610339,"line_start":597,"line_end":597,"column_start":9,"column_end":13},"name":"data","qualname":"::read::loclists::LocationListEntry::data","value":"read::op::Expression<R>","parent":{"krate":0,"index":8002},"children":[],"decl_id":null,"docs":" The data containing a single location description.\n","sig":null,"attributes":[{"value":"/ The data containing a single location description.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":610272,"byte_end":610326,"line_start":596,"line_end":596,"column_start":5,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\lookup.rs","byte_start":639263,"byte_end":639269,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Header","qualname":"::read::lookup::LookupParser::Header","value":"type Header;","parent":{"krate":0,"index":1897},"children":[],"decl_id":null,"docs":" The type of the produced header.\n","sig":null,"attributes":[{"value":"/ The type of the produced header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\lookup.rs","byte_start":639217,"byte_end":639253,"line_start":16,"line_end":16,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\lookup.rs","byte_start":639320,"byte_end":639325,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"name":"Entry","qualname":"::read::lookup::LookupParser::Entry","value":"type Entry;","parent":{"krate":0,"index":1897},"children":[],"decl_id":null,"docs":" The type of the produced entry.\n","sig":null,"attributes":[{"value":"/ The type of the produced entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\lookup.rs","byte_start":639275,"byte_end":639310,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8093},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645160,"byte_end":645167,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"UnitRef","qualname":"::read::op::DieReference::UnitRef","value":"DieReference::UnitRef(UnitOffset<T>)","parent":{"krate":0,"index":8091},"children":[],"decl_id":null,"docs":" A CU-relative reference.\n","sig":null,"attributes":[{"value":"/ A CU-relative reference.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645127,"byte_end":645155,"line_start":14,"line_end":14,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8095},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645168,"byte_end":645181,"line_start":15,"line_end":15,"column_start":13,"column_end":26},"name":"0","qualname":"::read::op::DieReference::UnitRef::0","value":"read::unit::UnitOffset<T>","parent":{"krate":0,"index":8093},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8096},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645226,"byte_end":645238,"line_start":17,"line_end":17,"column_start":5,"column_end":17},"name":"DebugInfoRef","qualname":"::read::op::DieReference::DebugInfoRef","value":"DieReference::DebugInfoRef(DebugInfoOffset<T>)","parent":{"krate":0,"index":8091},"children":[],"decl_id":null,"docs":" A section-relative reference.\n","sig":null,"attributes":[{"value":"/ A section-relative reference.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645188,"byte_end":645221,"line_start":16,"line_end":16,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":8098},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645239,"byte_end":645257,"line_start":17,"line_end":17,"column_start":18,"column_end":36},"name":"0","qualname":"::read::op::DieReference::DebugInfoRef::0","value":"common::DebugInfoOffset<T>","parent":{"krate":0,"index":8096},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8091},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645097,"byte_end":645109,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"DieReference","qualname":"::read::op::DieReference","value":"enum DieReference<T = usize> {\n    UnitRef(UnitOffset<T>),\n    DebugInfoRef(DebugInfoOffset<T>),\n}","parent":null,"children":[{"krate":0,"index":8093},{"krate":0,"index":8096}],"decl_id":null,"docs":" A reference to a DIE, either relative to the current CU or\n relative to the section.\n","sig":null,"attributes":[{"value":"/ A reference to a DIE, either relative to the current CU or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":644951,"byte_end":645013,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ relative to the section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645014,"byte_end":645042,"line_start":11,"line_end":11,"column_start":1,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":8121},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646003,"byte_end":646008,"line_start":38,"line_end":38,"column_start":5,"column_end":10},"name":"Deref","qualname":"::read::op::Operation::Deref","value":"Operation::Deref { base_type, size, space }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Dereference the topmost value of the stack.\n","sig":null,"attributes":[{"value":"/ Dereference the topmost value of the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645951,"byte_end":645998,"line_start":37,"line_end":37,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":8122},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646090,"byte_end":646099,"line_start":40,"line_end":40,"column_start":9,"column_end":18},"name":"base_type","qualname":"::read::op::Operation::Deref::base_type","value":"read::unit::UnitOffset<Offset>","parent":{"krate":0,"index":8121},"children":[],"decl_id":null,"docs":" The DIE of the base type or 0 to indicate the generic type\n","sig":null,"attributes":[{"value":"/ The DIE of the base type or 0 to indicate the generic type","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646019,"byte_end":646081,"line_start":39,"line_end":39,"column_start":9,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":8123},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646178,"byte_end":646182,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"name":"size","qualname":"::read::op::Operation::Deref::size","value":"u8","parent":{"krate":0,"index":8121},"children":[],"decl_id":null,"docs":" The size of the data to dereference.\n","sig":null,"attributes":[{"value":"/ The size of the data to dereference.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646129,"byte_end":646169,"line_start":41,"line_end":41,"column_start":9,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":8124},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646319,"byte_end":646324,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"name":"space","qualname":"::read::op::Operation::Deref::space","value":"bool","parent":{"krate":0,"index":8121},"children":[],"decl_id":null,"docs":" True if the dereference operation takes an address space\n argument from the stack; false otherwise.\n","sig":null,"attributes":[{"value":"/ True if the dereference operation takes an address space","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646196,"byte_end":646256,"line_start":43,"line_end":43,"column_start":9,"column_end":69}},{"value":"/ argument from the stack; false otherwise.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646265,"byte_end":646310,"line_start":44,"line_end":44,"column_start":9,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8125},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646380,"byte_end":646384,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Drop","qualname":"::read::op::Operation::Drop","value":"Operation::Drop","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Drop an item from the stack.\n","sig":null,"attributes":[{"value":"/ Drop an item from the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646343,"byte_end":646375,"line_start":47,"line_end":47,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":8127},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646543,"byte_end":646547,"line_start":52,"line_end":52,"column_start":5,"column_end":9},"name":"Pick","qualname":"::read::op::Operation::Pick","value":"Operation::Pick { index }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Pick an item from the stack and push it on top of the stack.\n This operation handles `DW_OP_pick`, `DW_OP_dup`, and\n `DW_OP_over`.\n","sig":null,"attributes":[{"value":"/ Pick an item from the stack and push it on top of the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646390,"byte_end":646454,"line_start":49,"line_end":49,"column_start":5,"column_end":69}},{"value":"/ This operation handles `DW_OP_pick`, `DW_OP_dup`, and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646459,"byte_end":646516,"line_start":50,"line_end":50,"column_start":5,"column_end":62}},{"value":"/ `DW_OP_over`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646521,"byte_end":646538,"line_start":51,"line_end":51,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":8128},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646629,"byte_end":646634,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"name":"index","qualname":"::read::op::Operation::Pick::index","value":"u8","parent":{"krate":0,"index":8127},"children":[],"decl_id":null,"docs":" The index, from the top of the stack, of the item to copy.\n","sig":null,"attributes":[{"value":"/ The index, from the top of the stack, of the item to copy.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646558,"byte_end":646620,"line_start":53,"line_end":53,"column_start":9,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8129},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646689,"byte_end":646693,"line_start":57,"line_end":57,"column_start":5,"column_end":9},"name":"Swap","qualname":"::read::op::Operation::Swap","value":"Operation::Swap","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Swap the top two stack items.\n","sig":null,"attributes":[{"value":"/ Swap the top two stack items.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646651,"byte_end":646684,"line_start":56,"line_end":56,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8131},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646741,"byte_end":646744,"line_start":59,"line_end":59,"column_start":5,"column_end":8},"name":"Rot","qualname":"::read::op::Operation::Rot","value":"Operation::Rot","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Rotate the top three stack items.\n","sig":null,"attributes":[{"value":"/ Rotate the top three stack items.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646699,"byte_end":646736,"line_start":58,"line_end":58,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8133},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646807,"byte_end":646810,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"Abs","qualname":"::read::op::Operation::Abs","value":"Operation::Abs","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Take the absolute value of the top of the stack.\n","sig":null,"attributes":[{"value":"/ Take the absolute value of the top of the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646750,"byte_end":646802,"line_start":60,"line_end":60,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8135},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646874,"byte_end":646877,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"And","qualname":"::read::op::Operation::And","value":"Operation::And","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Bitwise `and` of the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Bitwise `and` of the top two values on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646816,"byte_end":646869,"line_start":62,"line_end":62,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8137},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646931,"byte_end":646934,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"Div","qualname":"::read::op::Operation::Div","value":"Operation::Div","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Divide the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Divide the top two values on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646883,"byte_end":646926,"line_start":64,"line_end":64,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8139},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646990,"byte_end":646995,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Minus","qualname":"::read::op::Operation::Minus","value":"Operation::Minus","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Subtract the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Subtract the top two values on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":646940,"byte_end":646985,"line_start":66,"line_end":66,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8141},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647053,"byte_end":647056,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"name":"Mod","qualname":"::read::op::Operation::Mod","value":"Operation::Mod","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Modulus of the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Modulus of the top two values on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647001,"byte_end":647048,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8143},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647112,"byte_end":647115,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"Mul","qualname":"::read::op::Operation::Mul","value":"Operation::Mul","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Multiply the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Multiply the top two values on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647062,"byte_end":647107,"line_start":70,"line_end":70,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8145},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647158,"byte_end":647161,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"Neg","qualname":"::read::op::Operation::Neg","value":"Operation::Neg","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Negate the top of the stack.\n","sig":null,"attributes":[{"value":"/ Negate the top of the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647121,"byte_end":647153,"line_start":72,"line_end":72,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8147},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647214,"byte_end":647217,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"Not","qualname":"::read::op::Operation::Not","value":"Operation::Not","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Bitwise `not` of the top of the stack.\n","sig":null,"attributes":[{"value":"/ Bitwise `not` of the top of the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647167,"byte_end":647209,"line_start":74,"line_end":74,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8149},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647280,"byte_end":647282,"line_start":77,"line_end":77,"column_start":5,"column_end":7},"name":"Or","qualname":"::read::op::Operation::Or","value":"Operation::Or","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Bitwise `or` of the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Bitwise `or` of the top two values on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647223,"byte_end":647275,"line_start":76,"line_end":76,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8151},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647333,"byte_end":647337,"line_start":79,"line_end":79,"column_start":5,"column_end":9},"name":"Plus","qualname":"::read::op::Operation::Plus","value":"Operation::Plus","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Add the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Add the top two values on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647288,"byte_end":647328,"line_start":78,"line_end":78,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":8153},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647401,"byte_end":647413,"line_start":81,"line_end":81,"column_start":5,"column_end":17},"name":"PlusConstant","qualname":"::read::op::Operation::PlusConstant","value":"Operation::PlusConstant { value }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Add a constant to the topmost value on the stack.\n","sig":null,"attributes":[{"value":"/ Add a constant to the topmost value on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647343,"byte_end":647396,"line_start":80,"line_end":80,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":8154},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647454,"byte_end":647459,"line_start":83,"line_end":83,"column_start":9,"column_end":14},"name":"value","qualname":"::read::op::Operation::PlusConstant::value","value":"u64","parent":{"krate":0,"index":8153},"children":[],"decl_id":null,"docs":" The value to add.\n","sig":null,"attributes":[{"value":"/ The value to add.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647424,"byte_end":647445,"line_start":82,"line_end":82,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8155},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647605,"byte_end":647608,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"Shl","qualname":"::read::op::Operation::Shl","value":"Operation::Shl","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Logical left shift of the 2nd value on the stack by the number\n of bits given by the topmost value on the stack.\n","sig":null,"attributes":[{"value":"/ Logical left shift of the 2nd value on the stack by the number","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647477,"byte_end":647543,"line_start":85,"line_end":85,"column_start":5,"column_end":71}},{"value":"/ of bits given by the topmost value on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647548,"byte_end":647600,"line_start":86,"line_end":86,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8157},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647735,"byte_end":647738,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"Shr","qualname":"::read::op::Operation::Shr","value":"Operation::Shr","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Right shift of the 2nd value on the stack by the number of\n bits given by the topmost value on the stack.\n","sig":null,"attributes":[{"value":"/ Right shift of the 2nd value on the stack by the number of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647614,"byte_end":647676,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/ bits given by the topmost value on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647681,"byte_end":647730,"line_start":89,"line_end":89,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8159},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647875,"byte_end":647879,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"name":"Shra","qualname":"::read::op::Operation::Shra","value":"Operation::Shra","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Arithmetic left shift of the 2nd value on the stack by the\n number of bits given by the topmost value on the stack.\n","sig":null,"attributes":[{"value":"/ Arithmetic left shift of the 2nd value on the stack by the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647744,"byte_end":647806,"line_start":91,"line_end":91,"column_start":5,"column_end":67}},{"value":"/ number of bits given by the topmost value on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647811,"byte_end":647870,"line_start":92,"line_end":92,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8161},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647943,"byte_end":647946,"line_start":95,"line_end":95,"column_start":5,"column_end":8},"name":"Xor","qualname":"::read::op::Operation::Xor","value":"Operation::Xor","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Bitwise `xor` of the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Bitwise `xor` of the top two values on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647885,"byte_end":647938,"line_start":94,"line_end":94,"column_start":5,"column_end":58}}]},{"kind":"StructVariant","id":{"krate":0,"index":8163},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648022,"byte_end":648025,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"Bra","qualname":"::read::op::Operation::Bra","value":"Operation::Bra { target }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Branch to the target location if the top of stack is nonzero.\n","sig":null,"attributes":[{"value":"/ Branch to the target location if the top of stack is nonzero.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":647952,"byte_end":648017,"line_start":96,"line_end":96,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":8164},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648092,"byte_end":648098,"line_start":99,"line_end":99,"column_start":9,"column_end":15},"name":"target","qualname":"::read::op::Operation::Bra::target","value":"i16","parent":{"krate":0,"index":8163},"children":[],"decl_id":null,"docs":" The relative offset to the target bytecode.\n","sig":null,"attributes":[{"value":"/ The relative offset to the target bytecode.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648036,"byte_end":648083,"line_start":98,"line_end":98,"column_start":9,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8165},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648171,"byte_end":648173,"line_start":102,"line_end":102,"column_start":5,"column_end":7},"name":"Eq","qualname":"::read::op::Operation::Eq","value":"Operation::Eq","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Compare the top two stack values for equality.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values for equality.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648116,"byte_end":648166,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8167},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648232,"byte_end":648234,"line_start":104,"line_end":104,"column_start":5,"column_end":7},"name":"Ge","qualname":"::read::op::Operation::Ge","value":"Operation::Ge","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `>=`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `>=`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648179,"byte_end":648227,"line_start":103,"line_end":103,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8169},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648292,"byte_end":648294,"line_start":106,"line_end":106,"column_start":5,"column_end":7},"name":"Gt","qualname":"::read::op::Operation::Gt","value":"Operation::Gt","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `>`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `>`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648240,"byte_end":648287,"line_start":105,"line_end":105,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8171},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648353,"byte_end":648355,"line_start":108,"line_end":108,"column_start":5,"column_end":7},"name":"Le","qualname":"::read::op::Operation::Le","value":"Operation::Le","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `<=`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `<=`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648300,"byte_end":648348,"line_start":107,"line_end":107,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8173},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648413,"byte_end":648415,"line_start":110,"line_end":110,"column_start":5,"column_end":7},"name":"Lt","qualname":"::read::op::Operation::Lt","value":"Operation::Lt","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `<`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `<`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648361,"byte_end":648408,"line_start":109,"line_end":109,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8175},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648474,"byte_end":648476,"line_start":112,"line_end":112,"column_start":5,"column_end":7},"name":"Ne","qualname":"::read::op::Operation::Ne","value":"Operation::Ne","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `!=`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `!=`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648421,"byte_end":648469,"line_start":111,"line_end":111,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":8177},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648535,"byte_end":648539,"line_start":114,"line_end":114,"column_start":5,"column_end":9},"name":"Skip","qualname":"::read::op::Operation::Skip","value":"Operation::Skip { target }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Unconditional branch to the target location.\n","sig":null,"attributes":[{"value":"/ Unconditional branch to the target location.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648482,"byte_end":648530,"line_start":113,"line_end":113,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":8178},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648606,"byte_end":648612,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"name":"target","qualname":"::read::op::Operation::Skip::target","value":"i16","parent":{"krate":0,"index":8177},"children":[],"decl_id":null,"docs":" The relative offset to the target bytecode.\n","sig":null,"attributes":[{"value":"/ The relative offset to the target bytecode.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648550,"byte_end":648597,"line_start":115,"line_end":115,"column_start":9,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":8179},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648730,"byte_end":648746,"line_start":120,"line_end":120,"column_start":5,"column_end":21},"name":"UnsignedConstant","qualname":"::read::op::Operation::UnsignedConstant","value":"Operation::UnsignedConstant { value }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Push an unsigned constant value on the stack.  This handles multiple\n DWARF opcodes.\n","sig":null,"attributes":[{"value":"/ Push an unsigned constant value on the stack.  This handles multiple","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648630,"byte_end":648702,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ DWARF opcodes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648707,"byte_end":648725,"line_start":119,"line_end":119,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":8180},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648788,"byte_end":648793,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"name":"value","qualname":"::read::op::Operation::UnsignedConstant::value","value":"u64","parent":{"krate":0,"index":8179},"children":[],"decl_id":null,"docs":" The value to push.\n","sig":null,"attributes":[{"value":"/ The value to push.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648757,"byte_end":648779,"line_start":121,"line_end":121,"column_start":9,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":8181},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648908,"byte_end":648922,"line_start":126,"line_end":126,"column_start":5,"column_end":19},"name":"SignedConstant","qualname":"::read::op::Operation::SignedConstant","value":"Operation::SignedConstant { value }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Push a signed constant value on the stack.  This handles multiple\n DWARF opcodes.\n","sig":null,"attributes":[{"value":"/ Push a signed constant value on the stack.  This handles multiple","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648811,"byte_end":648880,"line_start":124,"line_end":124,"column_start":5,"column_end":74}},{"value":"/ DWARF opcodes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648885,"byte_end":648903,"line_start":125,"line_end":125,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":8182},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648964,"byte_end":648969,"line_start":128,"line_end":128,"column_start":9,"column_end":14},"name":"value","qualname":"::read::op::Operation::SignedConstant::value","value":"i64","parent":{"krate":0,"index":8181},"children":[],"decl_id":null,"docs":" The value to push.\n","sig":null,"attributes":[{"value":"/ The value to push.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648933,"byte_end":648955,"line_start":127,"line_end":127,"column_start":9,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":8183},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649100,"byte_end":649108,"line_start":132,"line_end":132,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::op::Operation::Register","value":"Operation::Register { register }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Indicate that this piece's location is in the given register.\n Completes the piece or expression.\n","sig":null,"attributes":[{"value":"/ Indicate that this piece's location is in the given register.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":648987,"byte_end":649052,"line_start":130,"line_end":130,"column_start":5,"column_end":70}},{"value":"/ Completes the piece or expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649057,"byte_end":649095,"line_start":131,"line_end":131,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":8184},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649152,"byte_end":649160,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"register","qualname":"::read::op::Operation::Register::register","value":"common::Register","parent":{"krate":0,"index":8183},"children":[],"decl_id":null,"docs":" The register number.\n","sig":null,"attributes":[{"value":"/ The register number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649119,"byte_end":649143,"line_start":133,"line_end":133,"column_start":9,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":8185},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649299,"byte_end":649313,"line_start":138,"line_end":138,"column_start":5,"column_end":19},"name":"RegisterOffset","qualname":"::read::op::Operation::RegisterOffset","value":"Operation::RegisterOffset { register, offset, base_type }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Find the value of the given register, add the offset, and then\n push the resulting sum on the stack.\n","sig":null,"attributes":[{"value":"/ Find the value of the given register, add the offset, and then","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649183,"byte_end":649249,"line_start":136,"line_end":136,"column_start":5,"column_end":71}},{"value":"/ push the resulting sum on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649254,"byte_end":649294,"line_start":137,"line_end":137,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":8186},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649357,"byte_end":649365,"line_start":140,"line_end":140,"column_start":9,"column_end":17},"name":"register","qualname":"::read::op::Operation::RegisterOffset::register","value":"common::Register","parent":{"krate":0,"index":8185},"children":[],"decl_id":null,"docs":" The register number.\n","sig":null,"attributes":[{"value":"/ The register number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649324,"byte_end":649348,"line_start":139,"line_end":139,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8187},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649416,"byte_end":649422,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"name":"offset","qualname":"::read::op::Operation::RegisterOffset::offset","value":"i64","parent":{"krate":0,"index":8185},"children":[],"decl_id":null,"docs":" The offset to add.\n","sig":null,"attributes":[{"value":"/ The offset to add.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649385,"byte_end":649407,"line_start":141,"line_end":141,"column_start":9,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":8188},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649508,"byte_end":649517,"line_start":144,"line_end":144,"column_start":9,"column_end":18},"name":"base_type","qualname":"::read::op::Operation::RegisterOffset::base_type","value":"read::unit::UnitOffset<Offset>","parent":{"krate":0,"index":8185},"children":[],"decl_id":null,"docs":" The DIE of the base type or 0 to indicate the generic type\n","sig":null,"attributes":[{"value":"/ The DIE of the base type or 0 to indicate the generic type","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649437,"byte_end":649499,"line_start":143,"line_end":143,"column_start":9,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":8189},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649685,"byte_end":649696,"line_start":148,"line_end":148,"column_start":5,"column_end":16},"name":"FrameOffset","qualname":"::read::op::Operation::FrameOffset","value":"Operation::FrameOffset { offset }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Compute the frame base (using `DW_AT_frame_base`), add the\n given offset, and then push the resulting sum on the stack.\n","sig":null,"attributes":[{"value":"/ Compute the frame base (using `DW_AT_frame_base`), add the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649550,"byte_end":649612,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/ given offset, and then push the resulting sum on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649617,"byte_end":649680,"line_start":147,"line_end":147,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":8190},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649738,"byte_end":649744,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"name":"offset","qualname":"::read::op::Operation::FrameOffset::offset","value":"i64","parent":{"krate":0,"index":8189},"children":[],"decl_id":null,"docs":" The offset to add.\n","sig":null,"attributes":[{"value":"/ The offset to add.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649707,"byte_end":649729,"line_start":149,"line_end":149,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8191},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649784,"byte_end":649787,"line_start":153,"line_end":153,"column_start":5,"column_end":8},"name":"Nop","qualname":"::read::op::Operation::Nop","value":"Operation::Nop","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" No operation.\n","sig":null,"attributes":[{"value":"/ No operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649762,"byte_end":649779,"line_start":152,"line_end":152,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8193},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649839,"byte_end":649856,"line_start":155,"line_end":155,"column_start":5,"column_end":22},"name":"PushObjectAddress","qualname":"::read::op::Operation::PushObjectAddress","value":"Operation::PushObjectAddress","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Push the object address on the stack.\n","sig":null,"attributes":[{"value":"/ Push the object address on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649793,"byte_end":649834,"line_start":154,"line_end":154,"column_start":5,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":8195},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650011,"byte_end":650015,"line_start":159,"line_end":159,"column_start":5,"column_end":9},"name":"Call","qualname":"::read::op::Operation::Call","value":"Operation::Call { offset }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Evaluate a DWARF expression as a subroutine.  The expression\n comes from the `DW_AT_location` attribute of the indicated\n DIE.\n","sig":null,"attributes":[{"value":"/ Evaluate a DWARF expression as a subroutine.  The expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649862,"byte_end":649926,"line_start":156,"line_end":156,"column_start":5,"column_end":69}},{"value":"/ comes from the `DW_AT_location` attribute of the indicated","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649931,"byte_end":649993,"line_start":157,"line_end":157,"column_start":5,"column_end":67}},{"value":"/ DIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":649998,"byte_end":650006,"line_start":158,"line_end":158,"column_start":5,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":8196},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650054,"byte_end":650060,"line_start":161,"line_end":161,"column_start":9,"column_end":15},"name":"offset","qualname":"::read::op::Operation::Call::offset","value":"read::op::DieReference<Offset>","parent":{"krate":0,"index":8195},"children":[],"decl_id":null,"docs":" The DIE to use.\n","sig":null,"attributes":[{"value":"/ The DIE to use.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650026,"byte_end":650045,"line_start":160,"line_end":160,"column_start":9,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8197},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650184,"byte_end":650187,"line_start":165,"line_end":165,"column_start":5,"column_end":8},"name":"TLS","qualname":"::read::op::Operation::TLS","value":"Operation::TLS","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Compute the address of a thread-local variable and push it on\n the stack.\n","sig":null,"attributes":[{"value":"/ Compute the address of a thread-local variable and push it on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650095,"byte_end":650160,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/ the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650165,"byte_end":650179,"line_start":164,"line_end":164,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8199},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650254,"byte_end":650266,"line_start":167,"line_end":167,"column_start":5,"column_end":17},"name":"CallFrameCFA","qualname":"::read::op::Operation::CallFrameCFA","value":"Operation::CallFrameCFA","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Compute the call frame CFA and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Compute the call frame CFA and push it on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650193,"byte_end":650249,"line_start":166,"line_end":166,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":8201},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650299,"byte_end":650304,"line_start":169,"line_end":169,"column_start":5,"column_end":10},"name":"Piece","qualname":"::read::op::Operation::Piece","value":"Operation::Piece { size_in_bits, bit_offset }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Terminate a piece.\n","sig":null,"attributes":[{"value":"/ Terminate a piece.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650272,"byte_end":650294,"line_start":168,"line_end":168,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":8202},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650359,"byte_end":650371,"line_start":171,"line_end":171,"column_start":9,"column_end":21},"name":"size_in_bits","qualname":"::read::op::Operation::Piece::size_in_bits","value":"u64","parent":{"krate":0,"index":8201},"children":[],"decl_id":null,"docs":" The size of this piece in bits.\n","sig":null,"attributes":[{"value":"/ The size of this piece in bits.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650315,"byte_end":650350,"line_start":170,"line_end":170,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":8203},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650558,"byte_end":650568,"line_start":175,"line_end":175,"column_start":9,"column_end":19},"name":"bit_offset","qualname":"::read::op::Operation::Piece::bit_offset","value":"core::option::Option<u64>","parent":{"krate":0,"index":8201},"children":[],"decl_id":null,"docs":" The bit offset of this piece.  If `None`, then this piece\n was specified using `DW_OP_piece` and should start at the\n next byte boundary.\n","sig":null,"attributes":[{"value":"/ The bit offset of this piece.  If `None`, then this piece","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650386,"byte_end":650447,"line_start":172,"line_end":172,"column_start":9,"column_end":70}},{"value":"/ was specified using `DW_OP_piece` and should start at the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650456,"byte_end":650517,"line_start":173,"line_end":173,"column_start":9,"column_end":70}},{"value":"/ next byte boundary.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650526,"byte_end":650549,"line_start":174,"line_end":174,"column_start":9,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":8204},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650748,"byte_end":650761,"line_start":180,"line_end":180,"column_start":5,"column_end":18},"name":"ImplicitValue","qualname":"::read::op::Operation::ImplicitValue","value":"Operation::ImplicitValue { data }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Represents `DW_OP_implicit_value`.\n The object has no location, but has a known constant value.\n Completes the piece or expression.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_implicit_value`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650594,"byte_end":650632,"line_start":177,"line_end":177,"column_start":5,"column_end":43}},{"value":"/ The object has no location, but has a known constant value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650637,"byte_end":650700,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/ Completes the piece or expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650705,"byte_end":650743,"line_start":179,"line_end":179,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":8205},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650811,"byte_end":650815,"line_start":182,"line_end":182,"column_start":9,"column_end":13},"name":"data","qualname":"::read::op::Operation::ImplicitValue::data","value":"R","parent":{"krate":0,"index":8204},"children":[],"decl_id":null,"docs":" The implicit value to use.\n","sig":null,"attributes":[{"value":"/ The implicit value to use.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650772,"byte_end":650802,"line_start":181,"line_end":181,"column_start":9,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8206},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650992,"byte_end":651002,"line_start":187,"line_end":187,"column_start":5,"column_end":15},"name":"StackValue","qualname":"::read::op::Operation::StackValue","value":"Operation::StackValue","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Represents `DW_OP_stack_value`.\n The object has no location, but its value is at the top of the stack.\n Completes the piece or expression.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_stack_value`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650831,"byte_end":650866,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/ The object has no location, but its value is at the top of the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650871,"byte_end":650944,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/ Completes the piece or expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":650949,"byte_end":650987,"line_start":186,"line_end":186,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":8208},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651221,"byte_end":651236,"line_start":192,"line_end":192,"column_start":5,"column_end":20},"name":"ImplicitPointer","qualname":"::read::op::Operation::ImplicitPointer","value":"Operation::ImplicitPointer { value, byte_offset }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Represents `DW_OP_implicit_pointer`. The object is a pointer to\n a value which has no actual location, such as an implicit value or\n a stack value.\n Completes the piece or expression.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_implicit_pointer`. The object is a pointer to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651008,"byte_end":651075,"line_start":188,"line_end":188,"column_start":5,"column_end":72}},{"value":"/ a value which has no actual location, such as an implicit value or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651080,"byte_end":651150,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ a stack value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651155,"byte_end":651173,"line_start":190,"line_end":190,"column_start":5,"column_end":23}},{"value":"/ Completes the piece or expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651178,"byte_end":651216,"line_start":191,"line_end":191,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":8209},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651336,"byte_end":651341,"line_start":194,"line_end":194,"column_start":9,"column_end":14},"name":"value","qualname":"::read::op::Operation::ImplicitPointer::value","value":"common::DebugInfoOffset<Offset>","parent":{"krate":0,"index":8208},"children":[],"decl_id":null,"docs":" The `.debug_info` offset of the value that this is an implicit pointer into.\n","sig":null,"attributes":[{"value":"/ The `.debug_info` offset of the value that this is an implicit pointer into.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651247,"byte_end":651327,"line_start":193,"line_end":193,"column_start":9,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":8210},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651456,"byte_end":651467,"line_start":196,"line_end":196,"column_start":9,"column_end":20},"name":"byte_offset","qualname":"::read::op::Operation::ImplicitPointer::byte_offset","value":"i64","parent":{"krate":0,"index":8208},"children":[],"decl_id":null,"docs":" The byte offset into the value that the implicit pointer points to.\n","sig":null,"attributes":[{"value":"/ The byte offset into the value that the implicit pointer points to.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651376,"byte_end":651447,"line_start":195,"line_end":195,"column_start":9,"column_end":80}}]},{"kind":"StructVariant","id":{"krate":0,"index":8211},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651622,"byte_end":651632,"line_start":200,"line_end":200,"column_start":5,"column_end":15},"name":"EntryValue","qualname":"::read::op::Operation::EntryValue","value":"Operation::EntryValue { expression }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Represents `DW_OP_entry_value`. Evaluate an expression at the entry to\n the current subprogram, and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_entry_value`. Evaluate an expression at the entry to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651485,"byte_end":651559,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/ the current subprogram, and push it on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651564,"byte_end":651617,"line_start":199,"line_end":199,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":8212},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651687,"byte_end":651697,"line_start":202,"line_end":202,"column_start":9,"column_end":19},"name":"expression","qualname":"::read::op::Operation::EntryValue::expression","value":"R","parent":{"krate":0,"index":8211},"children":[],"decl_id":null,"docs":" The expression to be evaluated.\n","sig":null,"attributes":[{"value":"/ The expression to be evaluated.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651643,"byte_end":651678,"line_start":201,"line_end":201,"column_start":9,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":8213},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652016,"byte_end":652028,"line_start":208,"line_end":208,"column_start":5,"column_end":17},"name":"ParameterRef","qualname":"::read::op::Operation::ParameterRef","value":"Operation::ParameterRef { offset }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Represents `DW_OP_GNU_parameter_ref`. This represents a parameter that was\n optimized out. The offset points to the definition of the parameter, and is\n matched to the `DW_TAG_GNU_call_site_parameter` in the caller that also\n points to the same definition of the parameter.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_GNU_parameter_ref`. This represents a parameter that was","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651713,"byte_end":651791,"line_start":204,"line_end":204,"column_start":5,"column_end":83}},{"value":"/ optimized out. The offset points to the definition of the parameter, and is","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651796,"byte_end":651875,"line_start":205,"line_end":205,"column_start":5,"column_end":84}},{"value":"/ matched to the `DW_TAG_GNU_call_site_parameter` in the caller that also","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651880,"byte_end":651955,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ points to the same definition of the parameter.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":651960,"byte_end":652011,"line_start":207,"line_end":207,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":8214},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652067,"byte_end":652073,"line_start":210,"line_end":210,"column_start":9,"column_end":15},"name":"offset","qualname":"::read::op::Operation::ParameterRef::offset","value":"read::unit::UnitOffset<Offset>","parent":{"krate":0,"index":8213},"children":[],"decl_id":null,"docs":" The DIE to use.\n","sig":null,"attributes":[{"value":"/ The DIE to use.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652039,"byte_end":652058,"line_start":209,"line_end":209,"column_start":9,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":8215},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652205,"byte_end":652212,"line_start":214,"line_end":214,"column_start":5,"column_end":12},"name":"Address","qualname":"::read::op::Operation::Address","value":"Operation::Address { address }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Represents `DW_OP_addr`.\n Relocate the address if needed, and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_addr`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652106,"byte_end":652134,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/ Relocate the address if needed, and push it on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652139,"byte_end":652200,"line_start":213,"line_end":213,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":8216},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652254,"byte_end":652261,"line_start":216,"line_end":216,"column_start":9,"column_end":16},"name":"address","qualname":"::read::op::Operation::Address::address","value":"u64","parent":{"krate":0,"index":8215},"children":[],"decl_id":null,"docs":" The offset to add.\n","sig":null,"attributes":[{"value":"/ The offset to add.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652223,"byte_end":652245,"line_start":215,"line_end":215,"column_start":9,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":8217},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652440,"byte_end":652452,"line_start":221,"line_end":221,"column_start":5,"column_end":17},"name":"AddressIndex","qualname":"::read::op::Operation::AddressIndex","value":"Operation::AddressIndex { index }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Represents `DW_OP_addrx`.\n Read the address at the given index in `.debug_addr, relocate the address if needed,\n and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_addrx`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652279,"byte_end":652308,"line_start":218,"line_end":218,"column_start":5,"column_end":34}},{"value":"/ Read the address at the given index in `.debug_addr, relocate the address if needed,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652313,"byte_end":652401,"line_start":219,"line_end":219,"column_start":5,"column_end":93}},{"value":"/ and push it on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652406,"byte_end":652435,"line_start":220,"line_end":220,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":8218},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652518,"byte_end":652523,"line_start":223,"line_end":223,"column_start":9,"column_end":14},"name":"index","qualname":"::read::op::Operation::AddressIndex::index","value":"common::DebugAddrIndex<Offset>","parent":{"krate":0,"index":8217},"children":[],"decl_id":null,"docs":" The index of the address in `.debug_addr`.\n","sig":null,"attributes":[{"value":"/ The index of the address in `.debug_addr`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652463,"byte_end":652509,"line_start":222,"line_end":222,"column_start":9,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":8219},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652719,"byte_end":652732,"line_start":228,"line_end":228,"column_start":5,"column_end":18},"name":"ConstantIndex","qualname":"::read::op::Operation::ConstantIndex","value":"Operation::ConstantIndex { index }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Represents `DW_OP_constx`.\n Read the address at the given index in `.debug_addr, and push it on the stack.\n Do not relocate the address.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_constx`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652560,"byte_end":652590,"line_start":225,"line_end":225,"column_start":5,"column_end":35}},{"value":"/ Read the address at the given index in `.debug_addr, and push it on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652595,"byte_end":652677,"line_start":226,"line_end":226,"column_start":5,"column_end":87}},{"value":"/ Do not relocate the address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652682,"byte_end":652714,"line_start":227,"line_end":227,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":8220},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652798,"byte_end":652803,"line_start":230,"line_end":230,"column_start":9,"column_end":14},"name":"index","qualname":"::read::op::Operation::ConstantIndex::index","value":"common::DebugAddrIndex<Offset>","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":" The index of the address in `.debug_addr`.\n","sig":null,"attributes":[{"value":"/ The index of the address in `.debug_addr`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652743,"byte_end":652789,"line_start":229,"line_end":229,"column_start":9,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":8221},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652970,"byte_end":652982,"line_start":234,"line_end":234,"column_start":5,"column_end":17},"name":"TypedLiteral","qualname":"::read::op::Operation::TypedLiteral","value":"Operation::TypedLiteral { base_type, value }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Represents `DW_OP_const_type`.\n Interpret the value bytes as a constant of a given type, and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_const_type`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652840,"byte_end":652874,"line_start":232,"line_end":232,"column_start":5,"column_end":39}},{"value":"/ Interpret the value bytes as a constant of a given type, and push it on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652879,"byte_end":652965,"line_start":233,"line_end":233,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":8222},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653031,"byte_end":653040,"line_start":236,"line_end":236,"column_start":9,"column_end":18},"name":"base_type","qualname":"::read::op::Operation::TypedLiteral::base_type","value":"read::unit::UnitOffset<Offset>","parent":{"krate":0,"index":8221},"children":[],"decl_id":null,"docs":" The DIE of the base type.\n","sig":null,"attributes":[{"value":"/ The DIE of the base type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":652993,"byte_end":653022,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":8223},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653099,"byte_end":653104,"line_start":238,"line_end":238,"column_start":9,"column_end":14},"name":"value","qualname":"::read::op::Operation::TypedLiteral::value","value":"R","parent":{"krate":0,"index":8221},"children":[],"decl_id":null,"docs":" The value bytes.\n","sig":null,"attributes":[{"value":"/ The value bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653070,"byte_end":653090,"line_start":237,"line_end":237,"column_start":9,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":8224},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653247,"byte_end":653254,"line_start":242,"line_end":242,"column_start":5,"column_end":12},"name":"Convert","qualname":"::read::op::Operation::Convert","value":"Operation::Convert { base_type }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Represents `DW_OP_convert`.\n Pop the top stack entry, convert it to a different type, and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_convert`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653120,"byte_end":653151,"line_start":240,"line_end":240,"column_start":5,"column_end":36}},{"value":"/ Pop the top stack entry, convert it to a different type, and push it on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653156,"byte_end":653242,"line_start":241,"line_end":241,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":8225},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653303,"byte_end":653312,"line_start":244,"line_end":244,"column_start":9,"column_end":18},"name":"base_type","qualname":"::read::op::Operation::Convert::base_type","value":"read::unit::UnitOffset<Offset>","parent":{"krate":0,"index":8224},"children":[],"decl_id":null,"docs":" The DIE of the base type.\n","sig":null,"attributes":[{"value":"/ The DIE of the base type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653265,"byte_end":653294,"line_start":243,"line_end":243,"column_start":9,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":8226},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653507,"byte_end":653518,"line_start":249,"line_end":249,"column_start":5,"column_end":16},"name":"Reinterpret","qualname":"::read::op::Operation::Reinterpret","value":"Operation::Reinterpret { base_type }","parent":{"krate":0,"index":8118},"children":[],"decl_id":null,"docs":" Represents `DW_OP_reinterpret`.\n Pop the top stack entry, reinterpret the bits in its value as a different type,\n and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_reinterpret`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653345,"byte_end":653380,"line_start":246,"line_end":246,"column_start":5,"column_end":40}},{"value":"/ Pop the top stack entry, reinterpret the bits in its value as a different type,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653385,"byte_end":653468,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/ and push it on the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653473,"byte_end":653502,"line_start":248,"line_end":248,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":8227},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653567,"byte_end":653576,"line_start":251,"line_end":251,"column_start":9,"column_end":18},"name":"base_type","qualname":"::read::op::Operation::Reinterpret::base_type","value":"read::unit::UnitOffset<Offset>","parent":{"krate":0,"index":8226},"children":[],"decl_id":null,"docs":" The DIE of the base type.\n","sig":null,"attributes":[{"value":"/ The DIE of the base type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653529,"byte_end":653558,"line_start":250,"line_end":250,"column_start":9,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":8118},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645836,"byte_end":645845,"line_start":32,"line_end":32,"column_start":10,"column_end":19},"name":"Operation","qualname":"::read::op::Operation","value":"enum Operation<R, Offset = <R as Reader>::Offset> where R: Reader<Offset =\n    Offset>, Offset: ReaderOffset {\n    Deref {\n            base_type: UnitOffset<Offset>,\n            size: u8,\n            space: bool,\n        },\n    Drop,\n    Pick {\n            index: u8,\n        },\n    Swap,\n    Rot,\n    Abs,\n    And,\n    Div,\n    Minus,\n    Mod,\n    Mul,\n    Neg,\n    Not,\n    Or,\n    Plus,\n    PlusConstant {\n            value: u64,\n        },\n    Shl,\n    Shr,\n    Shra,\n    Xor,\n    Bra {\n            target: i16,\n        },\n    Eq,\n    Ge,\n    Gt,\n    Le,\n    Lt,\n    Ne,\n    Skip {\n            target: i16,\n        },\n    UnsignedConstant {\n            value: u64,\n        },\n    SignedConstant {\n            value: i64,\n        },\n    Register {\n            register: Register,\n        },\n    RegisterOffset {\n            register: Register,\n            offset: i64,\n            base_type: UnitOffset<Offset>,\n        },\n    FrameOffset {\n            offset: i64,\n        },\n    Nop,\n    PushObjectAddress,\n    Call {\n            offset: DieReference<Offset>,\n        },\n    TLS,\n    CallFrameCFA,\n    Piece {\n            size_in_bits: u64,\n            bit_offset: Option<u64>,\n        },\n    ImplicitValue {\n            data: R,\n        },\n    StackValue,\n    ImplicitPointer {\n            value: DebugInfoOffset<Offset>,\n            byte_offset: i64,\n        },\n    EntryValue {\n            expression: R,\n        },\n    ParameterRef {\n            offset: UnitOffset<Offset>,\n        },\n    Address {\n            address: u64,\n        },\n    AddressIndex {\n            index: DebugAddrIndex<Offset>,\n        },\n    ConstantIndex {\n            index: DebugAddrIndex<Offset>,\n        },\n    TypedLiteral {\n            base_type: UnitOffset<Offset>,\n            value: R,\n        },\n    Convert {\n            base_type: UnitOffset<Offset>,\n        },\n    Reinterpret {\n            base_type: UnitOffset<Offset>,\n        },\n}","parent":null,"children":[{"krate":0,"index":8121},{"krate":0,"index":8125},{"krate":0,"index":8127},{"krate":0,"index":8129},{"krate":0,"index":8131},{"krate":0,"index":8133},{"krate":0,"index":8135},{"krate":0,"index":8137},{"krate":0,"index":8139},{"krate":0,"index":8141},{"krate":0,"index":8143},{"krate":0,"index":8145},{"krate":0,"index":8147},{"krate":0,"index":8149},{"krate":0,"index":8151},{"krate":0,"index":8153},{"krate":0,"index":8155},{"krate":0,"index":8157},{"krate":0,"index":8159},{"krate":0,"index":8161},{"krate":0,"index":8163},{"krate":0,"index":8165},{"krate":0,"index":8167},{"krate":0,"index":8169},{"krate":0,"index":8171},{"krate":0,"index":8173},{"krate":0,"index":8175},{"krate":0,"index":8177},{"krate":0,"index":8179},{"krate":0,"index":8181},{"krate":0,"index":8183},{"krate":0,"index":8185},{"krate":0,"index":8189},{"krate":0,"index":8191},{"krate":0,"index":8193},{"krate":0,"index":8195},{"krate":0,"index":8197},{"krate":0,"index":8199},{"krate":0,"index":8201},{"krate":0,"index":8204},{"krate":0,"index":8206},{"krate":0,"index":8208},{"krate":0,"index":8211},{"krate":0,"index":8213},{"krate":0,"index":8215},{"krate":0,"index":8217},{"krate":0,"index":8219},{"krate":0,"index":8221},{"krate":0,"index":8224},{"krate":0,"index":8226}],"decl_id":null,"docs":" A single decoded DWARF expression operation.","sig":null,"attributes":[{"value":"/ A single decoded DWARF expression operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645263,"byte_end":645311,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645312,"byte_end":645315,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ DWARF expression evaluation is done in two parts: first the raw","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645316,"byte_end":645383,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ bytes of the next part of the expression are decoded; and then the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645384,"byte_end":645454,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ decoded operation is evaluated.  This approach lets other","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645455,"byte_end":645516,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ consumers inspect the DWARF expression without reimplementing the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645517,"byte_end":645586,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ decoding operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645587,"byte_end":645610,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645611,"byte_end":645614,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Multiple DWARF opcodes may decode into a single `Operation`.  For","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645615,"byte_end":645684,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ example, both `DW_OP_deref` and `DW_OP_xderef` are represented","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645685,"byte_end":645751,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ using `Operation::Deref`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":645752,"byte_end":645781,"line_start":30,"line_end":30,"column_start":1,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8272},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654123,"byte_end":654128,"line_start":272,"line_end":272,"column_start":5,"column_end":10},"name":"Empty","qualname":"::read::op::Location::Empty","value":"Location::Empty","parent":{"krate":0,"index":8269},"children":[],"decl_id":null,"docs":" The piece is empty.  Ordinarily this means the piece has been\n optimized away.\n","sig":null,"attributes":[{"value":"/ The piece is empty.  Ordinarily this means the piece has been","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654029,"byte_end":654094,"line_start":270,"line_end":270,"column_start":5,"column_end":70}},{"value":"/ optimized away.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654099,"byte_end":654118,"line_start":271,"line_end":271,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":8274},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654176,"byte_end":654184,"line_start":274,"line_end":274,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::op::Location::Register","value":"Location::Register { register }","parent":{"krate":0,"index":8269},"children":[],"decl_id":null,"docs":" The piece is found in a register.\n","sig":null,"attributes":[{"value":"/ The piece is found in a register.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654134,"byte_end":654171,"line_start":273,"line_end":273,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":8275},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654228,"byte_end":654236,"line_start":276,"line_end":276,"column_start":9,"column_end":17},"name":"register","qualname":"::read::op::Location::Register::register","value":"common::Register","parent":{"krate":0,"index":8274},"children":[],"decl_id":null,"docs":" The register number.\n","sig":null,"attributes":[{"value":"/ The register number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654195,"byte_end":654219,"line_start":275,"line_end":275,"column_start":9,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":8276},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654297,"byte_end":654304,"line_start":279,"line_end":279,"column_start":5,"column_end":12},"name":"Address","qualname":"::read::op::Location::Address","value":"Location::Address { address }","parent":{"krate":0,"index":8269},"children":[],"decl_id":null,"docs":" The piece is found in memory.\n","sig":null,"attributes":[{"value":"/ The piece is found in memory.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654259,"byte_end":654292,"line_start":278,"line_end":278,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":8277},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654340,"byte_end":654347,"line_start":281,"line_end":281,"column_start":9,"column_end":16},"name":"address","qualname":"::read::op::Location::Address::address","value":"u64","parent":{"krate":0,"index":8276},"children":[],"decl_id":null,"docs":" The address.\n","sig":null,"attributes":[{"value":"/ The address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654315,"byte_end":654331,"line_start":280,"line_end":280,"column_start":9,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":8278},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654423,"byte_end":654428,"line_start":284,"line_end":284,"column_start":5,"column_end":10},"name":"Value","qualname":"::read::op::Location::Value","value":"Location::Value { value }","parent":{"krate":0,"index":8269},"children":[],"decl_id":null,"docs":" The piece has no location but its value is known.\n","sig":null,"attributes":[{"value":"/ The piece has no location but its value is known.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654365,"byte_end":654418,"line_start":283,"line_end":283,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":8279},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654462,"byte_end":654467,"line_start":286,"line_end":286,"column_start":9,"column_end":14},"name":"value","qualname":"::read::op::Location::Value::value","value":"read::value::Value","parent":{"krate":0,"index":8278},"children":[],"decl_id":null,"docs":" The value.\n","sig":null,"attributes":[{"value":"/ The value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654439,"byte_end":654453,"line_start":285,"line_end":285,"column_start":9,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":8280},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654544,"byte_end":654549,"line_start":289,"line_end":289,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::read::op::Location::Bytes","value":"Location::Bytes { value }","parent":{"krate":0,"index":8269},"children":[],"decl_id":null,"docs":" The piece is represented by some constant bytes.\n","sig":null,"attributes":[{"value":"/ The piece is represented by some constant bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654487,"byte_end":654539,"line_start":288,"line_end":288,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":8281},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654583,"byte_end":654588,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"name":"value","qualname":"::read::op::Location::Bytes::value","value":"R","parent":{"krate":0,"index":8280},"children":[],"decl_id":null,"docs":" The value.\n","sig":null,"attributes":[{"value":"/ The value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654560,"byte_end":654574,"line_start":290,"line_end":290,"column_start":9,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":8282},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654676,"byte_end":654691,"line_start":294,"line_end":294,"column_start":5,"column_end":20},"name":"ImplicitPointer","qualname":"::read::op::Location::ImplicitPointer","value":"Location::ImplicitPointer { value, byte_offset }","parent":{"krate":0,"index":8269},"children":[],"decl_id":null,"docs":" The piece is a pointer to a value which has no actual location.\n","sig":null,"attributes":[{"value":"/ The piece is a pointer to a value which has no actual location.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654604,"byte_end":654671,"line_start":293,"line_end":293,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":8283},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654791,"byte_end":654796,"line_start":296,"line_end":296,"column_start":9,"column_end":14},"name":"value","qualname":"::read::op::Location::ImplicitPointer::value","value":"common::DebugInfoOffset<Offset>","parent":{"krate":0,"index":8282},"children":[],"decl_id":null,"docs":" The `.debug_info` offset of the value that this is an implicit pointer into.\n","sig":null,"attributes":[{"value":"/ The `.debug_info` offset of the value that this is an implicit pointer into.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654702,"byte_end":654782,"line_start":295,"line_end":295,"column_start":9,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":8284},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654911,"byte_end":654922,"line_start":298,"line_end":298,"column_start":9,"column_end":20},"name":"byte_offset","qualname":"::read::op::Location::ImplicitPointer::byte_offset","value":"i64","parent":{"krate":0,"index":8282},"children":[],"decl_id":null,"docs":" The byte offset into the value that the implicit pointer points to.\n","sig":null,"attributes":[{"value":"/ The byte offset into the value that the implicit pointer points to.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654831,"byte_end":654902,"line_start":297,"line_end":297,"column_start":9,"column_end":80}}]},{"kind":"Enum","id":{"krate":0,"index":8269},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653915,"byte_end":653923,"line_start":265,"line_end":265,"column_start":10,"column_end":18},"name":"Location","qualname":"::read::op::Location","value":"enum Location<R, Offset = <R as Reader>::Offset> where R: Reader<Offset =\n    Offset>, Offset: ReaderOffset {\n    Empty,\n    Register {\n            register: Register,\n        },\n    Address {\n            address: u64,\n        },\n    Value {\n            value: Value,\n        },\n    Bytes {\n            value: R,\n        },\n    ImplicitPointer {\n            value: DebugInfoOffset<Offset>,\n            byte_offset: i64,\n        },\n}","parent":null,"children":[{"krate":0,"index":8272},{"krate":0,"index":8274},{"krate":0,"index":8276},{"krate":0,"index":8278},{"krate":0,"index":8280},{"krate":0,"index":8282}],"decl_id":null,"docs":" A single location of a piece of the result of a DWARF expression.\n","sig":null,"attributes":[{"value":"/ A single location of a piece of the result of a DWARF expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":653795,"byte_end":653864,"line_start":263,"line_end":263,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655095,"byte_end":655103,"line_start":308,"line_end":308,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Location<R, Offset>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the piece is empty.\n","sig":null,"attributes":[{"value":"/ Return true if the piece is empty.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655045,"byte_end":655083,"line_start":307,"line_end":307,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":8304},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655354,"byte_end":655359,"line_start":319,"line_end":319,"column_start":12,"column_end":17},"name":"Piece","qualname":"::read::op::Piece","value":"Piece { size_in_bits, bit_offset, location }","parent":null,"children":[{"krate":0,"index":8307},{"krate":0,"index":8308},{"krate":0,"index":8309}],"decl_id":null,"docs":" The description of a single piece of the result of a DWARF\n expression.\n","sig":null,"attributes":[{"value":"/ The description of a single piece of the result of a DWARF","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655223,"byte_end":655285,"line_start":316,"line_end":316,"column_start":1,"column_end":63}},{"value":"/ expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655286,"byte_end":655301,"line_start":317,"line_end":317,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":8307},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655600,"byte_end":655612,"line_start":326,"line_end":326,"column_start":9,"column_end":21},"name":"size_in_bits","qualname":"::read::op::Piece::size_in_bits","value":"core::option::Option<u64>","parent":{"krate":0,"index":8304},"children":[],"decl_id":null,"docs":" If given, the size of the piece in bits.  If `None`, there\n must be only one piece whose size is all of the object.\n","sig":null,"attributes":[{"value":"/ If given, the size of the piece in bits.  If `None`, there","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655465,"byte_end":655527,"line_start":324,"line_end":324,"column_start":5,"column_end":67}},{"value":"/ must be only one piece whose size is all of the object.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655532,"byte_end":655591,"line_start":325,"line_end":325,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":8308},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":656238,"byte_end":656248,"line_start":338,"line_end":338,"column_start":9,"column_end":19},"name":"bit_offset","qualname":"::read::op::Piece::bit_offset","value":"core::option::Option<u64>","parent":{"krate":0,"index":8304},"children":[],"decl_id":null,"docs":" If given, the bit offset of the piece within the location.\n If the location is a `Location::Register` or `Location::Value`,\n then this offset is from the least significant bit end of\n the register or value.\n If the location is a `Location::Address` then the offset uses\n the bit numbering and direction conventions of the language\n and target system.","sig":null,"attributes":[{"value":"/ If given, the bit offset of the piece within the location.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655631,"byte_end":655693,"line_start":327,"line_end":327,"column_start":5,"column_end":67}},{"value":"/ If the location is a `Location::Register` or `Location::Value`,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655698,"byte_end":655765,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/ then this offset is from the least significant bit end of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655770,"byte_end":655831,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/ the register or value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655836,"byte_end":655862,"line_start":330,"line_end":330,"column_start":5,"column_end":31}},{"value":"/ If the location is a `Location::Address` then the offset uses","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655867,"byte_end":655932,"line_start":331,"line_end":331,"column_start":5,"column_end":70}},{"value":"/ the bit numbering and direction conventions of the language","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":655937,"byte_end":656000,"line_start":332,"line_end":332,"column_start":5,"column_end":68}},{"value":"/ and target system.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":656005,"byte_end":656027,"line_start":333,"line_end":333,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":656032,"byte_end":656035,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If `None`, the piece starts at the location. If the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":656040,"byte_end":656095,"line_start":335,"line_end":335,"column_start":5,"column_end":60}},{"value":"/ location is a register whose size is larger than the piece,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":656100,"byte_end":656163,"line_start":336,"line_end":336,"column_start":5,"column_end":68}},{"value":"/ then placement within the register is defined by the ABI.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":656168,"byte_end":656229,"line_start":337,"line_end":337,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":8309},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":656312,"byte_end":656320,"line_start":340,"line_end":340,"column_start":9,"column_end":17},"name":"location","qualname":"::read::op::Piece::location","value":"read::op::Location<R, Offset>","parent":{"krate":0,"index":8304},"children":[],"decl_id":null,"docs":" Where this piece is to be found.\n","sig":null,"attributes":[{"value":"/ Where this piece is to be found.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":656267,"byte_end":656303,"line_start":339,"line_end":339,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":657359,"byte_end":657364,"line_start":373,"line_end":373,"column_start":12,"column_end":17},"name":"parse","qualname":"<Operation<R, Offset>>::parse","value":"fn parse(&mut R, Encoding) -> Result<Operation<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single DWARF expression operation.","sig":null,"attributes":[{"value":"/ Parse a single DWARF expression operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":657018,"byte_end":657064,"line_start":365,"line_end":365,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":657069,"byte_end":657072,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This is useful when examining a DWARF expression for reasons other","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":657077,"byte_end":657147,"line_start":367,"line_end":367,"column_start":5,"column_end":75}},{"value":"/ than direct evaluation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":657152,"byte_end":657179,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":657184,"byte_end":657187,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ `bytes` points to a the operation to decode.  It should point into","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":657192,"byte_end":657262,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ the same array as `bytecode`, which should be the entire","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":657267,"byte_end":657327,"line_start":371,"line_end":371,"column_start":5,"column_end":65}},{"value":"/ expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":657332,"byte_end":657347,"line_start":372,"line_end":372,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8380},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":673884,"byte_end":673892,"line_start":786,"line_end":786,"column_start":5,"column_end":13},"name":"Complete","qualname":"::read::op::EvaluationResult::Complete","value":"EvaluationResult::Complete","parent":{"krate":0,"index":8378},"children":[],"decl_id":null,"docs":" The `Evaluation` is complete, and `Evaluation::result()` can be called.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` is complete, and `Evaluation::result()` can be called.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":673804,"byte_end":673879,"line_start":785,"line_end":785,"column_start":5,"column_end":80}}]},{"kind":"StructVariant","id":{"krate":0,"index":8382},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674114,"byte_end":674128,"line_start":790,"line_end":790,"column_start":5,"column_end":19},"name":"RequiresMemory","qualname":"::read::op::EvaluationResult::RequiresMemory","value":"EvaluationResult::RequiresMemory { address, size, space, base_type }","parent":{"krate":0,"index":8378},"children":[],"decl_id":null,"docs":" The `Evaluation` needs a value from memory to proceed further.  Once the\n caller determines what value to provide it should resume the `Evaluation`\n by calling `Evaluation::resume_with_memory`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs a value from memory to proceed further.  Once the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":673898,"byte_end":673974,"line_start":787,"line_end":787,"column_start":5,"column_end":81}},{"value":"/ caller determines what value to provide it should resume the `Evaluation`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":673979,"byte_end":674056,"line_start":788,"line_end":788,"column_start":5,"column_end":82}},{"value":"/ by calling `Evaluation::resume_with_memory`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674061,"byte_end":674109,"line_start":789,"line_end":789,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":8383},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674186,"byte_end":674193,"line_start":792,"line_end":792,"column_start":9,"column_end":16},"name":"address","qualname":"::read::op::EvaluationResult::RequiresMemory::address","value":"u64","parent":{"krate":0,"index":8382},"children":[],"decl_id":null,"docs":" The address of the value required.\n","sig":null,"attributes":[{"value":"/ The address of the value required.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674139,"byte_end":674177,"line_start":791,"line_end":791,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":8384},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674339,"byte_end":674343,"line_start":795,"line_end":795,"column_start":9,"column_end":13},"name":"size","qualname":"::read::op::EvaluationResult::RequiresMemory::size","value":"u8","parent":{"krate":0,"index":8382},"children":[],"decl_id":null,"docs":" The size of the value required. This is guaranteed to be at most the\n word size of the target architecture.\n","sig":null,"attributes":[{"value":"/ The size of the value required. This is guaranteed to be at most the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674208,"byte_end":674280,"line_start":793,"line_end":793,"column_start":9,"column_end":81}},{"value":"/ word size of the target architecture.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674289,"byte_end":674330,"line_start":794,"line_end":794,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":8385},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674423,"byte_end":674428,"line_start":797,"line_end":797,"column_start":9,"column_end":14},"name":"space","qualname":"::read::op::EvaluationResult::RequiresMemory::space","value":"core::option::Option<u64>","parent":{"krate":0,"index":8382},"children":[],"decl_id":null,"docs":" If not `None`, a target-specific address space value.\n","sig":null,"attributes":[{"value":"/ If not `None`, a target-specific address space value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674357,"byte_end":674414,"line_start":796,"line_end":796,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":8386},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674522,"byte_end":674531,"line_start":799,"line_end":799,"column_start":9,"column_end":18},"name":"base_type","qualname":"::read::op::EvaluationResult::RequiresMemory::base_type","value":"read::unit::UnitOffset<<R as read::reader::Reader>::Offset>","parent":{"krate":0,"index":8382},"children":[],"decl_id":null,"docs":" The DIE of the base type or 0 to indicate the generic type\n","sig":null,"attributes":[{"value":"/ The DIE of the base type or 0 to indicate the generic type","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674451,"byte_end":674513,"line_start":798,"line_end":798,"column_start":9,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":8387},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674789,"byte_end":674805,"line_start":804,"line_end":804,"column_start":5,"column_end":21},"name":"RequiresRegister","qualname":"::read::op::EvaluationResult::RequiresRegister","value":"EvaluationResult::RequiresRegister { register, base_type }","parent":{"krate":0,"index":8378},"children":[],"decl_id":null,"docs":" The `Evaluation` needs a value from a register to proceed further.  Once\n the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_register`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs a value from a register to proceed further.  Once","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674567,"byte_end":674643,"line_start":801,"line_end":801,"column_start":5,"column_end":81}},{"value":"/ the caller determines what value to provide it should resume the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674648,"byte_end":674716,"line_start":802,"line_end":802,"column_start":5,"column_end":73}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_register`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674721,"byte_end":674784,"line_start":803,"line_end":803,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":8388},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674849,"byte_end":674857,"line_start":806,"line_end":806,"column_start":9,"column_end":17},"name":"register","qualname":"::read::op::EvaluationResult::RequiresRegister::register","value":"common::Register","parent":{"krate":0,"index":8387},"children":[],"decl_id":null,"docs":" The register number.\n","sig":null,"attributes":[{"value":"/ The register number.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674816,"byte_end":674840,"line_start":805,"line_end":805,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8389},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674948,"byte_end":674957,"line_start":808,"line_end":808,"column_start":9,"column_end":18},"name":"base_type","qualname":"::read::op::EvaluationResult::RequiresRegister::base_type","value":"read::unit::UnitOffset<<R as read::reader::Reader>::Offset>","parent":{"krate":0,"index":8387},"children":[],"decl_id":null,"docs":" The DIE of the base type or 0 to indicate the generic type\n","sig":null,"attributes":[{"value":"/ The DIE of the base type or 0 to indicate the generic type","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674877,"byte_end":674939,"line_start":807,"line_end":807,"column_start":9,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8390},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675369,"byte_end":675386,"line_start":815,"line_end":815,"column_start":5,"column_end":22},"name":"RequiresFrameBase","qualname":"::read::op::EvaluationResult::RequiresFrameBase","value":"EvaluationResult::RequiresFrameBase","parent":{"krate":0,"index":8378},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the frame base address to proceed further.  Once\n the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_frame_base`.  The frame\n base address is the address produced by the location description in the\n `DW_AT_frame_base` attribute of the current function.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the frame base address to proceed further.  Once","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":674993,"byte_end":675068,"line_start":810,"line_end":810,"column_start":5,"column_end":80}},{"value":"/ the caller determines what value to provide it should resume the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675073,"byte_end":675141,"line_start":811,"line_end":811,"column_start":5,"column_end":73}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_frame_base`.  The frame","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675146,"byte_end":675222,"line_start":812,"line_end":812,"column_start":5,"column_end":81}},{"value":"/ base address is the address produced by the location description in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675227,"byte_end":675302,"line_start":813,"line_end":813,"column_start":5,"column_end":80}},{"value":"/ `DW_AT_frame_base` attribute of the current function.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675307,"byte_end":675364,"line_start":814,"line_end":814,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8392},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675602,"byte_end":675613,"line_start":819,"line_end":819,"column_start":5,"column_end":16},"name":"RequiresTls","qualname":"::read::op::EvaluationResult::RequiresTls","value":"EvaluationResult::RequiresTls(u64)","parent":{"krate":0,"index":8378},"children":[],"decl_id":null,"docs":" The `Evaluation` needs a value from TLS to proceed further.  Once the\n caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_tls`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs a value from TLS to proceed further.  Once the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675392,"byte_end":675465,"line_start":816,"line_end":816,"column_start":5,"column_end":78}},{"value":"/ caller determines what value to provide it should resume the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675470,"byte_end":675534,"line_start":817,"line_end":817,"column_start":5,"column_end":69}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_tls`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675539,"byte_end":675597,"line_start":818,"line_end":818,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":8394},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675614,"byte_end":675617,"line_start":819,"line_end":819,"column_start":17,"column_end":20},"name":"0","qualname":"::read::op::EvaluationResult::RequiresTls::0","value":"u64","parent":{"krate":0,"index":8392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8395},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675836,"byte_end":675856,"line_start":823,"line_end":823,"column_start":5,"column_end":25},"name":"RequiresCallFrameCfa","qualname":"::read::op::EvaluationResult::RequiresCallFrameCfa","value":"EvaluationResult::RequiresCallFrameCfa","parent":{"krate":0,"index":8378},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the CFA to proceed further.  Once the caller\n determines what value to provide it should resume the `Evaluation` by\n calling `Evaluation::resume_with_call_frame_cfa`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the CFA to proceed further.  Once the caller","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675624,"byte_end":675695,"line_start":820,"line_end":820,"column_start":5,"column_end":76}},{"value":"/ determines what value to provide it should resume the `Evaluation` by","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675700,"byte_end":675773,"line_start":821,"line_end":821,"column_start":5,"column_end":78}},{"value":"/ calling `Evaluation::resume_with_call_frame_cfa`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675778,"byte_end":675831,"line_start":822,"line_end":822,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8397},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676114,"byte_end":676132,"line_start":828,"line_end":828,"column_start":5,"column_end":23},"name":"RequiresAtLocation","qualname":"::read::op::EvaluationResult::RequiresAtLocation","value":"EvaluationResult::RequiresAtLocation(DieReference<R::Offset>)","parent":{"krate":0,"index":8378},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the DWARF expression at the given location to\n proceed further.  Once the caller determines what value to provide it\n should resume the `Evaluation` by calling\n `Evaluation::resume_with_at_location`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the DWARF expression at the given location to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675862,"byte_end":675934,"line_start":824,"line_end":824,"column_start":5,"column_end":77}},{"value":"/ proceed further.  Once the caller determines what value to provide it","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":675939,"byte_end":676012,"line_start":825,"line_end":825,"column_start":5,"column_end":78}},{"value":"/ should resume the `Evaluation` by calling","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676017,"byte_end":676062,"line_start":826,"line_end":826,"column_start":5,"column_end":50}},{"value":"/ `Evaluation::resume_with_at_location`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676067,"byte_end":676109,"line_start":827,"line_end":827,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":8399},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676133,"byte_end":676156,"line_start":828,"line_end":828,"column_start":24,"column_end":47},"name":"0","qualname":"::read::op::EvaluationResult::RequiresAtLocation::0","value":"read::op::DieReference<<R as read::reader::Reader>::Offset>","parent":{"krate":0,"index":8397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8400},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676450,"byte_end":676468,"line_start":833,"line_end":833,"column_start":5,"column_end":23},"name":"RequiresEntryValue","qualname":"::read::op::EvaluationResult::RequiresEntryValue","value":"EvaluationResult::RequiresEntryValue(Expression<R>)","parent":{"krate":0,"index":8378},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the value produced by evaluating a DWARF\n expression at the entry point of the current subprogram.  Once the\n caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_entry_value`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the value produced by evaluating a DWARF","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676163,"byte_end":676230,"line_start":829,"line_end":829,"column_start":5,"column_end":72}},{"value":"/ expression at the entry point of the current subprogram.  Once the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676235,"byte_end":676305,"line_start":830,"line_end":830,"column_start":5,"column_end":75}},{"value":"/ caller determines what value to provide it should resume the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676310,"byte_end":676374,"line_start":831,"line_end":831,"column_start":5,"column_end":69}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_entry_value`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676379,"byte_end":676445,"line_start":832,"line_end":832,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":8402},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676469,"byte_end":676482,"line_start":833,"line_end":833,"column_start":24,"column_end":37},"name":"0","qualname":"::read::op::EvaluationResult::RequiresEntryValue::0","value":"read::op::Expression<R>","parent":{"krate":0,"index":8400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8403},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676763,"byte_end":676783,"line_start":838,"line_end":838,"column_start":5,"column_end":25},"name":"RequiresParameterRef","qualname":"::read::op::EvaluationResult::RequiresParameterRef","value":"EvaluationResult::RequiresParameterRef(UnitOffset<R::Offset>)","parent":{"krate":0,"index":8378},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the value of the parameter at the given location\n in the current function's caller.  Once the caller determines what value\n to provide it should resume the `Evaluation` by calling\n `Evaluation::resume_with_parameter_ref`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the value of the parameter at the given location","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676489,"byte_end":676564,"line_start":834,"line_end":834,"column_start":5,"column_end":80}},{"value":"/ in the current function's caller.  Once the caller determines what value","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676569,"byte_end":676645,"line_start":835,"line_end":835,"column_start":5,"column_end":81}},{"value":"/ to provide it should resume the `Evaluation` by calling","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676650,"byte_end":676709,"line_start":836,"line_end":836,"column_start":5,"column_end":64}},{"value":"/ `Evaluation::resume_with_parameter_ref`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676714,"byte_end":676758,"line_start":837,"line_end":837,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":8405},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676784,"byte_end":676805,"line_start":838,"line_end":838,"column_start":26,"column_end":47},"name":"0","qualname":"::read::op::EvaluationResult::RequiresParameterRef::0","value":"read::unit::UnitOffset<<R as read::reader::Reader>::Offset>","parent":{"krate":0,"index":8403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8406},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677045,"byte_end":677069,"line_start":842,"line_end":842,"column_start":5,"column_end":29},"name":"RequiresRelocatedAddress","qualname":"::read::op::EvaluationResult::RequiresRelocatedAddress","value":"EvaluationResult::RequiresRelocatedAddress(u64)","parent":{"krate":0,"index":8378},"children":[],"decl_id":null,"docs":" The `Evaluation` needs an address to be relocated to proceed further.\n Once the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_relocated_address`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs an address to be relocated to proceed further.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676812,"byte_end":676885,"line_start":839,"line_end":839,"column_start":5,"column_end":78}},{"value":"/ Once the caller determines what value to provide it should resume the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676890,"byte_end":676963,"line_start":840,"line_end":840,"column_start":5,"column_end":78}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_relocated_address`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":676968,"byte_end":677040,"line_start":841,"line_end":841,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":8408},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677070,"byte_end":677073,"line_start":842,"line_end":842,"column_start":30,"column_end":33},"name":"0","qualname":"::read::op::EvaluationResult::RequiresRelocatedAddress::0","value":"u64","parent":{"krate":0,"index":8406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8409},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677359,"byte_end":677381,"line_start":847,"line_end":847,"column_start":5,"column_end":27},"name":"RequiresIndexedAddress","qualname":"::read::op::EvaluationResult::RequiresIndexedAddress","value":"EvaluationResult::RequiresIndexedAddress { index, relocate }","parent":{"krate":0,"index":8378},"children":[],"decl_id":null,"docs":" The `Evaluation` needs an address from the `.debug_addr` section.\n This address may also need to be relocated.\n Once the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_indexed_address`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs an address from the `.debug_addr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677080,"byte_end":677149,"line_start":843,"line_end":843,"column_start":5,"column_end":74}},{"value":"/ This address may also need to be relocated.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677154,"byte_end":677201,"line_start":844,"line_end":844,"column_start":5,"column_end":52}},{"value":"/ Once the caller determines what value to provide it should resume the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677206,"byte_end":677279,"line_start":845,"line_end":845,"column_start":5,"column_end":78}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_indexed_address`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677284,"byte_end":677354,"line_start":846,"line_end":846,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":8410},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677530,"byte_end":677535,"line_start":850,"line_end":850,"column_start":9,"column_end":14},"name":"index","qualname":"::read::op::EvaluationResult::RequiresIndexedAddress::index","value":"common::DebugAddrIndex<<R as read::reader::Reader>::Offset>","parent":{"krate":0,"index":8409},"children":[],"decl_id":null,"docs":" The index of the address in the `.debug_addr` section,\n relative to the `DW_AT_addr_base` of the compilation unit.\n","sig":null,"attributes":[{"value":"/ The index of the address in the `.debug_addr` section,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677392,"byte_end":677450,"line_start":848,"line_end":848,"column_start":9,"column_end":67}},{"value":"/ relative to the `DW_AT_addr_base` of the compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677459,"byte_end":677521,"line_start":849,"line_end":849,"column_start":9,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":8411},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677632,"byte_end":677640,"line_start":852,"line_end":852,"column_start":9,"column_end":17},"name":"relocate","qualname":"::read::op::EvaluationResult::RequiresIndexedAddress::relocate","value":"bool","parent":{"krate":0,"index":8409},"children":[],"decl_id":null,"docs":" Whether the address also needs to be relocated.\n","sig":null,"attributes":[{"value":"/ Whether the address also needs to be relocated.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677572,"byte_end":677623,"line_start":851,"line_end":851,"column_start":9,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8412},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677909,"byte_end":677925,"line_start":858,"line_end":858,"column_start":5,"column_end":21},"name":"RequiresBaseType","qualname":"::read::op::EvaluationResult::RequiresBaseType","value":"EvaluationResult::RequiresBaseType(UnitOffset<R::Offset>)","parent":{"krate":0,"index":8378},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the `ValueType` for the base type DIE at\n the give unit offset.  Once the caller determines what value to provide it\n should resume the `Evaluation` by calling\n `Evaluation::resume_with_base_type`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the `ValueType` for the base type DIE at","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677659,"byte_end":677726,"line_start":854,"line_end":854,"column_start":5,"column_end":72}},{"value":"/ the give unit offset.  Once the caller determines what value to provide it","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677731,"byte_end":677809,"line_start":855,"line_end":855,"column_start":5,"column_end":83}},{"value":"/ should resume the `Evaluation` by calling","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677814,"byte_end":677859,"line_start":856,"line_end":856,"column_start":5,"column_end":50}},{"value":"/ `Evaluation::resume_with_base_type`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677864,"byte_end":677904,"line_start":857,"line_end":857,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":8414},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677926,"byte_end":677947,"line_start":858,"line_end":858,"column_start":22,"column_end":43},"name":"0","qualname":"::read::op::EvaluationResult::RequiresBaseType::0","value":"read::unit::UnitOffset<<R as read::reader::Reader>::Offset>","parent":{"krate":0,"index":8412},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8378},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":673770,"byte_end":673786,"line_start":784,"line_end":784,"column_start":10,"column_end":26},"name":"EvaluationResult","qualname":"::read::op::EvaluationResult","value":"enum EvaluationResult<R> where R: Reader {\n    Complete,\n    RequiresMemory {\n            address: u64,\n            size: u8,\n            space: Option<u64>,\n            base_type: UnitOffset<R::Offset>,\n        },\n    RequiresRegister {\n            register: Register,\n            base_type: UnitOffset<R::Offset>,\n        },\n    RequiresFrameBase,\n    RequiresTls(u64),\n    RequiresCallFrameCfa,\n    RequiresAtLocation(DieReference<R::Offset>),\n    RequiresEntryValue(Expression<R>),\n    RequiresParameterRef(UnitOffset<R::Offset>),\n    RequiresRelocatedAddress(u64),\n    RequiresIndexedAddress {\n            index: DebugAddrIndex<R::Offset>,\n            relocate: bool,\n        },\n    RequiresBaseType(UnitOffset<R::Offset>),\n}","parent":null,"children":[{"krate":0,"index":8380},{"krate":0,"index":8382},{"krate":0,"index":8387},{"krate":0,"index":8390},{"krate":0,"index":8392},{"krate":0,"index":8395},{"krate":0,"index":8397},{"krate":0,"index":8400},{"krate":0,"index":8403},{"krate":0,"index":8406},{"krate":0,"index":8409},{"krate":0,"index":8412}],"decl_id":null,"docs":" The state of an `Evaluation` after evaluating a DWARF expression.\n The evaluation is either `Complete`, or it requires more data\n to continue, as described by the variant.\n","sig":null,"attributes":[{"value":"/ The state of an `Evaluation` after evaluating a DWARF expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":673551,"byte_end":673620,"line_start":780,"line_end":780,"column_start":1,"column_end":70}},{"value":"/ The evaluation is either `Complete`, or it requires more data","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":673621,"byte_end":673686,"line_start":781,"line_end":781,"column_start":1,"column_end":66}},{"value":"/ to continue, as described by the variant.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":673687,"byte_end":673732,"line_start":782,"line_end":782,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":8424},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678080,"byte_end":678090,"line_start":863,"line_end":863,"column_start":12,"column_end":22},"name":"Expression","qualname":"::read::op::Expression","value":"","parent":null,"children":[],"decl_id":null,"docs":" The bytecode for a DWARF expression or location description.\n","sig":null,"attributes":[{"value":"/ The bytecode for a DWARF expression or location description.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":677953,"byte_end":678017,"line_start":861,"line_end":861,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":8427},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678102,"byte_end":678107,"line_start":863,"line_end":863,"column_start":34,"column_end":39},"name":"0","qualname":"::read::op::Expression::0","value":"R","parent":{"krate":0,"index":8424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678961,"byte_end":678971,"line_start":885,"line_end":885,"column_start":12,"column_end":22},"name":"evaluation","qualname":"<Expression<R>>::evaluation","value":"fn evaluation(Self, Encoding) -> Evaluation<R>","parent":null,"children":[],"decl_id":null,"docs":" Create an evaluation for this expression.","sig":null,"attributes":[{"value":"/ Create an evaluation for this expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678147,"byte_end":678192,"line_start":866,"line_end":866,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678197,"byte_end":678200,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ The `encoding` is determined by the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678205,"byte_end":678244,"line_start":868,"line_end":868,"column_start":5,"column_end":44}},{"value":"/ [`CompilationUnitHeader`](struct.CompilationUnitHeader.html) or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678249,"byte_end":678316,"line_start":869,"line_end":869,"column_start":5,"column_end":72}},{"value":"/ [`TypeUnitHeader`](struct.TypeUnitHeader.html) that this expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678321,"byte_end":678392,"line_start":870,"line_end":870,"column_start":5,"column_end":76}},{"value":"/ relates to.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678397,"byte_end":678412,"line_start":871,"line_end":871,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678417,"byte_end":678420,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678425,"byte_end":678439,"line_start":873,"line_end":873,"column_start":5,"column_end":19}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678444,"byte_end":678462,"line_start":874,"line_end":874,"column_start":5,"column_end":23}},{"value":"/ use gimli::Expression;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678467,"byte_end":678493,"line_start":875,"line_end":875,"column_start":5,"column_end":31}},{"value":"/ # let endian = gimli::LittleEndian;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678498,"byte_end":678537,"line_start":876,"line_end":876,"column_start":5,"column_end":44}},{"value":"/ # let debug_info = gimli::DebugInfo::from(gimli::EndianSlice::new(&[], endian));","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678542,"byte_end":678626,"line_start":877,"line_end":877,"column_start":5,"column_end":89}},{"value":"/ # let unit = debug_info.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678631,"byte_end":678692,"line_start":878,"line_end":878,"column_start":5,"column_end":66}},{"value":"/ # let bytecode = gimli::EndianSlice::new(&[], endian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678697,"byte_end":678755,"line_start":879,"line_end":879,"column_start":5,"column_end":63}},{"value":"/ let expression = gimli::Expression(bytecode);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678760,"byte_end":678809,"line_start":880,"line_end":880,"column_start":5,"column_end":54}},{"value":"/ let mut eval = expression.evaluation(unit.encoding());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678814,"byte_end":678872,"line_start":881,"line_end":881,"column_start":5,"column_end":63}},{"value":"/ let mut result = eval.evaluate().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678877,"byte_end":678923,"line_start":882,"line_end":882,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678928,"byte_end":678935,"line_start":883,"line_end":883,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678940,"byte_end":678949,"line_start":884,"line_end":884,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":679142,"byte_end":679152,"line_start":890,"line_end":890,"column_start":12,"column_end":22},"name":"operations","qualname":"<Expression<R>>::operations","value":"fn operations(Self, Encoding) -> OperationIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator for the operations in the expression.\n","sig":null,"attributes":[{"value":"/ Return an iterator for the operations in the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":679070,"byte_end":679130,"line_start":889,"line_end":889,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":8451},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":679387,"byte_end":679400,"line_start":900,"line_end":900,"column_start":12,"column_end":25},"name":"OperationIter","qualname":"::read::op::OperationIter","value":"OperationIter {  }","parent":null,"children":[{"krate":0,"index":8453},{"krate":0,"index":8454}],"decl_id":null,"docs":" An iterator for the operations in an expression.\n","sig":null,"attributes":[{"value":"/ An iterator for the operations in an expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":679293,"byte_end":679345,"line_start":898,"line_end":898,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":679551,"byte_end":679555,"line_start":907,"line_end":907,"column_start":12,"column_end":16},"name":"next","qualname":"<OperationIter<R>>::next","value":"fn next(&mut Self) -> Result<Option<Operation<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Read the next operation in an expression.\n","sig":null,"attributes":[{"value":"/ Read the next operation in an expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":679494,"byte_end":679539,"line_start":906,"line_end":906,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":679957,"byte_end":679968,"line_start":921,"line_end":921,"column_start":12,"column_end":23},"name":"offset_from","qualname":"<OperationIter<R>>::offset_from","value":"fn offset_from(&Self, &Expression<R>) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Return the current byte offset of the iterator.\n","sig":null,"attributes":[{"value":"/ Return the current byte offset of the iterator.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":679894,"byte_end":679945,"line_start":920,"line_end":920,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":8463},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":682096,"byte_end":682106,"line_start":972,"line_end":972,"column_start":12,"column_end":22},"name":"Evaluation","qualname":"::read::op::Evaluation","value":"Evaluation {  }","parent":null,"children":[{"krate":0,"index":8465},{"krate":0,"index":8466},{"krate":0,"index":8467},{"krate":0,"index":8468},{"krate":0,"index":8469},{"krate":0,"index":8470},{"krate":0,"index":8471},{"krate":0,"index":8472},{"krate":0,"index":8473},{"krate":0,"index":8474},{"krate":0,"index":8475}],"decl_id":null,"docs":" A DWARF expression evaluator.","sig":null,"attributes":[{"value":"/ A DWARF expression evaluator.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680074,"byte_end":680107,"line_start":926,"line_end":926,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680108,"byte_end":680111,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680112,"byte_end":680123,"line_start":928,"line_end":928,"column_start":1,"column_end":12}},{"value":"/ A DWARF expression may require additional data to produce a final result,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680124,"byte_end":680201,"line_start":929,"line_end":929,"column_start":1,"column_end":78}},{"value":"/ such as the value of a register or a memory location.  Once initial setup","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680202,"byte_end":680279,"line_start":930,"line_end":930,"column_start":1,"column_end":78}},{"value":"/ is complete (i.e. `set_initial_value()`, `set_object_address()`) the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680280,"byte_end":680352,"line_start":931,"line_end":931,"column_start":1,"column_end":73}},{"value":"/ consumer calls the `evaluate()` method.  That returns an `EvaluationResult`,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680353,"byte_end":680433,"line_start":932,"line_end":932,"column_start":1,"column_end":81}},{"value":"/ which is either `EvaluationResult::Complete` or a value indicating what","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680434,"byte_end":680509,"line_start":933,"line_end":933,"column_start":1,"column_end":76}},{"value":"/ data is needed to resume the `Evaluation`.  The consumer is responsible for","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680510,"byte_end":680589,"line_start":934,"line_end":934,"column_start":1,"column_end":80}},{"value":"/ producing that data and resuming the computation with the correct method,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680590,"byte_end":680667,"line_start":935,"line_end":935,"column_start":1,"column_end":78}},{"value":"/ as documented for `EvaluationResult`.  Only once an `EvaluationResult::Complete`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680668,"byte_end":680752,"line_start":936,"line_end":936,"column_start":1,"column_end":85}},{"value":"/ is returned can the consumer call `result()`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680753,"byte_end":680802,"line_start":937,"line_end":937,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680803,"byte_end":680806,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ This design allows the consumer of `Evaluation` to decide how and when to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680807,"byte_end":680884,"line_start":939,"line_end":939,"column_start":1,"column_end":78}},{"value":"/ produce the required data and resume the computation.  The `Evaluation` can","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680885,"byte_end":680964,"line_start":940,"line_end":940,"column_start":1,"column_end":80}},{"value":"/ be driven synchronously (as shown below) or by some asynchronous mechanism","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":680965,"byte_end":681043,"line_start":941,"line_end":941,"column_start":1,"column_end":79}},{"value":"/ such as futures.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681044,"byte_end":681064,"line_start":942,"line_end":942,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681065,"byte_end":681068,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681069,"byte_end":681083,"line_start":944,"line_end":944,"column_start":1,"column_end":15}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681084,"byte_end":681102,"line_start":945,"line_end":945,"column_start":1,"column_end":19}},{"value":"/ use gimli::{EndianSlice, Evaluation, EvaluationResult, Format, LittleEndian, Value};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681103,"byte_end":681191,"line_start":946,"line_end":946,"column_start":1,"column_end":89}},{"value":"/ # let bytecode = EndianSlice::new(&[], LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681192,"byte_end":681249,"line_start":947,"line_end":947,"column_start":1,"column_end":58}},{"value":"/ # let encoding = unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681250,"byte_end":681288,"line_start":948,"line_end":948,"column_start":1,"column_end":39}},{"value":"/ # let get_register_value = |_, _| Value::Generic(42);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681289,"byte_end":681346,"line_start":949,"line_end":949,"column_start":1,"column_end":58}},{"value":"/ # let get_frame_base = || 0xdeadbeef;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681347,"byte_end":681388,"line_start":950,"line_end":950,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681389,"byte_end":681392,"line_start":951,"line_end":951,"column_start":1,"column_end":4}},{"value":"/ let mut eval = Evaluation::new(bytecode, encoding);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681393,"byte_end":681448,"line_start":952,"line_end":952,"column_start":1,"column_end":56}},{"value":"/ let mut result = eval.evaluate().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681449,"byte_end":681495,"line_start":953,"line_end":953,"column_start":1,"column_end":47}},{"value":"/ while result != EvaluationResult::Complete {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681496,"byte_end":681544,"line_start":954,"line_end":954,"column_start":1,"column_end":49}},{"value":"/   match result {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681545,"byte_end":681565,"line_start":955,"line_end":955,"column_start":1,"column_end":21}},{"value":"/     EvaluationResult::RequiresRegister { register, base_type } => {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681566,"byte_end":681637,"line_start":956,"line_end":956,"column_start":1,"column_end":72}},{"value":"/       let value = get_register_value(register, base_type);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681638,"byte_end":681700,"line_start":957,"line_end":957,"column_start":1,"column_end":63}},{"value":"/       result = eval.resume_with_register(value).unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681701,"byte_end":681762,"line_start":958,"line_end":958,"column_start":1,"column_end":62}},{"value":"/     },","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681763,"byte_end":681773,"line_start":959,"line_end":959,"column_start":1,"column_end":11}},{"value":"/     EvaluationResult::RequiresFrameBase => {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681774,"byte_end":681822,"line_start":960,"line_end":960,"column_start":1,"column_end":49}},{"value":"/       let frame_base = get_frame_base();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681823,"byte_end":681867,"line_start":961,"line_end":961,"column_start":1,"column_end":45}},{"value":"/       result = eval.resume_with_frame_base(frame_base).unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681868,"byte_end":681936,"line_start":962,"line_end":962,"column_start":1,"column_end":69}},{"value":"/     },","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681937,"byte_end":681947,"line_start":963,"line_end":963,"column_start":1,"column_end":11}},{"value":"/     _ => unimplemented!(),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681948,"byte_end":681978,"line_start":964,"line_end":964,"column_start":1,"column_end":31}},{"value":"/   };","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681979,"byte_end":681987,"line_start":965,"line_end":965,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681988,"byte_end":681993,"line_start":966,"line_end":966,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681994,"byte_end":681997,"line_start":967,"line_end":967,"column_start":1,"column_end":4}},{"value":"/ let result = eval.result();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":681998,"byte_end":682029,"line_start":968,"line_end":968,"column_start":1,"column_end":32}},{"value":"/ println!(\"{:?}\", result);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":682030,"byte_end":682059,"line_start":969,"line_end":969,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":682060,"byte_end":682067,"line_start":970,"line_end":970,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":683001,"byte_end":683004,"line_start":1003,"line_end":1003,"column_start":12,"column_end":15},"name":"new","qualname":"<Evaluation<R>>::new","value":"fn new(R, Encoding) -> Evaluation<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DWARF expression evaluator.","sig":null,"attributes":[{"value":"/ Create a new DWARF expression evaluator.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":682795,"byte_end":682839,"line_start":999,"line_end":999,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":682844,"byte_end":682847,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ The new evaluator is created without an initial value, without","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":682852,"byte_end":682918,"line_start":1001,"line_end":1001,"column_start":5,"column_end":71}},{"value":"/ an object address, and without a maximum number of iterations.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":682923,"byte_end":682989,"line_start":1002,"line_end":1002,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684154,"byte_end":684171,"line_start":1034,"line_end":1034,"column_start":12,"column_end":29},"name":"set_initial_value","qualname":"<Evaluation<R>>::set_initial_value","value":"fn set_initial_value(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set an initial value to be pushed on the DWARF expression\n evaluator's stack.  This can be used in cases like\n `DW_AT_vtable_elem_location`, which require a value on the\n stack before evaluation commences.  If no initial value is\n set, and the expression uses an opcode requiring the initial\n value, then evaluation will fail with an error.","sig":null,"attributes":[{"value":"/ Set an initial value to be pushed on the DWARF expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":683621,"byte_end":683682,"line_start":1024,"line_end":1024,"column_start":5,"column_end":66}},{"value":"/ evaluator's stack.  This can be used in cases like","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":683687,"byte_end":683741,"line_start":1025,"line_end":1025,"column_start":5,"column_end":59}},{"value":"/ `DW_AT_vtable_elem_location`, which require a value on the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":683746,"byte_end":683808,"line_start":1026,"line_end":1026,"column_start":5,"column_end":67}},{"value":"/ stack before evaluation commences.  If no initial value is","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":683813,"byte_end":683875,"line_start":1027,"line_end":1027,"column_start":5,"column_end":67}},{"value":"/ set, and the expression uses an opcode requiring the initial","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":683880,"byte_end":683944,"line_start":1028,"line_end":1028,"column_start":5,"column_end":69}},{"value":"/ value, then evaluation will fail with an error.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":683949,"byte_end":684000,"line_start":1029,"line_end":1029,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684005,"byte_end":684008,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684013,"byte_end":684025,"line_start":1031,"line_end":1031,"column_start":5,"column_end":17}},{"value":"/ Panics if `set_initial_value()` has already been called, or if","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684030,"byte_end":684096,"line_start":1032,"line_end":1032,"column_start":5,"column_end":71}},{"value":"/ `evaluate()` has already been called.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684101,"byte_end":684142,"line_start":1033,"line_end":1033,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684757,"byte_end":684775,"line_start":1049,"line_end":1049,"column_start":12,"column_end":30},"name":"set_object_address","qualname":"<Evaluation<R>>::set_object_address","value":"fn set_object_address(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the enclosing object's address, as used by\n `DW_OP_push_object_address`.  If no object address is set, and\n the expression uses an opcode requiring the object address,\n then evaluation will fail with an error.\n","sig":null,"attributes":[{"value":"/ Set the enclosing object's address, as used by","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684507,"byte_end":684557,"line_start":1045,"line_end":1045,"column_start":5,"column_end":55}},{"value":"/ `DW_OP_push_object_address`.  If no object address is set, and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684562,"byte_end":684628,"line_start":1046,"line_end":1046,"column_start":5,"column_end":71}},{"value":"/ the expression uses an opcode requiring the object address,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684633,"byte_end":684696,"line_start":1047,"line_end":1047,"column_start":5,"column_end":68}},{"value":"/ then evaluation will fail with an error.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684701,"byte_end":684745,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":685381,"byte_end":685399,"line_start":1062,"line_end":1062,"column_start":12,"column_end":30},"name":"set_max_iterations","qualname":"<Evaluation<R>>::set_max_iterations","value":"fn set_max_iterations(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of iterations to be allowed by the\n expression evaluator.","sig":null,"attributes":[{"value":"/ Set the maximum number of iterations to be allowed by the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684855,"byte_end":684916,"line_start":1053,"line_end":1053,"column_start":5,"column_end":66}},{"value":"/ expression evaluator.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684921,"byte_end":684946,"line_start":1054,"line_end":1054,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684951,"byte_end":684954,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ An iteration corresponds approximately to the evaluation of a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":684959,"byte_end":685024,"line_start":1056,"line_end":1056,"column_start":5,"column_end":70}},{"value":"/ single operation in an expression (\"approximately\" because the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":685029,"byte_end":685095,"line_start":1057,"line_end":1057,"column_start":5,"column_end":71}},{"value":"/ implementation may allow two such operations in some cases).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":685100,"byte_end":685164,"line_start":1058,"line_end":1058,"column_start":5,"column_end":69}},{"value":"/ The default is not to have a maximum; once set, it's not","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":685169,"byte_end":685229,"line_start":1059,"line_end":1059,"column_start":5,"column_end":65}},{"value":"/ possible to go back to this default state.  This value can be","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":685234,"byte_end":685299,"line_start":1060,"line_end":1060,"column_start":5,"column_end":70}},{"value":"/ set to avoid denial of service attacks by bad DWARF bytecode.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":685304,"byte_end":685369,"line_start":1061,"line_end":1061,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":698897,"byte_end":698903,"line_start":1443,"line_end":1443,"column_start":12,"column_end":18},"name":"result","qualname":"<Evaluation<R>>::result","value":"fn result(Self) -> Vec<Piece<R>>","parent":null,"children":[],"decl_id":null,"docs":" Get the result of this `Evaluation`.","sig":null,"attributes":[{"value":"/ Get the result of this `Evaluation`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":698749,"byte_end":698789,"line_start":1439,"line_end":1439,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":698794,"byte_end":698797,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":698802,"byte_end":698814,"line_start":1441,"line_end":1441,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` has not been driven to completion.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":698819,"byte_end":698885,"line_start":1442,"line_end":1442,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":699494,"byte_end":699502,"line_start":1457,"line_end":1457,"column_start":12,"column_end":20},"name":"evaluate","qualname":"<Evaluation<R>>::evaluate","value":"fn evaluate(&mut Self) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate a DWARF expression.  This method should only ever be called\n once.  If the returned `EvaluationResult` is not\n `EvaluationResult::Complete`, the caller should provide the required\n value and resume the evaluation by calling the appropriate resume_with\n method on `Evaluation`.\n","sig":null,"attributes":[{"value":"/ Evaluate a DWARF expression.  This method should only ever be called","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":699165,"byte_end":699237,"line_start":1452,"line_end":1452,"column_start":5,"column_end":77}},{"value":"/ once.  If the returned `EvaluationResult` is not","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":699242,"byte_end":699294,"line_start":1453,"line_end":1453,"column_start":5,"column_end":57}},{"value":"/ `EvaluationResult::Complete`, the caller should provide the required","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":699299,"byte_end":699371,"line_start":1454,"line_end":1454,"column_start":5,"column_end":77}},{"value":"/ value and resume the evaluation by calling the appropriate resume_with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":699376,"byte_end":699450,"line_start":1455,"line_end":1455,"column_start":5,"column_end":79}},{"value":"/ method on `Evaluation`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":699455,"byte_end":699482,"line_start":1456,"line_end":1456,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2002},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":700676,"byte_end":700694,"line_start":1487,"line_end":1487,"column_start":12,"column_end":30},"name":"resume_with_memory","qualname":"<Evaluation<R>>::resume_with_memory","value":"fn resume_with_memory(&mut Self, Value) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided memory `value`.  This will apply\n the provided memory value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided memory `value`.  This will apply","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":700274,"byte_end":700352,"line_start":1480,"line_end":1480,"column_start":5,"column_end":83}},{"value":"/ the provided memory value to the evaluation and continue evaluating","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":700357,"byte_end":700428,"line_start":1481,"line_end":1481,"column_start":5,"column_end":76}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":700433,"byte_end":700506,"line_start":1482,"line_end":1482,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":700511,"byte_end":700538,"line_start":1483,"line_end":1483,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":700543,"byte_end":700546,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":700551,"byte_end":700563,"line_start":1485,"line_end":1485,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresMemory`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":700568,"byte_end":700664,"line_start":1486,"line_end":1486,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":701574,"byte_end":701594,"line_start":1508,"line_end":1508,"column_start":12,"column_end":32},"name":"resume_with_register","qualname":"<Evaluation<R>>::resume_with_register","value":"fn resume_with_register(&mut Self, Value) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `register` value.  This will apply\n the provided register value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `register` value.  This will apply","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":701166,"byte_end":701246,"line_start":1501,"line_end":1501,"column_start":5,"column_end":85}},{"value":"/ the provided register value to the evaluation and continue evaluating","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":701251,"byte_end":701324,"line_start":1502,"line_end":1502,"column_start":5,"column_end":78}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":701329,"byte_end":701402,"line_start":1503,"line_end":1503,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":701407,"byte_end":701434,"line_start":1504,"line_end":1504,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":701439,"byte_end":701442,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":701447,"byte_end":701459,"line_start":1506,"line_end":1506,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresRegister`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":701464,"byte_end":701562,"line_start":1507,"line_end":1507,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":702636,"byte_end":702658,"line_start":1531,"line_end":1531,"column_start":12,"column_end":34},"name":"resume_with_frame_base","qualname":"<Evaluation<R>>::resume_with_frame_base","value":"fn resume_with_frame_base(&mut Self, u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `frame_base`.  This will\n apply the provided frame base value to the evaluation and continue\n evaluating opcodes until the evaluation is completed, reaches an error,\n or needs more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `frame_base`.  This will","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":702229,"byte_end":702299,"line_start":1524,"line_end":1524,"column_start":5,"column_end":75}},{"value":"/ apply the provided frame base value to the evaluation and continue","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":702304,"byte_end":702374,"line_start":1525,"line_end":1525,"column_start":5,"column_end":75}},{"value":"/ evaluating opcodes until the evaluation is completed, reaches an error,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":702379,"byte_end":702454,"line_start":1526,"line_end":1526,"column_start":5,"column_end":80}},{"value":"/ or needs more information again.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":702459,"byte_end":702495,"line_start":1527,"line_end":1527,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":702500,"byte_end":702503,"line_start":1528,"line_end":1528,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":702508,"byte_end":702520,"line_start":1529,"line_end":1529,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresFrameBase`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":702525,"byte_end":702624,"line_start":1530,"line_end":1530,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":703592,"byte_end":703607,"line_start":1552,"line_end":1552,"column_start":12,"column_end":27},"name":"resume_with_tls","qualname":"<Evaluation<R>>::resume_with_tls","value":"fn resume_with_tls(&mut Self, u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `value`.  This will apply\n the provided TLS value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `value`.  This will apply","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":703203,"byte_end":703274,"line_start":1545,"line_end":1545,"column_start":5,"column_end":76}},{"value":"/ the provided TLS value to the evaluation and continue evaluating","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":703279,"byte_end":703347,"line_start":1546,"line_end":1546,"column_start":5,"column_end":73}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":703352,"byte_end":703425,"line_start":1547,"line_end":1547,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":703430,"byte_end":703457,"line_start":1548,"line_end":1548,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":703462,"byte_end":703465,"line_start":1549,"line_end":1549,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":703470,"byte_end":703482,"line_start":1550,"line_end":1550,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresTls`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":703487,"byte_end":703580,"line_start":1551,"line_end":1551,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":704480,"byte_end":704506,"line_start":1573,"line_end":1573,"column_start":12,"column_end":38},"name":"resume_with_call_frame_cfa","qualname":"<Evaluation<R>>::resume_with_call_frame_cfa","value":"fn resume_with_call_frame_cfa(&mut Self, u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `cfa`.  This will\n apply the provided CFA value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `cfa`.  This will","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":704084,"byte_end":704147,"line_start":1566,"line_end":1566,"column_start":5,"column_end":68}},{"value":"/ apply the provided CFA value to the evaluation and continue evaluating","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":704152,"byte_end":704226,"line_start":1567,"line_end":1567,"column_start":5,"column_end":79}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":704231,"byte_end":704304,"line_start":1568,"line_end":1568,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":704309,"byte_end":704336,"line_start":1569,"line_end":1569,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":704341,"byte_end":704344,"line_start":1570,"line_end":1570,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":704349,"byte_end":704361,"line_start":1571,"line_end":1571,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresCallFrameCfa`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":704366,"byte_end":704468,"line_start":1572,"line_end":1572,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":705384,"byte_end":705407,"line_start":1594,"line_end":1594,"column_start":12,"column_end":35},"name":"resume_with_at_location","qualname":"<Evaluation<R>>::resume_with_at_location","value":"fn resume_with_at_location(&mut Self, R) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `bytes`.  This will\n continue processing the evaluation with the new expression provided\n until the evaluation is completed, reaches an error, or needs more\n information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `bytes`.  This will","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":704999,"byte_end":705064,"line_start":1587,"line_end":1587,"column_start":5,"column_end":70}},{"value":"/ continue processing the evaluation with the new expression provided","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":705069,"byte_end":705140,"line_start":1588,"line_end":1588,"column_start":5,"column_end":76}},{"value":"/ until the evaluation is completed, reaches an error, or needs more","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":705145,"byte_end":705215,"line_start":1589,"line_end":1589,"column_start":5,"column_end":75}},{"value":"/ information again.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":705220,"byte_end":705242,"line_start":1590,"line_end":1590,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":705247,"byte_end":705250,"line_start":1591,"line_end":1591,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":705255,"byte_end":705267,"line_start":1592,"line_end":1592,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresAtLocation`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":705272,"byte_end":705372,"line_start":1593,"line_end":1593,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":706546,"byte_end":706569,"line_start":1620,"line_end":1620,"column_start":12,"column_end":35},"name":"resume_with_entry_value","qualname":"<Evaluation<R>>::resume_with_entry_value","value":"fn resume_with_entry_value(&mut Self, Value) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `entry_value`.  This will\n apply the provided entry value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `entry_value`.  This will","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":706142,"byte_end":706213,"line_start":1613,"line_end":1613,"column_start":5,"column_end":76}},{"value":"/ apply the provided entry value to the evaluation and continue evaluating","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":706218,"byte_end":706294,"line_start":1614,"line_end":1614,"column_start":5,"column_end":81}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":706299,"byte_end":706372,"line_start":1615,"line_end":1615,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":706377,"byte_end":706404,"line_start":1616,"line_end":1616,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":706409,"byte_end":706412,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":706417,"byte_end":706429,"line_start":1618,"line_end":1618,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresEntryValue`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":706434,"byte_end":706534,"line_start":1619,"line_end":1619,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":707480,"byte_end":707505,"line_start":1641,"line_end":1641,"column_start":12,"column_end":37},"name":"resume_with_parameter_ref","qualname":"<Evaluation<R>>::resume_with_parameter_ref","value":"fn resume_with_parameter_ref(&mut Self, u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `parameter_value`.  This will\n apply the provided parameter value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `parameter_value`.  This will","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":707066,"byte_end":707141,"line_start":1634,"line_end":1634,"column_start":5,"column_end":80}},{"value":"/ apply the provided parameter value to the evaluation and continue evaluating","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":707146,"byte_end":707226,"line_start":1635,"line_end":1635,"column_start":5,"column_end":85}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":707231,"byte_end":707304,"line_start":1636,"line_end":1636,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":707309,"byte_end":707336,"line_start":1637,"line_end":1637,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":707341,"byte_end":707344,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":707349,"byte_end":707361,"line_start":1639,"line_end":1639,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresParameterRef`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":707366,"byte_end":707468,"line_start":1640,"line_end":1640,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":708499,"byte_end":708528,"line_start":1666,"line_end":1666,"column_start":12,"column_end":41},"name":"resume_with_relocated_address","qualname":"<Evaluation<R>>::resume_with_relocated_address","value":"fn resume_with_relocated_address(&mut Self, u64)\n-> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided relocated `address`.  This will use the\n provided relocated address for the operation that required it, and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided relocated `address`.  This will use the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":708053,"byte_end":708138,"line_start":1658,"line_end":1658,"column_start":5,"column_end":90}},{"value":"/ provided relocated address for the operation that required it, and continue evaluating","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":708143,"byte_end":708233,"line_start":1659,"line_end":1659,"column_start":5,"column_end":95}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":708238,"byte_end":708311,"line_start":1660,"line_end":1660,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":708316,"byte_end":708343,"line_start":1661,"line_end":1661,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":708348,"byte_end":708351,"line_start":1662,"line_end":1662,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":708356,"byte_end":708368,"line_start":1663,"line_end":1663,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":708373,"byte_end":708433,"line_start":1664,"line_end":1664,"column_start":5,"column_end":65}},{"value":"/ `EvaluationResult::RequiresRelocatedAddress`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":708438,"byte_end":708487,"line_start":1665,"line_end":1665,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":709489,"byte_end":709516,"line_start":1688,"line_end":1688,"column_start":12,"column_end":39},"name":"resume_with_indexed_address","qualname":"<Evaluation<R>>::resume_with_indexed_address","value":"fn resume_with_indexed_address(&mut Self, u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided indexed `address`.  This will use the\n provided indexed address for the operation that required it, and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided indexed `address`.  This will use the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":709049,"byte_end":709132,"line_start":1680,"line_end":1680,"column_start":5,"column_end":88}},{"value":"/ provided indexed address for the operation that required it, and continue evaluating","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":709137,"byte_end":709225,"line_start":1681,"line_end":1681,"column_start":5,"column_end":93}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":709230,"byte_end":709303,"line_start":1682,"line_end":1682,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":709308,"byte_end":709335,"line_start":1683,"line_end":1683,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":709340,"byte_end":709343,"line_start":1684,"line_end":1684,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":709348,"byte_end":709360,"line_start":1685,"line_end":1685,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":709365,"byte_end":709425,"line_start":1686,"line_end":1686,"column_start":5,"column_end":65}},{"value":"/ `EvaluationResult::RequiresIndexedAddress`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":709430,"byte_end":709477,"line_start":1687,"line_end":1687,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":710445,"byte_end":710466,"line_start":1709,"line_end":1709,"column_start":12,"column_end":33},"name":"resume_with_base_type","qualname":"<Evaluation<R>>::resume_with_base_type","value":"fn resume_with_base_type(&mut Self, ValueType) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `base_type`.  This will use the\n provided base type for the operation that required it, and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `base_type`.  This will use the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":710031,"byte_end":710108,"line_start":1702,"line_end":1702,"column_start":5,"column_end":82}},{"value":"/ provided base type for the operation that required it, and continue evaluating","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":710113,"byte_end":710195,"line_start":1703,"line_end":1703,"column_start":5,"column_end":87}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":710200,"byte_end":710273,"line_start":1704,"line_end":1704,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":710278,"byte_end":710305,"line_start":1705,"line_end":1705,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":710310,"byte_end":710313,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":710318,"byte_end":710330,"line_start":1707,"line_end":1707,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresBaseType`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":710335,"byte_end":710433,"line_start":1708,"line_end":1708,"column_start":5,"column_end":103}}]},{"kind":"Struct","id":{"krate":0,"index":8479},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":781389,"byte_end":781402,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"PubNamesEntry","qualname":"::read::pubnames::PubNamesEntry","value":"PubNamesEntry {  }","parent":null,"children":[{"krate":0,"index":8481},{"krate":0,"index":8482},{"krate":0,"index":8483}],"decl_id":null,"docs":" A single parsed pubname.\n","sig":null,"attributes":[{"value":"/ A single parsed pubname.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":781325,"byte_end":781353,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":781616,"byte_end":781620,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"name","qualname":"<PubNamesEntry<R>>::name","value":"fn name(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the name this entry refers to.\n","sig":null,"attributes":[{"value":"/ Returns the name this entry refers to.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":781562,"byte_end":781604,"line_start":15,"line_end":15,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":781802,"byte_end":781820,"line_start":22,"line_end":22,"column_start":12,"column_end":30},"name":"unit_header_offset","qualname":"<PubNamesEntry<R>>::unit_header_offset","value":"fn unit_header_offset(&Self) -> DebugInfoOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the .debug_info section for the header of the compilation unit\n which contains this name.\n","sig":null,"attributes":[{"value":"/ Returns the offset into the .debug_info section for the header of the compilation unit","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":781666,"byte_end":781756,"line_start":20,"line_end":20,"column_start":5,"column_end":95}},{"value":"/ which contains this name.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":781761,"byte_end":781790,"line_start":21,"line_end":21,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":782028,"byte_end":782038,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"die_offset","qualname":"<PubNamesEntry<R>>::die_offset","value":"fn die_offset(&Self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the compilation unit for the debugging information entry which\n has this name.\n","sig":null,"attributes":[{"value":"/ Returns the offset into the compilation unit for the debugging information entry which","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":781903,"byte_end":781993,"line_start":26,"line_end":26,"column_start":5,"column_end":95}},{"value":"/ has this name.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":781998,"byte_end":782016,"line_start":27,"line_end":27,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8490},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":782579,"byte_end":782592,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"DebugPubNames","qualname":"::read::pubnames::DebugPubNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `DebugPubNames` struct represents the DWARF public names information\n found in the `.debug_pubnames` section.\n","sig":null,"attributes":[{"value":"/ The `DebugPubNames` struct represents the DWARF public names information","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":782423,"byte_end":782499,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ found in the `.debug_pubnames` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":782500,"byte_end":782543,"line_start":48,"line_end":48,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783370,"byte_end":783373,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugPubNames<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugPubNames` instance from the data in the `.debug_pubnames`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugPubNames` instance from the data in the `.debug_pubnames`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":782758,"byte_end":782841,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":782846,"byte_end":782858,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":782863,"byte_end":782866,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_pubnames` section and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":782871,"byte_end":782950,"line_start":59,"line_end":59,"column_start":5,"column_end":84}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":782955,"byte_end":783025,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783030,"byte_end":783069,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783074,"byte_end":783077,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783082,"byte_end":783089,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugPubNames, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783094,"byte_end":783139,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783144,"byte_end":783147,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783152,"byte_end":783171,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_pubnames_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783176,"byte_end":783232,"line_start":67,"line_end":67,"column_start":5,"column_end":61}},{"value":"/ let debug_pubnames =","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783237,"byte_end":783261,"line_start":68,"line_end":68,"column_start":5,"column_end":29}},{"value":"/     DebugPubNames::new(read_debug_pubnames_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783266,"byte_end":783346,"line_start":69,"line_end":69,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783351,"byte_end":783358,"line_start":70,"line_end":70,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784124,"byte_end":784129,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"items","qualname":"<DebugPubNames<R>>::items","value":"fn items(&Self) -> PubNamesEntryIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the pubnames in the `.debug_pubnames` section.","sig":null,"attributes":[{"value":"/ Iterate the pubnames in the `.debug_pubnames` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783555,"byte_end":783613,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783618,"byte_end":783621,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783626,"byte_end":783633,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugPubNames, EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783638,"byte_end":783696,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783701,"byte_end":783704,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783709,"byte_end":783728,"line_start":82,"line_end":82,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_pubnames_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783733,"byte_end":783789,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/ let debug_pubnames =","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783794,"byte_end":783818,"line_start":84,"line_end":84,"column_start":5,"column_end":29}},{"value":"/     DebugPubNames::new(read_debug_pubnames_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783823,"byte_end":783903,"line_start":85,"line_end":85,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783908,"byte_end":783911,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_pubnames.items();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783916,"byte_end":783958,"line_start":87,"line_end":87,"column_start":5,"column_end":47}},{"value":"/ while let Some(pubname) = iter.next().unwrap() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783963,"byte_end":784015,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/   println!(\"pubname {} found!\", pubname.name().to_string_lossy());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784020,"byte_end":784090,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784095,"byte_end":784100,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784105,"byte_end":784112,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784271,"byte_end":784273,"line_start":98,"line_end":98,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugPubNames<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784338,"byte_end":784344,"line_start":102,"line_end":102,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugPubNames<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784447,"byte_end":784451,"line_start":108,"line_end":108,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugPubNames<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8500},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784759,"byte_end":784776,"line_start":118,"line_end":118,"column_start":12,"column_end":29},"name":"PubNamesEntryIter","qualname":"::read::pubnames::PubNamesEntryIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the pubnames from a `.debug_pubnames` section.","sig":null,"attributes":[{"value":"/ An iterator over the pubnames from a `.debug_pubnames` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784563,"byte_end":784630,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784631,"byte_end":784634,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784635,"byte_end":784656,"line_start":115,"line_end":115,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784657,"byte_end":784723,"line_start":116,"line_end":116,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":785297,"byte_end":785301,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"next","qualname":"<PubNamesEntryIter<R>>::next","value":"fn next(&mut Self) -> Result<Option<PubNamesEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next pubname.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next pubname.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784890,"byte_end":784943,"line_start":121,"line_end":121,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784948,"byte_end":784951,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns the newly parsed pubname as `Ok(Some(pubname))`. Returns","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784956,"byte_end":785024,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` when iteration is complete and all pubnames have already been","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":785029,"byte_end":785105,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ parsed and yielded. If an error occurs while parsing the next pubname,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":785110,"byte_end":785184,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ then this error is returned as `Err(e)`, and all subsequent calls return","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":785189,"byte_end":785265,"line_start":126,"line_end":126,"column_start":5,"column_end":81}},{"value":"/ `Ok(None)`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":785270,"byte_end":785285,"line_start":127,"line_end":127,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":785578,"byte_end":785582,"line_start":138,"line_end":138,"column_start":8,"column_end":12},"name":"next","qualname":"<PubNamesEntryIter<R> as fallible_iterator::FallibleIterator>::next","value":"fn next(&mut Self) -> ::core::result::Result<Option<Self::Item>, Self::Error>","parent":{"krate":25,"index":59},"children":[],"decl_id":{"krate":25,"index":62},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8510},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":785990,"byte_end":786003,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"PubTypesEntry","qualname":"::read::pubtypes::PubTypesEntry","value":"PubTypesEntry {  }","parent":null,"children":[{"krate":0,"index":8512},{"krate":0,"index":8513},{"krate":0,"index":8514}],"decl_id":null,"docs":" A single parsed pubtype.\n","sig":null,"attributes":[{"value":"/ A single parsed pubtype.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":785926,"byte_end":785954,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":786229,"byte_end":786233,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"name","qualname":"<PubTypesEntry<R>>::name","value":"fn name(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the type this entry refers to.\n","sig":null,"attributes":[{"value":"/ Returns the name of the type this entry refers to.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":786163,"byte_end":786217,"line_start":15,"line_end":15,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":786429,"byte_end":786447,"line_start":22,"line_end":22,"column_start":12,"column_end":30},"name":"unit_header_offset","qualname":"<PubTypesEntry<R>>::unit_header_offset","value":"fn unit_header_offset(&Self) -> DebugInfoOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the .debug_info section for the header of the compilation unit\n which contains the type with this name.\n","sig":null,"attributes":[{"value":"/ Returns the offset into the .debug_info section for the header of the compilation unit","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":786279,"byte_end":786369,"line_start":20,"line_end":20,"column_start":5,"column_end":95}},{"value":"/ which contains the type with this name.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":786374,"byte_end":786417,"line_start":21,"line_end":21,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":786665,"byte_end":786675,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"die_offset","qualname":"<PubTypesEntry<R>>::die_offset","value":"fn die_offset(&Self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the compilation unit for the debugging information entry which\n the type with this name.\n","sig":null,"attributes":[{"value":"/ Returns the offset into the compilation unit for the debugging information entry which","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":786530,"byte_end":786620,"line_start":26,"line_end":26,"column_start":5,"column_end":95}},{"value":"/ the type with this name.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":786625,"byte_end":786653,"line_start":27,"line_end":27,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":8521},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787212,"byte_end":787225,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"DebugPubTypes","qualname":"::read::pubtypes::DebugPubTypes","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `DebugPubTypes` struct represents the DWARF public types information\n found in the `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The `DebugPubTypes` struct represents the DWARF public types information","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787060,"byte_end":787136,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ found in the `.debug_info` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787137,"byte_end":787176,"line_start":48,"line_end":48,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787987,"byte_end":787990,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugPubTypes<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugPubTypes` instance from the data in the `.debug_pubtypes`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugPubTypes` instance from the data in the `.debug_pubtypes`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787391,"byte_end":787474,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787479,"byte_end":787491,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787496,"byte_end":787499,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_pubtypes` section and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787504,"byte_end":787583,"line_start":59,"line_end":59,"column_start":5,"column_end":84}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787588,"byte_end":787658,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787663,"byte_end":787702,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787707,"byte_end":787710,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787715,"byte_end":787722,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugPubTypes, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787727,"byte_end":787772,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787777,"byte_end":787780,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787785,"byte_end":787804,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_pubtypes_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787809,"byte_end":787857,"line_start":67,"line_end":67,"column_start":5,"column_end":53}},{"value":"/ let debug_pubtypes =","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787862,"byte_end":787886,"line_start":68,"line_end":68,"column_start":5,"column_end":29}},{"value":"/     DebugPubTypes::new(read_debug_pubtypes_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787891,"byte_end":787963,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787968,"byte_end":787975,"line_start":70,"line_end":70,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788741,"byte_end":788746,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"items","qualname":"<DebugPubTypes<R>>::items","value":"fn items(&Self) -> PubTypesEntryIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the pubtypes in the `.debug_pubtypes` section.","sig":null,"attributes":[{"value":"/ Iterate the pubtypes in the `.debug_pubtypes` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788172,"byte_end":788230,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788235,"byte_end":788238,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788243,"byte_end":788250,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugPubTypes, EndianSlice, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788255,"byte_end":788313,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788318,"byte_end":788321,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788326,"byte_end":788345,"line_start":82,"line_end":82,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_pubtypes_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788350,"byte_end":788406,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/ let debug_pubtypes =","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788411,"byte_end":788435,"line_start":84,"line_end":84,"column_start":5,"column_end":29}},{"value":"/     DebugPubTypes::new(read_debug_pubtypes_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788440,"byte_end":788520,"line_start":85,"line_end":85,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788525,"byte_end":788528,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_pubtypes.items();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788533,"byte_end":788575,"line_start":87,"line_end":87,"column_start":5,"column_end":47}},{"value":"/ while let Some(pubtype) = iter.next().unwrap() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788580,"byte_end":788632,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/   println!(\"pubtype {} found!\", pubtype.name().to_string_lossy());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788637,"byte_end":788707,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788712,"byte_end":788717,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788722,"byte_end":788729,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788888,"byte_end":788890,"line_start":98,"line_end":98,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugPubTypes<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788955,"byte_end":788961,"line_start":102,"line_end":102,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugPubTypes<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789064,"byte_end":789068,"line_start":108,"line_end":108,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugPubTypes<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8531},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789376,"byte_end":789393,"line_start":118,"line_end":118,"column_start":12,"column_end":29},"name":"PubTypesEntryIter","qualname":"::read::pubtypes::PubTypesEntryIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the pubtypes from a `.debug_pubtypes` section.","sig":null,"attributes":[{"value":"/ An iterator over the pubtypes from a `.debug_pubtypes` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789180,"byte_end":789247,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789248,"byte_end":789251,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789252,"byte_end":789273,"line_start":115,"line_end":115,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789274,"byte_end":789340,"line_start":116,"line_end":116,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789914,"byte_end":789918,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"next","qualname":"<PubTypesEntryIter<R>>::next","value":"fn next(&mut Self) -> Result<Option<PubTypesEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next pubtype.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next pubtype.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789507,"byte_end":789560,"line_start":121,"line_end":121,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789565,"byte_end":789568,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns the newly parsed pubtype as `Ok(Some(pubtype))`. Returns","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789573,"byte_end":789641,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` when iteration is complete and all pubtypes have already been","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789646,"byte_end":789722,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ parsed and yielded. If an error occurs while parsing the next pubtype,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789727,"byte_end":789801,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ then this error is returned as `Err(e)`, and all subsequent calls return","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789806,"byte_end":789882,"line_start":126,"line_end":126,"column_start":5,"column_end":81}},{"value":"/ `Ok(None)`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789887,"byte_end":789902,"line_start":127,"line_end":127,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":790195,"byte_end":790199,"line_start":138,"line_end":138,"column_start":8,"column_end":12},"name":"next","qualname":"<PubTypesEntryIter<R> as fallible_iterator::FallibleIterator>::next","value":"fn next(&mut Self) -> ::core::result::Result<Option<Self::Item>, Self::Error>","parent":{"krate":25,"index":59},"children":[],"decl_id":{"krate":25,"index":62},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8541},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":790723,"byte_end":790734,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"DebugRanges","qualname":"::read::rnglists::DebugRanges","value":"DebugRanges {  }","parent":null,"children":[{"krate":0,"index":8543}],"decl_id":null,"docs":" The raw contents of the `.debug_ranges` section.\n","sig":null,"attributes":[{"value":"/ The raw contents of the `.debug_ranges` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":790620,"byte_end":790672,"line_start":11,"line_end":11,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791473,"byte_end":791476,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugRanges<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugRanges` instance from the data in the `.debug_ranges`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugRanges` instance from the data in the `.debug_ranges`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":790867,"byte_end":790946,"line_start":21,"line_end":21,"column_start":5,"column_end":84}},{"value":"/ section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":790951,"byte_end":790963,"line_start":22,"line_end":22,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":790968,"byte_end":790971,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_ranges` section and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":790976,"byte_end":791053,"line_start":24,"line_end":24,"column_start":5,"column_end":82}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791058,"byte_end":791128,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791133,"byte_end":791172,"line_start":26,"line_end":26,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791177,"byte_end":791180,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791185,"byte_end":791192,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugRanges, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791197,"byte_end":791240,"line_start":29,"line_end":29,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791245,"byte_end":791248,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791253,"byte_end":791294,"line_start":31,"line_end":31,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_ranges_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791299,"byte_end":791353,"line_start":32,"line_end":32,"column_start":5,"column_end":59}},{"value":"/ let debug_ranges = DebugRanges::new(read_debug_ranges_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791358,"byte_end":791449,"line_start":33,"line_end":33,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791454,"byte_end":791461,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791636,"byte_end":791638,"line_start":41,"line_end":41,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugRanges<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791701,"byte_end":791707,"line_start":45,"line_end":45,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugRanges<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791798,"byte_end":791802,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugRanges<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8555},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792009,"byte_end":792022,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"DebugRngLists","qualname":"::read::rnglists::DebugRngLists","value":"DebugRngLists {  }","parent":null,"children":[{"krate":0,"index":8557}],"decl_id":null,"docs":" The `DebugRngLists` struct represents the contents of the\n `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ The `DebugRngLists` struct represents the contents of the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791866,"byte_end":791927,"line_start":56,"line_end":56,"column_start":1,"column_end":62}},{"value":"/ `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791928,"byte_end":791958,"line_start":57,"line_end":57,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792780,"byte_end":792783,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugRngLists<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugRngLists` instance from the data in the\n `.debug_rnglists` section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugRngLists` instance from the data in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792146,"byte_end":792211,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792216,"byte_end":792246,"line_start":68,"line_end":68,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792251,"byte_end":792254,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_rnglists`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792259,"byte_end":792326,"line_start":70,"line_end":70,"column_start":5,"column_end":72}},{"value":"/ section and present it as a `&[u8]` slice. That means using some ELF","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792331,"byte_end":792403,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ loader on Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792408,"byte_end":792457,"line_start":72,"line_end":72,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792462,"byte_end":792465,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792470,"byte_end":792477,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugRngLists, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792482,"byte_end":792527,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792532,"byte_end":792535,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792540,"byte_end":792581,"line_start":77,"line_end":77,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_rnglists_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792586,"byte_end":792642,"line_start":78,"line_end":78,"column_start":5,"column_end":61}},{"value":"/ let debug_rnglists =","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792647,"byte_end":792671,"line_start":79,"line_end":79,"column_start":5,"column_end":29}},{"value":"/     DebugRngLists::new(read_debug_rnglists_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792676,"byte_end":792756,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792761,"byte_end":792768,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792945,"byte_end":792947,"line_start":88,"line_end":88,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugRngLists<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":793012,"byte_end":793018,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugRngLists<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":793111,"byte_end":793115,"line_start":98,"line_end":98,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugRngLists<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8577},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":794801,"byte_end":794811,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"RangeLists","qualname":"::read::rnglists::RangeLists","value":"RangeLists {  }","parent":null,"children":[{"krate":0,"index":8579},{"krate":0,"index":8580}],"decl_id":null,"docs":" The DWARF data found in `.debug_ranges` and `.debug_rnglists` sections.\n","sig":null,"attributes":[{"value":"/ The DWARF data found in `.debug_ranges` and `.debug_rnglists` sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":794675,"byte_end":794750,"line_start":161,"line_end":161,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795050,"byte_end":795053,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<RangeLists<R>>::new","value":"fn new(DebugRanges<R>, DebugRngLists<R>) -> RangeLists<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `RangeLists` instance from the data in the `.debug_ranges` and\n `.debug_rnglists` sections.\n","sig":null,"attributes":[{"value":"/ Construct a new `RangeLists` instance from the data in the `.debug_ranges` and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":794920,"byte_end":795002,"line_start":169,"line_end":169,"column_start":5,"column_end":87}},{"value":"/ `.debug_rnglists` sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795007,"byte_end":795038,"line_start":170,"line_end":170,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795883,"byte_end":795889,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"borrow","qualname":"<RangeLists<T>>::borrow","value":"fn borrow<'a, F, R>(&'a Self, F) -> RangeLists<R> where F: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `RangeLists` that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `RangeLists` that references the data in `self`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795259,"byte_end":795320,"line_start":180,"line_end":180,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795325,"byte_end":795328,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795333,"byte_end":795398,"line_start":182,"line_end":182,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795403,"byte_end":795406,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795411,"byte_end":795431,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795436,"byte_end":795439,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795444,"byte_end":795462,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795467,"byte_end":795512,"line_start":187,"line_end":187,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795517,"byte_end":795601,"line_start":188,"line_end":188,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::RangeLists<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795606,"byte_end":795673,"line_start":189,"line_end":189,"column_start":5,"column_end":72}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795678,"byte_end":795725,"line_start":190,"line_end":190,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795730,"byte_end":795780,"line_start":191,"line_end":191,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795785,"byte_end":795847,"line_start":192,"line_end":192,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795852,"byte_end":795859,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795864,"byte_end":795871,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":796709,"byte_end":796715,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"ranges","qualname":"<RangeLists<R>>::ranges","value":"fn ranges(&Self, RangeListsOffset<R::Offset>, Encoding, u64, &DebugAddr<R>,\nDebugAddrBase<R::Offset>) -> Result<RngListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `Range` list entries starting at the given offset.","sig":null,"attributes":[{"value":"/ Iterate over the `Range` list entries starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":796206,"byte_end":796277,"line_start":207,"line_end":207,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":796282,"byte_end":796285,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The `unit_version` and `address_size` must match the compilation unit that the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":796290,"byte_end":796372,"line_start":209,"line_end":209,"column_start":5,"column_end":87}},{"value":"/ offset was contained in.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":796377,"byte_end":796405,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":796410,"byte_end":796413,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ The `base_address` should be obtained from the `DW_AT_low_pc` attribute in the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":796418,"byte_end":796500,"line_start":212,"line_end":212,"column_start":5,"column_end":87}},{"value":"/ `DW_TAG_compile_unit` entry for the compilation unit that contains this range list.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":796505,"byte_end":796592,"line_start":213,"line_end":213,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":796597,"byte_end":796600,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":796605,"byte_end":796626,"line_start":215,"line_end":215,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":796631,"byte_end":796697,"line_start":216,"line_end":216,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":797571,"byte_end":797581,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"raw_ranges","qualname":"<RangeLists<R>>::raw_ranges","value":"fn raw_ranges(&Self, RangeListsOffset<R::Offset>, Encoding)\n-> Result<RawRngListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `RawRngListEntry`ies starting at the given offset.","sig":null,"attributes":[{"value":"/ Iterate over the `RawRngListEntry`ies starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":797148,"byte_end":797219,"line_start":233,"line_end":233,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":797224,"byte_end":797227,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The `unit_encoding` must match the compilation unit that the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":797232,"byte_end":797296,"line_start":235,"line_end":235,"column_start":5,"column_end":69}},{"value":"/ offset was contained in.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":797301,"byte_end":797329,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":797334,"byte_end":797337,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This iterator does not perform any processing of the range entries,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":797342,"byte_end":797413,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ such as handling base addresses.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":797418,"byte_end":797454,"line_start":239,"line_end":239,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":797459,"byte_end":797462,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":797467,"byte_end":797488,"line_start":241,"line_end":241,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":797493,"byte_end":797559,"line_start":242,"line_end":242,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":798434,"byte_end":798444,"line_start":266,"line_end":266,"column_start":12,"column_end":22},"name":"get_offset","qualname":"<RangeLists<R>>::get_offset","value":"fn get_offset(&Self, Encoding, DebugRngListsBase<R::Offset>,\nDebugRngListsIndex<R::Offset>) -> Result<RangeListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `.debug_rnglists` offset at the given `base` and `index`.","sig":null,"attributes":[{"value":"/ Returns the `.debug_rnglists` offset at the given `base` and `index`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":797987,"byte_end":798060,"line_start":257,"line_end":257,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":798065,"byte_end":798068,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ The `base` must be the `DW_AT_rnglists_base` value from the compilation unit DIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":798073,"byte_end":798158,"line_start":259,"line_end":259,"column_start":5,"column_end":90}},{"value":"/ This is an offset that points to the first entry following the header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":798163,"byte_end":798237,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":798242,"byte_end":798245,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The `index` is the value of a `DW_FORM_rnglistx` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":798250,"byte_end":798313,"line_start":262,"line_end":262,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":798318,"byte_end":798321,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The `unit_encoding` must match the compilation unit that the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":798326,"byte_end":798390,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/ index was contained in.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":798395,"byte_end":798422,"line_start":265,"line_end":265,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799085,"byte_end":799101,"line_start":284,"line_end":284,"column_start":12,"column_end":28},"name":"lookup_offset_id","qualname":"<RangeLists<R>>::lookup_offset_id","value":"fn lookup_offset_id(&Self, ReaderOffsetId) -> Option<(SectionId, R::Offset)>","parent":null,"children":[],"decl_id":null,"docs":" Call `Reader::lookup_offset_id` for each section, and return the first match.\n","sig":null,"attributes":[{"value":"/ Call `Reader::lookup_offset_id` for each section, and return the first match.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":798992,"byte_end":799073,"line_start":283,"line_end":283,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":8592},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799488,"byte_end":799502,"line_start":296,"line_end":296,"column_start":12,"column_end":26},"name":"RawRngListIter","qualname":"::read::rnglists::RawRngListIter","value":"RawRngListIter {  }","parent":null,"children":[{"krate":0,"index":8594},{"krate":0,"index":8595}],"decl_id":null,"docs":" A raw iterator over an address range list.","sig":null,"attributes":[{"value":"/ A raw iterator over an address range list.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799300,"byte_end":799346,"line_start":291,"line_end":291,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799347,"byte_end":799350,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ This iterator does not perform any processing of the range entries,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799351,"byte_end":799422,"line_start":293,"line_end":293,"column_start":1,"column_end":72}},{"value":"/ such as handling base addresses.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799423,"byte_end":799459,"line_start":294,"line_end":294,"column_start":1,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":8601},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799691,"byte_end":799710,"line_start":305,"line_end":305,"column_start":5,"column_end":24},"name":"AddressOrOffsetPair","qualname":"::read::rnglists::RawRngListEntry::AddressOrOffsetPair","value":"RawRngListEntry::AddressOrOffsetPair { begin, end }","parent":{"krate":0,"index":8599},"children":[],"decl_id":null,"docs":" A range from DWARF version <= 4.\n","sig":null,"attributes":[{"value":"/ A range from DWARF version <= 4.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799650,"byte_end":799686,"line_start":304,"line_end":304,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":8602},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799781,"byte_end":799786,"line_start":307,"line_end":307,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::rnglists::RawRngListEntry::AddressOrOffsetPair::begin","value":"u64","parent":{"krate":0,"index":8601},"children":[],"decl_id":null,"docs":" Start of range. May be an address or an offset.\n","sig":null,"attributes":[{"value":"/ Start of range. May be an address or an offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799721,"byte_end":799772,"line_start":306,"line_end":306,"column_start":9,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":8603},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799859,"byte_end":799862,"line_start":309,"line_end":309,"column_start":9,"column_end":12},"name":"end","qualname":"::read::rnglists::RawRngListEntry::AddressOrOffsetPair::end","value":"u64","parent":{"krate":0,"index":8601},"children":[],"decl_id":null,"docs":" End of range. May be an address or an offset.\n","sig":null,"attributes":[{"value":"/ End of range. May be an address or an offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799801,"byte_end":799850,"line_start":308,"line_end":308,"column_start":9,"column_end":58}}]},{"kind":"StructVariant","id":{"krate":0,"index":8604},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799908,"byte_end":799919,"line_start":312,"line_end":312,"column_start":5,"column_end":16},"name":"BaseAddress","qualname":"::read::rnglists::RawRngListEntry::BaseAddress","value":"RawRngListEntry::BaseAddress { addr }","parent":{"krate":0,"index":8599},"children":[],"decl_id":null,"docs":" DW_RLE_base_address\n","sig":null,"attributes":[{"value":"/ DW_RLE_base_address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799880,"byte_end":799903,"line_start":311,"line_end":311,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":8605},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799955,"byte_end":799959,"line_start":314,"line_end":314,"column_start":9,"column_end":13},"name":"addr","qualname":"::read::rnglists::RawRngListEntry::BaseAddress::addr","value":"u64","parent":{"krate":0,"index":8604},"children":[],"decl_id":null,"docs":" base address\n","sig":null,"attributes":[{"value":"/ base address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799930,"byte_end":799946,"line_start":313,"line_end":313,"column_start":9,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":8606},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800006,"byte_end":800018,"line_start":317,"line_end":317,"column_start":5,"column_end":17},"name":"BaseAddressx","qualname":"::read::rnglists::RawRngListEntry::BaseAddressx","value":"RawRngListEntry::BaseAddressx { addr }","parent":{"krate":0,"index":8599},"children":[],"decl_id":null,"docs":" DW_RLE_base_addressx\n","sig":null,"attributes":[{"value":"/ DW_RLE_base_addressx","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799977,"byte_end":800001,"line_start":316,"line_end":316,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":8607},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800054,"byte_end":800058,"line_start":319,"line_end":319,"column_start":9,"column_end":13},"name":"addr","qualname":"::read::rnglists::RawRngListEntry::BaseAddressx::addr","value":"common::DebugAddrIndex<T>","parent":{"krate":0,"index":8606},"children":[],"decl_id":null,"docs":" base address\n","sig":null,"attributes":[{"value":"/ base address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800029,"byte_end":800045,"line_start":318,"line_end":318,"column_start":9,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":8608},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800117,"byte_end":800127,"line_start":322,"line_end":322,"column_start":5,"column_end":15},"name":"StartxEndx","qualname":"::read::rnglists::RawRngListEntry::StartxEndx","value":"RawRngListEntry::StartxEndx { begin, end }","parent":{"krate":0,"index":8599},"children":[],"decl_id":null,"docs":" DW_RLE_startx_endx\n","sig":null,"attributes":[{"value":"/ DW_RLE_startx_endx","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800090,"byte_end":800112,"line_start":321,"line_end":321,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":8609},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800165,"byte_end":800170,"line_start":324,"line_end":324,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::rnglists::RawRngListEntry::StartxEndx::begin","value":"common::DebugAddrIndex<T>","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":" start of range\n","sig":null,"attributes":[{"value":"/ start of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800138,"byte_end":800156,"line_start":323,"line_end":323,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":8610},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800224,"byte_end":800227,"line_start":326,"line_end":326,"column_start":9,"column_end":12},"name":"end","qualname":"::read::rnglists::RawRngListEntry::StartxEndx::end","value":"common::DebugAddrIndex<T>","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":" end of range\n","sig":null,"attributes":[{"value":"/ end of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800199,"byte_end":800215,"line_start":325,"line_end":325,"column_start":9,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":8611},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800288,"byte_end":800300,"line_start":329,"line_end":329,"column_start":5,"column_end":17},"name":"StartxLength","qualname":"::read::rnglists::RawRngListEntry::StartxLength","value":"RawRngListEntry::StartxLength { begin, length }","parent":{"krate":0,"index":8599},"children":[],"decl_id":null,"docs":" DW_RLE_startx_length\n","sig":null,"attributes":[{"value":"/ DW_RLE_startx_length","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800259,"byte_end":800283,"line_start":328,"line_end":328,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":8612},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800338,"byte_end":800343,"line_start":331,"line_end":331,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::rnglists::RawRngListEntry::StartxLength::begin","value":"common::DebugAddrIndex<T>","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":" start of range\n","sig":null,"attributes":[{"value":"/ start of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800311,"byte_end":800329,"line_start":330,"line_end":330,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":8613},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800400,"byte_end":800406,"line_start":333,"line_end":333,"column_start":9,"column_end":15},"name":"length","qualname":"::read::rnglists::RawRngListEntry::StartxLength::length","value":"u64","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":" length of range\n","sig":null,"attributes":[{"value":"/ length of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800372,"byte_end":800391,"line_start":332,"line_end":332,"column_start":9,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":8614},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800451,"byte_end":800461,"line_start":336,"line_end":336,"column_start":5,"column_end":15},"name":"OffsetPair","qualname":"::read::rnglists::RawRngListEntry::OffsetPair","value":"RawRngListEntry::OffsetPair { begin, end }","parent":{"krate":0,"index":8599},"children":[],"decl_id":null,"docs":" DW_RLE_offset_pair\n","sig":null,"attributes":[{"value":"/ DW_RLE_offset_pair","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800424,"byte_end":800446,"line_start":335,"line_end":335,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":8615},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800499,"byte_end":800504,"line_start":338,"line_end":338,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::rnglists::RawRngListEntry::OffsetPair::begin","value":"u64","parent":{"krate":0,"index":8614},"children":[],"decl_id":null,"docs":" start of range\n","sig":null,"attributes":[{"value":"/ start of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800472,"byte_end":800490,"line_start":337,"line_end":337,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":8616},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800544,"byte_end":800547,"line_start":340,"line_end":340,"column_start":9,"column_end":12},"name":"end","qualname":"::read::rnglists::RawRngListEntry::OffsetPair::end","value":"u64","parent":{"krate":0,"index":8614},"children":[],"decl_id":null,"docs":" end of range\n","sig":null,"attributes":[{"value":"/ end of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800519,"byte_end":800535,"line_start":339,"line_end":339,"column_start":9,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":8617},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800590,"byte_end":800598,"line_start":343,"line_end":343,"column_start":5,"column_end":13},"name":"StartEnd","qualname":"::read::rnglists::RawRngListEntry::StartEnd","value":"RawRngListEntry::StartEnd { begin, end }","parent":{"krate":0,"index":8599},"children":[],"decl_id":null,"docs":" DW_RLE_start_end\n","sig":null,"attributes":[{"value":"/ DW_RLE_start_end","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800565,"byte_end":800585,"line_start":342,"line_end":342,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":8618},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800636,"byte_end":800641,"line_start":345,"line_end":345,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::rnglists::RawRngListEntry::StartEnd::begin","value":"u64","parent":{"krate":0,"index":8617},"children":[],"decl_id":null,"docs":" start of range\n","sig":null,"attributes":[{"value":"/ start of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800609,"byte_end":800627,"line_start":344,"line_end":344,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":8619},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800681,"byte_end":800684,"line_start":347,"line_end":347,"column_start":9,"column_end":12},"name":"end","qualname":"::read::rnglists::RawRngListEntry::StartEnd::end","value":"u64","parent":{"krate":0,"index":8617},"children":[],"decl_id":null,"docs":" end of range\n","sig":null,"attributes":[{"value":"/ end of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800656,"byte_end":800672,"line_start":346,"line_end":346,"column_start":9,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":8620},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800730,"byte_end":800741,"line_start":350,"line_end":350,"column_start":5,"column_end":16},"name":"StartLength","qualname":"::read::rnglists::RawRngListEntry::StartLength","value":"RawRngListEntry::StartLength { begin, length }","parent":{"krate":0,"index":8599},"children":[],"decl_id":null,"docs":" DW_RLE_start_length\n","sig":null,"attributes":[{"value":"/ DW_RLE_start_length","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800702,"byte_end":800725,"line_start":349,"line_end":349,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":8621},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800779,"byte_end":800784,"line_start":352,"line_end":352,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::rnglists::RawRngListEntry::StartLength::begin","value":"u64","parent":{"krate":0,"index":8620},"children":[],"decl_id":null,"docs":" start of range\n","sig":null,"attributes":[{"value":"/ start of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800752,"byte_end":800770,"line_start":351,"line_end":351,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":8622},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800827,"byte_end":800833,"line_start":354,"line_end":354,"column_start":9,"column_end":15},"name":"length","qualname":"::read::rnglists::RawRngListEntry::StartLength::length","value":"u64","parent":{"krate":0,"index":8620},"children":[],"decl_id":null,"docs":" length of range\n","sig":null,"attributes":[{"value":"/ length of range","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800799,"byte_end":800818,"line_start":353,"line_end":353,"column_start":9,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":8599},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799625,"byte_end":799640,"line_start":303,"line_end":303,"column_start":10,"column_end":25},"name":"RawRngListEntry","qualname":"::read::rnglists::RawRngListEntry","value":"enum RawRngListEntry<T> {\n    AddressOrOffsetPair {\n            begin: u64,\n            end: u64,\n        },\n    BaseAddress {\n            addr: u64,\n        },\n    BaseAddressx {\n            addr: DebugAddrIndex<T>,\n        },\n    StartxEndx {\n            begin: DebugAddrIndex<T>,\n            end: DebugAddrIndex<T>,\n        },\n    StartxLength {\n            begin: DebugAddrIndex<T>,\n            length: u64,\n        },\n    OffsetPair {\n            begin: u64,\n            end: u64,\n        },\n    StartEnd {\n            begin: u64,\n            end: u64,\n        },\n    StartLength {\n            begin: u64,\n            length: u64,\n        },\n}","parent":null,"children":[{"krate":0,"index":8601},{"krate":0,"index":8604},{"krate":0,"index":8606},{"krate":0,"index":8608},{"krate":0,"index":8611},{"krate":0,"index":8614},{"krate":0,"index":8617},{"krate":0,"index":8620}],"decl_id":null,"docs":" A raw entry in .debug_rnglists\n","sig":null,"attributes":[{"value":"/ A raw entry in .debug_rnglists","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":799557,"byte_end":799591,"line_start":301,"line_end":301,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":803507,"byte_end":803511,"line_start":416,"line_end":416,"column_start":12,"column_end":16},"name":"next","qualname":"<RawRngListIter<R>>::next","value":"fn next(&mut Self) -> Result<Option<RawRngListEntry<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next range.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":803452,"byte_end":803495,"line_start":415,"line_end":415,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":804185,"byte_end":804189,"line_start":441,"line_end":441,"column_start":8,"column_end":12},"name":"next","qualname":"<RawRngListIter<R> as fallible_iterator::FallibleIterator>::next","value":"fn next(&mut Self) -> ::core::result::Result<Option<Self::Item>, Self::Error>","parent":{"krate":25,"index":59},"children":[],"decl_id":{"krate":25,"index":62},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8629},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":804578,"byte_end":804589,"line_start":452,"line_end":452,"column_start":12,"column_end":23},"name":"RngListIter","qualname":"::read::rnglists::RngListIter","value":"RngListIter {  }","parent":null,"children":[{"krate":0,"index":8631},{"krate":0,"index":8632},{"krate":0,"index":8633},{"krate":0,"index":8634}],"decl_id":null,"docs":" An iterator over an address range list.","sig":null,"attributes":[{"value":"/ An iterator over an address range list.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":804306,"byte_end":804349,"line_start":446,"line_end":446,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":804350,"byte_end":804353,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ This iterator internally handles processing of base addresses and different","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":804354,"byte_end":804433,"line_start":448,"line_end":448,"column_start":1,"column_end":80}},{"value":"/ entry types.  Thus, it only returns range entries that are valid","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":804434,"byte_end":804502,"line_start":449,"line_end":449,"column_start":1,"column_end":69}},{"value":"/ and already adjusted for the base address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":804503,"byte_end":804549,"line_start":450,"line_end":450,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":805386,"byte_end":805390,"line_start":482,"line_end":482,"column_start":12,"column_end":16},"name":"next","qualname":"<RngListIter<R>>::next","value":"fn next(&mut Self) -> Result<Option<Range>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next range.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":805331,"byte_end":805374,"line_start":481,"line_end":481,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":807390,"byte_end":807394,"line_start":536,"line_end":536,"column_start":8,"column_end":12},"name":"next","qualname":"<RngListIter<R> as fallible_iterator::FallibleIterator>::next","value":"fn next(&mut Self) -> ::core::result::Result<Option<Self::Item>, Self::Error>","parent":{"krate":25,"index":59},"children":[],"decl_id":{"krate":25,"index":62},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8656},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":808862,"byte_end":808867,"line_start":582,"line_end":582,"column_start":12,"column_end":17},"name":"Range","qualname":"::read::rnglists::Range","value":"Range { begin, end }","parent":null,"children":[{"krate":0,"index":8657},{"krate":0,"index":8658}],"decl_id":null,"docs":" An address range from the `.debug_ranges` or `.debug_rnglists` sections.\n","sig":null,"attributes":[{"value":"/ An address range from the `.debug_ranges` or `.debug_rnglists` sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":808723,"byte_end":808799,"line_start":580,"line_end":580,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":8657},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":808922,"byte_end":808927,"line_start":584,"line_end":584,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::rnglists::Range::begin","value":"u64","parent":{"krate":0,"index":8656},"children":[],"decl_id":null,"docs":" The beginning address of the range.\n","sig":null,"attributes":[{"value":"/ The beginning address of the range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":808874,"byte_end":808913,"line_start":583,"line_end":583,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":8658},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":808996,"byte_end":808999,"line_start":587,"line_end":587,"column_start":9,"column_end":12},"name":"end","qualname":"::read::rnglists::Range::end","value":"u64","parent":{"krate":0,"index":8656},"children":[],"decl_id":null,"docs":" The first address past the end of the range.\n","sig":null,"attributes":[{"value":"/ The first address past the end of the range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":808939,"byte_end":808987,"line_start":586,"line_end":586,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":8674},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832255,"byte_end":832263,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"DebugStr","qualname":"::read::str::DebugStr","value":"DebugStr {  }","parent":null,"children":[{"krate":0,"index":8676}],"decl_id":null,"docs":" The `DebugStr` struct represents the DWARF strings\n found in the `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ The `DebugStr` struct represents the DWARF strings","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832111,"byte_end":832165,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/ found in the `.debug_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832166,"byte_end":832204,"line_start":9,"line_end":9,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832974,"byte_end":832977,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugStr<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugStr` instance from the data in the `.debug_str`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugStr` instance from the data in the `.debug_str`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832392,"byte_end":832465,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832470,"byte_end":832482,"line_start":20,"line_end":20,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832487,"byte_end":832490,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_str` section and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832495,"byte_end":832569,"line_start":22,"line_end":22,"column_start":5,"column_end":79}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832574,"byte_end":832644,"line_start":23,"line_end":23,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832649,"byte_end":832688,"line_start":24,"line_end":24,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832693,"byte_end":832696,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832701,"byte_end":832708,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugStr, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832713,"byte_end":832753,"line_start":27,"line_end":27,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832758,"byte_end":832761,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832766,"byte_end":832807,"line_start":29,"line_end":29,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_str_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832812,"byte_end":832863,"line_start":30,"line_end":30,"column_start":5,"column_end":56}},{"value":"/ let debug_str = DebugStr::new(read_debug_str_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832868,"byte_end":832950,"line_start":31,"line_end":31,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832955,"byte_end":832962,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833688,"byte_end":833695,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_str","qualname":"<DebugStr<R>>::get_str","value":"fn get_str(&Self, DebugStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Lookup a string from the `.debug_str` section by DebugStrOffset.","sig":null,"attributes":[{"value":"/ Lookup a string from the `.debug_str` section by DebugStrOffset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833144,"byte_end":833212,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833217,"byte_end":833220,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833225,"byte_end":833232,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugStr, DebugStrOffset, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833237,"byte_end":833293,"line_start":42,"line_end":42,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833298,"byte_end":833301,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x01, 0x02, 0x00];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833306,"byte_end":833341,"line_start":44,"line_end":44,"column_start":5,"column_end":40}},{"value":"/ # let offset = DebugStrOffset(0);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833346,"byte_end":833383,"line_start":45,"line_end":45,"column_start":5,"column_end":42}},{"value":"/ # let read_debug_str_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833388,"byte_end":833439,"line_start":46,"line_end":46,"column_start":5,"column_end":56}},{"value":"/ # let debug_str_offset_somehow = || offset;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833444,"byte_end":833491,"line_start":47,"line_end":47,"column_start":5,"column_end":52}},{"value":"/ let debug_str = DebugStr::new(read_debug_str_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833496,"byte_end":833578,"line_start":48,"line_end":48,"column_start":5,"column_end":87}},{"value":"/ println!(\"Found string {:?}\", debug_str.get_str(debug_str_offset_somehow()));","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833583,"byte_end":833664,"line_start":49,"line_end":49,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833669,"byte_end":833676,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834547,"byte_end":834553,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugStr<T>>::borrow","value":"fn borrow<'a, F, R>(&'a Self, F) -> DebugStr<R> where F: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugStr` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugStr` section that references the data in `self`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833919,"byte_end":833986,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833991,"byte_end":833994,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833999,"byte_end":834064,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834069,"byte_end":834072,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834077,"byte_end":834097,"line_start":63,"line_end":63,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834102,"byte_end":834105,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834110,"byte_end":834128,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834133,"byte_end":834178,"line_start":66,"line_end":66,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834183,"byte_end":834267,"line_start":67,"line_end":67,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugStr<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834272,"byte_end":834337,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834342,"byte_end":834389,"line_start":69,"line_end":69,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834394,"byte_end":834444,"line_start":70,"line_end":70,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834449,"byte_end":834511,"line_start":71,"line_end":71,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834516,"byte_end":834523,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834528,"byte_end":834535,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834750,"byte_end":834752,"line_start":83,"line_end":83,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugStr<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834812,"byte_end":834818,"line_start":87,"line_end":87,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugStr<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834916,"byte_end":834920,"line_start":93,"line_end":93,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugStr<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8688},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835109,"byte_end":835124,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"DebugStrOffsets","qualname":"::read::str::DebugStrOffsets","value":"DebugStrOffsets {  }","parent":null,"children":[{"krate":0,"index":8690}],"decl_id":null,"docs":" The raw contents of the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ The raw contents of the `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835001,"byte_end":835058,"line_start":98,"line_end":98,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836077,"byte_end":836091,"line_start":121,"line_end":121,"column_start":12,"column_end":26},"name":"get_str_offset","qualname":"<DebugStrOffsets<R>>::get_str_offset","value":"fn get_str_offset(&Self, Format, DebugStrOffsetsBase<R::Offset>,\nDebugStrOffsetsIndex<R::Offset>) -> Result<DebugStrOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `.debug_str` offset at the given `base` and `index`.","sig":null,"attributes":[{"value":"/ Returns the `.debug_str` offset at the given `base` and `index`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835327,"byte_end":835395,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835400,"byte_end":835403,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ A set of entries in the `.debug_str_offsets` section consists of a header","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835408,"byte_end":835485,"line_start":110,"line_end":110,"column_start":5,"column_end":82}},{"value":"/ followed by a series of string table offsets.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835490,"byte_end":835539,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835544,"byte_end":835547,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The `base` must be the `DW_AT_str_offsets_base` value from the compilation unit DIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835552,"byte_end":835640,"line_start":113,"line_end":113,"column_start":5,"column_end":93}},{"value":"/ This is an offset that points to the first entry following the header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835645,"byte_end":835719,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835724,"byte_end":835727,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The `index` is the value of a `DW_FORM_strx` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835732,"byte_end":835791,"line_start":116,"line_end":116,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835796,"byte_end":835799,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The `format` must be the DWARF format of the compilation unit. This format must","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835804,"byte_end":835887,"line_start":118,"line_end":118,"column_start":5,"column_end":88}},{"value":"/ match the header. However, note that we do not parse the header to validate this,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835892,"byte_end":835977,"line_start":119,"line_end":119,"column_start":5,"column_end":90}},{"value":"/ since locating the header is unreliable, and the GNU extensions do not emit it.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835982,"byte_end":836065,"line_start":120,"line_end":120,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837203,"byte_end":837209,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugStrOffsets<T>>::borrow","value":"fn borrow<'a, F, R>(&'a Self, F) -> DebugStrOffsets<R> where F: FnMut(&'a T)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugStrOffsets` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugStrOffsets` section that references the data in `self`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836561,"byte_end":836635,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836640,"byte_end":836643,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836648,"byte_end":836713,"line_start":139,"line_end":139,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836718,"byte_end":836721,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836726,"byte_end":836746,"line_start":141,"line_end":141,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836751,"byte_end":836754,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836759,"byte_end":836777,"line_start":143,"line_end":143,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836782,"byte_end":836827,"line_start":144,"line_end":144,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836832,"byte_end":836916,"line_start":145,"line_end":145,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugStrOffsets<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836921,"byte_end":836993,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836998,"byte_end":837045,"line_start":147,"line_end":147,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837050,"byte_end":837100,"line_start":148,"line_end":148,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837105,"byte_end":837167,"line_start":149,"line_end":149,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837172,"byte_end":837179,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837184,"byte_end":837191,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837410,"byte_end":837412,"line_start":161,"line_end":161,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugStrOffsets<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837479,"byte_end":837485,"line_start":165,"line_end":165,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugStrOffsets<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837580,"byte_end":837584,"line_start":171,"line_end":171,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugStrOffsets<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8702},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837805,"byte_end":837817,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"DebugLineStr","qualname":"::read::str::DebugLineStr","value":"DebugLineStr {  }","parent":null,"children":[{"krate":0,"index":8704}],"decl_id":null,"docs":" The `DebugLineStr` struct represents the DWARF strings\n found in the `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ The `DebugLineStr` struct represents the DWARF strings","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837652,"byte_end":837710,"line_start":176,"line_end":176,"column_start":1,"column_end":59}},{"value":"/ found in the `.debug_line_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837711,"byte_end":837754,"line_start":177,"line_end":177,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837969,"byte_end":837976,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"get_str","qualname":"<DebugLineStr<R>>::get_str","value":"fn get_str(&Self, DebugLineStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Lookup a string from the `.debug_line_str` section by DebugLineStrOffset.\n","sig":null,"attributes":[{"value":"/ Lookup a string from the `.debug_line_str` section by DebugLineStrOffset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837880,"byte_end":837957,"line_start":184,"line_end":184,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2371},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838834,"byte_end":838840,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugLineStr<T>>::borrow","value":"fn borrow<'a, F, R>(&'a Self, F) -> DebugLineStr<R> where F: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugLineStr` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugLineStr` section that references the data in `self`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838198,"byte_end":838269,"line_start":193,"line_end":193,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838274,"byte_end":838277,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838282,"byte_end":838347,"line_start":195,"line_end":195,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838352,"byte_end":838355,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838360,"byte_end":838380,"line_start":197,"line_end":197,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838385,"byte_end":838388,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838393,"byte_end":838411,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838416,"byte_end":838461,"line_start":200,"line_end":200,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838466,"byte_end":838550,"line_start":201,"line_end":201,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugLineStr<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838555,"byte_end":838624,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838629,"byte_end":838676,"line_start":203,"line_end":203,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838681,"byte_end":838731,"line_start":204,"line_end":204,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838736,"byte_end":838798,"line_start":205,"line_end":205,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838803,"byte_end":838810,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838815,"byte_end":838822,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2377},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":839035,"byte_end":839037,"line_start":217,"line_end":217,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugLineStr<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2378},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":839101,"byte_end":839107,"line_start":221,"line_end":221,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugLineStr<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":839199,"byte_end":839203,"line_start":227,"line_end":227,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugLineStr<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":841869,"byte_end":841883,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"to_unit_offset","qualname":"<DebugTypesOffset<T>>::to_unit_offset","value":"fn to_unit_offset<R>(&Self, &TypeUnitHeader<R>) -> Option<UnitOffset<T>> where\nR: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the given unit,\n instead of relative to the start of the .debug_types section.\n Returns `None` if the offset is not within the unit entries.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the given unit,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":841650,"byte_end":841718,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/ instead of relative to the start of the .debug_types section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":841723,"byte_end":841788,"line_start":23,"line_end":23,"column_start":5,"column_end":70}},{"value":"/ Returns `None` if the offset is not within the unit entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":841793,"byte_end":841857,"line_start":24,"line_end":24,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":842528,"byte_end":842542,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"to_unit_offset","qualname":"<DebugInfoOffset<T>>::to_unit_offset","value":"fn to_unit_offset<R>(&Self, &CompilationUnitHeader<R>)\n-> Option<UnitOffset<T>> where R: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the given unit,\n instead of relative to the start of the .debug_info section.\n Returns `None` if the offset is not within this unit entries.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the given unit,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":842309,"byte_end":842377,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/ instead of relative to the start of the .debug_info section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":842382,"byte_end":842446,"line_start":42,"line_end":42,"column_start":5,"column_end":69}},{"value":"/ Returns `None` if the offset is not within this unit entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":842451,"byte_end":842516,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":8716},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":843064,"byte_end":843074,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"UnitOffset","qualname":"::read::unit::UnitOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the current compilation or type unit.\n","sig":null,"attributes":[{"value":"/ An offset into the current compilation or type unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":842928,"byte_end":842984,"line_start":59,"line_end":59,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":8719},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":843086,"byte_end":843091,"line_start":61,"line_end":61,"column_start":34,"column_end":39},"name":"0","qualname":"::read::unit::UnitOffset::0","value":"T","parent":{"krate":0,"index":8716},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":843298,"byte_end":843318,"line_start":66,"line_end":66,"column_start":12,"column_end":32},"name":"to_debug_info_offset","qualname":"<UnitOffset<T>>::to_debug_info_offset","value":"fn to_debug_info_offset<R>(&Self, &CompilationUnitHeader<R>)\n-> DebugInfoOffset<T> where R: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the .debug_info section,\n instead of relative to the start of the given compilation unit.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the .debug_info section,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":843137,"byte_end":843214,"line_start":64,"line_end":64,"column_start":5,"column_end":82}},{"value":"/ instead of relative to the start of the given compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":843219,"byte_end":843286,"line_start":65,"line_end":65,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":843645,"byte_end":843666,"line_start":75,"line_end":75,"column_start":12,"column_end":33},"name":"to_debug_types_offset","qualname":"<UnitOffset<T>>::to_debug_types_offset","value":"fn to_debug_types_offset<R>(&Self, &TypeUnitHeader<R>) -> DebugTypesOffset<T>\nwhere R: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the .debug_types section,\n instead of relative to the start of the given type unit.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the .debug_types section,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":843490,"byte_end":843568,"line_start":73,"line_end":73,"column_start":5,"column_end":83}},{"value":"/ instead of relative to the start of the given type unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":843573,"byte_end":843633,"line_start":74,"line_end":74,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":8749},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":843991,"byte_end":844000,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"DebugInfo","qualname":"::read::unit::DebugInfo","value":"DebugInfo {  }","parent":null,"children":[{"krate":0,"index":8751}],"decl_id":null,"docs":" The `DebugInfo` struct represents the DWARF debugging information found in\n the `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The `DebugInfo` struct represents the DWARF debugging information found in","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":843831,"byte_end":843909,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ the `.debug_info` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":843910,"byte_end":843940,"line_start":84,"line_end":84,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844721,"byte_end":844724,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugInfo<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugInfo` instance from the data in the `.debug_info`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugInfo` instance from the data in the `.debug_info`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844131,"byte_end":844206,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844211,"byte_end":844223,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844228,"byte_end":844231,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_info` section and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844236,"byte_end":844311,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844316,"byte_end":844386,"line_start":98,"line_end":98,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844391,"byte_end":844430,"line_start":99,"line_end":99,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844435,"byte_end":844438,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844443,"byte_end":844450,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugInfo, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844455,"byte_end":844496,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844501,"byte_end":844504,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844509,"byte_end":844550,"line_start":104,"line_end":104,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_info_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844555,"byte_end":844607,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"/ let debug_info = DebugInfo::new(read_debug_info_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844612,"byte_end":844697,"line_start":106,"line_end":106,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844702,"byte_end":844709,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845533,"byte_end":845538,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"units","qualname":"<DebugInfo<R>>::units","value":"fn units(&Self) -> CompilationUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the compilation- and partial-units in this\n `.debug_info` section.","sig":null,"attributes":[{"value":"/ Iterate the compilation- and partial-units in this","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844894,"byte_end":844948,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/ `.debug_info` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844953,"byte_end":844979,"line_start":115,"line_end":115,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844984,"byte_end":844987,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844992,"byte_end":844999,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugInfo, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845004,"byte_end":845045,"line_start":118,"line_end":118,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845050,"byte_end":845053,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845058,"byte_end":845077,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_info_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845082,"byte_end":845134,"line_start":121,"line_end":121,"column_start":5,"column_end":57}},{"value":"/ let debug_info = DebugInfo::new(read_debug_info_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845139,"byte_end":845224,"line_start":122,"line_end":122,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845229,"byte_end":845232,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_info.units();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845237,"byte_end":845275,"line_start":124,"line_end":124,"column_start":5,"column_end":43}},{"value":"/ while let Some(unit) = iter.next().unwrap() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845280,"byte_end":845329,"line_start":125,"line_end":125,"column_start":5,"column_end":54}},{"value":"/     println!(\"unit's length is {}\", unit.unit_length());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845334,"byte_end":845394,"line_start":126,"line_end":126,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845399,"byte_end":845404,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845409,"byte_end":845416,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845421,"byte_end":845424,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845429,"byte_end":845450,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845455,"byte_end":845521,"line_start":131,"line_end":131,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845861,"byte_end":845879,"line_start":142,"line_end":142,"column_start":12,"column_end":30},"name":"header_from_offset","qualname":"<DebugInfo<R>>::header_from_offset","value":"fn header_from_offset(&Self, DebugInfoOffset<R::Offset>)\n-> Result<CompilationUnitHeader<R>>","parent":null,"children":[],"decl_id":null,"docs":" Get the CompilationUnitHeader located at offset from this .debug_info section.","sig":null,"attributes":[{"value":"/ Get the CompilationUnitHeader located at offset from this .debug_info section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845751,"byte_end":845833,"line_start":139,"line_end":139,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845838,"byte_end":845841,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":845846,"byte_end":845849,"line_start":141,"line_end":141,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846791,"byte_end":846797,"line_start":168,"line_end":168,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugInfo<T>>::borrow","value":"fn borrow<'a, F, R>(&'a Self, F) -> DebugInfo<R> where F: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugInfo` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugInfo` section that references the data in `self`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846161,"byte_end":846229,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846234,"byte_end":846237,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846242,"byte_end":846307,"line_start":155,"line_end":155,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846312,"byte_end":846315,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846320,"byte_end":846340,"line_start":157,"line_end":157,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846345,"byte_end":846348,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846353,"byte_end":846371,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846376,"byte_end":846421,"line_start":160,"line_end":160,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846426,"byte_end":846510,"line_start":161,"line_end":161,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugInfo<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846515,"byte_end":846581,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846586,"byte_end":846633,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846638,"byte_end":846688,"line_start":164,"line_end":164,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846693,"byte_end":846755,"line_start":165,"line_end":165,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846760,"byte_end":846767,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846772,"byte_end":846779,"line_start":167,"line_end":167,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846997,"byte_end":846999,"line_start":177,"line_end":177,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugInfo<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":847060,"byte_end":847066,"line_start":181,"line_end":181,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugInfo<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":847166,"byte_end":847170,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugInfo<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8763},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":847472,"byte_end":847498,"line_start":197,"line_end":197,"column_start":12,"column_end":38},"name":"CompilationUnitHeadersIter","qualname":"::read::unit::CompilationUnitHeadersIter","value":"CompilationUnitHeadersIter {  }","parent":null,"children":[{"krate":0,"index":8765},{"krate":0,"index":8766}],"decl_id":null,"docs":" An iterator over the compilation- and partial-units of a section.","sig":null,"attributes":[{"value":"/ An iterator over the compilation- and partial-units of a section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":847254,"byte_end":847323,"line_start":192,"line_end":192,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":847324,"byte_end":847327,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":847328,"byte_end":847357,"line_start":194,"line_end":194,"column_start":1,"column_end":30}},{"value":"/ `DebugInfo::units`](./struct.DebugInfo.html#method.units) for more detail.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":847358,"byte_end":847436,"line_start":195,"line_end":195,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":847682,"byte_end":847686,"line_start":204,"line_end":204,"column_start":12,"column_end":16},"name":"next","qualname":"<CompilationUnitHeadersIter<R>>::next","value":"fn next(&mut Self) -> Result<Option<CompilationUnitHeader<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next unit header.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next unit header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":847621,"byte_end":847670,"line_start":203,"line_end":203,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":848430,"byte_end":848434,"line_start":228,"line_end":228,"column_start":8,"column_end":12},"name":"next","qualname":"<CompilationUnitHeadersIter<R> as fallible_iterator::FallibleIterator>::next","value":"fn next(&mut Self) -> ::core::result::Result<Option<Self::Item>, Self::Error>","parent":{"krate":25,"index":59},"children":[],"decl_id":{"krate":25,"index":62},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8773},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":848681,"byte_end":848702,"line_start":235,"line_end":235,"column_start":12,"column_end":33},"name":"CompilationUnitHeader","qualname":"::read::unit::CompilationUnitHeader","value":"CompilationUnitHeader {  }","parent":null,"children":[{"krate":0,"index":8776},{"krate":0,"index":8777}],"decl_id":null,"docs":" The header of a compilation unit's debugging information.\n","sig":null,"attributes":[{"value":"/ The header of a compilation unit's debugging information.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":848563,"byte_end":848624,"line_start":233,"line_end":233,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":849054,"byte_end":849057,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"new","qualname":"<CompilationUnitHeader<R, Offset>>::new","value":"fn new(UnitHeader<R, Offset>, DebugInfoOffset<Offset>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `CompilationUnitHeader`.\n","sig":null,"attributes":[{"value":"/ Construct a new `CompilationUnitHeader`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":848998,"byte_end":849042,"line_start":249,"line_end":249,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":849269,"byte_end":849275,"line_start":255,"line_end":255,"column_start":12,"column_end":18},"name":"header","qualname":"<CompilationUnitHeader<R, Offset>>::header","value":"fn header(Self) -> UnitHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the `UnitHeader` containing common unit header fields.\n","sig":null,"attributes":[{"value":"/ Return the `UnitHeader` containing common unit header fields.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":849192,"byte_end":849257,"line_start":254,"line_end":254,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":849449,"byte_end":849463,"line_start":261,"line_end":261,"column_start":12,"column_end":26},"name":"size_of_header","qualname":"<CompilationUnitHeader<R, Offset>>::size_of_header","value":"fn size_of_header(Format) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the serialized size of the compilation unit header for the given\n DWARF format.\n","sig":null,"attributes":[{"value":"/ Return the serialized size of the compilation unit header for the given","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":849340,"byte_end":849415,"line_start":259,"line_end":259,"column_start":5,"column_end":80}},{"value":"/ DWARF format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":849420,"byte_end":849437,"line_start":260,"line_end":260,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":849640,"byte_end":849646,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"offset","qualname":"<CompilationUnitHeader<R, Offset>>::offset","value":"fn offset(&Self) -> DebugInfoOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this compilation unit within the .debug_info section.\n","sig":null,"attributes":[{"value":"/ Get the offset of this compilation unit within the .debug_info section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":849553,"byte_end":849628,"line_start":265,"line_end":265,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":849864,"byte_end":849875,"line_start":272,"line_end":272,"column_start":12,"column_end":23},"name":"unit_length","qualname":"<CompilationUnitHeader<R, Offset>>::unit_length","value":"fn unit_length(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this compilation unit, not\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Get the length of the debugging info for this compilation unit, not","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":849717,"byte_end":849788,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ including the byte length of the encoded length itself.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":849793,"byte_end":849852,"line_start":271,"line_end":271,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850084,"byte_end":850105,"line_start":278,"line_end":278,"column_start":12,"column_end":33},"name":"length_including_self","qualname":"<CompilationUnitHeader<R, Offset>>::length_including_self","value":"fn length_including_self(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this compilation unit,\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Get the length of the debugging info for this compilation unit,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":849941,"byte_end":850008,"line_start":276,"line_end":276,"column_start":5,"column_end":72}},{"value":"/ including the byte length of the encoded length itself.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850013,"byte_end":850072,"line_start":277,"line_end":277,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850244,"byte_end":850252,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"encoding","qualname":"<CompilationUnitHeader<R, Offset>>::encoding","value":"fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this unit.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850183,"byte_end":850232,"line_start":282,"line_end":282,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850400,"byte_end":850407,"line_start":288,"line_end":288,"column_start":12,"column_end":19},"name":"version","qualname":"<CompilationUnitHeader<R, Offset>>::version","value":"fn version(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the DWARF version of the debugging info for this compilation unit.\n","sig":null,"attributes":[{"value":"/ Get the DWARF version of the debugging info for this compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850314,"byte_end":850388,"line_start":287,"line_end":287,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850606,"byte_end":850625,"line_start":294,"line_end":294,"column_start":12,"column_end":31},"name":"debug_abbrev_offset","qualname":"<CompilationUnitHeader<R, Offset>>::debug_abbrev_offset","value":"fn debug_abbrev_offset(&Self) -> DebugAbbrevOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" The offset into the `.debug_abbrev` section for this compilation unit's\n debugging information entries' abbreviations.\n","sig":null,"attributes":[{"value":"/ The offset into the `.debug_abbrev` section for this compilation unit's","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850465,"byte_end":850540,"line_start":292,"line_end":292,"column_start":5,"column_end":80}},{"value":"/ debugging information entries' abbreviations.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850545,"byte_end":850594,"line_start":293,"line_end":293,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850785,"byte_end":850797,"line_start":299,"line_end":299,"column_start":12,"column_end":24},"name":"address_size","qualname":"<CompilationUnitHeader<R, Offset>>::address_size","value":"fn address_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of addresses (in bytes) in this type-unit.\n","sig":null,"attributes":[{"value":"/ The size of addresses (in bytes) in this type-unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850718,"byte_end":850773,"line_start":298,"line_end":298,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850932,"byte_end":850938,"line_start":304,"line_end":304,"column_start":12,"column_end":18},"name":"format","qualname":"<CompilationUnitHeader<R, Offset>>::format","value":"fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Whether this type unit is encoded in 64- or 32-bit DWARF.\n","sig":null,"attributes":[{"value":"/ Whether this type unit is encoded in 64- or 32-bit DWARF.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850859,"byte_end":850920,"line_start":303,"line_end":303,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":851074,"byte_end":851085,"line_start":309,"line_end":309,"column_start":12,"column_end":23},"name":"header_size","qualname":"<CompilationUnitHeader<R, Offset>>::header_size","value":"fn header_size(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" The serialized size of the header for this compilation unit.\n","sig":null,"attributes":[{"value":"/ The serialized size of the header for this compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":850998,"byte_end":851062,"line_start":308,"line_end":308,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":851226,"byte_end":851231,"line_start":314,"line_end":314,"column_start":12,"column_end":17},"name":"entry","qualname":"<CompilationUnitHeader<R, Offset>>::entry","value":"fn entry<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, UnitOffset<R::Offset>)\n-> Result<DebuggingInformationEntry>","parent":null,"children":[],"decl_id":null,"docs":" Read the `DebuggingInformationEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Read the `DebuggingInformationEntry` at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":851153,"byte_end":851214,"line_start":313,"line_end":313,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2575},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":851552,"byte_end":851559,"line_start":323,"line_end":323,"column_start":12,"column_end":19},"name":"entries","qualname":"<CompilationUnitHeader<R, Offset>>::entries","value":"fn entries<'me, 'abbrev>(&'me Self, &'abbrev Abbreviations) -> EntriesCursor","parent":null,"children":[],"decl_id":null,"docs":" Navigate this compilation unit's `DebuggingInformationEntry`s.\n","sig":null,"attributes":[{"value":"/ Navigate this compilation unit's `DebuggingInformationEntry`s.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":851474,"byte_end":851540,"line_start":322,"line_end":322,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":851852,"byte_end":851869,"line_start":332,"line_end":332,"column_start":12,"column_end":29},"name":"entries_at_offset","qualname":"<CompilationUnitHeader<R, Offset>>::entries_at_offset","value":"fn entries_at_offset<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, UnitOffset<R::Offset>)\n-> Result<EntriesCursor>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this compilation unit's `DebuggingInformationEntry`s\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this compilation unit's `DebuggingInformationEntry`s","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":851737,"byte_end":851802,"line_start":330,"line_end":330,"column_start":5,"column_end":70}},{"value":"/ starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":851807,"byte_end":851840,"line_start":331,"line_end":331,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":852237,"byte_end":852249,"line_start":342,"line_end":342,"column_start":12,"column_end":24},"name":"entries_tree","qualname":"<CompilationUnitHeader<R, Offset>>::entries_tree","value":"fn entries_tree<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, Option<UnitOffset<R::Offset>>)\n-> Result<EntriesTree>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this compilation unit's `DebuggingInformationEntry`s as a tree\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this compilation unit's `DebuggingInformationEntry`s as a tree","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":852112,"byte_end":852187,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":852192,"byte_end":852225,"line_start":341,"line_end":341,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2584},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":852574,"byte_end":852585,"line_start":351,"line_end":351,"column_start":12,"column_end":23},"name":"entries_raw","qualname":"<CompilationUnitHeader<R, Offset>>::entries_raw","value":"fn entries_raw<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, Option<UnitOffset<R::Offset>>)\n-> Result<EntriesRaw>","parent":null,"children":[],"decl_id":null,"docs":" Read the raw data that defines the Debugging Information Entries.\n","sig":null,"attributes":[{"value":"/ Read the raw data that defines the Debugging Information Entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":852493,"byte_end":852562,"line_start":350,"line_end":350,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":855171,"byte_end":855184,"line_start":437,"line_end":437,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<CompilationUnitHeader<R, Offset>>::abbreviations","value":"fn abbreviations(&Self, &DebugAbbrev<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse this compilation unit's abbreviations.","sig":null,"attributes":[{"value":"/ Parse this compilation unit's abbreviations.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":852827,"byte_end":852875,"line_start":359,"line_end":359,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":852880,"byte_end":852883,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":852888,"byte_end":852895,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use gimli::DebugAbbrev;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":852900,"byte_end":852927,"line_start":362,"line_end":362,"column_start":5,"column_end":32}},{"value":"/ # use gimli::{DebugInfo, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":852932,"byte_end":852975,"line_start":363,"line_end":363,"column_start":5,"column_end":48}},{"value":"/ # let info_buf = [","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":852980,"byte_end":853002,"line_start":364,"line_end":364,"column_start":5,"column_end":27}},{"value":"/ #     // Comilation unit header","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853007,"byte_end":853042,"line_start":365,"line_end":365,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853047,"byte_end":853052,"line_start":366,"line_end":366,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 25","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853057,"byte_end":853093,"line_start":367,"line_end":367,"column_start":5,"column_end":41}},{"value":"/ #     0x19, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853098,"byte_end":853131,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853136,"byte_end":853158,"line_start":369,"line_end":369,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853163,"byte_end":853184,"line_start":370,"line_end":370,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853189,"byte_end":853221,"line_start":371,"line_end":371,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853226,"byte_end":853259,"line_start":372,"line_end":372,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853264,"byte_end":853289,"line_start":373,"line_end":373,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853294,"byte_end":853309,"line_start":374,"line_end":374,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853314,"byte_end":853319,"line_start":375,"line_end":375,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853324,"byte_end":853341,"line_start":376,"line_end":376,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853346,"byte_end":853351,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853356,"byte_end":853386,"line_start":378,"line_end":378,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853391,"byte_end":853406,"line_start":379,"line_end":379,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853411,"byte_end":853466,"line_start":380,"line_end":380,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853471,"byte_end":853504,"line_start":381,"line_end":381,"column_start":5,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853509,"byte_end":853514,"line_start":382,"line_end":382,"column_start":5,"column_end":10}},{"value":"/ #       // Children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853519,"byte_end":853542,"line_start":383,"line_end":383,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853547,"byte_end":853552,"line_start":384,"line_end":384,"column_start":5,"column_end":10}},{"value":"/ #       // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853557,"byte_end":853589,"line_start":385,"line_end":385,"column_start":5,"column_end":37}},{"value":"/ #       0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853594,"byte_end":853611,"line_start":386,"line_end":386,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853616,"byte_end":853673,"line_start":387,"line_end":387,"column_start":5,"column_end":62}},{"value":"/ #       0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853678,"byte_end":853713,"line_start":388,"line_end":388,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853718,"byte_end":853723,"line_start":389,"line_end":389,"column_start":5,"column_end":10}},{"value":"/ #         // Children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853728,"byte_end":853753,"line_start":390,"line_end":390,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853758,"byte_end":853763,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/ #         // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853768,"byte_end":853802,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ #         0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853807,"byte_end":853826,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/ #         // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853831,"byte_end":853890,"line_start":394,"line_end":394,"column_start":5,"column_end":64}},{"value":"/ #         0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853895,"byte_end":853932,"line_start":395,"line_end":395,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853937,"byte_end":853942,"line_start":396,"line_end":396,"column_start":5,"column_end":10}},{"value":"/ #           // Children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853947,"byte_end":853974,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853979,"byte_end":853984,"line_start":398,"line_end":398,"column_start":5,"column_end":10}},{"value":"/ #           // End of children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":853989,"byte_end":854023,"line_start":399,"line_end":399,"column_start":5,"column_end":39}},{"value":"/ #           0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854028,"byte_end":854049,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854054,"byte_end":854059,"line_start":401,"line_end":401,"column_start":5,"column_end":10}},{"value":"/ #         // End of children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854064,"byte_end":854096,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/ #         0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854101,"byte_end":854120,"line_start":403,"line_end":403,"column_start":5,"column_end":24}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854125,"byte_end":854130,"line_start":404,"line_end":404,"column_start":5,"column_end":10}},{"value":"/ #       // End of children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854135,"byte_end":854165,"line_start":405,"line_end":405,"column_start":5,"column_end":35}},{"value":"/ #       0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854170,"byte_end":854187,"line_start":406,"line_end":406,"column_start":5,"column_end":22}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854192,"byte_end":854200,"line_start":407,"line_end":407,"column_start":5,"column_end":13}},{"value":"/ # let debug_info = DebugInfo::new(&info_buf, LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854205,"byte_end":854268,"line_start":408,"line_end":408,"column_start":5,"column_end":68}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854273,"byte_end":854278,"line_start":409,"line_end":409,"column_start":5,"column_end":10}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854283,"byte_end":854307,"line_start":410,"line_end":410,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854312,"byte_end":854329,"line_start":411,"line_end":411,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854334,"byte_end":854349,"line_start":412,"line_end":412,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854354,"byte_end":854384,"line_start":413,"line_end":413,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854389,"byte_end":854404,"line_start":414,"line_end":414,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_yes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854409,"byte_end":854437,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854442,"byte_end":854457,"line_start":416,"line_end":416,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854462,"byte_end":854491,"line_start":417,"line_end":417,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854496,"byte_end":854538,"line_start":418,"line_end":418,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854543,"byte_end":854560,"line_start":419,"line_end":419,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854565,"byte_end":854611,"line_start":420,"line_end":420,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854616,"byte_end":854633,"line_start":421,"line_end":421,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854638,"byte_end":854665,"line_start":422,"line_end":422,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854670,"byte_end":854685,"line_start":423,"line_end":423,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854690,"byte_end":854705,"line_start":424,"line_end":424,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854710,"byte_end":854738,"line_start":425,"line_end":425,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854743,"byte_end":854757,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854762,"byte_end":854770,"line_start":427,"line_end":427,"column_start":5,"column_end":13}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854775,"byte_end":854780,"line_start":428,"line_end":428,"column_start":5,"column_end":10}},{"value":"/ # let get_some_unit = || debug_info.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854785,"byte_end":854858,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854863,"byte_end":854866,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let unit = get_some_unit();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854871,"byte_end":854902,"line_start":431,"line_end":431,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854907,"byte_end":854910,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # let read_debug_abbrev_section_somehow = || &abbrev_buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854915,"byte_end":854976,"line_start":433,"line_end":433,"column_start":5,"column_end":66}},{"value":"/ let debug_abbrev = DebugAbbrev::new(read_debug_abbrev_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":854981,"byte_end":855072,"line_start":434,"line_end":434,"column_start":5,"column_end":96}},{"value":"/ let abbrevs_for_unit = unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":855077,"byte_end":855147,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":855152,"byte_end":855159,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8804},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":856413,"byte_end":856423,"line_start":476,"line_end":476,"column_start":12,"column_end":22},"name":"UnitHeader","qualname":"::read::unit::UnitHeader","value":"UnitHeader {  }","parent":null,"children":[{"krate":0,"index":8807},{"krate":0,"index":8808},{"krate":0,"index":8809},{"krate":0,"index":8810}],"decl_id":null,"docs":" The common fields for the headers of compilation units and\n type units.\n","sig":null,"attributes":[{"value":"/ The common fields for the headers of compilation units and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":856278,"byte_end":856340,"line_start":473,"line_end":473,"column_start":1,"column_end":63}},{"value":"/ type units.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":856341,"byte_end":856356,"line_start":474,"line_end":474,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":856822,"byte_end":856825,"line_start":494,"line_end":494,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitHeader<R, Offset>>::new","value":"fn new(Encoding, R::Offset, DebugAbbrevOffset<R::Offset>, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `UnitHeader`.\n","sig":null,"attributes":[{"value":"/ Construct a new `UnitHeader`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":856777,"byte_end":856810,"line_start":493,"line_end":493,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":857237,"byte_end":857251,"line_start":510,"line_end":510,"column_start":12,"column_end":26},"name":"size_of_header","qualname":"<UnitHeader<R, Offset>>::size_of_header","value":"fn size_of_header(Format) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the serialized size of the common unit header for the given\n DWARF format.\n","sig":null,"attributes":[{"value":"/ Return the serialized size of the common unit header for the given","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":857133,"byte_end":857203,"line_start":508,"line_end":508,"column_start":5,"column_end":75}},{"value":"/ DWARF format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":857208,"byte_end":857225,"line_start":509,"line_end":509,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":857856,"byte_end":857867,"line_start":528,"line_end":528,"column_start":12,"column_end":23},"name":"unit_length","qualname":"<UnitHeader<R, Offset>>::unit_length","value":"fn unit_length(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this compilation unit, not\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Get the length of the debugging info for this compilation unit, not","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":857709,"byte_end":857780,"line_start":526,"line_end":526,"column_start":5,"column_end":76}},{"value":"/ including the byte length of the encoded length itself.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":857785,"byte_end":857844,"line_start":527,"line_end":527,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":858069,"byte_end":858090,"line_start":534,"line_end":534,"column_start":12,"column_end":33},"name":"length_including_self","qualname":"<UnitHeader<R, Offset>>::length_including_self","value":"fn length_including_self(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this compilation unit,\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Get the length of the debugging info for this compilation unit,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":857926,"byte_end":857993,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/ including the byte length of the encoded length itself.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":857998,"byte_end":858057,"line_start":533,"line_end":533,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":858268,"byte_end":858276,"line_start":539,"line_end":539,"column_start":12,"column_end":20},"name":"encoding","qualname":"<UnitHeader<R, Offset>>::encoding","value":"fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this unit.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":858207,"byte_end":858256,"line_start":538,"line_end":538,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":858417,"byte_end":858424,"line_start":544,"line_end":544,"column_start":12,"column_end":19},"name":"version","qualname":"<UnitHeader<R, Offset>>::version","value":"fn version(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the DWARF version of the debugging info for this compilation unit.\n","sig":null,"attributes":[{"value":"/ Get the DWARF version of the debugging info for this compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":858331,"byte_end":858405,"line_start":543,"line_end":543,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2607},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":858623,"byte_end":858642,"line_start":550,"line_end":550,"column_start":12,"column_end":31},"name":"debug_abbrev_offset","qualname":"<UnitHeader<R, Offset>>::debug_abbrev_offset","value":"fn debug_abbrev_offset(&Self) -> DebugAbbrevOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" The offset into the `.debug_abbrev` section for this compilation unit's\n debugging information entries' abbreviations.\n","sig":null,"attributes":[{"value":"/ The offset into the `.debug_abbrev` section for this compilation unit's","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":858482,"byte_end":858557,"line_start":548,"line_end":548,"column_start":5,"column_end":80}},{"value":"/ debugging information entries' abbreviations.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":858562,"byte_end":858611,"line_start":549,"line_end":549,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":858802,"byte_end":858814,"line_start":555,"line_end":555,"column_start":12,"column_end":24},"name":"address_size","qualname":"<UnitHeader<R, Offset>>::address_size","value":"fn address_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of addresses (in bytes) in this compilation unit.\n","sig":null,"attributes":[{"value":"/ The size of addresses (in bytes) in this compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":858728,"byte_end":858790,"line_start":554,"line_end":554,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":858956,"byte_end":858962,"line_start":560,"line_end":560,"column_start":12,"column_end":18},"name":"format","qualname":"<UnitHeader<R, Offset>>::format","value":"fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Whether this compilation unit is encoded in 64- or 32-bit DWARF.\n","sig":null,"attributes":[{"value":"/ Whether this compilation unit is encoded in 64- or 32-bit DWARF.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":858876,"byte_end":858944,"line_start":559,"line_end":559,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":859098,"byte_end":859109,"line_start":565,"line_end":565,"column_start":12,"column_end":23},"name":"header_size","qualname":"<UnitHeader<R, Offset>>::header_size","value":"fn header_size(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" The serialized size of the header for this compilation unit.\n","sig":null,"attributes":[{"value":"/ The serialized size of the header for this compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":859022,"byte_end":859086,"line_start":564,"line_end":564,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":859605,"byte_end":859610,"line_start":580,"line_end":580,"column_start":12,"column_end":17},"name":"range","qualname":"<UnitHeader<R, Offset>>::range","value":"fn range(&Self, Range<UnitOffset<R::Offset>>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying bytes for the supplied range.\n","sig":null,"attributes":[{"value":"/ Get the underlying bytes for the supplied range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":859541,"byte_end":859593,"line_start":579,"line_end":579,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":860271,"byte_end":860281,"line_start":598,"line_end":598,"column_start":12,"column_end":22},"name":"range_from","qualname":"<UnitHeader<R, Offset>>::range_from","value":"fn range_from(&Self, RangeFrom<UnitOffset<R::Offset>>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying bytes for the supplied range.\n","sig":null,"attributes":[{"value":"/ Get the underlying bytes for the supplied range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":860207,"byte_end":860259,"line_start":597,"line_end":597,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2614},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":860674,"byte_end":860682,"line_start":609,"line_end":609,"column_start":12,"column_end":20},"name":"range_to","qualname":"<UnitHeader<R, Offset>>::range_to","value":"fn range_to(&Self, RangeTo<UnitOffset<R::Offset>>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying bytes for the supplied range.\n","sig":null,"attributes":[{"value":"/ Get the underlying bytes for the supplied range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":860610,"byte_end":860662,"line_start":608,"line_end":608,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":861078,"byte_end":861083,"line_start":620,"line_end":620,"column_start":12,"column_end":17},"name":"entry","qualname":"<UnitHeader<R, Offset>>::entry","value":"fn entry<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, UnitOffset<R::Offset>)\n-> Result<DebuggingInformationEntry>","parent":null,"children":[],"decl_id":null,"docs":" Read the `DebuggingInformationEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Read the `DebuggingInformationEntry` at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":861005,"byte_end":861066,"line_start":619,"line_end":619,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":861532,"byte_end":861539,"line_start":631,"line_end":631,"column_start":12,"column_end":19},"name":"entries","qualname":"<UnitHeader<R, Offset>>::entries","value":"fn entries<'me, 'abbrev>(&'me Self, &'abbrev Abbreviations) -> EntriesCursor","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":861466,"byte_end":861520,"line_start":630,"line_end":630,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2621},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":861981,"byte_end":861998,"line_start":646,"line_end":646,"column_start":12,"column_end":29},"name":"entries_at_offset","qualname":"<UnitHeader<R, Offset>>::entries_at_offset","value":"fn entries_at_offset<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, UnitOffset<R::Offset>)\n-> Result<EntriesCursor>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this compilation unit's `DebuggingInformationEntry`s\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this compilation unit's `DebuggingInformationEntry`s","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":861866,"byte_end":861931,"line_start":644,"line_end":644,"column_start":5,"column_end":70}},{"value":"/ starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":861936,"byte_end":861969,"line_start":645,"line_end":645,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2624},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":862511,"byte_end":862523,"line_start":663,"line_end":663,"column_start":12,"column_end":24},"name":"entries_tree","qualname":"<UnitHeader<R, Offset>>::entries_tree","value":"fn entries_tree<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, Option<UnitOffset<R::Offset>>)\n-> Result<EntriesTree>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s as a tree\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s as a tree","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":862398,"byte_end":862461,"line_start":661,"line_end":661,"column_start":5,"column_end":68}},{"value":"/ starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":862466,"byte_end":862499,"line_start":662,"line_end":662,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":862997,"byte_end":863008,"line_start":676,"line_end":676,"column_start":12,"column_end":23},"name":"entries_raw","qualname":"<UnitHeader<R, Offset>>::entries_raw","value":"fn entries_raw<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, Option<UnitOffset<R::Offset>>)\n-> Result<EntriesRaw>","parent":null,"children":[],"decl_id":null,"docs":" Read the raw data that defines the Debugging Information Entries.\n","sig":null,"attributes":[{"value":"/ Read the raw data that defines the Debugging Information Entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":862916,"byte_end":862985,"line_start":675,"line_end":675,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":863518,"byte_end":863531,"line_start":694,"line_end":694,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<UnitHeader<R, Offset>>::abbreviations","value":"fn abbreviations(&Self, &DebugAbbrev<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse this unit's abbreviations.\n","sig":null,"attributes":[{"value":"/ Parse this unit's abbreviations.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":863470,"byte_end":863506,"line_start":693,"line_end":693,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":8837},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":864906,"byte_end":864931,"line_start":735,"line_end":735,"column_start":12,"column_end":37},"name":"DebuggingInformationEntry","qualname":"::read::unit::DebuggingInformationEntry","value":"DebuggingInformationEntry {  }","parent":null,"children":[{"krate":0,"index":8842},{"krate":0,"index":8843},{"krate":0,"index":8844},{"krate":0,"index":8845},{"krate":0,"index":8846}],"decl_id":null,"docs":" A Debugging Information Entry (DIE).","sig":null,"attributes":[{"value":"/ A Debugging Information Entry (DIE).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":864749,"byte_end":864789,"line_start":731,"line_end":731,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":864790,"byte_end":864793,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ DIEs have a set of attributes and optionally have children DIEs as well.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":864794,"byte_end":864870,"line_start":733,"line_end":733,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":865431,"byte_end":865434,"line_start":753,"line_end":753,"column_start":12,"column_end":15},"name":"new","qualname":"<DebuggingInformationEntry>::new","value":"fn new(UnitOffset<Offset>, R, &'abbrev Abbreviation,\n&'unit UnitHeader<R, Offset>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebuggingInformationEntry`.\n","sig":null,"attributes":[{"value":"/ Construct a new `DebuggingInformationEntry`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":865371,"byte_end":865419,"line_start":752,"line_end":752,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":865813,"byte_end":865817,"line_start":769,"line_end":769,"column_start":12,"column_end":16},"name":"code","qualname":"<DebuggingInformationEntry>::code","value":"fn code(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get this entry's code.\n","sig":null,"attributes":[{"value":"/ Get this entry's code.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":865775,"byte_end":865801,"line_start":768,"line_end":768,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":865912,"byte_end":865918,"line_start":774,"line_end":774,"column_start":12,"column_end":18},"name":"offset","qualname":"<DebuggingInformationEntry>::offset","value":"fn offset(&Self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get this entry's offset.\n","sig":null,"attributes":[{"value":"/ Get this entry's offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":865872,"byte_end":865900,"line_start":773,"line_end":773,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868314,"byte_end":868317,"line_start":841,"line_end":841,"column_start":12,"column_end":15},"name":"tag","qualname":"<DebuggingInformationEntry>::tag","value":"fn tag(&Self) -> constants::DwTag","parent":null,"children":[],"decl_id":null,"docs":" Get this entry's `DW_TAG_whatever` tag.","sig":null,"attributes":[{"value":"/ Get this entry's `DW_TAG_whatever` tag.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":865984,"byte_end":866027,"line_start":778,"line_end":778,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866032,"byte_end":866035,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866040,"byte_end":866047,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{DebugAbbrev, DebugInfo, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866052,"byte_end":866108,"line_start":781,"line_end":781,"column_start":5,"column_end":61}},{"value":"/ # let info_buf = [","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866113,"byte_end":866135,"line_start":782,"line_end":782,"column_start":5,"column_end":27}},{"value":"/ #     // Comilation unit header","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866140,"byte_end":866175,"line_start":783,"line_end":783,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866180,"byte_end":866185,"line_start":784,"line_end":784,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 12","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866190,"byte_end":866226,"line_start":785,"line_end":785,"column_start":5,"column_end":41}},{"value":"/ #     0x0c, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866231,"byte_end":866264,"line_start":786,"line_end":786,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866269,"byte_end":866291,"line_start":787,"line_end":787,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866296,"byte_end":866317,"line_start":788,"line_end":788,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866322,"byte_end":866354,"line_start":789,"line_end":789,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866359,"byte_end":866392,"line_start":790,"line_end":790,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866397,"byte_end":866422,"line_start":791,"line_end":791,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866427,"byte_end":866442,"line_start":792,"line_end":792,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866447,"byte_end":866452,"line_start":793,"line_end":793,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866457,"byte_end":866474,"line_start":794,"line_end":794,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866479,"byte_end":866484,"line_start":795,"line_end":795,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866489,"byte_end":866519,"line_start":796,"line_end":796,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866524,"byte_end":866539,"line_start":797,"line_end":797,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866544,"byte_end":866599,"line_start":798,"line_end":798,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866604,"byte_end":866637,"line_start":799,"line_end":799,"column_start":5,"column_end":38}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866642,"byte_end":866650,"line_start":800,"line_end":800,"column_start":5,"column_end":13}},{"value":"/ # let debug_info = DebugInfo::new(&info_buf, LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866655,"byte_end":866718,"line_start":801,"line_end":801,"column_start":5,"column_end":68}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866723,"byte_end":866747,"line_start":802,"line_end":802,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866752,"byte_end":866769,"line_start":803,"line_end":803,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866774,"byte_end":866789,"line_start":804,"line_end":804,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866794,"byte_end":866824,"line_start":805,"line_end":805,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866829,"byte_end":866844,"line_start":806,"line_end":806,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_no","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866849,"byte_end":866876,"line_start":807,"line_end":807,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866881,"byte_end":866896,"line_start":808,"line_end":808,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866901,"byte_end":866930,"line_start":809,"line_end":809,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866935,"byte_end":866977,"line_start":810,"line_end":810,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":866982,"byte_end":866999,"line_start":811,"line_end":811,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867004,"byte_end":867050,"line_start":812,"line_end":812,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867055,"byte_end":867072,"line_start":813,"line_end":813,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867077,"byte_end":867104,"line_start":814,"line_end":814,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867109,"byte_end":867124,"line_start":815,"line_end":815,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867129,"byte_end":867144,"line_start":816,"line_end":816,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867149,"byte_end":867177,"line_start":817,"line_end":817,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867182,"byte_end":867196,"line_start":818,"line_end":818,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867201,"byte_end":867209,"line_start":819,"line_end":819,"column_start":5,"column_end":13}},{"value":"/ # let debug_abbrev = DebugAbbrev::new(&abbrev_buf, LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867214,"byte_end":867283,"line_start":820,"line_end":820,"column_start":5,"column_end":74}},{"value":"/ # let unit = debug_info.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867288,"byte_end":867349,"line_start":821,"line_end":821,"column_start":5,"column_end":66}},{"value":"/ # let abbrevs = unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867354,"byte_end":867417,"line_start":822,"line_end":822,"column_start":5,"column_end":68}},{"value":"/ # let mut cursor = unit.entries(&abbrevs);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867422,"byte_end":867468,"line_start":823,"line_end":823,"column_start":5,"column_end":51}},{"value":"/ # let (_, entry) = cursor.next_dfs().unwrap().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867473,"byte_end":867532,"line_start":824,"line_end":824,"column_start":5,"column_end":64}},{"value":"/ # let mut get_some_entry = || entry;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867537,"byte_end":867577,"line_start":825,"line_end":825,"column_start":5,"column_end":45}},{"value":"/ let entry = get_some_entry();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867582,"byte_end":867615,"line_start":826,"line_end":826,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867620,"byte_end":867623,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ match entry.tag() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867628,"byte_end":867651,"line_start":828,"line_end":828,"column_start":5,"column_end":28}},{"value":"/     gimli::DW_TAG_subprogram =>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867656,"byte_end":867691,"line_start":829,"line_end":829,"column_start":5,"column_end":40}},{"value":"/         println!(\"this entry contains debug info about a function\"),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867696,"byte_end":867768,"line_start":830,"line_end":830,"column_start":5,"column_end":77}},{"value":"/     gimli::DW_TAG_inlined_subroutine =>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867773,"byte_end":867816,"line_start":831,"line_end":831,"column_start":5,"column_end":48}},{"value":"/         println!(\"this entry contains debug info about a particular instance of inlining\"),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867821,"byte_end":867916,"line_start":832,"line_end":832,"column_start":5,"column_end":100}},{"value":"/     gimli::DW_TAG_variable =>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867921,"byte_end":867954,"line_start":833,"line_end":833,"column_start":5,"column_end":38}},{"value":"/         println!(\"this entry contains debug info about a local variable\"),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":867959,"byte_end":868037,"line_start":834,"line_end":834,"column_start":5,"column_end":83}},{"value":"/     gimli::DW_TAG_formal_parameter =>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868042,"byte_end":868083,"line_start":835,"line_end":835,"column_start":5,"column_end":46}},{"value":"/         println!(\"this entry contains debug info about a function parameter\"),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868088,"byte_end":868170,"line_start":836,"line_end":836,"column_start":5,"column_end":87}},{"value":"/     otherwise =>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868175,"byte_end":868195,"line_start":837,"line_end":837,"column_start":5,"column_end":25}},{"value":"/         println!(\"this entry is some other kind of data: {:?}\", otherwise),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868200,"byte_end":868279,"line_start":838,"line_end":838,"column_start":5,"column_end":84}},{"value":"/ };","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868284,"byte_end":868290,"line_start":839,"line_end":839,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868295,"byte_end":868302,"line_start":840,"line_end":840,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868468,"byte_end":868480,"line_start":846,"line_end":846,"column_start":12,"column_end":24},"name":"has_children","qualname":"<DebuggingInformationEntry>::has_children","value":"fn has_children(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this entry's type can have children, false otherwise.\n","sig":null,"attributes":[{"value":"/ Return true if this entry's type can have children, false otherwise.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868384,"byte_end":868456,"line_start":845,"line_end":845,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":871220,"byte_end":871225,"line_start":928,"line_end":928,"column_start":12,"column_end":17},"name":"attrs","qualname":"<DebuggingInformationEntry>::attrs","value":"fn attrs<'me>(&'me Self) -> AttrsIter","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this entry's set of attributes.","sig":null,"attributes":[{"value":"/ Iterate over this entry's set of attributes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868544,"byte_end":868592,"line_start":850,"line_end":850,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868597,"byte_end":868600,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868605,"byte_end":868612,"line_start":852,"line_end":852,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugAbbrev, DebugInfo, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868617,"byte_end":868671,"line_start":853,"line_end":853,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868676,"byte_end":868679,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ // Read the `.debug_info` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868684,"byte_end":868722,"line_start":855,"line_end":855,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868727,"byte_end":868730,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # let info_buf = [","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868735,"byte_end":868757,"line_start":857,"line_end":857,"column_start":5,"column_end":27}},{"value":"/ #     // Comilation unit header","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868762,"byte_end":868797,"line_start":858,"line_end":858,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868802,"byte_end":868807,"line_start":859,"line_end":859,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 12","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868812,"byte_end":868848,"line_start":860,"line_end":860,"column_start":5,"column_end":41}},{"value":"/ #     0x0c, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868853,"byte_end":868886,"line_start":861,"line_end":861,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868891,"byte_end":868913,"line_start":862,"line_end":862,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868918,"byte_end":868939,"line_start":863,"line_end":863,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868944,"byte_end":868976,"line_start":864,"line_end":864,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":868981,"byte_end":869014,"line_start":865,"line_end":865,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869019,"byte_end":869044,"line_start":866,"line_end":866,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869049,"byte_end":869064,"line_start":867,"line_end":867,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869069,"byte_end":869074,"line_start":868,"line_end":868,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869079,"byte_end":869096,"line_start":869,"line_end":869,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869101,"byte_end":869106,"line_start":870,"line_end":870,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869111,"byte_end":869141,"line_start":871,"line_end":871,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869146,"byte_end":869161,"line_start":872,"line_end":872,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869166,"byte_end":869221,"line_start":873,"line_end":873,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869226,"byte_end":869259,"line_start":874,"line_end":874,"column_start":5,"column_end":38}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869264,"byte_end":869272,"line_start":875,"line_end":875,"column_start":5,"column_end":13}},{"value":"/ # let read_debug_info_section_somehow = || &info_buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869277,"byte_end":869334,"line_start":876,"line_end":876,"column_start":5,"column_end":62}},{"value":"/ let debug_info = DebugInfo::new(read_debug_info_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869339,"byte_end":869424,"line_start":877,"line_end":877,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869429,"byte_end":869432,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ // Get the data about the first compilation unit out of the `.debug_info`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869437,"byte_end":869515,"line_start":879,"line_end":879,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869520,"byte_end":869523,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ let unit = debug_info.units().next()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869528,"byte_end":869568,"line_start":881,"line_end":881,"column_start":5,"column_end":45}},{"value":"/     .expect(\"Should have at least one compilation unit\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869573,"byte_end":869633,"line_start":882,"line_end":882,"column_start":5,"column_end":65}},{"value":"/     .expect(\"and it should parse ok\");","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869638,"byte_end":869680,"line_start":883,"line_end":883,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869685,"byte_end":869688,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ // Read the `.debug_abbrev` section and parse the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869693,"byte_end":869746,"line_start":885,"line_end":885,"column_start":5,"column_end":58}},{"value":"/ // abbreviations for our compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869751,"byte_end":869797,"line_start":886,"line_end":886,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869802,"byte_end":869805,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869810,"byte_end":869834,"line_start":888,"line_end":888,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869839,"byte_end":869856,"line_start":889,"line_end":889,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869861,"byte_end":869876,"line_start":890,"line_end":890,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869881,"byte_end":869911,"line_start":891,"line_end":891,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869916,"byte_end":869931,"line_start":892,"line_end":892,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_no","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869936,"byte_end":869963,"line_start":893,"line_end":893,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869968,"byte_end":869983,"line_start":894,"line_end":894,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":869988,"byte_end":870017,"line_start":895,"line_end":895,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870022,"byte_end":870064,"line_start":896,"line_end":896,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870069,"byte_end":870086,"line_start":897,"line_end":897,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870091,"byte_end":870137,"line_start":898,"line_end":898,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870142,"byte_end":870159,"line_start":899,"line_end":899,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870164,"byte_end":870191,"line_start":900,"line_end":900,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870196,"byte_end":870211,"line_start":901,"line_end":901,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870216,"byte_end":870231,"line_start":902,"line_end":902,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870236,"byte_end":870264,"line_start":903,"line_end":903,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870269,"byte_end":870283,"line_start":904,"line_end":904,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870288,"byte_end":870296,"line_start":905,"line_end":905,"column_start":5,"column_end":13}},{"value":"/ # let read_debug_abbrev_section_somehow = || &abbrev_buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870301,"byte_end":870362,"line_start":906,"line_end":906,"column_start":5,"column_end":66}},{"value":"/ let debug_abbrev = DebugAbbrev::new(read_debug_abbrev_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870367,"byte_end":870458,"line_start":907,"line_end":907,"column_start":5,"column_end":96}},{"value":"/ let abbrevs = unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870463,"byte_end":870524,"line_start":908,"line_end":908,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870529,"byte_end":870532,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ // Get the first entry from that compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870537,"byte_end":870591,"line_start":910,"line_end":910,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870596,"byte_end":870599,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = unit.entries(&abbrevs);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870604,"byte_end":870648,"line_start":912,"line_end":912,"column_start":5,"column_end":49}},{"value":"/ let (_, entry) = cursor.next_dfs()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870653,"byte_end":870691,"line_start":913,"line_end":913,"column_start":5,"column_end":43}},{"value":"/     .expect(\"Should parse next entry\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870696,"byte_end":870738,"line_start":914,"line_end":914,"column_start":5,"column_end":47}},{"value":"/     .expect(\"Should have at least one entry\");","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870743,"byte_end":870793,"line_start":915,"line_end":915,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870798,"byte_end":870801,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ // Finally, print the first entry's attributes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870806,"byte_end":870857,"line_start":917,"line_end":917,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870862,"byte_end":870865,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ let mut attrs = entry.attrs();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870870,"byte_end":870904,"line_start":919,"line_end":919,"column_start":5,"column_end":39}},{"value":"/ while let Some(attr) = attrs.next().unwrap() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870909,"byte_end":870959,"line_start":920,"line_end":920,"column_start":5,"column_end":55}},{"value":"/     println!(\"Attribute name = {:?}\", attr.name());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":870964,"byte_end":871019,"line_start":921,"line_end":921,"column_start":5,"column_end":60}},{"value":"/     println!(\"Attribute value = {:?}\", attr.value());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":871024,"byte_end":871081,"line_start":922,"line_end":922,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":871086,"byte_end":871091,"line_start":923,"line_end":923,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":871096,"byte_end":871103,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":871108,"byte_end":871111,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":871116,"byte_end":871137,"line_start":926,"line_end":926,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":871142,"byte_end":871208,"line_start":927,"line_end":927,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":871590,"byte_end":871594,"line_start":938,"line_end":938,"column_start":12,"column_end":16},"name":"attr","qualname":"<DebuggingInformationEntry>::attr","value":"fn attr(&Self, constants::DwAt) -> Result<Option<Attribute<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first attribute in this entry which has the given name,\n and return it. Returns `Ok(None)` if no attribute is found.\n","sig":null,"attributes":[{"value":"/ Find the first attribute in this entry which has the given name,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":871442,"byte_end":871510,"line_start":936,"line_end":936,"column_start":5,"column_end":73}},{"value":"/ and return it. Returns `Ok(None)` if no attribute is found.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":871515,"byte_end":871578,"line_start":937,"line_end":937,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":872031,"byte_end":872045,"line_start":950,"line_end":950,"column_start":12,"column_end":26},"name":"attr_value_raw","qualname":"<DebuggingInformationEntry>::attr_value_raw","value":"fn attr_value_raw(&Self, constants::DwAt) -> Result<Option<AttributeValue<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first attribute in this entry which has the given name,\n and return its raw value. Returns `Ok(None)` if no attribute is found.\n","sig":null,"attributes":[{"value":"/ Find the first attribute in this entry which has the given name,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":871872,"byte_end":871940,"line_start":948,"line_end":948,"column_start":5,"column_end":73}},{"value":"/ and return its raw value. Returns `Ok(None)` if no attribute is found.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":871945,"byte_end":872019,"line_start":949,"line_end":949,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":872384,"byte_end":872394,"line_start":958,"line_end":958,"column_start":12,"column_end":22},"name":"attr_value","qualname":"<DebuggingInformationEntry>::attr_value","value":"fn attr_value(&Self, constants::DwAt) -> Result<Option<AttributeValue<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first attribute in this entry which has the given name,\n and return its normalized value.  Returns `Ok(None)` if no\n attribute is found.\n","sig":null,"attributes":[{"value":"/ Find the first attribute in this entry which has the given name,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":872209,"byte_end":872277,"line_start":955,"line_end":955,"column_start":5,"column_end":73}},{"value":"/ and return its normalized value.  Returns `Ok(None)` if no","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":872282,"byte_end":872344,"line_start":956,"line_end":956,"column_start":5,"column_end":67}},{"value":"/ attribute is found.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":872349,"byte_end":872372,"line_start":957,"line_end":957,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8862},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":874788,"byte_end":874792,"line_start":1027,"line_end":1027,"column_start":5,"column_end":9},"name":"Addr","qualname":"::read::unit::AttributeValue::Addr","value":"AttributeValue::Addr(u64)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" \"Refers to some location in the address space of the described program.\"\n","sig":null,"attributes":[{"value":"/ \"Refers to some location in the address space of the described program.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":874707,"byte_end":874783,"line_start":1026,"line_end":1026,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":8864},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":874793,"byte_end":874796,"line_start":1027,"line_end":1027,"column_start":10,"column_end":13},"name":"0","qualname":"::read::unit::AttributeValue::Addr::0","value":"u64","parent":{"krate":0,"index":8862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8865},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":874853,"byte_end":874858,"line_start":1030,"line_end":1030,"column_start":5,"column_end":10},"name":"Block","qualname":"::read::unit::AttributeValue::Block","value":"AttributeValue::Block(R)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" A slice of an arbitrary number of bytes.\n","sig":null,"attributes":[{"value":"/ A slice of an arbitrary number of bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":874804,"byte_end":874848,"line_start":1029,"line_end":1029,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":8867},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":874859,"byte_end":874860,"line_start":1030,"line_end":1030,"column_start":11,"column_end":12},"name":"0","qualname":"::read::unit::AttributeValue::Block::0","value":"R","parent":{"krate":0,"index":8865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8868},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875136,"byte_end":875141,"line_start":1037,"line_end":1037,"column_start":5,"column_end":10},"name":"Data1","qualname":"::read::unit::AttributeValue::Data1","value":"AttributeValue::Data1(u8)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" A one byte constant data value. How to interpret the byte depends on context.","sig":null,"attributes":[{"value":"/ A one byte constant data value. How to interpret the byte depends on context.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":874868,"byte_end":874949,"line_start":1032,"line_end":1032,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":874954,"byte_end":874957,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":874962,"byte_end":875032,"line_start":1034,"line_end":1034,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875037,"byte_end":875107,"line_start":1035,"line_end":1035,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875112,"byte_end":875131,"line_start":1036,"line_end":1036,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":8870},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875142,"byte_end":875144,"line_start":1037,"line_end":1037,"column_start":11,"column_end":13},"name":"0","qualname":"::read::unit::AttributeValue::Data1::0","value":"u8","parent":{"krate":0,"index":8868},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8871},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875550,"byte_end":875555,"line_start":1047,"line_end":1047,"column_start":5,"column_end":10},"name":"Data2","qualname":"::read::unit::AttributeValue::Data2","value":"AttributeValue::Data2(u16)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" A two byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[{"value":"/ A two byte constant data value. How to interpret the bytes depends on context.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875152,"byte_end":875234,"line_start":1039,"line_end":1039,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875239,"byte_end":875242,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ These bytes have been converted from `R::Endian`. This may need to be reversed","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875247,"byte_end":875329,"line_start":1041,"line_end":1041,"column_start":5,"column_end":87}},{"value":"/ if this was not required.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875334,"byte_end":875363,"line_start":1042,"line_end":1042,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875368,"byte_end":875371,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875376,"byte_end":875446,"line_start":1044,"line_end":1044,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875451,"byte_end":875521,"line_start":1045,"line_end":1045,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875526,"byte_end":875545,"line_start":1046,"line_end":1046,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":8873},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875556,"byte_end":875559,"line_start":1047,"line_end":1047,"column_start":11,"column_end":14},"name":"0","qualname":"::read::unit::AttributeValue::Data2::0","value":"u16","parent":{"krate":0,"index":8871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8874},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875966,"byte_end":875971,"line_start":1057,"line_end":1057,"column_start":5,"column_end":10},"name":"Data4","qualname":"::read::unit::AttributeValue::Data4","value":"AttributeValue::Data4(u32)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" A four byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[{"value":"/ A four byte constant data value. How to interpret the bytes depends on context.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875567,"byte_end":875650,"line_start":1049,"line_end":1049,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875655,"byte_end":875658,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ These bytes have been converted from `R::Endian`. This may need to be reversed","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875663,"byte_end":875745,"line_start":1051,"line_end":1051,"column_start":5,"column_end":87}},{"value":"/ if this was not required.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875750,"byte_end":875779,"line_start":1052,"line_end":1052,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875784,"byte_end":875787,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875792,"byte_end":875862,"line_start":1054,"line_end":1054,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875867,"byte_end":875937,"line_start":1055,"line_end":1055,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875942,"byte_end":875961,"line_start":1056,"line_end":1056,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":8876},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875972,"byte_end":875975,"line_start":1057,"line_end":1057,"column_start":11,"column_end":14},"name":"0","qualname":"::read::unit::AttributeValue::Data4::0","value":"u32","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8877},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876384,"byte_end":876389,"line_start":1067,"line_end":1067,"column_start":5,"column_end":10},"name":"Data8","qualname":"::read::unit::AttributeValue::Data8","value":"AttributeValue::Data8(u64)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An eight byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[{"value":"/ An eight byte constant data value. How to interpret the bytes depends on context.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":875983,"byte_end":876068,"line_start":1059,"line_end":1059,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876073,"byte_end":876076,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ These bytes have been converted from `R::Endian`. This may need to be reversed","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876081,"byte_end":876163,"line_start":1061,"line_end":1061,"column_start":5,"column_end":87}},{"value":"/ if this was not required.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876168,"byte_end":876197,"line_start":1062,"line_end":1062,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876202,"byte_end":876205,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876210,"byte_end":876280,"line_start":1064,"line_end":1064,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876285,"byte_end":876355,"line_start":1065,"line_end":1065,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876360,"byte_end":876379,"line_start":1066,"line_end":1066,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":8879},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876390,"byte_end":876393,"line_start":1067,"line_end":1067,"column_start":11,"column_end":14},"name":"0","qualname":"::read::unit::AttributeValue::Data8::0","value":"u64","parent":{"krate":0,"index":8877},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8880},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876436,"byte_end":876441,"line_start":1070,"line_end":1070,"column_start":5,"column_end":10},"name":"Sdata","qualname":"::read::unit::AttributeValue::Sdata","value":"AttributeValue::Sdata(i64)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" A signed integer constant.\n","sig":null,"attributes":[{"value":"/ A signed integer constant.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876401,"byte_end":876431,"line_start":1069,"line_end":1069,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":8882},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876442,"byte_end":876445,"line_start":1070,"line_end":1070,"column_start":11,"column_end":14},"name":"0","qualname":"::read::unit::AttributeValue::Sdata::0","value":"i64","parent":{"krate":0,"index":8880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8883},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876491,"byte_end":876496,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10},"name":"Udata","qualname":"::read::unit::AttributeValue::Udata","value":"AttributeValue::Udata(u64)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An unsigned integer constant.\n","sig":null,"attributes":[{"value":"/ An unsigned integer constant.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876453,"byte_end":876486,"line_start":1072,"line_end":1072,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":8885},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876497,"byte_end":876500,"line_start":1073,"line_end":1073,"column_start":11,"column_end":14},"name":"0","qualname":"::read::unit::AttributeValue::Udata::0","value":"u64","parent":{"krate":0,"index":8883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8886},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876636,"byte_end":876643,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12},"name":"Exprloc","qualname":"::read::unit::AttributeValue::Exprloc","value":"AttributeValue::Exprloc(Expression<R>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" \"The information bytes contain a DWARF expression (see Section 2.5) or\n location description (see Section 2.6).\"\n","sig":null,"attributes":[{"value":"/ \"The information bytes contain a DWARF expression (see Section 2.5) or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876508,"byte_end":876582,"line_start":1075,"line_end":1075,"column_start":5,"column_end":79}},{"value":"/ location description (see Section 2.6).\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876587,"byte_end":876631,"line_start":1076,"line_end":1076,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":8888},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876644,"byte_end":876657,"line_start":1077,"line_end":1077,"column_start":13,"column_end":26},"name":"0","qualname":"::read::unit::AttributeValue::Exprloc::0","value":"read::op::Expression<R>","parent":{"krate":0,"index":8886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8889},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876736,"byte_end":876740,"line_start":1080,"line_end":1080,"column_start":5,"column_end":9},"name":"Flag","qualname":"::read::unit::AttributeValue::Flag","value":"AttributeValue::Flag(bool)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" A boolean that indicates presence or absence of the attribute.\n","sig":null,"attributes":[{"value":"/ A boolean that indicates presence or absence of the attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876665,"byte_end":876731,"line_start":1079,"line_end":1079,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":8891},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876741,"byte_end":876745,"line_start":1080,"line_end":1080,"column_start":10,"column_end":14},"name":"0","qualname":"::read::unit::AttributeValue::Flag::0","value":"bool","parent":{"krate":0,"index":8889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8892},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876858,"byte_end":876867,"line_start":1084,"line_end":1084,"column_start":5,"column_end":14},"name":"SecOffset","qualname":"::read::unit::AttributeValue::SecOffset","value":"AttributeValue::SecOffset(Offset)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset into another section. Which section this is an offset into\n depends on context.\n","sig":null,"attributes":[{"value":"/ An offset into another section. Which section this is an offset into","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876753,"byte_end":876825,"line_start":1082,"line_end":1082,"column_start":5,"column_end":77}},{"value":"/ depends on context.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876830,"byte_end":876853,"line_start":1083,"line_end":1083,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":8894},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876868,"byte_end":876874,"line_start":1084,"line_end":1084,"column_start":15,"column_end":21},"name":"0","qualname":"::read::unit::AttributeValue::SecOffset::0","value":"Offset","parent":{"krate":0,"index":8892},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8895},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876952,"byte_end":876965,"line_start":1087,"line_end":1087,"column_start":5,"column_end":18},"name":"DebugAddrBase","qualname":"::read::unit::AttributeValue::DebugAddrBase","value":"AttributeValue::DebugAddrBase(DebugAddrBase<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset to a set of addresses in the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of addresses in the `.debug_addr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876882,"byte_end":876947,"line_start":1086,"line_end":1086,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":8897},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876966,"byte_end":876987,"line_start":1087,"line_end":1087,"column_start":19,"column_end":40},"name":"0","qualname":"::read::unit::AttributeValue::DebugAddrBase::0","value":"common::DebugAddrBase<Offset>","parent":{"krate":0,"index":8895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8898},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877066,"byte_end":877080,"line_start":1090,"line_end":1090,"column_start":5,"column_end":19},"name":"DebugAddrIndex","qualname":"::read::unit::AttributeValue::DebugAddrIndex","value":"AttributeValue::DebugAddrIndex(DebugAddrIndex<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An index into a set of addresses in the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of addresses in the `.debug_addr` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":876995,"byte_end":877061,"line_start":1089,"line_end":1089,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":8900},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877081,"byte_end":877103,"line_start":1090,"line_end":1090,"column_start":20,"column_end":42},"name":"0","qualname":"::read::unit::AttributeValue::DebugAddrIndex::0","value":"common::DebugAddrIndex<Offset>","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8901},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877164,"byte_end":877171,"line_start":1093,"line_end":1093,"column_start":5,"column_end":12},"name":"UnitRef","qualname":"::read::unit::AttributeValue::UnitRef","value":"AttributeValue::UnitRef(UnitOffset<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset into the current compilation unit.\n","sig":null,"attributes":[{"value":"/ An offset into the current compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877111,"byte_end":877159,"line_start":1092,"line_end":1092,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":8903},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877172,"byte_end":877190,"line_start":1093,"line_end":1093,"column_start":13,"column_end":31},"name":"0","qualname":"::read::unit::AttributeValue::UnitRef::0","value":"read::unit::UnitOffset<Offset>","parent":{"krate":0,"index":8901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8904},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877328,"byte_end":877340,"line_start":1097,"line_end":1097,"column_start":5,"column_end":17},"name":"DebugInfoRef","qualname":"::read::unit::AttributeValue::DebugInfoRef","value":"AttributeValue::DebugInfoRef(DebugInfoOffset<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset into the current `.debug_info` section, but possibly a\n different compilation unit from the current one.\n","sig":null,"attributes":[{"value":"/ An offset into the current `.debug_info` section, but possibly a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877198,"byte_end":877266,"line_start":1095,"line_end":1095,"column_start":5,"column_end":73}},{"value":"/ different compilation unit from the current one.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877271,"byte_end":877323,"line_start":1096,"line_end":1096,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":8906},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877341,"byte_end":877364,"line_start":1097,"line_end":1097,"column_start":18,"column_end":41},"name":"0","qualname":"::read::unit::AttributeValue::DebugInfoRef::0","value":"common::DebugInfoOffset<Offset>","parent":{"krate":0,"index":8904},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8907},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877455,"byte_end":877470,"line_start":1100,"line_end":1100,"column_start":5,"column_end":20},"name":"DebugInfoRefSup","qualname":"::read::unit::AttributeValue::DebugInfoRefSup","value":"AttributeValue::DebugInfoRefSup(DebugInfoOffset<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset into the `.debug_info` section of the supplementary object file.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_info` section of the supplementary object file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877372,"byte_end":877450,"line_start":1099,"line_end":1099,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":8909},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877471,"byte_end":877494,"line_start":1100,"line_end":1100,"column_start":21,"column_end":44},"name":"0","qualname":"::read::unit::AttributeValue::DebugInfoRefSup::0","value":"common::DebugInfoOffset<Offset>","parent":{"krate":0,"index":8907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8910},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877552,"byte_end":877564,"line_start":1103,"line_end":1103,"column_start":5,"column_end":17},"name":"DebugLineRef","qualname":"::read::unit::AttributeValue::DebugLineRef","value":"AttributeValue::DebugLineRef(DebugLineOffset<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset into the `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_line` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877502,"byte_end":877547,"line_start":1102,"line_end":1102,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":8912},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877565,"byte_end":877588,"line_start":1103,"line_end":1103,"column_start":18,"column_end":41},"name":"0","qualname":"::read::unit::AttributeValue::DebugLineRef::0","value":"common::DebugLineOffset<Offset>","parent":{"krate":0,"index":8910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8913},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877685,"byte_end":877701,"line_start":1106,"line_end":1106,"column_start":5,"column_end":21},"name":"LocationListsRef","qualname":"::read::unit::AttributeValue::LocationListsRef","value":"AttributeValue::LocationListsRef(LocationListsOffset<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset into either the `.debug_loc` section or the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An offset into either the `.debug_loc` section or the `.debug_loclists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877596,"byte_end":877680,"line_start":1105,"line_end":1105,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":8915},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877702,"byte_end":877729,"line_start":1106,"line_end":1106,"column_start":22,"column_end":49},"name":"0","qualname":"::read::unit::AttributeValue::LocationListsRef::0","value":"common::LocationListsOffset<Offset>","parent":{"krate":0,"index":8913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8916},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877809,"byte_end":877826,"line_start":1109,"line_end":1109,"column_start":5,"column_end":22},"name":"DebugLocListsBase","qualname":"::read::unit::AttributeValue::DebugLocListsBase","value":"AttributeValue::DebugLocListsBase(DebugLocListsBase<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset to a set of offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of offsets in the `.debug_loclists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877737,"byte_end":877804,"line_start":1108,"line_end":1108,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":8918},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877827,"byte_end":877852,"line_start":1109,"line_end":1109,"column_start":23,"column_end":48},"name":"0","qualname":"::read::unit::AttributeValue::DebugLocListsBase::0","value":"common::DebugLocListsBase<Offset>","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8919},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877933,"byte_end":877951,"line_start":1112,"line_end":1112,"column_start":5,"column_end":23},"name":"DebugLocListsIndex","qualname":"::read::unit::AttributeValue::DebugLocListsIndex","value":"AttributeValue::DebugLocListsIndex(DebugLocListsIndex<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An index into a set of offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of offsets in the `.debug_loclists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877860,"byte_end":877928,"line_start":1111,"line_end":1111,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":8921},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877952,"byte_end":877978,"line_start":1112,"line_end":1112,"column_start":24,"column_end":50},"name":"0","qualname":"::read::unit::AttributeValue::DebugLocListsIndex::0","value":"common::DebugLocListsIndex<Offset>","parent":{"krate":0,"index":8919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8922},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878039,"byte_end":878054,"line_start":1115,"line_end":1115,"column_start":5,"column_end":20},"name":"DebugMacinfoRef","qualname":"::read::unit::AttributeValue::DebugMacinfoRef","value":"AttributeValue::DebugMacinfoRef(DebugMacinfoOffset<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset into the `.debug_macinfo` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macinfo` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":877986,"byte_end":878034,"line_start":1114,"line_end":1114,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":8924},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878055,"byte_end":878081,"line_start":1115,"line_end":1115,"column_start":21,"column_end":47},"name":"0","qualname":"::read::unit::AttributeValue::DebugMacinfoRef::0","value":"common::DebugMacinfoOffset<Offset>","parent":{"krate":0,"index":8922},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8925},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878140,"byte_end":878153,"line_start":1118,"line_end":1118,"column_start":5,"column_end":18},"name":"DebugMacroRef","qualname":"::read::unit::AttributeValue::DebugMacroRef","value":"AttributeValue::DebugMacroRef(DebugMacroOffset<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset into the `.debug_macro` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macro` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878089,"byte_end":878135,"line_start":1117,"line_end":1117,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":8927},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878154,"byte_end":878178,"line_start":1118,"line_end":1118,"column_start":19,"column_end":43},"name":"0","qualname":"::read::unit::AttributeValue::DebugMacroRef::0","value":"common::DebugMacroOffset<Offset>","parent":{"krate":0,"index":8925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8928},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878238,"byte_end":878251,"line_start":1121,"line_end":1121,"column_start":5,"column_end":18},"name":"RangeListsRef","qualname":"::read::unit::AttributeValue::RangeListsRef","value":"AttributeValue::RangeListsRef(RangeListsOffset<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset into the `.debug_ranges` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_ranges` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878186,"byte_end":878233,"line_start":1120,"line_end":1120,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":8930},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878252,"byte_end":878276,"line_start":1121,"line_end":1121,"column_start":19,"column_end":43},"name":"0","qualname":"::read::unit::AttributeValue::RangeListsRef::0","value":"common::RangeListsOffset<Offset>","parent":{"krate":0,"index":8928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8931},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878356,"byte_end":878373,"line_start":1124,"line_end":1124,"column_start":5,"column_end":22},"name":"DebugRngListsBase","qualname":"::read::unit::AttributeValue::DebugRngListsBase","value":"AttributeValue::DebugRngListsBase(DebugRngListsBase<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset to a set of offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of offsets in the `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878284,"byte_end":878351,"line_start":1123,"line_end":1123,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":8933},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878374,"byte_end":878399,"line_start":1124,"line_end":1124,"column_start":23,"column_end":48},"name":"0","qualname":"::read::unit::AttributeValue::DebugRngListsBase::0","value":"common::DebugRngListsBase<Offset>","parent":{"krate":0,"index":8931},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8934},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878480,"byte_end":878498,"line_start":1127,"line_end":1127,"column_start":5,"column_end":23},"name":"DebugRngListsIndex","qualname":"::read::unit::AttributeValue::DebugRngListsIndex","value":"AttributeValue::DebugRngListsIndex(DebugRngListsIndex<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An index into a set of offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of offsets in the `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878407,"byte_end":878475,"line_start":1126,"line_end":1126,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":8936},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878499,"byte_end":878525,"line_start":1127,"line_end":1127,"column_start":24,"column_end":50},"name":"0","qualname":"::read::unit::AttributeValue::DebugRngListsIndex::0","value":"common::DebugRngListsIndex<Offset>","parent":{"krate":0,"index":8934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8937},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878559,"byte_end":878572,"line_start":1130,"line_end":1130,"column_start":5,"column_end":18},"name":"DebugTypesRef","qualname":"::read::unit::AttributeValue::DebugTypesRef","value":"AttributeValue::DebugTypesRef(DebugTypeSignature)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" A type signature.\n","sig":null,"attributes":[{"value":"/ A type signature.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878533,"byte_end":878554,"line_start":1129,"line_end":1129,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":8939},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878573,"byte_end":878591,"line_start":1130,"line_end":1130,"column_start":19,"column_end":37},"name":"0","qualname":"::read::unit::AttributeValue::DebugTypesRef::0","value":"common::DebugTypeSignature","parent":{"krate":0,"index":8937},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8940},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878648,"byte_end":878659,"line_start":1133,"line_end":1133,"column_start":5,"column_end":16},"name":"DebugStrRef","qualname":"::read::unit::AttributeValue::DebugStrRef","value":"AttributeValue::DebugStrRef(DebugStrOffset<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset into the `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878599,"byte_end":878643,"line_start":1132,"line_end":1132,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":8942},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878660,"byte_end":878682,"line_start":1133,"line_end":1133,"column_start":17,"column_end":39},"name":"0","qualname":"::read::unit::AttributeValue::DebugStrRef::0","value":"common::DebugStrOffset<Offset>","parent":{"krate":0,"index":8940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8943},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878772,"byte_end":878786,"line_start":1136,"line_end":1136,"column_start":5,"column_end":19},"name":"DebugStrRefSup","qualname":"::read::unit::AttributeValue::DebugStrRefSup","value":"AttributeValue::DebugStrRefSup(DebugStrOffset<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset into the `.debug_str` section of the supplementary object file.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_str` section of the supplementary object file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878690,"byte_end":878767,"line_start":1135,"line_end":1135,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":8945},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878787,"byte_end":878809,"line_start":1136,"line_end":1136,"column_start":20,"column_end":42},"name":"0","qualname":"::read::unit::AttributeValue::DebugStrRefSup::0","value":"common::DebugStrOffset<Offset>","parent":{"krate":0,"index":8943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8946},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878892,"byte_end":878911,"line_start":1139,"line_end":1139,"column_start":5,"column_end":24},"name":"DebugStrOffsetsBase","qualname":"::read::unit::AttributeValue::DebugStrOffsetsBase","value":"AttributeValue::DebugStrOffsetsBase(DebugStrOffsetsBase<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset to a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of entries in the `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878817,"byte_end":878887,"line_start":1138,"line_end":1138,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":8948},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878912,"byte_end":878939,"line_start":1139,"line_end":1139,"column_start":25,"column_end":52},"name":"0","qualname":"::read::unit::AttributeValue::DebugStrOffsetsBase::0","value":"common::DebugStrOffsetsBase<Offset>","parent":{"krate":0,"index":8946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8949},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879023,"byte_end":879043,"line_start":1142,"line_end":1142,"column_start":5,"column_end":25},"name":"DebugStrOffsetsIndex","qualname":"::read::unit::AttributeValue::DebugStrOffsetsIndex","value":"AttributeValue::DebugStrOffsetsIndex(DebugStrOffsetsIndex<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An index into a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of entries in the `.debug_str_offsets` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":878947,"byte_end":879018,"line_start":1141,"line_end":1141,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":8951},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879044,"byte_end":879072,"line_start":1142,"line_end":1142,"column_start":26,"column_end":54},"name":"0","qualname":"::read::unit::AttributeValue::DebugStrOffsetsIndex::0","value":"common::DebugStrOffsetsIndex<Offset>","parent":{"krate":0,"index":8949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8952},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879134,"byte_end":879149,"line_start":1145,"line_end":1145,"column_start":5,"column_end":20},"name":"DebugLineStrRef","qualname":"::read::unit::AttributeValue::DebugLineStrRef","value":"AttributeValue::DebugLineStrRef(DebugLineStrOffset<Offset>)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An offset into the `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_line_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879080,"byte_end":879129,"line_start":1144,"line_end":1144,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":8954},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879150,"byte_end":879176,"line_start":1145,"line_end":1145,"column_start":21,"column_end":47},"name":"0","qualname":"::read::unit::AttributeValue::DebugLineStrRef::0","value":"common::DebugLineStrOffset<Offset>","parent":{"krate":0,"index":8952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8955},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879326,"byte_end":879332,"line_start":1149,"line_end":1149,"column_start":5,"column_end":11},"name":"String","qualname":"::read::unit::AttributeValue::String","value":"AttributeValue::String(R)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" A slice of bytes representing a string. Does not include a final null byte.\n Not guaranteed to be UTF-8 or anything like that.\n","sig":null,"attributes":[{"value":"/ A slice of bytes representing a string. Does not include a final null byte.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879184,"byte_end":879263,"line_start":1147,"line_end":1147,"column_start":5,"column_end":84}},{"value":"/ Not guaranteed to be UTF-8 or anything like that.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879268,"byte_end":879321,"line_start":1148,"line_end":1148,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":8957},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879333,"byte_end":879334,"line_start":1149,"line_end":1149,"column_start":12,"column_end":13},"name":"0","qualname":"::read::unit::AttributeValue::String::0","value":"R","parent":{"krate":0,"index":8955},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8958},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879393,"byte_end":879401,"line_start":1152,"line_end":1152,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::read::unit::AttributeValue::Encoding","value":"AttributeValue::Encoding(constants::DwAte)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_encoding` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_encoding` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879342,"byte_end":879388,"line_start":1151,"line_end":1151,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":8960},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879402,"byte_end":879418,"line_start":1152,"line_end":1152,"column_start":14,"column_end":30},"name":"0","qualname":"::read::unit::AttributeValue::Encoding::0","value":"constants::DwAte","parent":{"krate":0,"index":8958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8961},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879481,"byte_end":879492,"line_start":1155,"line_end":1155,"column_start":5,"column_end":16},"name":"DecimalSign","qualname":"::read::unit::AttributeValue::DecimalSign","value":"AttributeValue::DecimalSign(constants::DwDs)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_decimal_sign` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_decimal_sign` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879426,"byte_end":879476,"line_start":1154,"line_end":1154,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":8963},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879493,"byte_end":879508,"line_start":1155,"line_end":1155,"column_start":17,"column_end":32},"name":"0","qualname":"::read::unit::AttributeValue::DecimalSign::0","value":"constants::DwDs","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8964},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879568,"byte_end":879577,"line_start":1158,"line_end":1158,"column_start":5,"column_end":14},"name":"Endianity","qualname":"::read::unit::AttributeValue::Endianity","value":"AttributeValue::Endianity(constants::DwEnd)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_endianity` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_endianity` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879516,"byte_end":879563,"line_start":1157,"line_end":1157,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":8966},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879578,"byte_end":879594,"line_start":1158,"line_end":1158,"column_start":15,"column_end":31},"name":"0","qualname":"::read::unit::AttributeValue::Endianity::0","value":"constants::DwEnd","parent":{"krate":0,"index":8964},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8967},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879658,"byte_end":879671,"line_start":1161,"line_end":1161,"column_start":5,"column_end":18},"name":"Accessibility","qualname":"::read::unit::AttributeValue::Accessibility","value":"AttributeValue::Accessibility(constants::DwAccess)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_accessibility` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_accessibility` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879602,"byte_end":879653,"line_start":1160,"line_end":1160,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":8969},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879672,"byte_end":879691,"line_start":1161,"line_end":1161,"column_start":19,"column_end":38},"name":"0","qualname":"::read::unit::AttributeValue::Accessibility::0","value":"constants::DwAccess","parent":{"krate":0,"index":8967},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8970},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879752,"byte_end":879762,"line_start":1164,"line_end":1164,"column_start":5,"column_end":15},"name":"Visibility","qualname":"::read::unit::AttributeValue::Visibility","value":"AttributeValue::Visibility(constants::DwVis)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_visibility` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_visibility` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879699,"byte_end":879747,"line_start":1163,"line_end":1163,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":8972},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879763,"byte_end":879779,"line_start":1164,"line_end":1164,"column_start":16,"column_end":32},"name":"0","qualname":"::read::unit::AttributeValue::Visibility::0","value":"constants::DwVis","parent":{"krate":0,"index":8970},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8973},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879840,"byte_end":879850,"line_start":1167,"line_end":1167,"column_start":5,"column_end":15},"name":"Virtuality","qualname":"::read::unit::AttributeValue::Virtuality","value":"AttributeValue::Virtuality(constants::DwVirtuality)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_virtuality` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_virtuality` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879787,"byte_end":879835,"line_start":1166,"line_end":1166,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":8975},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879851,"byte_end":879874,"line_start":1167,"line_end":1167,"column_start":16,"column_end":39},"name":"0","qualname":"::read::unit::AttributeValue::Virtuality::0","value":"constants::DwVirtuality","parent":{"krate":0,"index":8973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8976},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879933,"byte_end":879941,"line_start":1170,"line_end":1170,"column_start":5,"column_end":13},"name":"Language","qualname":"::read::unit::AttributeValue::Language","value":"AttributeValue::Language(constants::DwLang)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_language` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_language` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879882,"byte_end":879928,"line_start":1169,"line_end":1169,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":8978},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879942,"byte_end":879959,"line_start":1170,"line_end":1170,"column_start":14,"column_end":31},"name":"0","qualname":"::read::unit::AttributeValue::Language::0","value":"constants::DwLang","parent":{"krate":0,"index":8976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8979},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880023,"byte_end":880035,"line_start":1173,"line_end":1173,"column_start":5,"column_end":17},"name":"AddressClass","qualname":"::read::unit::AttributeValue::AddressClass","value":"AttributeValue::AddressClass(constants::DwAddr)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_address_class` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_address_class` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":879967,"byte_end":880018,"line_start":1172,"line_end":1172,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":8981},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880036,"byte_end":880053,"line_start":1173,"line_end":1173,"column_start":18,"column_end":35},"name":"0","qualname":"::read::unit::AttributeValue::AddressClass::0","value":"constants::DwAddr","parent":{"krate":0,"index":8979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8982},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880119,"byte_end":880133,"line_start":1176,"line_end":1176,"column_start":5,"column_end":19},"name":"IdentifierCase","qualname":"::read::unit::AttributeValue::IdentifierCase","value":"AttributeValue::IdentifierCase(constants::DwId)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_identifier_case` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_identifier_case` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880061,"byte_end":880114,"line_start":1175,"line_end":1175,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":8984},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880134,"byte_end":880149,"line_start":1176,"line_end":1176,"column_start":20,"column_end":35},"name":"0","qualname":"::read::unit::AttributeValue::IdentifierCase::0","value":"constants::DwId","parent":{"krate":0,"index":8982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8985},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880218,"byte_end":880235,"line_start":1179,"line_end":1179,"column_start":5,"column_end":22},"name":"CallingConvention","qualname":"::read::unit::AttributeValue::CallingConvention","value":"AttributeValue::CallingConvention(constants::DwCc)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_calling_convention` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_calling_convention` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880157,"byte_end":880213,"line_start":1178,"line_end":1178,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":8987},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880236,"byte_end":880251,"line_start":1179,"line_end":1179,"column_start":23,"column_end":38},"name":"0","qualname":"::read::unit::AttributeValue::CallingConvention::0","value":"constants::DwCc","parent":{"krate":0,"index":8985},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8988},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880308,"byte_end":880314,"line_start":1182,"line_end":1182,"column_start":5,"column_end":11},"name":"Inline","qualname":"::read::unit::AttributeValue::Inline","value":"AttributeValue::Inline(constants::DwInl)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_inline` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_inline` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880259,"byte_end":880303,"line_start":1181,"line_end":1181,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":8990},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880315,"byte_end":880331,"line_start":1182,"line_end":1182,"column_start":12,"column_end":28},"name":"0","qualname":"::read::unit::AttributeValue::Inline::0","value":"constants::DwInl","parent":{"krate":0,"index":8988},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8991},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880390,"byte_end":880398,"line_start":1185,"line_end":1185,"column_start":5,"column_end":13},"name":"Ordering","qualname":"::read::unit::AttributeValue::Ordering","value":"AttributeValue::Ordering(constants::DwOrd)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_ordering` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_ordering` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880339,"byte_end":880385,"line_start":1184,"line_end":1184,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":8993},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880399,"byte_end":880415,"line_start":1185,"line_end":1185,"column_start":14,"column_end":30},"name":"0","qualname":"::read::unit::AttributeValue::Ordering::0","value":"constants::DwOrd","parent":{"krate":0,"index":8991},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8994},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880561,"byte_end":880570,"line_start":1189,"line_end":1189,"column_start":5,"column_end":14},"name":"FileIndex","qualname":"::read::unit::AttributeValue::FileIndex","value":"AttributeValue::FileIndex(u64)","parent":{"krate":0,"index":8859},"children":[],"decl_id":null,"docs":" An index into the filename entries from the line number information\n table for the compilation unit containing this value.\n","sig":null,"attributes":[{"value":"/ An index into the filename entries from the line number information","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880423,"byte_end":880494,"line_start":1187,"line_end":1187,"column_start":5,"column_end":76}},{"value":"/ table for the compilation unit containing this value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880499,"byte_end":880556,"line_start":1188,"line_end":1188,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":8996},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880571,"byte_end":880574,"line_start":1189,"line_end":1189,"column_start":15,"column_end":18},"name":"0","qualname":"::read::unit::AttributeValue::FileIndex::0","value":"u64","parent":{"krate":0,"index":8994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8859},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":874587,"byte_end":874601,"line_start":1021,"line_end":1021,"column_start":10,"column_end":24},"name":"AttributeValue","qualname":"::read::unit::AttributeValue","value":"enum AttributeValue<R, Offset = <R as Reader>::Offset> where R: Reader<Offset\n    = Offset>, Offset: ReaderOffset {\n    Addr(u64),\n    Block(R),\n    Data1(u8),\n    Data2(u16),\n    Data4(u32),\n    Data8(u64),\n    Sdata(i64),\n    Udata(u64),\n    Exprloc(Expression<R>),\n    Flag(bool),\n    SecOffset(Offset),\n    DebugAddrBase(DebugAddrBase<Offset>),\n    DebugAddrIndex(DebugAddrIndex<Offset>),\n    UnitRef(UnitOffset<Offset>),\n    DebugInfoRef(DebugInfoOffset<Offset>),\n    DebugInfoRefSup(DebugInfoOffset<Offset>),\n    DebugLineRef(DebugLineOffset<Offset>),\n    LocationListsRef(LocationListsOffset<Offset>),\n    DebugLocListsBase(DebugLocListsBase<Offset>),\n    DebugLocListsIndex(DebugLocListsIndex<Offset>),\n    DebugMacinfoRef(DebugMacinfoOffset<Offset>),\n    DebugMacroRef(DebugMacroOffset<Offset>),\n    RangeListsRef(RangeListsOffset<Offset>),\n    DebugRngListsBase(DebugRngListsBase<Offset>),\n    DebugRngListsIndex(DebugRngListsIndex<Offset>),\n    DebugTypesRef(DebugTypeSignature),\n    DebugStrRef(DebugStrOffset<Offset>),\n    DebugStrRefSup(DebugStrOffset<Offset>),\n    DebugStrOffsetsBase(DebugStrOffsetsBase<Offset>),\n    DebugStrOffsetsIndex(DebugStrOffsetsIndex<Offset>),\n    DebugLineStrRef(DebugLineStrOffset<Offset>),\n    String(R),\n    Encoding(constants::DwAte),\n    DecimalSign(constants::DwDs),\n    Endianity(constants::DwEnd),\n    Accessibility(constants::DwAccess),\n    Visibility(constants::DwVis),\n    Virtuality(constants::DwVirtuality),\n    Language(constants::DwLang),\n    AddressClass(constants::DwAddr),\n    IdentifierCase(constants::DwId),\n    CallingConvention(constants::DwCc),\n    Inline(constants::DwInl),\n    Ordering(constants::DwOrd),\n    FileIndex(u64),\n}","parent":null,"children":[{"krate":0,"index":8862},{"krate":0,"index":8865},{"krate":0,"index":8868},{"krate":0,"index":8871},{"krate":0,"index":8874},{"krate":0,"index":8877},{"krate":0,"index":8880},{"krate":0,"index":8883},{"krate":0,"index":8886},{"krate":0,"index":8889},{"krate":0,"index":8892},{"krate":0,"index":8895},{"krate":0,"index":8898},{"krate":0,"index":8901},{"krate":0,"index":8904},{"krate":0,"index":8907},{"krate":0,"index":8910},{"krate":0,"index":8913},{"krate":0,"index":8916},{"krate":0,"index":8919},{"krate":0,"index":8922},{"krate":0,"index":8925},{"krate":0,"index":8928},{"krate":0,"index":8931},{"krate":0,"index":8934},{"krate":0,"index":8937},{"krate":0,"index":8940},{"krate":0,"index":8943},{"krate":0,"index":8946},{"krate":0,"index":8949},{"krate":0,"index":8952},{"krate":0,"index":8955},{"krate":0,"index":8958},{"krate":0,"index":8961},{"krate":0,"index":8964},{"krate":0,"index":8967},{"krate":0,"index":8970},{"krate":0,"index":8973},{"krate":0,"index":8976},{"krate":0,"index":8979},{"krate":0,"index":8982},{"krate":0,"index":8985},{"krate":0,"index":8988},{"krate":0,"index":8991},{"krate":0,"index":8994}],"decl_id":null,"docs":" The value of an attribute in a `DebuggingInformationEntry`.\n","sig":null,"attributes":[{"value":"/ The value of an attribute in a `DebuggingInformationEntry`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":874304,"byte_end":874367,"line_start":1015,"line_end":1015,"column_start":1,"column_end":64}},{"value":"repr(u64)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":874520,"byte_end":874532,"line_start":1019,"line_end":1019,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":9023},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880734,"byte_end":880743,"line_start":1195,"line_end":1195,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::read::unit::Attribute","value":"Attribute {  }","parent":null,"children":[{"krate":0,"index":9025},{"krate":0,"index":9026}],"decl_id":null,"docs":" An attribute in a `DebuggingInformationEntry`, consisting of a name and\n associated value.\n","sig":null,"attributes":[{"value":"/ An attribute in a `DebuggingInformationEntry`, consisting of a name and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880580,"byte_end":880655,"line_start":1192,"line_end":1192,"column_start":1,"column_end":76}},{"value":"/ associated value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880656,"byte_end":880677,"line_start":1193,"line_end":1193,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880894,"byte_end":880898,"line_start":1202,"line_end":1202,"column_start":12,"column_end":16},"name":"name","qualname":"<Attribute<R>>::name","value":"fn name(&Self) -> constants::DwAt","parent":null,"children":[],"decl_id":null,"docs":" Get this attribute's name.\n","sig":null,"attributes":[{"value":"/ Get this attribute's name.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880852,"byte_end":880882,"line_start":1201,"line_end":1201,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":881003,"byte_end":881012,"line_start":1207,"line_end":1207,"column_start":12,"column_end":21},"name":"raw_value","qualname":"<Attribute<R>>::raw_value","value":"fn raw_value(&Self) -> AttributeValue<R>","parent":null,"children":[],"decl_id":null,"docs":" Get this attribute's raw value.\n","sig":null,"attributes":[{"value":"/ Get this attribute's raw value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880956,"byte_end":880991,"line_start":1206,"line_end":1206,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":881581,"byte_end":881586,"line_start":1221,"line_end":1221,"column_start":12,"column_end":17},"name":"value","qualname":"<Attribute<R>>::value","value":"fn value(&Self) -> AttributeValue<R>","parent":null,"children":[],"decl_id":null,"docs":" Get this attribute's normalized value.","sig":null,"attributes":[{"value":"/ Get this attribute's normalized value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":881081,"byte_end":881123,"line_start":1211,"line_end":1211,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":881128,"byte_end":881131,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ Attribute values can potentially be encoded in multiple equivalent forms,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":881136,"byte_end":881213,"line_start":1213,"line_end":1213,"column_start":5,"column_end":82}},{"value":"/ and may have special meaning depending on the attribute name.  This method","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":881218,"byte_end":881296,"line_start":1214,"line_end":1214,"column_start":5,"column_end":83}},{"value":"/ converts the attribute value to a normalized form based on the attribute","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":881301,"byte_end":881377,"line_start":1215,"line_end":1215,"column_start":5,"column_end":81}},{"value":"/ name.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":881382,"byte_end":881391,"line_start":1216,"line_end":1216,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":881396,"byte_end":881399,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ See \"Table 7.5: Attribute encodings\" and \"Table 7.6: Attribute form encodings\".","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":881404,"byte_end":881487,"line_start":1218,"line_end":1218,"column_start":5,"column_end":88}},{"value":"allow(clippy :: cyclomatic_complexity)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":881492,"byte_end":881531,"line_start":1219,"line_end":1219,"column_start":5,"column_end":44}},{"value":"allow(clippy :: match_same_arms)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":881536,"byte_end":881569,"line_start":1220,"line_end":1220,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900243,"byte_end":900251,"line_start":1801,"line_end":1801,"column_start":12,"column_end":20},"name":"u8_value","qualname":"<Attribute<R>>::u8_value","value":"fn u8_value(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u8.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a u8.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900167,"byte_end":900217,"line_start":1799,"line_end":1799,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900222,"byte_end":900231,"line_start":1800,"line_end":1800,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900393,"byte_end":900402,"line_start":1807,"line_end":1807,"column_start":12,"column_end":21},"name":"u16_value","qualname":"<Attribute<R>>::u16_value","value":"fn u16_value(&Self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u16.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a u16.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900316,"byte_end":900367,"line_start":1805,"line_end":1805,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900372,"byte_end":900381,"line_start":1806,"line_end":1806,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900560,"byte_end":900571,"line_start":1813,"line_end":1813,"column_start":12,"column_end":23},"name":"udata_value","qualname":"<Attribute<R>>::udata_value","value":"fn udata_value(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an unsigned integer.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an unsigned integer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900469,"byte_end":900534,"line_start":1811,"line_end":1811,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900539,"byte_end":900548,"line_start":1812,"line_end":1812,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900728,"byte_end":900739,"line_start":1819,"line_end":1819,"column_start":12,"column_end":23},"name":"sdata_value","qualname":"<Attribute<R>>::sdata_value","value":"fn sdata_value(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a signed integer.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a signed integer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900640,"byte_end":900702,"line_start":1817,"line_end":1817,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900707,"byte_end":900716,"line_start":1818,"line_end":1818,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900889,"byte_end":900901,"line_start":1825,"line_end":1825,"column_start":12,"column_end":24},"name":"offset_value","qualname":"<Attribute<R>>::offset_value","value":"fn offset_value(&Self) -> Option<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an offset.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900808,"byte_end":900863,"line_start":1823,"line_end":1823,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900868,"byte_end":900877,"line_start":1824,"line_end":1824,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901286,"byte_end":901299,"line_start":1835,"line_end":1835,"column_start":12,"column_end":25},"name":"exprloc_value","qualname":"<Attribute<R>>::exprloc_value","value":"fn exprloc_value(&Self) -> Option<Expression<R>>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an expression or location buffer.","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an expression or location buffer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":900977,"byte_end":901055,"line_start":1829,"line_end":1829,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901060,"byte_end":901063,"line_start":1830,"line_end":1830,"column_start":5,"column_end":8}},{"value":"/ Expressions and locations may be `DW_FORM_block*` or `DW_FORM_exprloc`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901068,"byte_end":901143,"line_start":1831,"line_end":1831,"column_start":5,"column_end":80}},{"value":"/ The standard doesn't mention `DW_FORM_block*` as a possible form, but","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901148,"byte_end":901221,"line_start":1832,"line_end":1832,"column_start":5,"column_end":78}},{"value":"/ it is encountered in practice.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901226,"byte_end":901260,"line_start":1833,"line_end":1833,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901265,"byte_end":901274,"line_start":1834,"line_end":1834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901873,"byte_end":901885,"line_start":1849,"line_end":1849,"column_start":12,"column_end":24},"name":"string_value","qualname":"<Attribute<R>>::string_value","value":"fn string_value(&Self, &DebugStr<R>) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"/ Try to return this attribute's value as a string slice.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901380,"byte_end":901439,"line_start":1839,"line_end":1839,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901444,"byte_end":901447,"line_start":1840,"line_end":1840,"column_start":5,"column_end":8}},{"value":"/ If this attribute's value is either an inline `DW_FORM_string` string,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901452,"byte_end":901526,"line_start":1841,"line_end":1841,"column_start":5,"column_end":79}},{"value":"/ or a `DW_FORM_strp` reference to an offset into the `.debug_str`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901531,"byte_end":901599,"line_start":1842,"line_end":1842,"column_start":5,"column_end":73}},{"value":"/ section, return the attribute's string value as `Some`. Other attribute","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901604,"byte_end":901679,"line_start":1843,"line_end":1843,"column_start":5,"column_end":80}},{"value":"/ value forms are returned as `None`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901684,"byte_end":901723,"line_start":1844,"line_end":1844,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901728,"byte_end":901731,"line_start":1845,"line_end":1845,"column_start":5,"column_end":8}},{"value":"/ Warning: this function does not handle all possible string forms.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901736,"byte_end":901805,"line_start":1846,"line_end":1846,"column_start":5,"column_end":74}},{"value":"/ Use `Dwarf::attr_string` instead.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901810,"byte_end":901847,"line_start":1847,"line_end":1847,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901852,"byte_end":901861,"line_start":1848,"line_end":1848,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902569,"byte_end":902585,"line_start":1864,"line_end":1864,"column_start":12,"column_end":28},"name":"string_value_sup","qualname":"<Attribute<R>>::string_value_sup","value":"fn string_value_sup(&Self, &DebugStr<R>, Option<&DebugStr<R>>) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"/ Try to return this attribute's value as a string slice.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":901987,"byte_end":902046,"line_start":1853,"line_end":1853,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902051,"byte_end":902054,"line_start":1854,"line_end":1854,"column_start":5,"column_end":8}},{"value":"/ If this attribute's value is either an inline `DW_FORM_string` string,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902059,"byte_end":902133,"line_start":1855,"line_end":1855,"column_start":5,"column_end":79}},{"value":"/ or a `DW_FORM_strp` reference to an offset into the `.debug_str`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902138,"byte_end":902206,"line_start":1856,"line_end":1856,"column_start":5,"column_end":73}},{"value":"/ section, or a `DW_FORM_strp_sup` reference to an offset into a supplementary","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902211,"byte_end":902291,"line_start":1857,"line_end":1857,"column_start":5,"column_end":85}},{"value":"/ object file, return the attribute's string value as `Some`. Other attribute","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902296,"byte_end":902375,"line_start":1858,"line_end":1858,"column_start":5,"column_end":84}},{"value":"/ value forms are returned as `None`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902380,"byte_end":902419,"line_start":1859,"line_end":1859,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902424,"byte_end":902427,"line_start":1860,"line_end":1860,"column_start":5,"column_end":8}},{"value":"/ Warning: this function does not handle all possible string forms.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902432,"byte_end":902501,"line_start":1861,"line_end":1861,"column_start":5,"column_end":74}},{"value":"/ Use `Dwarf::attr_string` instead.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902506,"byte_end":902543,"line_start":1862,"line_end":1862,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902548,"byte_end":902557,"line_start":1863,"line_end":1863,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902946,"byte_end":902954,"line_start":1879,"line_end":1879,"column_start":12,"column_end":20},"name":"u8_value","qualname":"<AttributeValue<R, Offset>>::u8_value","value":"fn u8_value(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u8.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a u8.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902884,"byte_end":902934,"line_start":1878,"line_end":1878,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":903226,"byte_end":903235,"line_start":1889,"line_end":1889,"column_start":12,"column_end":21},"name":"u16_value","qualname":"<AttributeValue<R, Offset>>::u16_value","value":"fn u16_value(&Self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u16.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a u16.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":903163,"byte_end":903214,"line_start":1888,"line_end":1888,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":903524,"byte_end":903535,"line_start":1899,"line_end":1899,"column_start":12,"column_end":23},"name":"udata_value","qualname":"<AttributeValue<R, Offset>>::udata_value","value":"fn udata_value(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an unsigned integer.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an unsigned integer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":903447,"byte_end":903512,"line_start":1898,"line_end":1898,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":904218,"byte_end":904229,"line_start":1918,"line_end":1918,"column_start":12,"column_end":23},"name":"sdata_value","qualname":"<AttributeValue<R, Offset>>::sdata_value","value":"fn sdata_value(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a signed integer.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a signed integer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":904144,"byte_end":904206,"line_start":1917,"line_end":1917,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2691},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":904954,"byte_end":904966,"line_start":1937,"line_end":1937,"column_start":12,"column_end":24},"name":"offset_value","qualname":"<AttributeValue<R, Offset>>::offset_value","value":"fn offset_value(&Self) -> Option<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an offset.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":904887,"byte_end":904942,"line_start":1936,"line_end":1936,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":905562,"byte_end":905575,"line_start":1952,"line_end":1952,"column_start":12,"column_end":25},"name":"exprloc_value","qualname":"<AttributeValue<R, Offset>>::exprloc_value","value":"fn exprloc_value(&Self) -> Option<Expression<R>>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an expression or location buffer.","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an expression or location buffer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":905267,"byte_end":905345,"line_start":1947,"line_end":1947,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":905350,"byte_end":905353,"line_start":1948,"line_end":1948,"column_start":5,"column_end":8}},{"value":"/ Expressions and locations may be `DW_FORM_block*` or `DW_FORM_exprloc`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":905358,"byte_end":905433,"line_start":1949,"line_end":1949,"column_start":5,"column_end":80}},{"value":"/ The standard doesn't mention `DW_FORM_block*` as a possible form, but","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":905438,"byte_end":905511,"line_start":1950,"line_end":1950,"column_start":5,"column_end":78}},{"value":"/ it is encountered in practice.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":905516,"byte_end":905550,"line_start":1951,"line_end":1951,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2693},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":906304,"byte_end":906316,"line_start":1969,"line_end":1969,"column_start":12,"column_end":24},"name":"string_value","qualname":"<AttributeValue<R, Offset>>::string_value","value":"fn string_value(&Self, &DebugStr<R>) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"/ Try to return this attribute's value as a string slice.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":905825,"byte_end":905884,"line_start":1960,"line_end":1960,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":905889,"byte_end":905892,"line_start":1961,"line_end":1961,"column_start":5,"column_end":8}},{"value":"/ If this attribute's value is either an inline `DW_FORM_string` string,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":905897,"byte_end":905971,"line_start":1962,"line_end":1962,"column_start":5,"column_end":79}},{"value":"/ or a `DW_FORM_strp` reference to an offset into the `.debug_str`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":905976,"byte_end":906044,"line_start":1963,"line_end":1963,"column_start":5,"column_end":73}},{"value":"/ section, return the attribute's string value as `Some`. Other attribute","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":906049,"byte_end":906124,"line_start":1964,"line_end":1964,"column_start":5,"column_end":80}},{"value":"/ value forms are returned as `None`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":906129,"byte_end":906168,"line_start":1965,"line_end":1965,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":906173,"byte_end":906176,"line_start":1966,"line_end":1966,"column_start":5,"column_end":8}},{"value":"/ Warning: this function does not handle all possible string forms.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":906181,"byte_end":906250,"line_start":1967,"line_end":1967,"column_start":5,"column_end":74}},{"value":"/ Use `Dwarf::attr_string` instead.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":906255,"byte_end":906292,"line_start":1968,"line_end":1968,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":907153,"byte_end":907169,"line_start":1987,"line_end":1987,"column_start":12,"column_end":28},"name":"string_value_sup","qualname":"<AttributeValue<R, Offset>>::string_value_sup","value":"fn string_value_sup(&Self, &DebugStr<R>, Option<&DebugStr<R>>) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"/ Try to return this attribute's value as a string slice.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":906585,"byte_end":906644,"line_start":1977,"line_end":1977,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":906649,"byte_end":906652,"line_start":1978,"line_end":1978,"column_start":5,"column_end":8}},{"value":"/ If this attribute's value is either an inline `DW_FORM_string` string,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":906657,"byte_end":906731,"line_start":1979,"line_end":1979,"column_start":5,"column_end":79}},{"value":"/ or a `DW_FORM_strp` reference to an offset into the `.debug_str`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":906736,"byte_end":906804,"line_start":1980,"line_end":1980,"column_start":5,"column_end":73}},{"value":"/ section, or a `DW_FORM_strp_sup` reference to an offset into a supplementary","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":906809,"byte_end":906889,"line_start":1981,"line_end":1981,"column_start":5,"column_end":85}},{"value":"/ object file, return the attribute's string value as `Some`. Other attribute","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":906894,"byte_end":906973,"line_start":1982,"line_end":1982,"column_start":5,"column_end":84}},{"value":"/ value forms are returned as `None`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":906978,"byte_end":907017,"line_start":1983,"line_end":1983,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":907022,"byte_end":907025,"line_start":1984,"line_end":1984,"column_start":5,"column_end":8}},{"value":"/ Warning: this function does not handle all possible string forms.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":907030,"byte_end":907099,"line_start":1985,"line_end":1985,"column_start":5,"column_end":74}},{"value":"/ Use `Dwarf::attr_string` instead.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":907104,"byte_end":907141,"line_start":1986,"line_end":1986,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":9046},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919425,"byte_end":919434,"line_start":2274,"line_end":2274,"column_start":12,"column_end":21},"name":"AttrsIter","qualname":"::read::unit::AttrsIter","value":"AttrsIter {  }","parent":null,"children":[{"krate":0,"index":9051},{"krate":0,"index":9052},{"krate":0,"index":9053}],"decl_id":null,"docs":" An iterator over a particular entry's attributes.","sig":null,"attributes":[{"value":"/ An iterator over a particular entry's attributes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919089,"byte_end":919142,"line_start":2265,"line_end":2265,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919143,"byte_end":919146,"line_start":2266,"line_end":2266,"column_start":1,"column_end":4}},{"value":"/ See [the documentation for","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919147,"byte_end":919177,"line_start":2267,"line_end":2267,"column_start":1,"column_end":31}},{"value":"/ `DebuggingInformationEntry::attrs()`](./struct.DebuggingInformationEntry.html#method.attrs)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919178,"byte_end":919273,"line_start":2268,"line_end":2268,"column_start":1,"column_end":96}},{"value":"/ for details.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919274,"byte_end":919290,"line_start":2269,"line_end":2269,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919291,"byte_end":919294,"line_start":2270,"line_end":2270,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919295,"byte_end":919316,"line_start":2271,"line_end":2271,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919317,"byte_end":919383,"line_start":2272,"line_end":2272,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":920010,"byte_end":920014,"line_start":2288,"line_end":2288,"column_start":12,"column_end":16},"name":"next","qualname":"<AttrsIter>::next","value":"fn next(&mut Self) -> Result<Option<Attribute<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next attribute.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919688,"byte_end":919743,"line_start":2281,"line_end":2281,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919748,"byte_end":919751,"line_start":2282,"line_end":2282,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when iteration is finished. If an error","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919756,"byte_end":919814,"line_start":2283,"line_end":2283,"column_start":5,"column_end":63}},{"value":"/ occurs while parsing the next attribute, then this error","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919819,"byte_end":919879,"line_start":2284,"line_end":2284,"column_start":5,"column_end":65}},{"value":"/ is returned, and all subsequent calls return `None`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919884,"byte_end":919940,"line_start":2285,"line_end":2285,"column_start":5,"column_end":61}},{"value":"allow(clippy :: inline_always)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919945,"byte_end":919976,"line_start":2286,"line_end":2286,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919981,"byte_end":919998,"line_start":2287,"line_end":2287,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":921340,"byte_end":921344,"line_start":2327,"line_end":2327,"column_start":8,"column_end":12},"name":"next","qualname":"<AttrsIter as fallible_iterator::FallibleIterator>::next","value":"fn next(&mut Self) -> ::core::result::Result<Option<Self::Item>, Self::Error>","parent":{"krate":25,"index":59},"children":[],"decl_id":{"krate":25,"index":62},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9071},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923765,"byte_end":923775,"line_start":2387,"line_end":2387,"column_start":12,"column_end":22},"name":"EntriesRaw","qualname":"::read::unit::EntriesRaw","value":"EntriesRaw {  }","parent":null,"children":[{"krate":0,"index":9075},{"krate":0,"index":9076},{"krate":0,"index":9077},{"krate":0,"index":9078}],"decl_id":null,"docs":" A raw reader of the data that defines the Debugging Information Entries.","sig":null,"attributes":[{"value":"/ A raw reader of the data that defines the Debugging Information Entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":921456,"byte_end":921532,"line_start":2332,"line_end":2332,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":921533,"byte_end":921536,"line_start":2333,"line_end":2333,"column_start":1,"column_end":4}},{"value":"/ `EntriesRaw` provides primitives to read the components of Debugging Information","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":921537,"byte_end":921621,"line_start":2334,"line_end":2334,"column_start":1,"column_end":85}},{"value":"/ Entries (DIEs). A DIE consists of an abbreviation code (read with `read_abbreviation`)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":921622,"byte_end":921712,"line_start":2335,"line_end":2335,"column_start":1,"column_end":91}},{"value":"/ followed by a number of attributes (read with `read_attribute`).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":921713,"byte_end":921781,"line_start":2336,"line_end":2336,"column_start":1,"column_end":69}},{"value":"/ The user must provide the control flow to read these correctly.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":921782,"byte_end":921849,"line_start":2337,"line_end":2337,"column_start":1,"column_end":68}},{"value":"/ In particular, all attributes must always be read before reading another","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":921850,"byte_end":921926,"line_start":2338,"line_end":2338,"column_start":1,"column_end":77}},{"value":"/ abbreviation code.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":921927,"byte_end":921949,"line_start":2339,"line_end":2339,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":921950,"byte_end":921953,"line_start":2340,"line_end":2340,"column_start":1,"column_end":4}},{"value":"/ `EntriesRaw` lacks some features of `EntriesCursor`, such as the ability to skip","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":921954,"byte_end":922038,"line_start":2341,"line_end":2341,"column_start":1,"column_end":85}},{"value":"/ to the next sibling DIE. However, this also allows it to optimize better, since it","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922039,"byte_end":922125,"line_start":2342,"line_end":2342,"column_start":1,"column_end":87}},{"value":"/ does not need to perform the extra bookkeeping required to support these features,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922126,"byte_end":922212,"line_start":2343,"line_end":2343,"column_start":1,"column_end":87}},{"value":"/ and thus it is suitable for cases where performance is important.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922213,"byte_end":922282,"line_start":2344,"line_end":2344,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922283,"byte_end":922286,"line_start":2345,"line_end":2345,"column_start":1,"column_end":4}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922287,"byte_end":922307,"line_start":2346,"line_end":2346,"column_start":1,"column_end":21}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922308,"byte_end":922326,"line_start":2347,"line_end":2347,"column_start":1,"column_end":19}},{"value":"/ # fn example() -> Result<(), gimli::Error> {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922327,"byte_end":922375,"line_start":2348,"line_end":2348,"column_start":1,"column_end":49}},{"value":"/ # let debug_info = gimli::DebugInfo::new(&[], gimli::LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922376,"byte_end":922447,"line_start":2349,"line_end":2349,"column_start":1,"column_end":72}},{"value":"/ # let get_some_unit = || debug_info.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922448,"byte_end":922521,"line_start":2350,"line_end":2350,"column_start":1,"column_end":74}},{"value":"/ let unit = get_some_unit();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922522,"byte_end":922553,"line_start":2351,"line_end":2351,"column_start":1,"column_end":32}},{"value":"/ # let debug_abbrev = gimli::DebugAbbrev::new(&[], gimli::LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922554,"byte_end":922629,"line_start":2352,"line_end":2352,"column_start":1,"column_end":76}},{"value":"/ # let get_abbrevs_for_unit = |_| unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922630,"byte_end":922710,"line_start":2353,"line_end":2353,"column_start":1,"column_end":81}},{"value":"/ let abbrevs = get_abbrevs_for_unit(&unit);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922711,"byte_end":922757,"line_start":2354,"line_end":2354,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922758,"byte_end":922761,"line_start":2355,"line_end":2355,"column_start":1,"column_end":4}},{"value":"/ let mut entries = unit.entries_raw(&abbrevs, None)?;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922762,"byte_end":922818,"line_start":2356,"line_end":2356,"column_start":1,"column_end":57}},{"value":"/ while !entries.is_empty() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922819,"byte_end":922850,"line_start":2357,"line_end":2357,"column_start":1,"column_end":32}},{"value":"/     let abbrev = if let Some(abbrev) = entries.read_abbreviation()? {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922851,"byte_end":922924,"line_start":2358,"line_end":2358,"column_start":1,"column_end":74}},{"value":"/         abbrev","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922925,"byte_end":922943,"line_start":2359,"line_end":2359,"column_start":1,"column_end":19}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922944,"byte_end":922960,"line_start":2360,"line_end":2360,"column_start":1,"column_end":17}},{"value":"/         // Null entry with no attributes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":922961,"byte_end":923006,"line_start":2361,"line_end":2361,"column_start":1,"column_end":46}},{"value":"/         continue","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923007,"byte_end":923027,"line_start":2362,"line_end":2362,"column_start":1,"column_end":21}},{"value":"/     };","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923028,"byte_end":923038,"line_start":2363,"line_end":2363,"column_start":1,"column_end":11}},{"value":"/     match abbrev.tag() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923039,"byte_end":923067,"line_start":2364,"line_end":2364,"column_start":1,"column_end":29}},{"value":"/         gimli::DW_TAG_subprogram => {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923068,"byte_end":923109,"line_start":2365,"line_end":2365,"column_start":1,"column_end":42}},{"value":"/             // Loop over attributes for DIEs we care about.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923110,"byte_end":923173,"line_start":2366,"line_end":2366,"column_start":1,"column_end":64}},{"value":"/             for spec in abbrev.attributes() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923174,"byte_end":923223,"line_start":2367,"line_end":2367,"column_start":1,"column_end":50}},{"value":"/                 let attr = entries.read_attribute(*spec)?;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923224,"byte_end":923286,"line_start":2368,"line_end":2368,"column_start":1,"column_end":63}},{"value":"/                 match attr.name() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923287,"byte_end":923326,"line_start":2369,"line_end":2369,"column_start":1,"column_end":40}},{"value":"/                     // Handle attributes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923327,"byte_end":923372,"line_start":2370,"line_end":2370,"column_start":1,"column_end":46}},{"value":"/                     _ => {}","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923373,"byte_end":923404,"line_start":2371,"line_end":2371,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923405,"byte_end":923426,"line_start":2372,"line_end":2372,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923427,"byte_end":923444,"line_start":2373,"line_end":2373,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923445,"byte_end":923458,"line_start":2374,"line_end":2374,"column_start":1,"column_end":14}},{"value":"/         _ => {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923459,"byte_end":923477,"line_start":2375,"line_end":2375,"column_start":1,"column_end":19}},{"value":"/             // Skip attributes for DIEs we don't care about.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923478,"byte_end":923542,"line_start":2376,"line_end":2376,"column_start":1,"column_end":65}},{"value":"/             for spec in abbrev.attributes() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923543,"byte_end":923592,"line_start":2377,"line_end":2377,"column_start":1,"column_end":50}},{"value":"/                 entries.read_attribute(*spec)?;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923593,"byte_end":923644,"line_start":2378,"line_end":2378,"column_start":1,"column_end":52}},{"value":"/             }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923645,"byte_end":923662,"line_start":2379,"line_end":2379,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923663,"byte_end":923676,"line_start":2380,"line_end":2380,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923677,"byte_end":923686,"line_start":2381,"line_end":2381,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923687,"byte_end":923692,"line_start":2382,"line_end":2382,"column_start":1,"column_end":6}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923693,"byte_end":923713,"line_start":2383,"line_end":2383,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923714,"byte_end":923721,"line_start":2384,"line_end":2384,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923722,"byte_end":923729,"line_start":2385,"line_end":2385,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924064,"byte_end":924072,"line_start":2400,"line_end":2400,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<EntriesRaw>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if there is no more input.\n","sig":null,"attributes":[{"value":"/ Return true if there is no more input.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923996,"byte_end":924038,"line_start":2398,"line_end":2398,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924043,"byte_end":924052,"line_start":2399,"line_end":2399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924329,"byte_end":924340,"line_start":2408,"line_end":2408,"column_start":12,"column_end":23},"name":"next_offset","qualname":"<EntriesRaw>::next_offset","value":"fn next_offset(&Self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the unit offset at which the reader will read next.","sig":null,"attributes":[{"value":"/ Return the unit offset at which the reader will read next.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924131,"byte_end":924193,"line_start":2404,"line_end":2404,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924198,"byte_end":924201,"line_start":2405,"line_end":2405,"column_start":5,"column_end":8}},{"value":"/ If you want the offset of the next entry, then this must be called prior to reading","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924206,"byte_end":924293,"line_start":2406,"line_end":2406,"column_start":5,"column_end":92}},{"value":"/ the next entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924298,"byte_end":924317,"line_start":2407,"line_end":2407,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924713,"byte_end":924723,"line_start":2417,"line_end":2417,"column_start":12,"column_end":22},"name":"next_depth","qualname":"<EntriesRaw>::next_depth","value":"fn next_depth(&Self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Return the depth of the next entry.","sig":null,"attributes":[{"value":"/ Return the depth of the next entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924479,"byte_end":924518,"line_start":2412,"line_end":2412,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924523,"byte_end":924526,"line_start":2413,"line_end":2413,"column_start":5,"column_end":8}},{"value":"/ This depth is updated when `read_abbreviation` is called, and is updated","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924531,"byte_end":924607,"line_start":2414,"line_end":2414,"column_start":5,"column_end":81}},{"value":"/ based on null entries and the `has_children` field in the abbreviation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924612,"byte_end":924687,"line_start":2415,"line_end":2415,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924692,"byte_end":924701,"line_start":2416,"line_end":2416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2729},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924925,"byte_end":924942,"line_start":2425,"line_end":2425,"column_start":12,"column_end":29},"name":"read_abbreviation","qualname":"<EntriesRaw>::read_abbreviation","value":"fn read_abbreviation(&mut Self) -> Result<Option<&'abbrev Abbreviation>>","parent":null,"children":[],"decl_id":null,"docs":" Read an abbreviation code and lookup the corresponding `Abbreviation`.","sig":null,"attributes":[{"value":"/ Read an abbreviation code and lookup the corresponding `Abbreviation`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924772,"byte_end":924846,"line_start":2421,"line_end":2421,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924851,"byte_end":924854,"line_start":2422,"line_end":2422,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(None)` for null entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924859,"byte_end":924899,"line_start":2423,"line_end":2423,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":924904,"byte_end":924913,"line_start":2424,"line_end":2424,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":925419,"byte_end":925433,"line_start":2443,"line_end":2443,"column_start":12,"column_end":26},"name":"read_attribute","qualname":"<EntriesRaw>::read_attribute","value":"fn read_attribute(&mut Self, AttributeSpecification) -> Result<Attribute<R>>","parent":null,"children":[],"decl_id":null,"docs":" Read an attribute.\n","sig":null,"attributes":[{"value":"/ Read an attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":925371,"byte_end":925393,"line_start":2441,"line_end":2441,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":925398,"byte_end":925407,"line_start":2442,"line_end":2442,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":9089},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926418,"byte_end":926431,"line_start":2462,"line_end":2462,"column_start":12,"column_end":25},"name":"EntriesCursor","qualname":"::read::unit::EntriesCursor","value":"EntriesCursor {  }","parent":null,"children":[{"krate":0,"index":9093},{"krate":0,"index":9094},{"krate":0,"index":9095},{"krate":0,"index":9096},{"krate":0,"index":9097}],"decl_id":null,"docs":" A cursor into the Debugging Information Entries tree for a compilation unit.","sig":null,"attributes":[{"value":"/ A cursor into the Debugging Information Entries tree for a compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":925579,"byte_end":925659,"line_start":2448,"line_end":2448,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":925660,"byte_end":925663,"line_start":2449,"line_end":2449,"column_start":1,"column_end":4}},{"value":"/ The `EntriesCursor` can traverse the DIE tree in DFS order using `next_dfs()`,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":925664,"byte_end":925746,"line_start":2450,"line_end":2450,"column_start":1,"column_end":83}},{"value":"/ or skip to the next sibling of the entry the cursor is currently pointing to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":925747,"byte_end":925827,"line_start":2451,"line_end":2451,"column_start":1,"column_end":81}},{"value":"/ using `next_sibling()`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":925828,"byte_end":925855,"line_start":2452,"line_end":2452,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":925856,"byte_end":925859,"line_start":2453,"line_end":2453,"column_start":1,"column_end":4}},{"value":"/ It is also possible to traverse the DIE tree at a lower abstraction level","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":925860,"byte_end":925937,"line_start":2454,"line_end":2454,"column_start":1,"column_end":78}},{"value":"/ using `next_entry()`. This method does not skip over null entries, or provide","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":925938,"byte_end":926019,"line_start":2455,"line_end":2455,"column_start":1,"column_end":82}},{"value":"/ any indication of the current tree depth. In this case, you must use `current()`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926020,"byte_end":926104,"line_start":2456,"line_end":2456,"column_start":1,"column_end":85}},{"value":"/ to obtain the current entry, and `current().has_children()` to determine if","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926105,"byte_end":926184,"line_start":2457,"line_end":2457,"column_start":1,"column_end":80}},{"value":"/ the entry following the current entry will be a sibling or child. `current()`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926185,"byte_end":926266,"line_start":2458,"line_end":2458,"column_start":1,"column_end":82}},{"value":"/ will return `None` if the current entry is a null entry, which signifies the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926267,"byte_end":926347,"line_start":2459,"line_end":2459,"column_start":1,"column_end":81}},{"value":"/ end of the current tree depth.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926348,"byte_end":926382,"line_start":2460,"line_end":2460,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926968,"byte_end":926975,"line_start":2479,"line_end":2479,"column_start":12,"column_end":19},"name":"current","qualname":"<EntriesCursor>::current","value":"fn current(&Self) -> Option<&DebuggingInformationEntry>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the entry that the cursor is currently pointing to.","sig":null,"attributes":[{"value":"/ Get a reference to the entry that the cursor is currently pointing to.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926735,"byte_end":926809,"line_start":2474,"line_end":2474,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926814,"byte_end":926817,"line_start":2475,"line_end":2475,"column_start":5,"column_end":8}},{"value":"/ If the cursor is not pointing at an entry, or if the current entry is a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926822,"byte_end":926897,"line_start":2476,"line_end":2476,"column_start":5,"column_end":80}},{"value":"/ null entry, then `None` is returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926902,"byte_end":926942,"line_start":2477,"line_end":2477,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926947,"byte_end":926956,"line_start":2478,"line_end":2478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":927295,"byte_end":927305,"line_start":2487,"line_end":2487,"column_start":12,"column_end":22},"name":"next_entry","qualname":"<EntriesCursor>::next_entry","value":"fn next_entry(&mut Self) -> Result<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Move the cursor to the next DIE in the tree.","sig":null,"attributes":[{"value":"/ Move the cursor to the next DIE in the tree.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":927090,"byte_end":927138,"line_start":2483,"line_end":2483,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":927143,"byte_end":927146,"line_start":2484,"line_end":2484,"column_start":5,"column_end":8}},{"value":"/ Returns `Some` if there is a next entry, even if this entry is null.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":927151,"byte_end":927223,"line_start":2485,"line_end":2485,"column_start":5,"column_end":77}},{"value":"/ If there is no next entry, then `None` is returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":927228,"byte_end":927283,"line_start":2486,"line_end":2486,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932304,"byte_end":932312,"line_start":2636,"line_end":2636,"column_start":12,"column_end":20},"name":"next_dfs","qualname":"<EntriesCursor>::next_dfs","value":"fn next_dfs(&mut Self) -> Result<Option<(isize, &DebuggingInformationEntry)>>","parent":null,"children":[],"decl_id":null,"docs":" Move the cursor to the next DIE in the tree in DFS order.","sig":null,"attributes":[{"value":"/ Move the cursor to the next DIE in the tree in DFS order.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928249,"byte_end":928310,"line_start":2518,"line_end":2518,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928315,"byte_end":928318,"line_start":2519,"line_end":2519,"column_start":5,"column_end":8}},{"value":"/ Upon successful movement of the cursor, return the delta traversal","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928323,"byte_end":928393,"line_start":2520,"line_end":2520,"column_start":5,"column_end":75}},{"value":"/ depth and the entry:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928398,"byte_end":928422,"line_start":2521,"line_end":2521,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928427,"byte_end":928430,"line_start":2522,"line_end":2522,"column_start":5,"column_end":8}},{"value":"/   * If we moved down into the previous current entry's children, we get","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928435,"byte_end":928510,"line_start":2523,"line_end":2523,"column_start":5,"column_end":80}},{"value":"/     `Some((1, entry))`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928515,"byte_end":928542,"line_start":2524,"line_end":2524,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928547,"byte_end":928550,"line_start":2525,"line_end":2525,"column_start":5,"column_end":8}},{"value":"/   * If we moved to the previous current entry's sibling, we get","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928555,"byte_end":928622,"line_start":2526,"line_end":2526,"column_start":5,"column_end":72}},{"value":"/     `Some((0, entry))`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928627,"byte_end":928654,"line_start":2527,"line_end":2527,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928659,"byte_end":928662,"line_start":2528,"line_end":2528,"column_start":5,"column_end":8}},{"value":"/   * If the previous entry does not have any siblings and we move up to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928667,"byte_end":928741,"line_start":2529,"line_end":2529,"column_start":5,"column_end":79}},{"value":"/     its parent's next sibling, then we get `Some((-1, entry))`. Note that","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928746,"byte_end":928823,"line_start":2530,"line_end":2530,"column_start":5,"column_end":82}},{"value":"/     if the parent doesn't have a next sibling, then it could go up to the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928828,"byte_end":928905,"line_start":2531,"line_end":2531,"column_start":5,"column_end":82}},{"value":"/     parent's parent's next sibling and return `Some((-2, entry))`, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928910,"byte_end":928985,"line_start":2532,"line_end":2532,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928990,"byte_end":928993,"line_start":2533,"line_end":2533,"column_start":5,"column_end":8}},{"value":"/ If there is no next entry, then `None` is returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":928998,"byte_end":929053,"line_start":2534,"line_end":2534,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929058,"byte_end":929061,"line_start":2535,"line_end":2535,"column_start":5,"column_end":8}},{"value":"/ Here is an example that finds the first entry in a compilation unit that","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929066,"byte_end":929142,"line_start":2536,"line_end":2536,"column_start":5,"column_end":81}},{"value":"/ does not have any children.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929147,"byte_end":929178,"line_start":2537,"line_end":2537,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929183,"byte_end":929186,"line_start":2538,"line_end":2538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929191,"byte_end":929198,"line_start":2539,"line_end":2539,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{DebugAbbrev, DebugInfo, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929203,"byte_end":929259,"line_start":2540,"line_end":2540,"column_start":5,"column_end":61}},{"value":"/ # let info_buf = [","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929264,"byte_end":929286,"line_start":2541,"line_end":2541,"column_start":5,"column_end":27}},{"value":"/ #     // Comilation unit header","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929291,"byte_end":929326,"line_start":2542,"line_end":2542,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929331,"byte_end":929336,"line_start":2543,"line_end":2543,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 25","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929341,"byte_end":929377,"line_start":2544,"line_end":2544,"column_start":5,"column_end":41}},{"value":"/ #     0x19, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929382,"byte_end":929415,"line_start":2545,"line_end":2545,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929420,"byte_end":929442,"line_start":2546,"line_end":2546,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929447,"byte_end":929468,"line_start":2547,"line_end":2547,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929473,"byte_end":929505,"line_start":2548,"line_end":2548,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929510,"byte_end":929543,"line_start":2549,"line_end":2549,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929548,"byte_end":929573,"line_start":2550,"line_end":2550,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929578,"byte_end":929593,"line_start":2551,"line_end":2551,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929598,"byte_end":929603,"line_start":2552,"line_end":2552,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929608,"byte_end":929625,"line_start":2553,"line_end":2553,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929630,"byte_end":929635,"line_start":2554,"line_end":2554,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929640,"byte_end":929670,"line_start":2555,"line_end":2555,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929675,"byte_end":929690,"line_start":2556,"line_end":2556,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929695,"byte_end":929750,"line_start":2557,"line_end":2557,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929755,"byte_end":929788,"line_start":2558,"line_end":2558,"column_start":5,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929793,"byte_end":929798,"line_start":2559,"line_end":2559,"column_start":5,"column_end":10}},{"value":"/ #       // Children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929803,"byte_end":929826,"line_start":2560,"line_end":2560,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929831,"byte_end":929836,"line_start":2561,"line_end":2561,"column_start":5,"column_end":10}},{"value":"/ #       // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929841,"byte_end":929873,"line_start":2562,"line_end":2562,"column_start":5,"column_end":37}},{"value":"/ #       0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929878,"byte_end":929895,"line_start":2563,"line_end":2563,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929900,"byte_end":929957,"line_start":2564,"line_end":2564,"column_start":5,"column_end":62}},{"value":"/ #       0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":929962,"byte_end":929997,"line_start":2565,"line_end":2565,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930002,"byte_end":930007,"line_start":2566,"line_end":2566,"column_start":5,"column_end":10}},{"value":"/ #         // Children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930012,"byte_end":930037,"line_start":2567,"line_end":2567,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930042,"byte_end":930047,"line_start":2568,"line_end":2568,"column_start":5,"column_end":10}},{"value":"/ #         // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930052,"byte_end":930086,"line_start":2569,"line_end":2569,"column_start":5,"column_end":39}},{"value":"/ #         0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930091,"byte_end":930110,"line_start":2570,"line_end":2570,"column_start":5,"column_end":24}},{"value":"/ #         // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930115,"byte_end":930174,"line_start":2571,"line_end":2571,"column_start":5,"column_end":64}},{"value":"/ #         0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930179,"byte_end":930216,"line_start":2572,"line_end":2572,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930221,"byte_end":930226,"line_start":2573,"line_end":2573,"column_start":5,"column_end":10}},{"value":"/ #           // Children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930231,"byte_end":930258,"line_start":2574,"line_end":2574,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930263,"byte_end":930268,"line_start":2575,"line_end":2575,"column_start":5,"column_end":10}},{"value":"/ #           // End of children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930273,"byte_end":930307,"line_start":2576,"line_end":2576,"column_start":5,"column_end":39}},{"value":"/ #           0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930312,"byte_end":930333,"line_start":2577,"line_end":2577,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930338,"byte_end":930343,"line_start":2578,"line_end":2578,"column_start":5,"column_end":10}},{"value":"/ #         // End of children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930348,"byte_end":930380,"line_start":2579,"line_end":2579,"column_start":5,"column_end":37}},{"value":"/ #         0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930385,"byte_end":930404,"line_start":2580,"line_end":2580,"column_start":5,"column_end":24}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930409,"byte_end":930414,"line_start":2581,"line_end":2581,"column_start":5,"column_end":10}},{"value":"/ #       // End of children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930419,"byte_end":930449,"line_start":2582,"line_end":2582,"column_start":5,"column_end":35}},{"value":"/ #       0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930454,"byte_end":930471,"line_start":2583,"line_end":2583,"column_start":5,"column_end":22}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930476,"byte_end":930484,"line_start":2584,"line_end":2584,"column_start":5,"column_end":13}},{"value":"/ # let debug_info = DebugInfo::new(&info_buf, LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930489,"byte_end":930552,"line_start":2585,"line_end":2585,"column_start":5,"column_end":68}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930557,"byte_end":930562,"line_start":2586,"line_end":2586,"column_start":5,"column_end":10}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930567,"byte_end":930591,"line_start":2587,"line_end":2587,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930596,"byte_end":930613,"line_start":2588,"line_end":2588,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930618,"byte_end":930633,"line_start":2589,"line_end":2589,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930638,"byte_end":930668,"line_start":2590,"line_end":2590,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930673,"byte_end":930688,"line_start":2591,"line_end":2591,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_yes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930693,"byte_end":930721,"line_start":2592,"line_end":2592,"column_start":5,"column_end":33}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930726,"byte_end":930741,"line_start":2593,"line_end":2593,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930746,"byte_end":930775,"line_start":2594,"line_end":2594,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930780,"byte_end":930822,"line_start":2595,"line_end":2595,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930827,"byte_end":930844,"line_start":2596,"line_end":2596,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930849,"byte_end":930895,"line_start":2597,"line_end":2597,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930900,"byte_end":930917,"line_start":2598,"line_end":2598,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930922,"byte_end":930949,"line_start":2599,"line_end":2599,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930954,"byte_end":930969,"line_start":2600,"line_end":2600,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930974,"byte_end":930989,"line_start":2601,"line_end":2601,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":930994,"byte_end":931022,"line_start":2602,"line_end":2602,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931027,"byte_end":931041,"line_start":2603,"line_end":2603,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931046,"byte_end":931054,"line_start":2604,"line_end":2604,"column_start":5,"column_end":13}},{"value":"/ # let debug_abbrev = DebugAbbrev::new(&abbrev_buf, LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931059,"byte_end":931128,"line_start":2605,"line_end":2605,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931133,"byte_end":931138,"line_start":2606,"line_end":2606,"column_start":5,"column_end":10}},{"value":"/ # let get_some_unit = || debug_info.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931143,"byte_end":931216,"line_start":2607,"line_end":2607,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931221,"byte_end":931224,"line_start":2608,"line_end":2608,"column_start":5,"column_end":8}},{"value":"/ let unit = get_some_unit();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931229,"byte_end":931260,"line_start":2609,"line_end":2609,"column_start":5,"column_end":36}},{"value":"/ # let get_abbrevs_for_unit = |_| unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931265,"byte_end":931345,"line_start":2610,"line_end":2610,"column_start":5,"column_end":85}},{"value":"/ let abbrevs = get_abbrevs_for_unit(&unit);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931350,"byte_end":931396,"line_start":2611,"line_end":2611,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931401,"byte_end":931404,"line_start":2612,"line_end":2612,"column_start":5,"column_end":8}},{"value":"/ let mut first_entry_with_no_children = None;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931409,"byte_end":931457,"line_start":2613,"line_end":2613,"column_start":5,"column_end":53}},{"value":"/ let mut cursor = unit.entries(&abbrevs);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931462,"byte_end":931506,"line_start":2614,"line_end":2614,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931511,"byte_end":931514,"line_start":2615,"line_end":2615,"column_start":5,"column_end":8}},{"value":"/ // Move the cursor to the root.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931519,"byte_end":931554,"line_start":2616,"line_end":2616,"column_start":5,"column_end":40}},{"value":"/ assert!(cursor.next_dfs().unwrap().is_some());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931559,"byte_end":931609,"line_start":2617,"line_end":2617,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931614,"byte_end":931617,"line_start":2618,"line_end":2618,"column_start":5,"column_end":8}},{"value":"/ // Traverse the DIE tree in depth-first search order.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931622,"byte_end":931679,"line_start":2619,"line_end":2619,"column_start":5,"column_end":62}},{"value":"/ let mut depth = 0;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931684,"byte_end":931706,"line_start":2620,"line_end":2620,"column_start":5,"column_end":27}},{"value":"/ while let Some((delta_depth, current)) = cursor.next_dfs().expect(\"Should parse next dfs\") {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931711,"byte_end":931807,"line_start":2621,"line_end":2621,"column_start":5,"column_end":101}},{"value":"/     // Update depth value, and break out of the loop when we","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931812,"byte_end":931876,"line_start":2622,"line_end":2622,"column_start":5,"column_end":69}},{"value":"/     // return to the original starting position.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931881,"byte_end":931933,"line_start":2623,"line_end":2623,"column_start":5,"column_end":57}},{"value":"/     depth += delta_depth;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931938,"byte_end":931967,"line_start":2624,"line_end":2624,"column_start":5,"column_end":34}},{"value":"/     if depth <= 0 {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":931972,"byte_end":931995,"line_start":2625,"line_end":2625,"column_start":5,"column_end":28}},{"value":"/         break;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932000,"byte_end":932018,"line_start":2626,"line_end":2626,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932023,"byte_end":932032,"line_start":2627,"line_end":2627,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932037,"byte_end":932040,"line_start":2628,"line_end":2628,"column_start":5,"column_end":8}},{"value":"/     first_entry_with_no_children = Some(current.clone());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932045,"byte_end":932106,"line_start":2629,"line_end":2629,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932111,"byte_end":932116,"line_start":2630,"line_end":2630,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932121,"byte_end":932124,"line_start":2631,"line_end":2631,"column_start":5,"column_end":8}},{"value":"/ println!(\"The first entry with no children is {:?}\",","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932129,"byte_end":932185,"line_start":2632,"line_end":2632,"column_start":5,"column_end":61}},{"value":"/          first_entry_with_no_children.unwrap());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932190,"byte_end":932242,"line_start":2633,"line_end":2633,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932247,"byte_end":932254,"line_start":2634,"line_end":2634,"column_start":5,"column_end":12}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932259,"byte_end":932292,"line_start":2635,"line_end":2635,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":936351,"byte_end":936363,"line_start":2761,"line_end":2761,"column_start":12,"column_end":24},"name":"next_sibling","qualname":"<EntriesCursor>::next_sibling","value":"fn next_sibling(&mut Self) -> Result<Option<&DebuggingInformationEntry>>","parent":null,"children":[],"decl_id":null,"docs":" Move the cursor to the next sibling DIE of the current one.","sig":null,"attributes":[{"value":"/ Move the cursor to the next sibling DIE of the current one.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932911,"byte_end":932974,"line_start":2655,"line_end":2655,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932979,"byte_end":932982,"line_start":2656,"line_end":2656,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(Some(entry))` when the cursor has been moved to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":932987,"byte_end":933050,"line_start":2657,"line_end":2657,"column_start":5,"column_end":68}},{"value":"/ the next sibling, `Ok(None)` when there is no next sibling.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933055,"byte_end":933118,"line_start":2658,"line_end":2658,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933123,"byte_end":933126,"line_start":2659,"line_end":2659,"column_start":5,"column_end":8}},{"value":"/ The depth of the cursor is never changed if this method returns `Ok`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933131,"byte_end":933204,"line_start":2660,"line_end":2660,"column_start":5,"column_end":78}},{"value":"/ Once `Ok(None)` is returned, this method will continue to return","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933209,"byte_end":933277,"line_start":2661,"line_end":2661,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` until either `next_entry` or `next_dfs` is called.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933282,"byte_end":933347,"line_start":2662,"line_end":2662,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933352,"byte_end":933355,"line_start":2663,"line_end":2663,"column_start":5,"column_end":8}},{"value":"/ Here is an example that iterates over all of the direct children of the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933360,"byte_end":933435,"line_start":2664,"line_end":2664,"column_start":5,"column_end":80}},{"value":"/ root entry:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933440,"byte_end":933455,"line_start":2665,"line_end":2665,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933460,"byte_end":933463,"line_start":2666,"line_end":2666,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933468,"byte_end":933475,"line_start":2667,"line_end":2667,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{DebugAbbrev, DebugInfo, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933480,"byte_end":933536,"line_start":2668,"line_end":2668,"column_start":5,"column_end":61}},{"value":"/ # let info_buf = [","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933541,"byte_end":933563,"line_start":2669,"line_end":2669,"column_start":5,"column_end":27}},{"value":"/ #     // Comilation unit header","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933568,"byte_end":933603,"line_start":2670,"line_end":2670,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933608,"byte_end":933613,"line_start":2671,"line_end":2671,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 25","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933618,"byte_end":933654,"line_start":2672,"line_end":2672,"column_start":5,"column_end":41}},{"value":"/ #     0x19, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933659,"byte_end":933692,"line_start":2673,"line_end":2673,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933697,"byte_end":933719,"line_start":2674,"line_end":2674,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933724,"byte_end":933745,"line_start":2675,"line_end":2675,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933750,"byte_end":933782,"line_start":2676,"line_end":2676,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933787,"byte_end":933820,"line_start":2677,"line_end":2677,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933825,"byte_end":933850,"line_start":2678,"line_end":2678,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933855,"byte_end":933870,"line_start":2679,"line_end":2679,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933875,"byte_end":933880,"line_start":2680,"line_end":2680,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933885,"byte_end":933902,"line_start":2681,"line_end":2681,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933907,"byte_end":933912,"line_start":2682,"line_end":2682,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933917,"byte_end":933947,"line_start":2683,"line_end":2683,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933952,"byte_end":933967,"line_start":2684,"line_end":2684,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":933972,"byte_end":934027,"line_start":2685,"line_end":2685,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934032,"byte_end":934065,"line_start":2686,"line_end":2686,"column_start":5,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934070,"byte_end":934075,"line_start":2687,"line_end":2687,"column_start":5,"column_end":10}},{"value":"/ #       // Children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934080,"byte_end":934103,"line_start":2688,"line_end":2688,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934108,"byte_end":934113,"line_start":2689,"line_end":2689,"column_start":5,"column_end":10}},{"value":"/ #       // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934118,"byte_end":934150,"line_start":2690,"line_end":2690,"column_start":5,"column_end":37}},{"value":"/ #       0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934155,"byte_end":934172,"line_start":2691,"line_end":2691,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934177,"byte_end":934234,"line_start":2692,"line_end":2692,"column_start":5,"column_end":62}},{"value":"/ #       0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934239,"byte_end":934274,"line_start":2693,"line_end":2693,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934279,"byte_end":934284,"line_start":2694,"line_end":2694,"column_start":5,"column_end":10}},{"value":"/ #         // Children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934289,"byte_end":934314,"line_start":2695,"line_end":2695,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934319,"byte_end":934324,"line_start":2696,"line_end":2696,"column_start":5,"column_end":10}},{"value":"/ #         // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934329,"byte_end":934363,"line_start":2697,"line_end":2697,"column_start":5,"column_end":39}},{"value":"/ #         0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934368,"byte_end":934387,"line_start":2698,"line_end":2698,"column_start":5,"column_end":24}},{"value":"/ #         // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934392,"byte_end":934451,"line_start":2699,"line_end":2699,"column_start":5,"column_end":64}},{"value":"/ #         0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934456,"byte_end":934493,"line_start":2700,"line_end":2700,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934498,"byte_end":934503,"line_start":2701,"line_end":2701,"column_start":5,"column_end":10}},{"value":"/ #           // Children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934508,"byte_end":934535,"line_start":2702,"line_end":2702,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934540,"byte_end":934545,"line_start":2703,"line_end":2703,"column_start":5,"column_end":10}},{"value":"/ #           // End of children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934550,"byte_end":934584,"line_start":2704,"line_end":2704,"column_start":5,"column_end":39}},{"value":"/ #           0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934589,"byte_end":934610,"line_start":2705,"line_end":2705,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934615,"byte_end":934620,"line_start":2706,"line_end":2706,"column_start":5,"column_end":10}},{"value":"/ #         // End of children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934625,"byte_end":934657,"line_start":2707,"line_end":2707,"column_start":5,"column_end":37}},{"value":"/ #         0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934662,"byte_end":934681,"line_start":2708,"line_end":2708,"column_start":5,"column_end":24}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934686,"byte_end":934691,"line_start":2709,"line_end":2709,"column_start":5,"column_end":10}},{"value":"/ #       // End of children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934696,"byte_end":934726,"line_start":2710,"line_end":2710,"column_start":5,"column_end":35}},{"value":"/ #       0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934731,"byte_end":934748,"line_start":2711,"line_end":2711,"column_start":5,"column_end":22}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934753,"byte_end":934761,"line_start":2712,"line_end":2712,"column_start":5,"column_end":13}},{"value":"/ # let debug_info = DebugInfo::new(&info_buf, LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934766,"byte_end":934829,"line_start":2713,"line_end":2713,"column_start":5,"column_end":68}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934834,"byte_end":934839,"line_start":2714,"line_end":2714,"column_start":5,"column_end":10}},{"value":"/ # let get_some_unit = || debug_info.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934844,"byte_end":934917,"line_start":2715,"line_end":2715,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934922,"byte_end":934925,"line_start":2716,"line_end":2716,"column_start":5,"column_end":8}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934930,"byte_end":934954,"line_start":2717,"line_end":2717,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934959,"byte_end":934976,"line_start":2718,"line_end":2718,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":934981,"byte_end":934996,"line_start":2719,"line_end":2719,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935001,"byte_end":935031,"line_start":2720,"line_end":2720,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935036,"byte_end":935051,"line_start":2721,"line_end":2721,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_yes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935056,"byte_end":935084,"line_start":2722,"line_end":2722,"column_start":5,"column_end":33}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935089,"byte_end":935104,"line_start":2723,"line_end":2723,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935109,"byte_end":935138,"line_start":2724,"line_end":2724,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935143,"byte_end":935185,"line_start":2725,"line_end":2725,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935190,"byte_end":935207,"line_start":2726,"line_end":2726,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935212,"byte_end":935258,"line_start":2727,"line_end":2727,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935263,"byte_end":935280,"line_start":2728,"line_end":2728,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935285,"byte_end":935312,"line_start":2729,"line_end":2729,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935317,"byte_end":935332,"line_start":2730,"line_end":2730,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935337,"byte_end":935352,"line_start":2731,"line_end":2731,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935357,"byte_end":935385,"line_start":2732,"line_end":2732,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935390,"byte_end":935404,"line_start":2733,"line_end":2733,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935409,"byte_end":935417,"line_start":2734,"line_end":2734,"column_start":5,"column_end":13}},{"value":"/ # let debug_abbrev = DebugAbbrev::new(&abbrev_buf, LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935422,"byte_end":935491,"line_start":2735,"line_end":2735,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935496,"byte_end":935501,"line_start":2736,"line_end":2736,"column_start":5,"column_end":10}},{"value":"/ let unit = get_some_unit();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935506,"byte_end":935537,"line_start":2737,"line_end":2737,"column_start":5,"column_end":36}},{"value":"/ # let get_abbrevs_for_unit = |_| unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935542,"byte_end":935622,"line_start":2738,"line_end":2738,"column_start":5,"column_end":85}},{"value":"/ let abbrevs = get_abbrevs_for_unit(&unit);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935627,"byte_end":935673,"line_start":2739,"line_end":2739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935678,"byte_end":935681,"line_start":2740,"line_end":2740,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = unit.entries(&abbrevs);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935686,"byte_end":935730,"line_start":2741,"line_end":2741,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935735,"byte_end":935738,"line_start":2742,"line_end":2742,"column_start":5,"column_end":8}},{"value":"/ // Move the cursor to the root.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935743,"byte_end":935778,"line_start":2743,"line_end":2743,"column_start":5,"column_end":40}},{"value":"/ assert!(cursor.next_dfs().unwrap().is_some());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935783,"byte_end":935833,"line_start":2744,"line_end":2744,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935838,"byte_end":935841,"line_start":2745,"line_end":2745,"column_start":5,"column_end":8}},{"value":"/ // Move the cursor to the root's first child.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935846,"byte_end":935895,"line_start":2746,"line_end":2746,"column_start":5,"column_end":54}},{"value":"/ assert!(cursor.next_dfs().unwrap().is_some());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935900,"byte_end":935950,"line_start":2747,"line_end":2747,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935955,"byte_end":935958,"line_start":2748,"line_end":2748,"column_start":5,"column_end":8}},{"value":"/ // Iterate the root's children.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":935963,"byte_end":935998,"line_start":2749,"line_end":2749,"column_start":5,"column_end":40}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":936003,"byte_end":936013,"line_start":2750,"line_end":2750,"column_start":5,"column_end":15}},{"value":"/     {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":936018,"byte_end":936027,"line_start":2751,"line_end":2751,"column_start":5,"column_end":14}},{"value":"/         let current = cursor.current().expect(\"Should be at an entry\");","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":936032,"byte_end":936107,"line_start":2752,"line_end":2752,"column_start":5,"column_end":80}},{"value":"/         println!(\"{:?} is a child of the root\", current);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":936112,"byte_end":936173,"line_start":2753,"line_end":2753,"column_start":5,"column_end":66}},{"value":"/     }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":936178,"byte_end":936187,"line_start":2754,"line_end":2754,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":936192,"byte_end":936195,"line_start":2755,"line_end":2755,"column_start":5,"column_end":8}},{"value":"/     if cursor.next_sibling().expect(\"Should parse next sibling\").is_none() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":936200,"byte_end":936280,"line_start":2756,"line_end":2756,"column_start":5,"column_end":85}},{"value":"/         break;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":936285,"byte_end":936303,"line_start":2757,"line_end":2757,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":936308,"byte_end":936317,"line_start":2758,"line_end":2758,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":936322,"byte_end":936327,"line_start":2759,"line_end":2759,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":936332,"byte_end":936339,"line_start":2760,"line_end":2760,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9108},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939432,"byte_end":939443,"line_start":2847,"line_end":2847,"column_start":12,"column_end":23},"name":"EntriesTree","qualname":"::read::unit::EntriesTree","value":"EntriesTree {  }","parent":null,"children":[{"krate":0,"index":9112},{"krate":0,"index":9113},{"krate":0,"index":9114},{"krate":0,"index":9115},{"krate":0,"index":9116},{"krate":0,"index":9117}],"decl_id":null,"docs":" The state information for a tree view of the Debugging Information Entries.","sig":null,"attributes":[{"value":"/ The state information for a tree view of the Debugging Information Entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":937919,"byte_end":937998,"line_start":2806,"line_end":2806,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":937999,"byte_end":938002,"line_start":2807,"line_end":2807,"column_start":1,"column_end":4}},{"value":"/ The `EntriesTree` can be used to recursively iterate through the DIE","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938003,"byte_end":938075,"line_start":2808,"line_end":2808,"column_start":1,"column_end":73}},{"value":"/ tree, following the parent/child relationships. The `EntriesTree` contains","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938076,"byte_end":938154,"line_start":2809,"line_end":2809,"column_start":1,"column_end":79}},{"value":"/ shared state for all nodes in the tree, avoiding any duplicate parsing of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938155,"byte_end":938232,"line_start":2810,"line_end":2810,"column_start":1,"column_end":78}},{"value":"/ entries during the traversal.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938233,"byte_end":938266,"line_start":2811,"line_end":2811,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938267,"byte_end":938270,"line_start":2812,"line_end":2812,"column_start":1,"column_end":4}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938271,"byte_end":938291,"line_start":2813,"line_end":2813,"column_start":1,"column_end":21}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938292,"byte_end":938310,"line_start":2814,"line_end":2814,"column_start":1,"column_end":19}},{"value":"/ # fn example() -> Result<(), gimli::Error> {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938311,"byte_end":938359,"line_start":2815,"line_end":2815,"column_start":1,"column_end":49}},{"value":"/ # let debug_info = gimli::DebugInfo::new(&[], gimli::LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938360,"byte_end":938431,"line_start":2816,"line_end":2816,"column_start":1,"column_end":72}},{"value":"/ # let get_some_unit = || debug_info.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938432,"byte_end":938505,"line_start":2817,"line_end":2817,"column_start":1,"column_end":74}},{"value":"/ let unit = get_some_unit();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938506,"byte_end":938537,"line_start":2818,"line_end":2818,"column_start":1,"column_end":32}},{"value":"/ # let debug_abbrev = gimli::DebugAbbrev::new(&[], gimli::LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938538,"byte_end":938613,"line_start":2819,"line_end":2819,"column_start":1,"column_end":76}},{"value":"/ # let get_abbrevs_for_unit = |_| unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938614,"byte_end":938694,"line_start":2820,"line_end":2820,"column_start":1,"column_end":81}},{"value":"/ let abbrevs = get_abbrevs_for_unit(&unit);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938695,"byte_end":938741,"line_start":2821,"line_end":2821,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938742,"byte_end":938745,"line_start":2822,"line_end":2822,"column_start":1,"column_end":4}},{"value":"/ let mut tree = unit.entries_tree(&abbrevs, None)?;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938746,"byte_end":938800,"line_start":2823,"line_end":2823,"column_start":1,"column_end":55}},{"value":"/ let root = tree.root()?;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938801,"byte_end":938829,"line_start":2824,"line_end":2824,"column_start":1,"column_end":29}},{"value":"/ process_tree(root)?;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938830,"byte_end":938854,"line_start":2825,"line_end":2825,"column_start":1,"column_end":25}},{"value":"/ # unreachable!()","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938855,"byte_end":938875,"line_start":2826,"line_end":2826,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938876,"byte_end":938883,"line_start":2827,"line_end":2827,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938884,"byte_end":938887,"line_start":2828,"line_end":2828,"column_start":1,"column_end":4}},{"value":"/ fn process_tree<R>(mut node: gimli::EntriesTreeNode<R>) -> gimli::Result<()>","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938888,"byte_end":938968,"line_start":2829,"line_end":2829,"column_start":1,"column_end":81}},{"value":"/     where R: gimli::Reader","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":938969,"byte_end":938999,"line_start":2830,"line_end":2830,"column_start":1,"column_end":31}},{"value":"/ {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939000,"byte_end":939005,"line_start":2831,"line_end":2831,"column_start":1,"column_end":6}},{"value":"/     {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939006,"byte_end":939015,"line_start":2832,"line_end":2832,"column_start":1,"column_end":10}},{"value":"/         // Examine the entry attributes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939016,"byte_end":939060,"line_start":2833,"line_end":2833,"column_start":1,"column_end":45}},{"value":"/         let mut attrs = node.entry().attrs();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939061,"byte_end":939110,"line_start":2834,"line_end":2834,"column_start":1,"column_end":50}},{"value":"/         while let Some(attr) = attrs.next()? {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939111,"byte_end":939161,"line_start":2835,"line_end":2835,"column_start":1,"column_end":51}},{"value":"/         }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939162,"byte_end":939175,"line_start":2836,"line_end":2836,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939176,"byte_end":939185,"line_start":2837,"line_end":2837,"column_start":1,"column_end":10}},{"value":"/     let mut children = node.children();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939186,"byte_end":939229,"line_start":2838,"line_end":2838,"column_start":1,"column_end":44}},{"value":"/     while let Some(child) = children.next()? {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939230,"byte_end":939280,"line_start":2839,"line_end":2839,"column_start":1,"column_end":51}},{"value":"/         // Recursively process a child.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939281,"byte_end":939324,"line_start":2840,"line_end":2840,"column_start":1,"column_end":44}},{"value":"/         process_tree(child);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939325,"byte_end":939357,"line_start":2841,"line_end":2841,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939358,"byte_end":939367,"line_start":2842,"line_end":2842,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939368,"byte_end":939382,"line_start":2843,"line_end":2843,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939383,"byte_end":939388,"line_start":2844,"line_end":2844,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939389,"byte_end":939396,"line_start":2845,"line_end":2845,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":940092,"byte_end":940096,"line_start":2873,"line_end":2873,"column_start":12,"column_end":16},"name":"root","qualname":"<EntriesTree>::root","value":"fn root<'me>(&'me mut Self) -> Result<EntriesTreeNode>","parent":null,"children":[],"decl_id":null,"docs":" Returns the root node of the tree.\n","sig":null,"attributes":[{"value":"/ Returns the root node of the tree.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":940042,"byte_end":940080,"line_start":2872,"line_end":2872,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":9128},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":943729,"byte_end":943744,"line_start":2979,"line_end":2979,"column_start":12,"column_end":27},"name":"EntriesTreeNode","qualname":"::read::unit::EntriesTreeNode","value":"EntriesTreeNode {  }","parent":null,"children":[{"krate":0,"index":9133},{"krate":0,"index":9134}],"decl_id":null,"docs":" A node in the Debugging Information Entry tree.","sig":null,"attributes":[{"value":"/ A node in the Debugging Information Entry tree.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":943531,"byte_end":943582,"line_start":2974,"line_end":2974,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":943583,"byte_end":943586,"line_start":2975,"line_end":2975,"column_start":1,"column_end":4}},{"value":"/ The root node of a tree can be obtained","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":943587,"byte_end":943630,"line_start":2976,"line_end":2976,"column_start":1,"column_end":44}},{"value":"/ via [`EntriesTree::root`](./struct.EntriesTree.html#method.root).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":943631,"byte_end":943700,"line_start":2977,"line_end":2977,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":944232,"byte_end":944237,"line_start":2994,"line_end":2994,"column_start":12,"column_end":17},"name":"entry","qualname":"<EntriesTreeNode>::entry","value":"fn entry(&Self) -> &DebuggingInformationEntry","parent":null,"children":[],"decl_id":null,"docs":" Returns the current entry in the tree.\n","sig":null,"attributes":[{"value":"/ Returns the current entry in the tree.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":944178,"byte_end":944220,"line_start":2993,"line_end":2993,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":944571,"byte_end":944579,"line_start":3003,"line_end":3003,"column_start":12,"column_end":20},"name":"children","qualname":"<EntriesTreeNode>::children","value":"fn children(Self) -> EntriesTreeIter","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator for the children of the current entry.","sig":null,"attributes":[{"value":"/ Create an iterator for the children of the current entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":944401,"byte_end":944462,"line_start":2999,"line_end":2999,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":944467,"byte_end":944470,"line_start":3000,"line_end":3000,"column_start":5,"column_end":8}},{"value":"/ The current entry can no longer be accessed after creating the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":944475,"byte_end":944541,"line_start":3001,"line_end":3001,"column_start":5,"column_end":71}},{"value":"/ iterator.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":944546,"byte_end":944559,"line_start":3002,"line_end":3002,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":9141},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":944937,"byte_end":944952,"line_start":3014,"line_end":3014,"column_start":12,"column_end":27},"name":"EntriesTreeIter","qualname":"::read::unit::EntriesTreeIter","value":"EntriesTreeIter {  }","parent":null,"children":[{"krate":0,"index":9146},{"krate":0,"index":9147},{"krate":0,"index":9148}],"decl_id":null,"docs":" An iterator that allows traversal of the children of an\n `EntriesTreeNode`.","sig":null,"attributes":[{"value":"/ An iterator that allows traversal of the children of an","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":944694,"byte_end":944753,"line_start":3008,"line_end":3008,"column_start":1,"column_end":60}},{"value":"/ `EntriesTreeNode`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":944754,"byte_end":944776,"line_start":3009,"line_end":3009,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":944777,"byte_end":944780,"line_start":3010,"line_end":3010,"column_start":1,"column_end":4}},{"value":"/ The items returned by this iterator are also `EntriesTreeNode`s,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":944781,"byte_end":944849,"line_start":3011,"line_end":3011,"column_start":1,"column_end":69}},{"value":"/ which allow recursive traversal of grandchildren, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":944850,"byte_end":944908,"line_start":3012,"line_end":3012,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":945549,"byte_end":945553,"line_start":3035,"line_end":3035,"column_start":12,"column_end":16},"name":"next","qualname":"<EntriesTreeIter>::next","value":"fn next<'me>(&'me mut Self) -> Result<Option<EntriesTreeNode>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EntriesTreeNode` for the next child entry.","sig":null,"attributes":[{"value":"/ Returns an `EntriesTreeNode` for the next child entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":945417,"byte_end":945475,"line_start":3032,"line_end":3032,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":945480,"byte_end":945483,"line_start":3033,"line_end":3033,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there are no more children.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":945488,"byte_end":945537,"line_start":3034,"line_end":3034,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":9155},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946466,"byte_end":946476,"line_start":3061,"line_end":3061,"column_start":12,"column_end":22},"name":"DebugTypes","qualname":"::read::unit::DebugTypes","value":"DebugTypes {  }","parent":null,"children":[{"krate":0,"index":9157}],"decl_id":null,"docs":" The `DebugTypes` struct represents the DWARF type information\n found in the `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ The `DebugTypes` struct represents the DWARF type information","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946309,"byte_end":946374,"line_start":3058,"line_end":3058,"column_start":1,"column_end":66}},{"value":"/ found in the `.debug_types` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946375,"byte_end":946415,"line_start":3059,"line_end":3059,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947207,"byte_end":947210,"line_start":3083,"line_end":3083,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugTypes<EndianSlice>>::new","value":"fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugTypes` instance from the data in the `.debug_types`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugTypes` instance from the data in the `.debug_types`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946609,"byte_end":946686,"line_start":3069,"line_end":3069,"column_start":5,"column_end":82}},{"value":"/ section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946691,"byte_end":946703,"line_start":3070,"line_end":3070,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946708,"byte_end":946711,"line_start":3071,"line_end":3071,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_types` section and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946716,"byte_end":946792,"line_start":3072,"line_end":3072,"column_start":5,"column_end":81}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946797,"byte_end":946867,"line_start":3073,"line_end":3073,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946872,"byte_end":946911,"line_start":3074,"line_end":3074,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946916,"byte_end":946919,"line_start":3075,"line_end":3075,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946924,"byte_end":946931,"line_start":3076,"line_end":3076,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugTypes, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946936,"byte_end":946978,"line_start":3077,"line_end":3077,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946983,"byte_end":946986,"line_start":3078,"line_end":3078,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946991,"byte_end":947032,"line_start":3079,"line_end":3079,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_types_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947037,"byte_end":947090,"line_start":3080,"line_end":3080,"column_start":5,"column_end":58}},{"value":"/ let debug_types = DebugTypes::new(read_debug_types_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947095,"byte_end":947183,"line_start":3081,"line_end":3081,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947188,"byte_end":947195,"line_start":3082,"line_end":3082,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948007,"byte_end":948013,"line_start":3104,"line_end":3104,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugTypes<T>>::borrow","value":"fn borrow<'a, F, R>(&'a Self, F) -> DebugTypes<R> where F: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugTypes` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugTypes` section that references the data in `self`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947375,"byte_end":947444,"line_start":3089,"line_end":3089,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947449,"byte_end":947452,"line_start":3090,"line_end":3090,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947457,"byte_end":947522,"line_start":3091,"line_end":3091,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947527,"byte_end":947530,"line_start":3092,"line_end":3092,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947535,"byte_end":947555,"line_start":3093,"line_end":3093,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947560,"byte_end":947563,"line_start":3094,"line_end":3094,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947568,"byte_end":947586,"line_start":3095,"line_end":3095,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947591,"byte_end":947636,"line_start":3096,"line_end":3096,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947641,"byte_end":947725,"line_start":3097,"line_end":3097,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugTypes<Vec<u8>> = load_section();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947730,"byte_end":947797,"line_start":3098,"line_end":3098,"column_start":5,"column_end":72}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947802,"byte_end":947849,"line_start":3099,"line_end":3099,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947854,"byte_end":947904,"line_start":3100,"line_end":3100,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947909,"byte_end":947971,"line_start":3101,"line_end":3101,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947976,"byte_end":947983,"line_start":3102,"line_end":3102,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947988,"byte_end":947995,"line_start":3103,"line_end":3103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948216,"byte_end":948218,"line_start":3113,"line_end":3113,"column_start":8,"column_end":10},"name":"id","qualname":"<DebugTypes<R> as read::Section>::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948280,"byte_end":948286,"line_start":3117,"line_end":3117,"column_start":8,"column_end":14},"name":"reader","qualname":"<DebugTypes<R> as read::Section>::reader","value":"fn reader(&Self) -> &R","parent":{"krate":0,"index":2902},"children":[],"decl_id":{"krate":0,"index":2909},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948388,"byte_end":948392,"line_start":3123,"line_end":3123,"column_start":8,"column_end":12},"name":"from","qualname":"<DebugTypes<R> as core::convert::From>::from","value":"fn from(R) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949154,"byte_end":949159,"line_start":3148,"line_end":3148,"column_start":12,"column_end":17},"name":"units","qualname":"<DebugTypes<R>>::units","value":"fn units(&Self) -> TypeUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the type-units in this `.debug_types` section.","sig":null,"attributes":[{"value":"/ Iterate the type-units in this `.debug_types` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948536,"byte_end":948594,"line_start":3131,"line_end":3131,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948599,"byte_end":948602,"line_start":3132,"line_end":3132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948607,"byte_end":948614,"line_start":3133,"line_end":3133,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugTypes, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948619,"byte_end":948661,"line_start":3134,"line_end":3134,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948666,"byte_end":948669,"line_start":3135,"line_end":3135,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948674,"byte_end":948693,"line_start":3136,"line_end":3136,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_types_section_somehow = || &buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948698,"byte_end":948751,"line_start":3137,"line_end":3137,"column_start":5,"column_end":58}},{"value":"/ let debug_types = DebugTypes::new(read_debug_types_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948756,"byte_end":948844,"line_start":3138,"line_end":3138,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948849,"byte_end":948852,"line_start":3139,"line_end":3139,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_types.units();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948857,"byte_end":948896,"line_start":3140,"line_end":3140,"column_start":5,"column_end":44}},{"value":"/ while let Some(unit) = iter.next().unwrap() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948901,"byte_end":948950,"line_start":3141,"line_end":3141,"column_start":5,"column_end":54}},{"value":"/     println!(\"unit's length is {}\", unit.unit_length());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948955,"byte_end":949015,"line_start":3142,"line_end":3142,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949020,"byte_end":949025,"line_start":3143,"line_end":3143,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949030,"byte_end":949037,"line_start":3144,"line_end":3144,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949042,"byte_end":949045,"line_start":3145,"line_end":3145,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949050,"byte_end":949071,"line_start":3146,"line_end":3146,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949076,"byte_end":949142,"line_start":3147,"line_end":3147,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":9169},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949580,"byte_end":949599,"line_start":3162,"line_end":3162,"column_start":12,"column_end":31},"name":"TypeUnitHeadersIter","qualname":"::read::unit::TypeUnitHeadersIter","value":"TypeUnitHeadersIter {  }","parent":null,"children":[{"krate":0,"index":9171},{"krate":0,"index":9172}],"decl_id":null,"docs":" An iterator over the type-units of this `.debug_types` section.","sig":null,"attributes":[{"value":"/ An iterator over the type-units of this `.debug_types` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949358,"byte_end":949425,"line_start":3156,"line_end":3156,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949426,"byte_end":949429,"line_start":3157,"line_end":3157,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949430,"byte_end":949459,"line_start":3158,"line_end":3158,"column_start":1,"column_end":30}},{"value":"/ `DebugTypes::units`](./struct.DebugTypes.html#method.units) for","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949460,"byte_end":949527,"line_start":3159,"line_end":3159,"column_start":1,"column_end":68}},{"value":"/ more detail.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949528,"byte_end":949544,"line_start":3160,"line_end":3160,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949782,"byte_end":949786,"line_start":3169,"line_end":3169,"column_start":12,"column_end":16},"name":"next","qualname":"<TypeUnitHeadersIter<R>>::next","value":"fn next(&mut Self) -> Result<Option<TypeUnitHeader<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next type unit header.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next type unit header.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949716,"byte_end":949770,"line_start":3168,"line_end":3168,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":950503,"byte_end":950507,"line_start":3193,"line_end":3193,"column_start":8,"column_end":12},"name":"next","qualname":"<TypeUnitHeadersIter<R> as fallible_iterator::FallibleIterator>::next","value":"fn next(&mut Self) -> ::core::result::Result<Option<Self::Item>, Self::Error>","parent":{"krate":25,"index":59},"children":[],"decl_id":{"krate":25,"index":62},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9179},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":950740,"byte_end":950754,"line_start":3200,"line_end":3200,"column_start":12,"column_end":26},"name":"TypeUnitHeader","qualname":"::read::unit::TypeUnitHeader","value":"TypeUnitHeader {  }","parent":null,"children":[{"krate":0,"index":9182},{"krate":0,"index":9183},{"krate":0,"index":9184},{"krate":0,"index":9185}],"decl_id":null,"docs":" The header of a type unit's debugging information.\n","sig":null,"attributes":[{"value":"/ The header of a type unit's debugging information.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":950629,"byte_end":950683,"line_start":3198,"line_end":3198,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":951560,"byte_end":951566,"line_start":3232,"line_end":3232,"column_start":12,"column_end":18},"name":"header","qualname":"<TypeUnitHeader<R, Offset>>::header","value":"fn header(Self) -> UnitHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the `UnitHeader` containing common unit fields.\n","sig":null,"attributes":[{"value":"/ Return the `UnitHeader` containing common unit fields.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":951490,"byte_end":951548,"line_start":3231,"line_end":3231,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":951733,"byte_end":951747,"line_start":3238,"line_end":3238,"column_start":12,"column_end":26},"name":"size_of_header","qualname":"<TypeUnitHeader<R, Offset>>::size_of_header","value":"fn size_of_header(Format) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the serialized size of the type-unit header for the given\n DWARF format.\n","sig":null,"attributes":[{"value":"/ Return the serialized size of the type-unit header for the given","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":951631,"byte_end":951699,"line_start":3236,"line_end":3236,"column_start":5,"column_end":73}},{"value":"/ DWARF format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":951704,"byte_end":951721,"line_start":3237,"line_end":3237,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952111,"byte_end":952117,"line_start":3246,"line_end":3246,"column_start":12,"column_end":18},"name":"offset","qualname":"<TypeUnitHeader<R, Offset>>::offset","value":"fn offset(&Self) -> DebugTypesOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this compilation unit within the .debug_info section.\n","sig":null,"attributes":[{"value":"/ Get the offset of this compilation unit within the .debug_info section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952024,"byte_end":952099,"line_start":3245,"line_end":3245,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952261,"byte_end":952272,"line_start":3251,"line_end":3251,"column_start":12,"column_end":23},"name":"unit_length","qualname":"<TypeUnitHeader<R, Offset>>::unit_length","value":"fn unit_length(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this type-unit.\n","sig":null,"attributes":[{"value":"/ Get the length of the debugging info for this type-unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952189,"byte_end":952249,"line_start":3250,"line_end":3250,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952474,"byte_end":952495,"line_start":3257,"line_end":3257,"column_start":12,"column_end":33},"name":"length_including_self","qualname":"<TypeUnitHeader<R, Offset>>::length_including_self","value":"fn length_including_self(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this type-unit,\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Get the length of the debugging info for this type-unit,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952338,"byte_end":952398,"line_start":3255,"line_end":3255,"column_start":5,"column_end":65}},{"value":"/ including the byte length of the encoded length itself.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952403,"byte_end":952462,"line_start":3256,"line_end":3256,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952634,"byte_end":952642,"line_start":3262,"line_end":3262,"column_start":12,"column_end":20},"name":"encoding","qualname":"<TypeUnitHeader<R, Offset>>::encoding","value":"fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this unit.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952573,"byte_end":952622,"line_start":3261,"line_end":3261,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952783,"byte_end":952790,"line_start":3267,"line_end":3267,"column_start":12,"column_end":19},"name":"version","qualname":"<TypeUnitHeader<R, Offset>>::version","value":"fn version(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the DWARF version of the debugging info for this type-unit.\n","sig":null,"attributes":[{"value":"/ Get the DWARF version of the debugging info for this type-unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952704,"byte_end":952771,"line_start":3266,"line_end":3266,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952967,"byte_end":952986,"line_start":3273,"line_end":3273,"column_start":12,"column_end":31},"name":"debug_abbrev_offset","qualname":"<TypeUnitHeader<R, Offset>>::debug_abbrev_offset","value":"fn debug_abbrev_offset(&Self) -> DebugAbbrevOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" The offset into the `.debug_abbrev` section for this type-unit's\n debugging information entries.\n","sig":null,"attributes":[{"value":"/ The offset into the `.debug_abbrev` section for this type-unit's","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952848,"byte_end":952916,"line_start":3271,"line_end":3271,"column_start":5,"column_end":73}},{"value":"/ debugging information entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":952921,"byte_end":952955,"line_start":3272,"line_end":3272,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":953146,"byte_end":953158,"line_start":3278,"line_end":3278,"column_start":12,"column_end":24},"name":"address_size","qualname":"<TypeUnitHeader<R, Offset>>::address_size","value":"fn address_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of addresses (in bytes) in this type-unit.\n","sig":null,"attributes":[{"value":"/ The size of addresses (in bytes) in this type-unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":953079,"byte_end":953134,"line_start":3277,"line_end":3277,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":953293,"byte_end":953299,"line_start":3283,"line_end":3283,"column_start":12,"column_end":18},"name":"format","qualname":"<TypeUnitHeader<R, Offset>>::format","value":"fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Whether this type unit is encoded in 64- or 32-bit DWARF.\n","sig":null,"attributes":[{"value":"/ Whether this type unit is encoded in 64- or 32-bit DWARF.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":953220,"byte_end":953281,"line_start":3282,"line_end":3282,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":953428,"byte_end":953439,"line_start":3288,"line_end":3288,"column_start":12,"column_end":23},"name":"header_size","qualname":"<TypeUnitHeader<R, Offset>>::header_size","value":"fn header_size(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" The serialized size of the header for this type-unit.\n","sig":null,"attributes":[{"value":"/ The serialized size of the header for this type-unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":953359,"byte_end":953416,"line_start":3287,"line_end":3287,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":953572,"byte_end":953586,"line_start":3293,"line_end":3293,"column_start":12,"column_end":26},"name":"type_signature","qualname":"<TypeUnitHeader<R, Offset>>::type_signature","value":"fn type_signature(&Self) -> DebugTypeSignature","parent":null,"children":[],"decl_id":null,"docs":" Get the unique type signature for this type unit.\n","sig":null,"attributes":[{"value":"/ Get the unique type signature for this type unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":953507,"byte_end":953560,"line_start":3292,"line_end":3292,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":953736,"byte_end":953747,"line_start":3298,"line_end":3298,"column_start":12,"column_end":23},"name":"type_offset","qualname":"<TypeUnitHeader<R, Offset>>::type_offset","value":"fn type_offset(&Self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get the offset within this type unit where the type is defined.\n","sig":null,"attributes":[{"value":"/ Get the offset within this type unit where the type is defined.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":953657,"byte_end":953724,"line_start":3297,"line_end":3297,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":953889,"byte_end":953896,"line_start":3303,"line_end":3303,"column_start":12,"column_end":19},"name":"entries","qualname":"<TypeUnitHeader<R, Offset>>::entries","value":"fn entries<'me, 'abbrev>(&'me Self, &'abbrev Abbreviations) -> EntriesCursor","parent":null,"children":[],"decl_id":null,"docs":" Navigate this type unit's `DebuggingInformationEntry`s.\n","sig":null,"attributes":[{"value":"/ Navigate this type unit's `DebuggingInformationEntry`s.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":953818,"byte_end":953877,"line_start":3302,"line_end":3302,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":954182,"byte_end":954199,"line_start":3312,"line_end":3312,"column_start":12,"column_end":29},"name":"entries_at_offset","qualname":"<TypeUnitHeader<R, Offset>>::entries_at_offset","value":"fn entries_at_offset<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, UnitOffset<R::Offset>)\n-> Result<EntriesCursor>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this type unit's `DebuggingInformationEntry`s\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this type unit's `DebuggingInformationEntry`s","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":954074,"byte_end":954132,"line_start":3310,"line_end":3310,"column_start":5,"column_end":63}},{"value":"/ starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":954137,"byte_end":954170,"line_start":3311,"line_end":3311,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":954560,"byte_end":954572,"line_start":3322,"line_end":3322,"column_start":12,"column_end":24},"name":"entries_tree","qualname":"<TypeUnitHeader<R, Offset>>::entries_tree","value":"fn entries_tree<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, Option<UnitOffset<R::Offset>>)\n-> Result<EntriesTree>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this type unit's `DebuggingInformationEntry`s as a tree\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this type unit's `DebuggingInformationEntry`s as a tree","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":954442,"byte_end":954510,"line_start":3320,"line_end":3320,"column_start":5,"column_end":73}},{"value":"/ starting at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":954515,"byte_end":954548,"line_start":3321,"line_end":3321,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":954897,"byte_end":954908,"line_start":3331,"line_end":3331,"column_start":12,"column_end":23},"name":"entries_raw","qualname":"<TypeUnitHeader<R, Offset>>::entries_raw","value":"fn entries_raw<'me,\n'abbrev>(&'me Self, &'abbrev Abbreviations, Option<UnitOffset<R::Offset>>)\n-> Result<EntriesRaw>","parent":null,"children":[],"decl_id":null,"docs":" Read the raw data that defines the Debugging Information Entries.\n","sig":null,"attributes":[{"value":"/ Read the raw data that defines the Debugging Information Entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":954816,"byte_end":954885,"line_start":3330,"line_end":3330,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957658,"byte_end":957671,"line_start":3421,"line_end":3421,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<TypeUnitHeader<R, Offset>>::abbreviations","value":"fn abbreviations(&Self, &DebugAbbrev<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse this type unit's abbreviations.","sig":null,"attributes":[{"value":"/ Parse this type unit's abbreviations.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955150,"byte_end":955191,"line_start":3339,"line_end":3339,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955196,"byte_end":955199,"line_start":3340,"line_end":3340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955204,"byte_end":955211,"line_start":3341,"line_end":3341,"column_start":5,"column_end":12}},{"value":"/ use gimli::DebugAbbrev;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955216,"byte_end":955243,"line_start":3342,"line_end":3342,"column_start":5,"column_end":32}},{"value":"/ # use gimli::{DebugTypes, LittleEndian};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955248,"byte_end":955292,"line_start":3343,"line_end":3343,"column_start":5,"column_end":49}},{"value":"/ # let types_buf = [","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955297,"byte_end":955320,"line_start":3344,"line_end":3344,"column_start":5,"column_end":28}},{"value":"/ #     // Type unit header","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955325,"byte_end":955354,"line_start":3345,"line_end":3345,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955359,"byte_end":955364,"line_start":3346,"line_end":3346,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 37","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955369,"byte_end":955405,"line_start":3347,"line_end":3347,"column_start":5,"column_end":41}},{"value":"/ #     0x25, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955410,"byte_end":955443,"line_start":3348,"line_end":3348,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955448,"byte_end":955470,"line_start":3349,"line_end":3349,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955475,"byte_end":955496,"line_start":3350,"line_end":3350,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955501,"byte_end":955533,"line_start":3351,"line_end":3351,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955538,"byte_end":955571,"line_start":3352,"line_end":3352,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955576,"byte_end":955601,"line_start":3353,"line_end":3353,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955606,"byte_end":955621,"line_start":3354,"line_end":3354,"column_start":5,"column_end":20}},{"value":"/ #     // Type signature","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955626,"byte_end":955653,"line_start":3355,"line_end":3355,"column_start":5,"column_end":32}},{"value":"/ #     0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955658,"byte_end":955715,"line_start":3356,"line_end":3356,"column_start":5,"column_end":62}},{"value":"/ #     // Type offset","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955720,"byte_end":955744,"line_start":3357,"line_end":3357,"column_start":5,"column_end":29}},{"value":"/ #     0x01, 0x02, 0x03, 0x04,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955749,"byte_end":955782,"line_start":3358,"line_end":3358,"column_start":5,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955787,"byte_end":955792,"line_start":3359,"line_end":3359,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955797,"byte_end":955814,"line_start":3360,"line_end":3360,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955819,"byte_end":955824,"line_start":3361,"line_end":3361,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955829,"byte_end":955859,"line_start":3362,"line_end":3362,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955864,"byte_end":955879,"line_start":3363,"line_end":3363,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955884,"byte_end":955939,"line_start":3364,"line_end":3364,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955944,"byte_end":955977,"line_start":3365,"line_end":3365,"column_start":5,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955982,"byte_end":955987,"line_start":3366,"line_end":3366,"column_start":5,"column_end":10}},{"value":"/ #       // Children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":955992,"byte_end":956015,"line_start":3367,"line_end":3367,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956020,"byte_end":956025,"line_start":3368,"line_end":3368,"column_start":5,"column_end":10}},{"value":"/ #       // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956030,"byte_end":956062,"line_start":3369,"line_end":3369,"column_start":5,"column_end":37}},{"value":"/ #       0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956067,"byte_end":956084,"line_start":3370,"line_end":3370,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956089,"byte_end":956146,"line_start":3371,"line_end":3371,"column_start":5,"column_end":62}},{"value":"/ #       0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956151,"byte_end":956186,"line_start":3372,"line_end":3372,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956191,"byte_end":956196,"line_start":3373,"line_end":3373,"column_start":5,"column_end":10}},{"value":"/ #         // Children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956201,"byte_end":956226,"line_start":3374,"line_end":3374,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956231,"byte_end":956236,"line_start":3375,"line_end":3375,"column_start":5,"column_end":10}},{"value":"/ #         // Abbreviation code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956241,"byte_end":956275,"line_start":3376,"line_end":3376,"column_start":5,"column_end":39}},{"value":"/ #         0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956280,"byte_end":956299,"line_start":3377,"line_end":3377,"column_start":5,"column_end":24}},{"value":"/ #         // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956304,"byte_end":956363,"line_start":3378,"line_end":3378,"column_start":5,"column_end":64}},{"value":"/ #         0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956368,"byte_end":956405,"line_start":3379,"line_end":3379,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956410,"byte_end":956415,"line_start":3380,"line_end":3380,"column_start":5,"column_end":10}},{"value":"/ #           // Children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956420,"byte_end":956447,"line_start":3381,"line_end":3381,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956452,"byte_end":956457,"line_start":3382,"line_end":3382,"column_start":5,"column_end":10}},{"value":"/ #           // End of children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956462,"byte_end":956496,"line_start":3383,"line_end":3383,"column_start":5,"column_end":39}},{"value":"/ #           0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956501,"byte_end":956522,"line_start":3384,"line_end":3384,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956527,"byte_end":956532,"line_start":3385,"line_end":3385,"column_start":5,"column_end":10}},{"value":"/ #         // End of children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956537,"byte_end":956569,"line_start":3386,"line_end":3386,"column_start":5,"column_end":37}},{"value":"/ #         0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956574,"byte_end":956593,"line_start":3387,"line_end":3387,"column_start":5,"column_end":24}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956598,"byte_end":956603,"line_start":3388,"line_end":3388,"column_start":5,"column_end":10}},{"value":"/ #       // End of children","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956608,"byte_end":956638,"line_start":3389,"line_end":3389,"column_start":5,"column_end":35}},{"value":"/ #       0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956643,"byte_end":956660,"line_start":3390,"line_end":3390,"column_start":5,"column_end":22}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956665,"byte_end":956673,"line_start":3391,"line_end":3391,"column_start":5,"column_end":13}},{"value":"/ # let debug_types = DebugTypes::new(&types_buf, LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956678,"byte_end":956744,"line_start":3392,"line_end":3392,"column_start":5,"column_end":71}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956749,"byte_end":956754,"line_start":3393,"line_end":3393,"column_start":5,"column_end":10}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956759,"byte_end":956783,"line_start":3394,"line_end":3394,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956788,"byte_end":956805,"line_start":3395,"line_end":3395,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956810,"byte_end":956825,"line_start":3396,"line_end":3396,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956830,"byte_end":956860,"line_start":3397,"line_end":3397,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956865,"byte_end":956880,"line_start":3398,"line_end":3398,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_yes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956885,"byte_end":956913,"line_start":3399,"line_end":3399,"column_start":5,"column_end":33}},{"value":"/ #     0x01,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956918,"byte_end":956933,"line_start":3400,"line_end":3400,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956938,"byte_end":956967,"line_start":3401,"line_end":3401,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":956972,"byte_end":957014,"line_start":3402,"line_end":3402,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957019,"byte_end":957036,"line_start":3403,"line_end":3403,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957041,"byte_end":957087,"line_start":3404,"line_end":3404,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957092,"byte_end":957109,"line_start":3405,"line_end":3405,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957114,"byte_end":957141,"line_start":3406,"line_end":3406,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957146,"byte_end":957161,"line_start":3407,"line_end":3407,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957166,"byte_end":957181,"line_start":3408,"line_end":3408,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957186,"byte_end":957214,"line_start":3409,"line_end":3409,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957219,"byte_end":957233,"line_start":3410,"line_end":3410,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957238,"byte_end":957246,"line_start":3411,"line_end":3411,"column_start":5,"column_end":13}},{"value":"/ #","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957251,"byte_end":957256,"line_start":3412,"line_end":3412,"column_start":5,"column_end":10}},{"value":"/ # let get_some_type_unit = || debug_types.units().next().unwrap().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957261,"byte_end":957340,"line_start":3413,"line_end":3413,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957345,"byte_end":957348,"line_start":3414,"line_end":3414,"column_start":5,"column_end":8}},{"value":"/ let unit = get_some_type_unit();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957353,"byte_end":957389,"line_start":3415,"line_end":3415,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957394,"byte_end":957397,"line_start":3416,"line_end":3416,"column_start":5,"column_end":8}},{"value":"/ # let read_debug_abbrev_section_somehow = || &abbrev_buf;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957402,"byte_end":957463,"line_start":3417,"line_end":3417,"column_start":5,"column_end":66}},{"value":"/ let debug_abbrev = DebugAbbrev::new(read_debug_abbrev_section_somehow(), LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957468,"byte_end":957559,"line_start":3418,"line_end":3418,"column_start":5,"column_end":96}},{"value":"/ let abbrevs_for_unit = unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957564,"byte_end":957634,"line_start":3419,"line_end":3419,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":957639,"byte_end":957646,"line_start":3420,"line_end":3420,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9213},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051489,"byte_end":1051496,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Generic","qualname":"::read::value::ValueType::Generic","value":"ValueType::Generic","parent":{"krate":0,"index":9212},"children":[],"decl_id":null,"docs":" The generic type, which is address-sized and of unspecified sign,\n as specified in the DWARF 5 standard, section 2.5.1.\n This type is also used to represent address base types.\n","sig":null,"attributes":[{"value":"/ The generic type, which is address-sized and of unspecified sign,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051290,"byte_end":1051359,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ as specified in the DWARF 5 standard, section 2.5.1.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051364,"byte_end":1051420,"line_start":28,"line_end":28,"column_start":5,"column_end":61}},{"value":"/ This type is also used to represent address base types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051425,"byte_end":1051484,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9215},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051537,"byte_end":1051539,"line_start":32,"line_end":32,"column_start":5,"column_end":7},"name":"I8","qualname":"::read::value::ValueType::I8","value":"ValueType::I8","parent":{"krate":0,"index":9212},"children":[],"decl_id":null,"docs":" Signed 8-bit integer type.\n","sig":null,"attributes":[{"value":"/ Signed 8-bit integer type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051502,"byte_end":1051532,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9217},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051582,"byte_end":1051584,"line_start":34,"line_end":34,"column_start":5,"column_end":7},"name":"U8","qualname":"::read::value::ValueType::U8","value":"ValueType::U8","parent":{"krate":0,"index":9212},"children":[],"decl_id":null,"docs":" Unsigned 8-bit integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned 8-bit integer type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051545,"byte_end":1051577,"line_start":33,"line_end":33,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9219},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051626,"byte_end":1051629,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"I16","qualname":"::read::value::ValueType::I16","value":"ValueType::I16","parent":{"krate":0,"index":9212},"children":[],"decl_id":null,"docs":" Signed 16-bit integer type.\n","sig":null,"attributes":[{"value":"/ Signed 16-bit integer type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051590,"byte_end":1051621,"line_start":35,"line_end":35,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9221},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051673,"byte_end":1051676,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"name":"U16","qualname":"::read::value::ValueType::U16","value":"ValueType::U16","parent":{"krate":0,"index":9212},"children":[],"decl_id":null,"docs":" Unsigned 16-bit integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned 16-bit integer type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051635,"byte_end":1051668,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9223},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051718,"byte_end":1051721,"line_start":40,"line_end":40,"column_start":5,"column_end":8},"name":"I32","qualname":"::read::value::ValueType::I32","value":"ValueType::I32","parent":{"krate":0,"index":9212},"children":[],"decl_id":null,"docs":" Signed 32-bit integer type.\n","sig":null,"attributes":[{"value":"/ Signed 32-bit integer type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051682,"byte_end":1051713,"line_start":39,"line_end":39,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9225},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051765,"byte_end":1051768,"line_start":42,"line_end":42,"column_start":5,"column_end":8},"name":"U32","qualname":"::read::value::ValueType::U32","value":"ValueType::U32","parent":{"krate":0,"index":9212},"children":[],"decl_id":null,"docs":" Unsigned 32-bit integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned 32-bit integer type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051727,"byte_end":1051760,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9227},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051810,"byte_end":1051813,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"I64","qualname":"::read::value::ValueType::I64","value":"ValueType::I64","parent":{"krate":0,"index":9212},"children":[],"decl_id":null,"docs":" Signed 64-bit integer type.\n","sig":null,"attributes":[{"value":"/ Signed 64-bit integer type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051774,"byte_end":1051805,"line_start":43,"line_end":43,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9229},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051857,"byte_end":1051860,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"U64","qualname":"::read::value::ValueType::U64","value":"ValueType::U64","parent":{"krate":0,"index":9212},"children":[],"decl_id":null,"docs":" Unsigned 64-bit integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned 64-bit integer type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051819,"byte_end":1051852,"line_start":45,"line_end":45,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9231},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051902,"byte_end":1051905,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"F32","qualname":"::read::value::ValueType::F32","value":"ValueType::F32","parent":{"krate":0,"index":9212},"children":[],"decl_id":null,"docs":" 32-bit floating point type.\n","sig":null,"attributes":[{"value":"/ 32-bit floating point type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051866,"byte_end":1051897,"line_start":47,"line_end":47,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9233},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051947,"byte_end":1051950,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"F64","qualname":"::read::value::ValueType::F64","value":"ValueType::F64","parent":{"krate":0,"index":9212},"children":[],"decl_id":null,"docs":" 64-bit floating point type.\n","sig":null,"attributes":[{"value":"/ 64-bit floating point type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051911,"byte_end":1051942,"line_start":49,"line_end":49,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":9212},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051274,"byte_end":1051283,"line_start":26,"line_end":26,"column_start":10,"column_end":19},"name":"ValueType","qualname":"::read::value::ValueType","value":"enum ValueType { Generic, I8, U8, I16, U16, I32, U32, I64, U64, F32, F64, }","parent":null,"children":[{"krate":0,"index":9213},{"krate":0,"index":9215},{"krate":0,"index":9217},{"krate":0,"index":9219},{"krate":0,"index":9221},{"krate":0,"index":9223},{"krate":0,"index":9225},{"krate":0,"index":9227},{"krate":0,"index":9229},{"krate":0,"index":9231},{"krate":0,"index":9233}],"decl_id":null,"docs":" The type of an entry on the DWARF stack.\n","sig":null,"attributes":[{"value":"/ The type of an entry on the DWARF stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051175,"byte_end":1051219,"line_start":24,"line_end":24,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9247},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052136,"byte_end":1052143,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Generic","qualname":"::read::value::Value::Generic","value":"Value::Generic(u64)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":" A generic value, which is address-sized and of unspecified sign.\n","sig":null,"attributes":[{"value":"/ A generic value, which is address-sized and of unspecified sign.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052063,"byte_end":1052131,"line_start":56,"line_end":56,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":9249},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052144,"byte_end":1052147,"line_start":57,"line_end":57,"column_start":13,"column_end":16},"name":"0","qualname":"::read::value::Value::Generic::0","value":"u64","parent":{"krate":0,"index":9247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9250},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052192,"byte_end":1052194,"line_start":59,"line_end":59,"column_start":5,"column_end":7},"name":"I8","qualname":"::read::value::Value::I8","value":"Value::I8(i8)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":" A signed 8-bit integer value.\n","sig":null,"attributes":[{"value":"/ A signed 8-bit integer value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052154,"byte_end":1052187,"line_start":58,"line_end":58,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":9252},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052195,"byte_end":1052197,"line_start":59,"line_end":59,"column_start":8,"column_end":10},"name":"0","qualname":"::read::value::Value::I8::0","value":"i8","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9253},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052245,"byte_end":1052247,"line_start":61,"line_end":61,"column_start":5,"column_end":7},"name":"U8","qualname":"::read::value::Value::U8","value":"Value::U8(u8)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":" An unsigned 8-bit integer value.\n","sig":null,"attributes":[{"value":"/ An unsigned 8-bit integer value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052204,"byte_end":1052240,"line_start":60,"line_end":60,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":9255},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052248,"byte_end":1052250,"line_start":61,"line_end":61,"column_start":8,"column_end":10},"name":"0","qualname":"::read::value::Value::U8::0","value":"u8","parent":{"krate":0,"index":9253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9256},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052296,"byte_end":1052299,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"I16","qualname":"::read::value::Value::I16","value":"Value::I16(i16)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":" A signed 16-bit integer value.\n","sig":null,"attributes":[{"value":"/ A signed 16-bit integer value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052257,"byte_end":1052291,"line_start":62,"line_end":62,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":9258},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052300,"byte_end":1052303,"line_start":63,"line_end":63,"column_start":9,"column_end":12},"name":"0","qualname":"::read::value::Value::I16::0","value":"i16","parent":{"krate":0,"index":9256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9259},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052352,"byte_end":1052355,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"U16","qualname":"::read::value::Value::U16","value":"Value::U16(u16)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":" An unsigned 16-bit integer value.\n","sig":null,"attributes":[{"value":"/ An unsigned 16-bit integer value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052310,"byte_end":1052347,"line_start":64,"line_end":64,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":9261},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052356,"byte_end":1052359,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"name":"0","qualname":"::read::value::Value::U16::0","value":"u16","parent":{"krate":0,"index":9259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9262},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052405,"byte_end":1052408,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"I32","qualname":"::read::value::Value::I32","value":"Value::I32(i32)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":" A signed 32-bit integer value.\n","sig":null,"attributes":[{"value":"/ A signed 32-bit integer value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052366,"byte_end":1052400,"line_start":66,"line_end":66,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":9264},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052409,"byte_end":1052412,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"0","qualname":"::read::value::Value::I32::0","value":"i32","parent":{"krate":0,"index":9262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9265},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052461,"byte_end":1052464,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"name":"U32","qualname":"::read::value::Value::U32","value":"Value::U32(u32)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":" An unsigned 32-bit integer value.\n","sig":null,"attributes":[{"value":"/ An unsigned 32-bit integer value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052419,"byte_end":1052456,"line_start":68,"line_end":68,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":9267},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052465,"byte_end":1052468,"line_start":69,"line_end":69,"column_start":9,"column_end":12},"name":"0","qualname":"::read::value::Value::U32::0","value":"u32","parent":{"krate":0,"index":9265},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9268},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052514,"byte_end":1052517,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"I64","qualname":"::read::value::Value::I64","value":"Value::I64(i64)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":" A signed 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ A signed 64-bit integer value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052475,"byte_end":1052509,"line_start":70,"line_end":70,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":9270},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052518,"byte_end":1052521,"line_start":71,"line_end":71,"column_start":9,"column_end":12},"name":"0","qualname":"::read::value::Value::I64::0","value":"i64","parent":{"krate":0,"index":9268},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9271},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052570,"byte_end":1052573,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"U64","qualname":"::read::value::Value::U64","value":"Value::U64(u64)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":" An unsigned 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ An unsigned 64-bit integer value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052528,"byte_end":1052565,"line_start":72,"line_end":72,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":9273},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052574,"byte_end":1052577,"line_start":73,"line_end":73,"column_start":9,"column_end":12},"name":"0","qualname":"::read::value::Value::U64::0","value":"u64","parent":{"krate":0,"index":9271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9274},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052623,"byte_end":1052626,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"F32","qualname":"::read::value::Value::F32","value":"Value::F32(f32)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":" A 32-bit floating point value.\n","sig":null,"attributes":[{"value":"/ A 32-bit floating point value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052584,"byte_end":1052618,"line_start":74,"line_end":74,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":9276},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052627,"byte_end":1052630,"line_start":75,"line_end":75,"column_start":9,"column_end":12},"name":"0","qualname":"::read::value::Value::F32::0","value":"f32","parent":{"krate":0,"index":9274},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9277},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052676,"byte_end":1052679,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"F64","qualname":"::read::value::Value::F64","value":"Value::F64(f64)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":" A 64-bit floating point value.\n","sig":null,"attributes":[{"value":"/ A 64-bit floating point value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052637,"byte_end":1052671,"line_start":76,"line_end":76,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":9279},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052680,"byte_end":1052683,"line_start":77,"line_end":77,"column_start":9,"column_end":12},"name":"0","qualname":"::read::value::Value::F64::0","value":"f64","parent":{"krate":0,"index":9277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9246},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052051,"byte_end":1052056,"line_start":55,"line_end":55,"column_start":10,"column_end":15},"name":"Value","qualname":"::read::value::Value","value":"enum Value {\n    Generic(u64),\n    I8(i8),\n    U8(u8),\n    I16(i16),\n    U16(u16),\n    I32(i32),\n    U32(u32),\n    I64(i64),\n    U64(u64),\n    F32(f32),\n    F64(f64),\n}","parent":null,"children":[{"krate":0,"index":9247},{"krate":0,"index":9250},{"krate":0,"index":9253},{"krate":0,"index":9256},{"krate":0,"index":9259},{"krate":0,"index":9262},{"krate":0,"index":9265},{"krate":0,"index":9268},{"krate":0,"index":9271},{"krate":0,"index":9274},{"krate":0,"index":9277}],"decl_id":null,"docs":" The value of an entry on the DWARF stack.\n","sig":null,"attributes":[{"value":"/ The value of an entry on the DWARF stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1051955,"byte_end":1052000,"line_start":53,"line_end":53,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2854},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052768,"byte_end":1052776,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"bit_size","qualname":"<ValueType>::bit_size","value":"fn bit_size(Self, u64) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The size in bits of a value for this type.\n","sig":null,"attributes":[{"value":"/ The size in bits of a value for this type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052710,"byte_end":1052756,"line_start":81,"line_end":81,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2855},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1053224,"byte_end":1053237,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"from_encoding","qualname":"<ValueType>::from_encoding","value":"fn from_encoding(constants::DwAte, u64) -> Option<ValueType>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ValueType` from the attributes of a base type DIE.\n","sig":null,"attributes":[{"value":"/ Construct a `ValueType` from the attributes of a base type DIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1053145,"byte_end":1053212,"line_start":92,"line_end":92,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2856},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1054075,"byte_end":1054085,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"from_entry","qualname":"<ValueType>::from_entry","value":"fn from_entry<R>(&DebuggingInformationEntry<, , R>)\n-> Result<Option<ValueType>> where R: Reader","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ValueType` from a base type DIE.\n","sig":null,"attributes":[{"value":"/ Construct a `ValueType` from a base type DIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1054014,"byte_end":1054063,"line_start":109,"line_end":109,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1055560,"byte_end":1055570,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"value_type","qualname":"<Value>::value_type","value":"fn value_type(&Self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Return the `ValueType` corresponding to this `Value`.\n","sig":null,"attributes":[{"value":"/ Return the `ValueType` corresponding to this `Value`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1055491,"byte_end":1055548,"line_start":152,"line_end":152,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1056210,"byte_end":1056215,"line_start":170,"line_end":170,"column_start":12,"column_end":17},"name":"parse","qualname":"<Value>::parse","value":"fn parse<R>(ValueType, R) -> Result<Value> where R: Reader","parent":null,"children":[],"decl_id":null,"docs":" Read a `Value` with the given `value_type` from a `Reader`.\n","sig":null,"attributes":[{"value":"/ Read a `Value` with the given `value_type` from a `Reader`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1056135,"byte_end":1056198,"line_start":169,"line_end":169,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1057197,"byte_end":1057203,"line_start":191,"line_end":191,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<Value>::to_u64","value":"fn to_u64(Self, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Value` to a `u64`.","sig":null,"attributes":[{"value":"/ Convert a `Value` to a `u64`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1057028,"byte_end":1057061,"line_start":187,"line_end":187,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1057066,"byte_end":1057069,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The `ValueType` of `self` must be integral.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1057074,"byte_end":1057121,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/ Values are sign extended if the source value is signed.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1057126,"byte_end":1057185,"line_start":190,"line_end":190,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1058068,"byte_end":1058076,"line_start":212,"line_end":212,"column_start":12,"column_end":20},"name":"from_u64","qualname":"<Value>::from_u64","value":"fn from_u64(ValueType, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Value` with the given `value_type` from a `u64` value.","sig":null,"attributes":[{"value":"/ Create a `Value` with the given `value_type` from a `u64` value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1057816,"byte_end":1057884,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1057889,"byte_end":1057892,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The `value_type` may be integral or floating point.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1057897,"byte_end":1057952,"line_start":209,"line_end":209,"column_start":5,"column_end":60}},{"value":"/ The result is truncated if the `u64` value does","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1057957,"byte_end":1058008,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/ not fit the bounds of the `value_type`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1058013,"byte_end":1058056,"line_start":211,"line_end":211,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1061260,"byte_end":1061267,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"convert","qualname":"<Value>::convert","value":"fn convert(Self, ValueType, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Value` to the given `value_type`.","sig":null,"attributes":[{"value":"/ Convert a `Value` to the given `value_type`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1060824,"byte_end":1060872,"line_start":273,"line_end":273,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1060877,"byte_end":1060880,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ When converting between integral types, the result is truncated","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1060885,"byte_end":1060952,"line_start":275,"line_end":275,"column_start":5,"column_end":72}},{"value":"/ if the source value does not fit the bounds of the `value_type`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1060957,"byte_end":1061025,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/ When converting from floating point types, the result is not defined","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1061030,"byte_end":1061102,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ if the source value does not fit the bounds of the `value_type`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1061107,"byte_end":1061175,"line_start":278,"line_end":278,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1061180,"byte_end":1061183,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_convert` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1061188,"byte_end":1061248,"line_start":280,"line_end":280,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1061809,"byte_end":1061820,"line_start":294,"line_end":294,"column_start":12,"column_end":23},"name":"reinterpret","qualname":"<Value>::reinterpret","value":"fn reinterpret(Self, ValueType, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Reinterpret the bits in a `Value` as the given `value_type`.","sig":null,"attributes":[{"value":"/ Reinterpret the bits in a `Value` as the given `value_type`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1061583,"byte_end":1061647,"line_start":289,"line_end":289,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1061652,"byte_end":1061655,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The source and result value types must have equal sizes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1061660,"byte_end":1061720,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1061725,"byte_end":1061728,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_reinterpret` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1061733,"byte_end":1061797,"line_start":293,"line_end":293,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1063556,"byte_end":1063559,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"abs","qualname":"<Value>::abs","value":"fn abs(Self, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform an absolute value operation.","sig":null,"attributes":[{"value":"/ Perform an absolute value operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1063345,"byte_end":1063385,"line_start":327,"line_end":327,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1063390,"byte_end":1063393,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1063398,"byte_end":1063475,"line_start":329,"line_end":329,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1063480,"byte_end":1063483,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_abs` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1063488,"byte_end":1063544,"line_start":331,"line_end":331,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1064724,"byte_end":1064727,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"neg","qualname":"<Value>::neg","value":"fn neg(Self, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a negation operation.","sig":null,"attributes":[{"value":"/ Perform a negation operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1064520,"byte_end":1064553,"line_start":351,"line_end":351,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1064558,"byte_end":1064561,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1064566,"byte_end":1064643,"line_start":353,"line_end":353,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1064648,"byte_end":1064651,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_neg` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1064656,"byte_end":1064712,"line_start":355,"line_end":355,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1065935,"byte_end":1065938,"line_start":383,"line_end":383,"column_start":12,"column_end":15},"name":"add","qualname":"<Value>::add","value":"fn add(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform an addition operation.","sig":null,"attributes":[{"value":"/ Perform an addition operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1065763,"byte_end":1065797,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1065802,"byte_end":1065805,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1065810,"byte_end":1065853,"line_start":380,"line_end":380,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1065858,"byte_end":1065861,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_plus` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1065866,"byte_end":1065923,"line_start":382,"line_end":382,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1067213,"byte_end":1067216,"line_start":408,"line_end":408,"column_start":12,"column_end":15},"name":"sub","qualname":"<Value>::sub","value":"fn sub(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a subtraction operation.","sig":null,"attributes":[{"value":"/ Perform a subtraction operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1067038,"byte_end":1067074,"line_start":403,"line_end":403,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1067079,"byte_end":1067082,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1067087,"byte_end":1067130,"line_start":405,"line_end":405,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1067135,"byte_end":1067138,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_minus` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1067143,"byte_end":1067201,"line_start":407,"line_end":407,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1068492,"byte_end":1068495,"line_start":433,"line_end":433,"column_start":12,"column_end":15},"name":"mul","qualname":"<Value>::mul","value":"fn mul(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a multiplication operation.","sig":null,"attributes":[{"value":"/ Perform a multiplication operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1068316,"byte_end":1068355,"line_start":428,"line_end":428,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1068360,"byte_end":1068363,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1068368,"byte_end":1068411,"line_start":430,"line_end":430,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1068416,"byte_end":1068419,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_mul` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1068424,"byte_end":1068480,"line_start":432,"line_end":432,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2873},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1069847,"byte_end":1069850,"line_start":459,"line_end":459,"column_start":12,"column_end":15},"name":"div","qualname":"<Value>::div","value":"fn div(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a division operation.","sig":null,"attributes":[{"value":"/ Perform a division operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1069595,"byte_end":1069628,"line_start":453,"line_end":453,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1069633,"byte_end":1069636,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1069641,"byte_end":1069684,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1069689,"byte_end":1069766,"line_start":456,"line_end":456,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1069771,"byte_end":1069774,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_div` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1069779,"byte_end":1069835,"line_start":458,"line_end":458,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1071808,"byte_end":1071811,"line_start":504,"line_end":504,"column_start":12,"column_end":15},"name":"rem","qualname":"<Value>::rem","value":"fn rem(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a remainder operation.","sig":null,"attributes":[{"value":"/ Perform a remainder operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1071543,"byte_end":1071577,"line_start":498,"line_end":498,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1071582,"byte_end":1071585,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1071590,"byte_end":1071642,"line_start":500,"line_end":500,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as an unsigned value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1071647,"byte_end":1071727,"line_start":501,"line_end":501,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1071732,"byte_end":1071735,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_mod` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1071740,"byte_end":1071796,"line_start":503,"line_end":503,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1073647,"byte_end":1073650,"line_start":546,"line_end":546,"column_start":12,"column_end":15},"name":"not","qualname":"<Value>::not","value":"fn not(Self, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise not operation.","sig":null,"attributes":[{"value":"/ Perform a bitwise not operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1073465,"byte_end":1073501,"line_start":541,"line_end":541,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1073506,"byte_end":1073509,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1073514,"byte_end":1073566,"line_start":543,"line_end":543,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1073571,"byte_end":1073574,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_not` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1073579,"byte_end":1073635,"line_start":545,"line_end":545,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1074010,"byte_end":1074013,"line_start":557,"line_end":557,"column_start":12,"column_end":15},"name":"and","qualname":"<Value>::and","value":"fn and(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise and operation.","sig":null,"attributes":[{"value":"/ Perform a bitwise and operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1073828,"byte_end":1073864,"line_start":552,"line_end":552,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1073869,"byte_end":1073872,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1073877,"byte_end":1073929,"line_start":554,"line_end":554,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1073934,"byte_end":1073937,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_and` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1073942,"byte_end":1073998,"line_start":556,"line_end":556,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1074529,"byte_end":1074531,"line_start":572,"line_end":572,"column_start":12,"column_end":14},"name":"or","qualname":"<Value>::or","value":"fn or(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise or operation.","sig":null,"attributes":[{"value":"/ Perform a bitwise or operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1074349,"byte_end":1074384,"line_start":567,"line_end":567,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1074389,"byte_end":1074392,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1074397,"byte_end":1074449,"line_start":569,"line_end":569,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1074454,"byte_end":1074457,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_or` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1074462,"byte_end":1074517,"line_start":571,"line_end":571,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1075058,"byte_end":1075061,"line_start":587,"line_end":587,"column_start":12,"column_end":15},"name":"xor","qualname":"<Value>::xor","value":"fn xor(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise exclusive-or operation.","sig":null,"attributes":[{"value":"/ Perform a bitwise exclusive-or operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1074867,"byte_end":1074912,"line_start":582,"line_end":582,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1074917,"byte_end":1074920,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1074925,"byte_end":1074977,"line_start":584,"line_end":584,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1074982,"byte_end":1074985,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_xor` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1074990,"byte_end":1075046,"line_start":586,"line_end":586,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1076494,"byte_end":1076497,"line_start":623,"line_end":623,"column_start":12,"column_end":15},"name":"shl","qualname":"<Value>::shl","value":"fn shl(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a shift left operation.","sig":null,"attributes":[{"value":"/ Perform a shift left operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1076184,"byte_end":1076219,"line_start":616,"line_end":616,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1076224,"byte_end":1076227,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This operation requires integral types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1076232,"byte_end":1076275,"line_start":618,"line_end":618,"column_start":5,"column_end":48}},{"value":"/ If the shift length exceeds the type size, then 0 is returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1076280,"byte_end":1076346,"line_start":619,"line_end":619,"column_start":5,"column_end":71}},{"value":"/ If the shift length is negative then an error is returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1076351,"byte_end":1076413,"line_start":620,"line_end":620,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1076418,"byte_end":1076421,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_shl` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1076426,"byte_end":1076482,"line_start":622,"line_end":622,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1078044,"byte_end":1078047,"line_start":654,"line_end":654,"column_start":12,"column_end":15},"name":"shr","qualname":"<Value>::shr","value":"fn shr(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a logical shift right operation.","sig":null,"attributes":[{"value":"/ Perform a logical shift right operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1077536,"byte_end":1077580,"line_start":644,"line_end":644,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1077585,"byte_end":1077588,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ This operation requires an unsigned integral type for the value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1077593,"byte_end":1077661,"line_start":646,"line_end":646,"column_start":5,"column_end":73}},{"value":"/ If the value type is `Generic`, then it is interpreted as an unsigned value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1077666,"byte_end":1077746,"line_start":647,"line_end":647,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1077751,"byte_end":1077754,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ This operation requires an integral type for the shift length.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1077759,"byte_end":1077825,"line_start":649,"line_end":649,"column_start":5,"column_end":71}},{"value":"/ If the shift length exceeds the type size, then 0 is returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1077830,"byte_end":1077896,"line_start":650,"line_end":650,"column_start":5,"column_end":71}},{"value":"/ If the shift length is negative then an error is returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1077901,"byte_end":1077963,"line_start":651,"line_end":651,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1077968,"byte_end":1077971,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_shr` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1077976,"byte_end":1078032,"line_start":653,"line_end":653,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1079640,"byte_end":1079644,"line_start":687,"line_end":687,"column_start":12,"column_end":16},"name":"shra","qualname":"<Value>::shra","value":"fn shra(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform an arithmetic shift right operation.","sig":null,"attributes":[{"value":"/ Perform an arithmetic shift right operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1079065,"byte_end":1079113,"line_start":676,"line_end":676,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1079118,"byte_end":1079121,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This operation requires a signed integral type for the value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1079126,"byte_end":1079191,"line_start":678,"line_end":678,"column_start":5,"column_end":70}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1079196,"byte_end":1079273,"line_start":679,"line_end":679,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1079278,"byte_end":1079281,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ This operation requires an integral type for the shift length.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1079286,"byte_end":1079352,"line_start":681,"line_end":681,"column_start":5,"column_end":71}},{"value":"/ If the shift length exceeds the type size, then 0 is returned for positive values,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1079357,"byte_end":1079443,"line_start":682,"line_end":682,"column_start":5,"column_end":91}},{"value":"/ and -1 is returned for negative values.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1079448,"byte_end":1079491,"line_start":683,"line_end":683,"column_start":5,"column_end":48}},{"value":"/ If the shift length is negative then an error is returned.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1079496,"byte_end":1079558,"line_start":684,"line_end":684,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1079563,"byte_end":1079566,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_shra` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1079571,"byte_end":1079628,"line_start":686,"line_end":686,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1081790,"byte_end":1081792,"line_start":755,"line_end":755,"column_start":12,"column_end":14},"name":"eq","qualname":"<Value>::eq","value":"fn eq(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `==` relational operation.","sig":null,"attributes":[{"value":"/ Perform the `==` relational operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1081521,"byte_end":1081563,"line_start":749,"line_end":749,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1081568,"byte_end":1081571,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1081576,"byte_end":1081628,"line_start":751,"line_end":751,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1081633,"byte_end":1081710,"line_start":752,"line_end":752,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1081715,"byte_end":1081718,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_eq` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1081723,"byte_end":1081778,"line_start":754,"line_end":754,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2884},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1082989,"byte_end":1082991,"line_start":781,"line_end":781,"column_start":12,"column_end":14},"name":"ge","qualname":"<Value>::ge","value":"fn ge(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `>=` relational operation.","sig":null,"attributes":[{"value":"/ Perform the `>=` relational operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1082720,"byte_end":1082762,"line_start":775,"line_end":775,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1082767,"byte_end":1082770,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1082775,"byte_end":1082827,"line_start":777,"line_end":777,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1082832,"byte_end":1082909,"line_start":778,"line_end":778,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1082914,"byte_end":1082917,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_ge` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1082922,"byte_end":1082977,"line_start":780,"line_end":780,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2885},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1084187,"byte_end":1084189,"line_start":807,"line_end":807,"column_start":12,"column_end":14},"name":"gt","qualname":"<Value>::gt","value":"fn gt(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `>` relational operation.","sig":null,"attributes":[{"value":"/ Perform the `>` relational operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1083919,"byte_end":1083960,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1083965,"byte_end":1083968,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1083973,"byte_end":1084025,"line_start":803,"line_end":803,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1084030,"byte_end":1084107,"line_start":804,"line_end":804,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1084112,"byte_end":1084115,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_gt` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1084120,"byte_end":1084175,"line_start":806,"line_end":806,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2886},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1085374,"byte_end":1085376,"line_start":833,"line_end":833,"column_start":12,"column_end":14},"name":"le","qualname":"<Value>::le","value":"fn le(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `<= relational operation.","sig":null,"attributes":[{"value":"/ Perform the `<= relational operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1085106,"byte_end":1085147,"line_start":827,"line_end":827,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1085152,"byte_end":1085155,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1085160,"byte_end":1085212,"line_start":829,"line_end":829,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1085217,"byte_end":1085294,"line_start":830,"line_end":830,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1085299,"byte_end":1085302,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_le` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1085307,"byte_end":1085362,"line_start":832,"line_end":832,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1086571,"byte_end":1086573,"line_start":859,"line_end":859,"column_start":12,"column_end":14},"name":"lt","qualname":"<Value>::lt","value":"fn lt(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `< relational operation.","sig":null,"attributes":[{"value":"/ Perform the `< relational operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1086304,"byte_end":1086344,"line_start":853,"line_end":853,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1086349,"byte_end":1086352,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1086357,"byte_end":1086409,"line_start":855,"line_end":855,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1086414,"byte_end":1086491,"line_start":856,"line_end":856,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1086496,"byte_end":1086499,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_lt` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1086504,"byte_end":1086559,"line_start":858,"line_end":858,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1087758,"byte_end":1087760,"line_start":885,"line_end":885,"column_start":12,"column_end":14},"name":"ne","qualname":"<Value>::ne","value":"fn ne(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `!= relational operation.","sig":null,"attributes":[{"value":"/ Perform the `!= relational operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1087490,"byte_end":1087531,"line_start":879,"line_end":879,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1087536,"byte_end":1087539,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1087544,"byte_end":1087596,"line_start":881,"line_end":881,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1087601,"byte_end":1087678,"line_start":882,"line_end":882,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1087683,"byte_end":1087686,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_ne` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1087691,"byte_end":1087746,"line_start":884,"line_end":884,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":2890},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87262,"byte_end":87271,"line_start":231,"line_end":231,"column_start":10,"column_end":19},"name":"EndianBuf","qualname":"::read::EndianBuf","value":"EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" `EndianBuf` has been renamed to `EndianSlice`. For ease of upgrading across\n `gimli` versions, we export this type alias.\n","sig":null,"attributes":[{"value":"/ `EndianBuf` has been renamed to `EndianSlice`. For ease of upgrading across","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87039,"byte_end":87118,"line_start":228,"line_end":228,"column_start":1,"column_end":80}},{"value":"/ `gimli` versions, we export this type alias.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87119,"byte_end":87167,"line_start":229,"line_end":229,"column_start":1,"column_end":49}},{"value":"deprecated(note =\n\"EndianBuf has been renamed to EndianSlice, use that instead.\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87168,"byte_end":87252,"line_start":230,"line_end":230,"column_start":1,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9290},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87472,"byte_end":87474,"line_start":237,"line_end":237,"column_start":5,"column_end":7},"name":"Io","qualname":"::read::Error::Io","value":"Error::Io","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" An I/O error occurred while reading.\n","sig":null,"attributes":[{"value":"/ An I/O error occurred while reading.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87427,"byte_end":87467,"line_start":236,"line_end":236,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9292},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87552,"byte_end":87594,"line_start":239,"line_end":239,"column_start":5,"column_end":47},"name":"PcRelativePointerButSectionBaseIsUndefined","qualname":"::read::Error::PcRelativePointerButSectionBaseIsUndefined","value":"Error::PcRelativePointerButSectionBaseIsUndefined","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found a PC relative pointer, but the section base is undefined.\n","sig":null,"attributes":[{"value":"/ Found a PC relative pointer, but the section base is undefined.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87480,"byte_end":87547,"line_start":238,"line_end":238,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9294},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87677,"byte_end":87718,"line_start":241,"line_end":241,"column_start":5,"column_end":46},"name":"TextRelativePointerButTextBaseIsUndefined","qualname":"::read::Error::TextRelativePointerButTextBaseIsUndefined","value":"Error::TextRelativePointerButTextBaseIsUndefined","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found a `.text` relative pointer, but the `.text` base is undefined.\n","sig":null,"attributes":[{"value":"/ Found a `.text` relative pointer, but the `.text` base is undefined.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87600,"byte_end":87672,"line_start":240,"line_end":240,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9296},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87795,"byte_end":87836,"line_start":243,"line_end":243,"column_start":5,"column_end":46},"name":"DataRelativePointerButDataBaseIsUndefined","qualname":"::read::Error::DataRelativePointerButDataBaseIsUndefined","value":"Error::DataRelativePointerButDataBaseIsUndefined","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found a data relative pointer, but the data base is undefined.\n","sig":null,"attributes":[{"value":"/ Found a data relative pointer, but the data base is undefined.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87724,"byte_end":87790,"line_start":242,"line_end":242,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9298},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87941,"byte_end":87972,"line_start":246,"line_end":246,"column_start":5,"column_end":36},"name":"FuncRelativePointerInBadContext","qualname":"::read::Error::FuncRelativePointerInBadContext","value":"Error::FuncRelativePointerInBadContext","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found a function relative pointer in a context that does not have a\n function base.\n","sig":null,"attributes":[{"value":"/ Found a function relative pointer in a context that does not have a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87842,"byte_end":87913,"line_start":244,"line_end":244,"column_start":5,"column_end":76}},{"value":"/ function base.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87918,"byte_end":87936,"line_start":245,"line_end":245,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9300},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88042,"byte_end":88072,"line_start":248,"line_end":248,"column_start":5,"column_end":35},"name":"CannotParseOmitPointerEncoding","qualname":"::read::Error::CannotParseOmitPointerEncoding","value":"Error::CannotParseOmitPointerEncoding","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Cannot parse a pointer with a `DW_EH_PE_omit` encoding.\n","sig":null,"attributes":[{"value":"/ Cannot parse a pointer with a `DW_EH_PE_omit` encoding.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87978,"byte_end":88037,"line_start":247,"line_end":247,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9302},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88129,"byte_end":88146,"line_start":250,"line_end":250,"column_start":5,"column_end":22},"name":"BadUnsignedLeb128","qualname":"::read::Error::BadUnsignedLeb128","value":"Error::BadUnsignedLeb128","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" An error parsing an unsigned LEB128 value.\n","sig":null,"attributes":[{"value":"/ An error parsing an unsigned LEB128 value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88078,"byte_end":88124,"line_start":249,"line_end":249,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9304},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88200,"byte_end":88215,"line_start":252,"line_end":252,"column_start":5,"column_end":20},"name":"BadSignedLeb128","qualname":"::read::Error::BadSignedLeb128","value":"Error::BadSignedLeb128","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" An error parsing a signed LEB128 value.\n","sig":null,"attributes":[{"value":"/ An error parsing a signed LEB128 value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88152,"byte_end":88195,"line_start":251,"line_end":251,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9306},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88323,"byte_end":88342,"line_start":255,"line_end":255,"column_start":5,"column_end":24},"name":"AbbreviationTagZero","qualname":"::read::Error::AbbreviationTagZero","value":"Error::AbbreviationTagZero","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" An abbreviation declared that its tag is zero, but zero is reserved for\n null records.\n","sig":null,"attributes":[{"value":"/ An abbreviation declared that its tag is zero, but zero is reserved for","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88221,"byte_end":88296,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ null records.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88301,"byte_end":88318,"line_start":254,"line_end":254,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9308},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88462,"byte_end":88479,"line_start":258,"line_end":258,"column_start":5,"column_end":22},"name":"AttributeFormZero","qualname":"::read::Error::AttributeFormZero","value":"Error::AttributeFormZero","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" An attribute specification declared that its form is zero, but zero is\n reserved for null records.\n","sig":null,"attributes":[{"value":"/ An attribute specification declared that its form is zero, but zero is","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88348,"byte_end":88422,"line_start":256,"line_end":256,"column_start":5,"column_end":79}},{"value":"/ reserved for null records.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88427,"byte_end":88457,"line_start":257,"line_end":257,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9310},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88577,"byte_end":88591,"line_start":261,"line_end":261,"column_start":5,"column_end":19},"name":"BadHasChildren","qualname":"::read::Error::BadHasChildren","value":"Error::BadHasChildren","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The abbreviation's has-children byte was not one of\n `DW_CHILDREN_{yes,no}`.\n","sig":null,"attributes":[{"value":"/ The abbreviation's has-children byte was not one of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88485,"byte_end":88540,"line_start":259,"line_end":259,"column_start":5,"column_end":60}},{"value":"/ `DW_CHILDREN_{yes,no}`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88545,"byte_end":88572,"line_start":260,"line_end":260,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9312},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88641,"byte_end":88650,"line_start":263,"line_end":263,"column_start":5,"column_end":14},"name":"BadLength","qualname":"::read::Error::BadLength","value":"Error::BadLength","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The specified length is impossible.\n","sig":null,"attributes":[{"value":"/ The specified length is impossible.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88597,"byte_end":88636,"line_start":262,"line_end":262,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9314},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88699,"byte_end":88710,"line_start":265,"line_end":265,"column_start":5,"column_end":16},"name":"UnknownForm","qualname":"::read::Error::UnknownForm","value":"Error::UnknownForm","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found an unknown `DW_FORM_*` type.\n","sig":null,"attributes":[{"value":"/ Found an unknown `DW_FORM_*` type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88656,"byte_end":88694,"line_start":264,"line_end":264,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9316},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88763,"byte_end":88775,"line_start":267,"line_end":267,"column_start":5,"column_end":17},"name":"ExpectedZero","qualname":"::read::Error::ExpectedZero","value":"Error::ExpectedZero","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Expected a zero, found something else.\n","sig":null,"attributes":[{"value":"/ Expected a zero, found something else.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88716,"byte_end":88758,"line_start":266,"line_end":266,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9318},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88844,"byte_end":88869,"line_start":269,"line_end":269,"column_start":5,"column_end":30},"name":"DuplicateAbbreviationCode","qualname":"::read::Error::DuplicateAbbreviationCode","value":"Error::DuplicateAbbreviationCode","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found an abbreviation code that has already been used.\n","sig":null,"attributes":[{"value":"/ Found an abbreviation code that has already been used.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88781,"byte_end":88839,"line_start":268,"line_end":268,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9320},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88909,"byte_end":88924,"line_start":271,"line_end":271,"column_start":5,"column_end":20},"name":"DuplicateArange","qualname":"::read::Error::DuplicateArange","value":"Error::DuplicateArange","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found a duplicate arange.\n","sig":null,"attributes":[{"value":"/ Found a duplicate arange.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88875,"byte_end":88904,"line_start":270,"line_end":270,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9322},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88978,"byte_end":88999,"line_start":273,"line_end":273,"column_start":5,"column_end":26},"name":"UnknownReservedLength","qualname":"::read::Error::UnknownReservedLength","value":"Error::UnknownReservedLength","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found an unknown reserved length value.\n","sig":null,"attributes":[{"value":"/ Found an unknown reserved length value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":88930,"byte_end":88973,"line_start":272,"line_end":272,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9324},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89045,"byte_end":89059,"line_start":275,"line_end":275,"column_start":5,"column_end":19},"name":"UnknownVersion","qualname":"::read::Error::UnknownVersion","value":"Error::UnknownVersion(u64)","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found an unknown DWARF version.\n","sig":null,"attributes":[{"value":"/ Found an unknown DWARF version.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89005,"byte_end":89040,"line_start":274,"line_end":274,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":9326},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89060,"byte_end":89063,"line_start":275,"line_end":275,"column_start":20,"column_end":23},"name":"0","qualname":"::read::Error::UnknownVersion::0","value":"u64","parent":{"krate":0,"index":9324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9327},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89128,"byte_end":89147,"line_start":277,"line_end":277,"column_start":5,"column_end":24},"name":"UnknownAbbreviation","qualname":"::read::Error::UnknownAbbreviation","value":"Error::UnknownAbbreviation","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found a record with an unknown abbreviation code.\n","sig":null,"attributes":[{"value":"/ Found a record with an unknown abbreviation code.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89070,"byte_end":89123,"line_start":276,"line_end":276,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9329},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89206,"byte_end":89219,"line_start":279,"line_end":279,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::read::Error::UnexpectedEof","value":"Error::UnexpectedEof(ReaderOffsetId)","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Hit the end of input before it was expected.\n","sig":null,"attributes":[{"value":"/ Hit the end of input before it was expected.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89153,"byte_end":89201,"line_start":278,"line_end":278,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":9331},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89220,"byte_end":89234,"line_start":279,"line_end":279,"column_start":19,"column_end":33},"name":"0","qualname":"::read::Error::UnexpectedEof::0","value":"read::reader::ReaderOffsetId","parent":{"krate":0,"index":9329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9332},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89291,"byte_end":89305,"line_start":281,"line_end":281,"column_start":5,"column_end":19},"name":"UnexpectedNull","qualname":"::read::Error::UnexpectedNull","value":"Error::UnexpectedNull","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Read a null entry before it was expected.\n","sig":null,"attributes":[{"value":"/ Read a null entry before it was expected.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89241,"byte_end":89286,"line_start":280,"line_end":280,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9334},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89353,"byte_end":89374,"line_start":283,"line_end":283,"column_start":5,"column_end":26},"name":"UnknownStandardOpcode","qualname":"::read::Error::UnknownStandardOpcode","value":"Error::UnknownStandardOpcode(constants::DwLns)","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found an unknown standard opcode.\n","sig":null,"attributes":[{"value":"/ Found an unknown standard opcode.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89311,"byte_end":89348,"line_start":282,"line_end":282,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":9336},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89375,"byte_end":89391,"line_start":283,"line_end":283,"column_start":27,"column_end":43},"name":"0","qualname":"::read::Error::UnknownStandardOpcode::0","value":"constants::DwLns","parent":{"krate":0,"index":9334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9337},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89440,"byte_end":89461,"line_start":285,"line_end":285,"column_start":5,"column_end":26},"name":"UnknownExtendedOpcode","qualname":"::read::Error::UnknownExtendedOpcode","value":"Error::UnknownExtendedOpcode(constants::DwLne)","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found an unknown extended opcode.\n","sig":null,"attributes":[{"value":"/ Found an unknown extended opcode.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89398,"byte_end":89435,"line_start":284,"line_end":284,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":9339},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89462,"byte_end":89478,"line_start":285,"line_end":285,"column_start":27,"column_end":43},"name":"0","qualname":"::read::Error::UnknownExtendedOpcode::0","value":"constants::DwLne","parent":{"krate":0,"index":9337},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9340},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89538,"byte_end":89560,"line_start":287,"line_end":287,"column_start":5,"column_end":27},"name":"UnsupportedAddressSize","qualname":"::read::Error::UnsupportedAddressSize","value":"Error::UnsupportedAddressSize(u8)","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The specified address size is not supported.\n","sig":null,"attributes":[{"value":"/ The specified address size is not supported.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89485,"byte_end":89533,"line_start":286,"line_end":286,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":9342},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89561,"byte_end":89563,"line_start":287,"line_end":287,"column_start":28,"column_end":30},"name":"0","qualname":"::read::Error::UnsupportedAddressSize::0","value":"u8","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9343},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89622,"byte_end":89643,"line_start":289,"line_end":289,"column_start":5,"column_end":26},"name":"UnsupportedOffsetSize","qualname":"::read::Error::UnsupportedOffsetSize","value":"Error::UnsupportedOffsetSize(u8)","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The specified offset size is not supported.\n","sig":null,"attributes":[{"value":"/ The specified offset size is not supported.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89570,"byte_end":89617,"line_start":288,"line_end":288,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9345},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89644,"byte_end":89646,"line_start":289,"line_end":289,"column_start":27,"column_end":29},"name":"0","qualname":"::read::Error::UnsupportedOffsetSize::0","value":"u8","parent":{"krate":0,"index":9343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9346},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89704,"byte_end":89724,"line_start":291,"line_end":291,"column_start":5,"column_end":25},"name":"UnsupportedFieldSize","qualname":"::read::Error::UnsupportedFieldSize","value":"Error::UnsupportedFieldSize(u8)","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The specified field size is not supported.\n","sig":null,"attributes":[{"value":"/ The specified field size is not supported.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89653,"byte_end":89699,"line_start":290,"line_end":290,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":9348},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89725,"byte_end":89727,"line_start":291,"line_end":291,"column_start":26,"column_end":28},"name":"0","qualname":"::read::Error::UnsupportedFieldSize::0","value":"u8","parent":{"krate":0,"index":9346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9349},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89791,"byte_end":89819,"line_start":293,"line_end":293,"column_start":5,"column_end":33},"name":"MinimumInstructionLengthZero","qualname":"::read::Error::MinimumInstructionLengthZero","value":"Error::MinimumInstructionLengthZero","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The minimum instruction length must not be zero.\n","sig":null,"attributes":[{"value":"/ The minimum instruction length must not be zero.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89734,"byte_end":89786,"line_start":292,"line_end":292,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9351},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89890,"byte_end":89925,"line_start":295,"line_end":295,"column_start":5,"column_end":40},"name":"MaximumOperationsPerInstructionZero","qualname":"::read::Error::MaximumOperationsPerInstructionZero","value":"Error::MaximumOperationsPerInstructionZero","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The maximum operations per instruction must not be zero.\n","sig":null,"attributes":[{"value":"/ The maximum operations per instruction must not be zero.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89825,"byte_end":89885,"line_start":294,"line_end":294,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9353},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89972,"byte_end":89985,"line_start":297,"line_end":297,"column_start":5,"column_end":18},"name":"LineRangeZero","qualname":"::read::Error::LineRangeZero","value":"Error::LineRangeZero","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The line range must not be zero.\n","sig":null,"attributes":[{"value":"/ The line range must not be zero.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89931,"byte_end":89967,"line_start":296,"line_end":296,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9355},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90033,"byte_end":90047,"line_start":299,"line_end":299,"column_start":5,"column_end":19},"name":"OpcodeBaseZero","qualname":"::read::Error::OpcodeBaseZero","value":"Error::OpcodeBaseZero","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The opcode base must not be zero.\n","sig":null,"attributes":[{"value":"/ The opcode base must not be zero.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":89991,"byte_end":90028,"line_start":298,"line_end":298,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9357},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90092,"byte_end":90099,"line_start":301,"line_end":301,"column_start":5,"column_end":12},"name":"BadUtf8","qualname":"::read::Error::BadUtf8","value":"Error::BadUtf8","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found an invalid UTF-8 string.\n","sig":null,"attributes":[{"value":"/ Found an invalid UTF-8 string.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90053,"byte_end":90087,"line_start":300,"line_end":300,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9359},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90168,"byte_end":90176,"line_start":303,"line_end":303,"column_start":5,"column_end":13},"name":"NotCieId","qualname":"::read::Error::NotCieId","value":"Error::NotCieId","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Expected to find the CIE ID, but found something else.\n","sig":null,"attributes":[{"value":"/ Expected to find the CIE ID, but found something else.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90105,"byte_end":90163,"line_start":302,"line_end":302,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9361},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90257,"byte_end":90270,"line_start":305,"line_end":305,"column_start":5,"column_end":18},"name":"NotCiePointer","qualname":"::read::Error::NotCiePointer","value":"Error::NotCiePointer","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Expected to find a pointer to a CIE, but found the CIE ID instead.\n","sig":null,"attributes":[{"value":"/ Expected to find a pointer to a CIE, but found the CIE ID instead.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90182,"byte_end":90252,"line_start":304,"line_end":304,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9363},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90347,"byte_end":90360,"line_start":307,"line_end":307,"column_start":5,"column_end":18},"name":"NotFdePointer","qualname":"::read::Error::NotFdePointer","value":"Error::NotFdePointer","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Expected to find a pointer to an FDE, but found a CIE instead.\n","sig":null,"attributes":[{"value":"/ Expected to find a pointer to an FDE, but found a CIE instead.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90276,"byte_end":90342,"line_start":306,"line_end":306,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9365},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90427,"byte_end":90442,"line_start":309,"line_end":309,"column_start":5,"column_end":20},"name":"BadBranchTarget","qualname":"::read::Error::BadBranchTarget","value":"Error::BadBranchTarget(u64)","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Invalid branch target for a DW_OP_bra or DW_OP_skip.\n","sig":null,"attributes":[{"value":"/ Invalid branch target for a DW_OP_bra or DW_OP_skip.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90366,"byte_end":90422,"line_start":308,"line_end":308,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":9367},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90443,"byte_end":90446,"line_start":309,"line_end":309,"column_start":21,"column_end":24},"name":"0","qualname":"::read::Error::BadBranchTarget::0","value":"u64","parent":{"krate":0,"index":9365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9368},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90518,"byte_end":90542,"line_start":311,"line_end":311,"column_start":5,"column_end":29},"name":"InvalidPushObjectAddress","qualname":"::read::Error::InvalidPushObjectAddress","value":"Error::InvalidPushObjectAddress","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" DW_OP_push_object_address used but no address passed in.\n","sig":null,"attributes":[{"value":"/ DW_OP_push_object_address used but no address passed in.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90453,"byte_end":90513,"line_start":310,"line_end":310,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9370},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90617,"byte_end":90636,"line_start":313,"line_end":313,"column_start":5,"column_end":24},"name":"NotEnoughStackItems","qualname":"::read::Error::NotEnoughStackItems","value":"Error::NotEnoughStackItems","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Not enough items on the stack when evaluating an expression.\n","sig":null,"attributes":[{"value":"/ Not enough items on the stack when evaluating an expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90548,"byte_end":90612,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9372},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90697,"byte_end":90714,"line_start":315,"line_end":315,"column_start":5,"column_end":22},"name":"TooManyIterations","qualname":"::read::Error::TooManyIterations","value":"Error::TooManyIterations","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Too many iterations to compute the expression.\n","sig":null,"attributes":[{"value":"/ Too many iterations to compute the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90642,"byte_end":90692,"line_start":314,"line_end":314,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9374},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90806,"byte_end":90823,"line_start":318,"line_end":318,"column_start":5,"column_end":22},"name":"InvalidExpression","qualname":"::read::Error::InvalidExpression","value":"Error::InvalidExpression(constants::DwOp)","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" An unrecognized operation was found while parsing a DWARF\n expression.\n","sig":null,"attributes":[{"value":"/ An unrecognized operation was found while parsing a DWARF","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90720,"byte_end":90781,"line_start":316,"line_end":316,"column_start":5,"column_end":66}},{"value":"/ expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90786,"byte_end":90801,"line_start":317,"line_end":317,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":9376},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90824,"byte_end":90839,"line_start":318,"line_end":318,"column_start":23,"column_end":38},"name":"0","qualname":"::read::Error::InvalidExpression::0","value":"constants::DwOp","parent":{"krate":0,"index":9374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9377},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90943,"byte_end":90955,"line_start":321,"line_end":321,"column_start":5,"column_end":17},"name":"InvalidPiece","qualname":"::read::Error::InvalidPiece","value":"Error::InvalidPiece","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The expression had a piece followed by an expression\n terminator without a piece.\n","sig":null,"attributes":[{"value":"/ The expression had a piece followed by an expression","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90846,"byte_end":90902,"line_start":319,"line_end":319,"column_start":5,"column_end":61}},{"value":"/ terminator without a piece.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90907,"byte_end":90938,"line_start":320,"line_end":320,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9379},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91098,"byte_end":91125,"line_start":324,"line_end":324,"column_start":5,"column_end":32},"name":"InvalidExpressionTerminator","qualname":"::read::Error::InvalidExpressionTerminator","value":"Error::InvalidExpressionTerminator(u64)","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" An expression-terminating operation was followed by something\n other than the end of the expression or a piece operation.\n","sig":null,"attributes":[{"value":"/ An expression-terminating operation was followed by something","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":90961,"byte_end":91026,"line_start":322,"line_end":322,"column_start":5,"column_end":70}},{"value":"/ other than the end of the expression or a piece operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91031,"byte_end":91093,"line_start":323,"line_end":323,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":9381},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91126,"byte_end":91129,"line_start":324,"line_end":324,"column_start":33,"column_end":36},"name":"0","qualname":"::read::Error::InvalidExpressionTerminator::0","value":"u64","parent":{"krate":0,"index":9379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9382},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91203,"byte_end":91217,"line_start":326,"line_end":326,"column_start":5,"column_end":19},"name":"DivisionByZero","qualname":"::read::Error::DivisionByZero","value":"Error::DivisionByZero","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Division or modulus by zero when evaluating an expression.\n","sig":null,"attributes":[{"value":"/ Division or modulus by zero when evaluating an expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91136,"byte_end":91198,"line_start":325,"line_end":325,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9384},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91279,"byte_end":91291,"line_start":328,"line_end":328,"column_start":5,"column_end":17},"name":"TypeMismatch","qualname":"::read::Error::TypeMismatch","value":"Error::TypeMismatch","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" An expression operation used mismatching types.\n","sig":null,"attributes":[{"value":"/ An expression operation used mismatching types.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91223,"byte_end":91274,"line_start":327,"line_end":327,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9386},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91394,"byte_end":91414,"line_start":331,"line_end":331,"column_start":5,"column_end":25},"name":"IntegralTypeRequired","qualname":"::read::Error::IntegralTypeRequired","value":"Error::IntegralTypeRequired","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" An expression operation required an integral type but saw a\n floating point type.\n","sig":null,"attributes":[{"value":"/ An expression operation required an integral type but saw a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91297,"byte_end":91360,"line_start":329,"line_end":329,"column_start":5,"column_end":68}},{"value":"/ floating point type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91365,"byte_end":91389,"line_start":330,"line_end":330,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9388},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91487,"byte_end":91511,"line_start":333,"line_end":333,"column_start":5,"column_end":29},"name":"UnsupportedTypeOperation","qualname":"::read::Error::UnsupportedTypeOperation","value":"Error::UnsupportedTypeOperation","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" An expression operation used types that are not supported.\n","sig":null,"attributes":[{"value":"/ An expression operation used types that are not supported.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91420,"byte_end":91482,"line_start":332,"line_end":332,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9390},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91590,"byte_end":91612,"line_start":335,"line_end":335,"column_start":5,"column_end":27},"name":"InvalidShiftExpression","qualname":"::read::Error::InvalidShiftExpression","value":"Error::InvalidShiftExpression","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The shift value in an expression must be a non-negative integer.\n","sig":null,"attributes":[{"value":"/ The shift value in an expression must be a non-negative integer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91517,"byte_end":91585,"line_start":334,"line_end":334,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9392},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91659,"byte_end":91686,"line_start":337,"line_end":337,"column_start":5,"column_end":32},"name":"UnknownCallFrameInstruction","qualname":"::read::Error::UnknownCallFrameInstruction","value":"Error::UnknownCallFrameInstruction(constants::DwCfa)","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" An unknown DW_CFA_* instruction.\n","sig":null,"attributes":[{"value":"/ An unknown DW_CFA_* instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91618,"byte_end":91654,"line_start":336,"line_end":336,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":9394},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91687,"byte_end":91703,"line_start":337,"line_end":337,"column_start":33,"column_end":49},"name":"0","qualname":"::read::Error::UnknownCallFrameInstruction::0","value":"constants::DwCfa","parent":{"krate":0,"index":9392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9395},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91772,"byte_end":91791,"line_start":339,"line_end":339,"column_start":5,"column_end":24},"name":"InvalidAddressRange","qualname":"::read::Error::InvalidAddressRange","value":"Error::InvalidAddressRange","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The end of an address range was before the beginning.\n","sig":null,"attributes":[{"value":"/ The end of an address range was before the beginning.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91710,"byte_end":91767,"line_start":338,"line_end":338,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9397},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91866,"byte_end":91893,"line_start":341,"line_end":341,"column_start":5,"column_end":32},"name":"InvalidLocationAddressRange","qualname":"::read::Error::InvalidLocationAddressRange","value":"Error::InvalidLocationAddressRange","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The end offset of a loc list entry was before the beginning.\n","sig":null,"attributes":[{"value":"/ The end offset of a loc list entry was before the beginning.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91797,"byte_end":91861,"line_start":340,"line_end":340,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9399},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91991,"byte_end":92021,"line_start":344,"line_end":344,"column_start":5,"column_end":35},"name":"CfiInstructionInInvalidContext","qualname":"::read::Error::CfiInstructionInInvalidContext","value":"Error::CfiInstructionInInvalidContext","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Encountered a call frame instruction in a context in which it is not\n valid.\n","sig":null,"attributes":[{"value":"/ Encountered a call frame instruction in a context in which it is not","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91899,"byte_end":91971,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ valid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":91976,"byte_end":91986,"line_start":343,"line_end":343,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9401},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92187,"byte_end":92204,"line_start":347,"line_end":347,"column_start":5,"column_end":22},"name":"PopWithEmptyStack","qualname":"::read::Error::PopWithEmptyStack","value":"Error::PopWithEmptyStack","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" When evaluating call frame instructions, found a `DW_CFA_restore_state`\n stack pop instruction, but the stack was empty, and had nothing to pop.\n","sig":null,"attributes":[{"value":"/ When evaluating call frame instructions, found a `DW_CFA_restore_state`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92027,"byte_end":92102,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ stack pop instruction, but the stack was empty, and had nothing to pop.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92107,"byte_end":92182,"line_start":346,"line_end":346,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9403},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92265,"byte_end":92287,"line_start":349,"line_end":349,"column_start":5,"column_end":27},"name":"NoUnwindInfoForAddress","qualname":"::read::Error::NoUnwindInfoForAddress","value":"Error::NoUnwindInfoForAddress","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Do not have unwind info for the given address.\n","sig":null,"attributes":[{"value":"/ Do not have unwind info for the given address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92210,"byte_end":92260,"line_start":348,"line_end":348,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9405},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92362,"byte_end":92379,"line_start":351,"line_end":351,"column_start":5,"column_end":22},"name":"UnsupportedOffset","qualname":"::read::Error::UnsupportedOffset","value":"Error::UnsupportedOffset","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" An offset value was larger than the maximum supported value.\n","sig":null,"attributes":[{"value":"/ An offset value was larger than the maximum supported value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92293,"byte_end":92357,"line_start":350,"line_end":350,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9407},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92450,"byte_end":92472,"line_start":353,"line_end":353,"column_start":5,"column_end":27},"name":"UnknownPointerEncoding","qualname":"::read::Error::UnknownPointerEncoding","value":"Error::UnknownPointerEncoding","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The given pointer encoding is either unknown or invalid.\n","sig":null,"attributes":[{"value":"/ The given pointer encoding is either unknown or invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92385,"byte_end":92445,"line_start":352,"line_end":352,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9409},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92529,"byte_end":92549,"line_start":355,"line_end":355,"column_start":5,"column_end":25},"name":"NoEntryAtGivenOffset","qualname":"::read::Error::NoEntryAtGivenOffset","value":"Error::NoEntryAtGivenOffset","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Did not find an entry at the given offset.\n","sig":null,"attributes":[{"value":"/ Did not find an entry at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92478,"byte_end":92524,"line_start":354,"line_end":354,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9411},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92598,"byte_end":92615,"line_start":357,"line_end":357,"column_start":5,"column_end":22},"name":"OffsetOutOfBounds","qualname":"::read::Error::OffsetOutOfBounds","value":"Error::OffsetOutOfBounds","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The given offset is out of bounds.\n","sig":null,"attributes":[{"value":"/ The given offset is out of bounds.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92555,"byte_end":92593,"line_start":356,"line_end":356,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9413},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92664,"byte_end":92683,"line_start":359,"line_end":359,"column_start":5,"column_end":24},"name":"UnknownAugmentation","qualname":"::read::Error::UnknownAugmentation","value":"Error::UnknownAugmentation","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Found an unknown CFI augmentation.\n","sig":null,"attributes":[{"value":"/ Found an unknown CFI augmentation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92621,"byte_end":92659,"line_start":358,"line_end":358,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9415},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92747,"byte_end":92773,"line_start":361,"line_end":361,"column_start":5,"column_end":31},"name":"UnsupportedPointerEncoding","qualname":"::read::Error::UnsupportedPointerEncoding","value":"Error::UnsupportedPointerEncoding","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" We do not support the given pointer encoding yet.\n","sig":null,"attributes":[{"value":"/ We do not support the given pointer encoding yet.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92689,"byte_end":92742,"line_start":360,"line_end":360,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9417},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92834,"byte_end":92853,"line_start":363,"line_end":363,"column_start":5,"column_end":24},"name":"UnsupportedRegister","qualname":"::read::Error::UnsupportedRegister","value":"Error::UnsupportedRegister(u64)","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Registers larger than `u16` are not supported.\n","sig":null,"attributes":[{"value":"/ Registers larger than `u16` are not supported.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92779,"byte_end":92829,"line_start":362,"line_end":362,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":9419},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92854,"byte_end":92857,"line_start":363,"line_end":363,"column_start":25,"column_end":28},"name":"0","qualname":"::read::Error::UnsupportedRegister::0","value":"u64","parent":{"krate":0,"index":9417},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9420},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92942,"byte_end":92962,"line_start":365,"line_end":365,"column_start":5,"column_end":25},"name":"TooManyRegisterRules","qualname":"::read::Error::TooManyRegisterRules","value":"Error::TooManyRegisterRules","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The CFI program defined more register rules than we have storage for.\n","sig":null,"attributes":[{"value":"/ The CFI program defined more register rules than we have storage for.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92864,"byte_end":92937,"line_start":364,"line_end":364,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9422},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93059,"byte_end":93071,"line_start":368,"line_end":368,"column_start":5,"column_end":17},"name":"CfiStackFull","qualname":"::read::Error::CfiStackFull","value":"Error::CfiStackFull","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Attempted to push onto the CFI stack, but it was already at full\n capacity.\n","sig":null,"attributes":[{"value":"/ Attempted to push onto the CFI stack, but it was already at full","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":92968,"byte_end":93036,"line_start":366,"line_end":366,"column_start":5,"column_end":73}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93041,"byte_end":93054,"line_start":367,"line_end":367,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9424},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93209,"byte_end":93234,"line_start":371,"line_end":371,"column_start":5,"column_end":30},"name":"VariableLengthSearchTable","qualname":"::read::Error::VariableLengthSearchTable","value":"Error::VariableLengthSearchTable","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The `.eh_frame_hdr` binary search table claims to be variable-length encoded,\n which makes binary search impossible.\n","sig":null,"attributes":[{"value":"/ The `.eh_frame_hdr` binary search table claims to be variable-length encoded,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93077,"byte_end":93158,"line_start":369,"line_end":369,"column_start":5,"column_end":86}},{"value":"/ which makes binary search impossible.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93163,"byte_end":93204,"line_start":370,"line_end":370,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9426},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93304,"byte_end":93323,"line_start":373,"line_end":373,"column_start":5,"column_end":24},"name":"UnsupportedUnitType","qualname":"::read::Error::UnsupportedUnitType","value":"Error::UnsupportedUnitType","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" The `DW_UT_*` value for this unit is not supported yet.\n","sig":null,"attributes":[{"value":"/ The `DW_UT_*` value for this unit is not supported yet.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93240,"byte_end":93299,"line_start":372,"line_end":372,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9428},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93386,"byte_end":93409,"line_start":375,"line_end":375,"column_start":5,"column_end":28},"name":"UnsupportedAddressIndex","qualname":"::read::Error::UnsupportedAddressIndex","value":"Error::UnsupportedAddressIndex","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Ranges using AddressIndex are not supported yet.\n","sig":null,"attributes":[{"value":"/ Ranges using AddressIndex are not supported yet.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93329,"byte_end":93381,"line_start":374,"line_end":374,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9430},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93476,"byte_end":93498,"line_start":377,"line_end":377,"column_start":5,"column_end":27},"name":"UnsupportedSegmentSize","qualname":"::read::Error::UnsupportedSegmentSize","value":"Error::UnsupportedSegmentSize","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Nonzero segment selector sizes aren't supported yet.\n","sig":null,"attributes":[{"value":"/ Nonzero segment selector sizes aren't supported yet.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93415,"byte_end":93471,"line_start":376,"line_end":376,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9432},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93574,"byte_end":93588,"line_start":379,"line_end":379,"column_start":5,"column_end":19},"name":"MissingUnitDie","qualname":"::read::Error::MissingUnitDie","value":"Error::MissingUnitDie","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" A compilation unit or type unit is missing its top level DIE.\n","sig":null,"attributes":[{"value":"/ A compilation unit or type unit is missing its top level DIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93504,"byte_end":93569,"line_start":378,"line_end":378,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9434},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93644,"byte_end":93668,"line_start":381,"line_end":381,"column_start":5,"column_end":29},"name":"UnsupportedAttributeForm","qualname":"::read::Error::UnsupportedAttributeForm","value":"Error::UnsupportedAttributeForm","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" A DIE attribute used an unsupported form.\n","sig":null,"attributes":[{"value":"/ A DIE attribute used an unsupported form.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93594,"byte_end":93639,"line_start":380,"line_end":380,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9436},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93725,"byte_end":93751,"line_start":383,"line_end":383,"column_start":5,"column_end":31},"name":"MissingFileEntryFormatPath","qualname":"::read::Error::MissingFileEntryFormatPath","value":"Error::MissingFileEntryFormatPath","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Missing DW_LNCT_path in file entry format.\n","sig":null,"attributes":[{"value":"/ Missing DW_LNCT_path in file entry format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93674,"byte_end":93720,"line_start":382,"line_end":382,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9438},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93814,"byte_end":93842,"line_start":385,"line_end":385,"column_start":5,"column_end":33},"name":"ExpectedStringAttributeValue","qualname":"::read::Error::ExpectedStringAttributeValue","value":"Error::ExpectedStringAttributeValue","parent":{"krate":0,"index":9289},"children":[],"decl_id":null,"docs":" Expected an attribute value to be a string form.\n","sig":null,"attributes":[{"value":"/ Expected an attribute value to be a string form.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93757,"byte_end":93809,"line_start":384,"line_end":384,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":9289},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87415,"byte_end":87420,"line_start":235,"line_end":235,"column_start":10,"column_end":15},"name":"Error","qualname":"::read::Error","value":"enum Error {\n    Io,\n    PcRelativePointerButSectionBaseIsUndefined,\n    TextRelativePointerButTextBaseIsUndefined,\n    DataRelativePointerButDataBaseIsUndefined,\n    FuncRelativePointerInBadContext,\n    CannotParseOmitPointerEncoding,\n    BadUnsignedLeb128,\n    BadSignedLeb128,\n    AbbreviationTagZero,\n    AttributeFormZero,\n    BadHasChildren,\n    BadLength,\n    UnknownForm,\n    ExpectedZero,\n    DuplicateAbbreviationCode,\n    DuplicateArange,\n    UnknownReservedLength,\n    UnknownVersion(u64),\n    UnknownAbbreviation,\n    UnexpectedEof(ReaderOffsetId),\n    UnexpectedNull,\n    UnknownStandardOpcode(constants::DwLns),\n    UnknownExtendedOpcode(constants::DwLne),\n    UnsupportedAddressSize(u8),\n    UnsupportedOffsetSize(u8),\n    UnsupportedFieldSize(u8),\n    MinimumInstructionLengthZero,\n    MaximumOperationsPerInstructionZero,\n    LineRangeZero,\n    OpcodeBaseZero,\n    BadUtf8,\n    NotCieId,\n    NotCiePointer,\n    NotFdePointer,\n    BadBranchTarget(u64),\n    InvalidPushObjectAddress,\n    NotEnoughStackItems,\n    TooManyIterations,\n    InvalidExpression(constants::DwOp),\n    InvalidPiece,\n    InvalidExpressionTerminator(u64),\n    DivisionByZero,\n    TypeMismatch,\n    IntegralTypeRequired,\n    UnsupportedTypeOperation,\n    InvalidShiftExpression,\n    UnknownCallFrameInstruction(constants::DwCfa),\n    InvalidAddressRange,\n    InvalidLocationAddressRange,\n    CfiInstructionInInvalidContext,\n    PopWithEmptyStack,\n    NoUnwindInfoForAddress,\n    UnsupportedOffset,\n    UnknownPointerEncoding,\n    NoEntryAtGivenOffset,\n    OffsetOutOfBounds,\n    UnknownAugmentation,\n    UnsupportedPointerEncoding,\n    UnsupportedRegister(u64),\n    TooManyRegisterRules,\n    CfiStackFull,\n    VariableLengthSearchTable,\n    UnsupportedUnitType,\n    UnsupportedAddressIndex,\n    UnsupportedSegmentSize,\n    MissingUnitDie,\n    UnsupportedAttributeForm,\n    MissingFileEntryFormatPath,\n    ExpectedStringAttributeValue,\n}","parent":null,"children":[{"krate":0,"index":9290},{"krate":0,"index":9292},{"krate":0,"index":9294},{"krate":0,"index":9296},{"krate":0,"index":9298},{"krate":0,"index":9300},{"krate":0,"index":9302},{"krate":0,"index":9304},{"krate":0,"index":9306},{"krate":0,"index":9308},{"krate":0,"index":9310},{"krate":0,"index":9312},{"krate":0,"index":9314},{"krate":0,"index":9316},{"krate":0,"index":9318},{"krate":0,"index":9320},{"krate":0,"index":9322},{"krate":0,"index":9324},{"krate":0,"index":9327},{"krate":0,"index":9329},{"krate":0,"index":9332},{"krate":0,"index":9334},{"krate":0,"index":9337},{"krate":0,"index":9340},{"krate":0,"index":9343},{"krate":0,"index":9346},{"krate":0,"index":9349},{"krate":0,"index":9351},{"krate":0,"index":9353},{"krate":0,"index":9355},{"krate":0,"index":9357},{"krate":0,"index":9359},{"krate":0,"index":9361},{"krate":0,"index":9363},{"krate":0,"index":9365},{"krate":0,"index":9368},{"krate":0,"index":9370},{"krate":0,"index":9372},{"krate":0,"index":9374},{"krate":0,"index":9377},{"krate":0,"index":9379},{"krate":0,"index":9382},{"krate":0,"index":9384},{"krate":0,"index":9386},{"krate":0,"index":9388},{"krate":0,"index":9390},{"krate":0,"index":9392},{"krate":0,"index":9395},{"krate":0,"index":9397},{"krate":0,"index":9399},{"krate":0,"index":9401},{"krate":0,"index":9403},{"krate":0,"index":9405},{"krate":0,"index":9407},{"krate":0,"index":9409},{"krate":0,"index":9411},{"krate":0,"index":9413},{"krate":0,"index":9415},{"krate":0,"index":9417},{"krate":0,"index":9420},{"krate":0,"index":9422},{"krate":0,"index":9424},{"krate":0,"index":9426},{"krate":0,"index":9428},{"krate":0,"index":9430},{"krate":0,"index":9432},{"krate":0,"index":9434},{"krate":0,"index":9436},{"krate":0,"index":9438}],"decl_id":null,"docs":" An error that occurred when parsing.\n","sig":null,"attributes":[{"value":"/ An error that occurred when parsing.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":87320,"byte_end":87360,"line_start":233,"line_end":233,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93898,"byte_end":93901,"line_start":390,"line_end":390,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> ::core::result::Result<(), fmt::Error>","parent":{"krate":1,"index":9914},"children":[],"decl_id":{"krate":1,"index":9915},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93881,"byte_end":93890,"line_start":389,"line_end":389,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":94096,"byte_end":94107,"line_start":397,"line_end":397,"column_start":12,"column_end":23},"name":"description","qualname":"<Error>::description","value":"fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" A short description of the error.\n","sig":null,"attributes":[{"value":"/ A short description of the error.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":94047,"byte_end":94084,"line_start":396,"line_end":396,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2899},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102113,"byte_end":102117,"line_start":538,"line_end":538,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as core::convert::From>::from","value":"fn from(io::Error) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2900},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102205,"byte_end":102211,"line_start":544,"line_end":544,"column_start":10,"column_end":16},"name":"Result","qualname":"::read::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a parse.\n","sig":null,"attributes":[{"value":"/ The result of a parse.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102169,"byte_end":102195,"line_start":543,"line_end":543,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2902},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102665,"byte_end":102672,"line_start":558,"line_end":558,"column_start":11,"column_end":18},"name":"Section","qualname":"::read::Section","value":"Section<R>: From<R>","parent":null,"children":[{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2909},{"krate":0,"index":2910}],"decl_id":null,"docs":" A convenience trait for loading DWARF sections from object files.  To be\n used like:","sig":null,"attributes":[{"value":"/ A convenience trait for loading DWARF sections from object files.  To be","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102244,"byte_end":102320,"line_start":546,"line_end":546,"column_start":1,"column_end":77}},{"value":"/ used like:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102321,"byte_end":102335,"line_start":547,"line_end":547,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102336,"byte_end":102339,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102340,"byte_end":102347,"line_start":549,"line_end":549,"column_start":1,"column_end":8}},{"value":"/ use gimli::{DebugInfo, EndianSlice, LittleEndian, Reader, Section};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102348,"byte_end":102419,"line_start":550,"line_end":550,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102420,"byte_end":102423,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102424,"byte_end":102463,"line_start":552,"line_end":552,"column_start":1,"column_end":40}},{"value":"/ let reader = EndianSlice::new(&buf, LittleEndian);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102464,"byte_end":102518,"line_start":553,"line_end":553,"column_start":1,"column_end":55}},{"value":"/ let loader = |name| -> Result<_, ()> { Ok(reader) };","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102519,"byte_end":102575,"line_start":554,"line_end":554,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102576,"byte_end":102579,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ let debug_info: DebugInfo<_> = Section::load(loader).unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102580,"byte_end":102646,"line_start":556,"line_end":556,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102647,"byte_end":102654,"line_start":557,"line_end":557,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2904},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102740,"byte_end":102742,"line_start":560,"line_end":560,"column_start":8,"column_end":10},"name":"id","qualname":"::read::Section::id","value":"fn id() -> SectionId","parent":{"krate":0,"index":2902},"children":[],"decl_id":null,"docs":" Returns the section id for this type.\n","sig":null,"attributes":[{"value":"/ Returns the section id for this type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102691,"byte_end":102732,"line_start":559,"line_end":559,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102819,"byte_end":102831,"line_start":563,"line_end":563,"column_start":8,"column_end":20},"name":"section_name","qualname":"::read::Section::section_name","value":"fn section_name() -> &'static str","parent":{"krate":0,"index":2902},"children":[],"decl_id":null,"docs":" Returns the ELF section name for this type.\n","sig":null,"attributes":[{"value":"/ Returns the ELF section name for this type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102764,"byte_end":102811,"line_start":562,"line_end":562,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102957,"byte_end":102961,"line_start":568,"line_end":568,"column_start":8,"column_end":12},"name":"load","qualname":"::read::Section::load","value":"fn load<F, E>(F) -> core::result::Result<Self, E> where F: FnOnce(SectionId)\n-> core::result::Result<R, E>","parent":{"krate":0,"index":2902},"children":[],"decl_id":null,"docs":" Try to load the section using the given loader function.\n","sig":null,"attributes":[{"value":"/ Try to load the section using the given loader function.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102889,"byte_end":102949,"line_start":567,"line_end":567,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":103182,"byte_end":103188,"line_start":576,"line_end":576,"column_start":8,"column_end":14},"name":"reader","qualname":"::read::Section::reader","value":"fn reader(&Self) -> &R where R: Reader","parent":{"krate":0,"index":2902},"children":[],"decl_id":null,"docs":" Returns the `Reader` for this section.\n","sig":null,"attributes":[{"value":"/ Returns the `Reader` for this section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":103132,"byte_end":103174,"line_start":575,"line_end":575,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2910},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":103286,"byte_end":103302,"line_start":581,"line_end":581,"column_start":8,"column_end":24},"name":"lookup_offset_id","qualname":"::read::Section::lookup_offset_id","value":"fn lookup_offset_id(&Self, ReaderOffsetId) -> Option<(SectionId, R::Offset)>\nwhere R: Reader","parent":{"krate":0,"index":2902},"children":[],"decl_id":null,"docs":" Returns the `Reader` for this section.\n","sig":null,"attributes":[{"value":"/ Returns the `Reader` for this section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":103236,"byte_end":103278,"line_start":580,"line_end":580,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":2915},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"write","qualname":"::write","value":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","parent":null,"children":[{"krate":0,"index":2916},{"krate":0,"index":2919},{"krate":0,"index":2922},{"krate":0,"index":2925},{"krate":0,"index":2928},{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3784},{"krate":0,"index":3785},{"krate":0,"index":3823},{"krate":0,"index":3824},{"krate":0,"index":4100},{"krate":0,"index":10732},{"krate":0,"index":10775},{"krate":0,"index":10777},{"krate":0,"index":10779},{"krate":0,"index":10780},{"krate":0,"index":10781},{"krate":0,"index":10784},{"krate":0,"index":10785},{"krate":0,"index":4101},{"krate":0,"index":4103},{"krate":0,"index":4104},{"krate":0,"index":10787},{"krate":0,"index":10794},{"krate":0,"index":10796},{"krate":0,"index":10798},{"krate":0,"index":10799},{"krate":0,"index":10800},{"krate":0,"index":10803},{"krate":0,"index":10804},{"krate":0,"index":10806},{"krate":0,"index":10809},{"krate":0,"index":10817},{"krate":0,"index":10819},{"krate":0,"index":10821},{"krate":0,"index":10822},{"krate":0,"index":10823},{"krate":0,"index":10826},{"krate":0,"index":10827},{"krate":0,"index":10829},{"krate":0,"index":10832},{"krate":0,"index":10835},{"krate":0,"index":10837},{"krate":0,"index":10839},{"krate":0,"index":10840},{"krate":0,"index":10841},{"krate":0,"index":10844},{"krate":0,"index":10845},{"krate":0,"index":10847},{"krate":0,"index":4106},{"krate":0,"index":4112},{"krate":0,"index":4126}],"decl_id":null,"docs":" Write DWARF debugging information.","sig":null,"attributes":[{"value":"cfg(feature = \"write\")","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":2065,"byte_end":2090,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ Write DWARF debugging information.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123490,"byte_end":1123528,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123529,"byte_end":1123532,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## API Structure","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123533,"byte_end":1123553,"line_start":3,"line_end":3,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123554,"byte_end":1123557,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module works by building up a representation of the debugging information","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123558,"byte_end":1123640,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/ in memory, and then writing it all at once. It supports two major use cases:","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123641,"byte_end":1123721,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123722,"byte_end":1123725,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ * Use the [`DwarfUnit`](./struct.DwarfUnit.html) type when writing DWARF","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123726,"byte_end":1123802,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ for a single compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123803,"byte_end":1123837,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123838,"byte_end":1123841,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * Use the [`Dwarf`](./struct.Dwarf.html) type when writing DWARF for multiple","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123842,"byte_end":1123923,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ compilation units.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123924,"byte_end":1123946,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123947,"byte_end":1123950,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The module also supports reading in DWARF debugging information and writing it out","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1123951,"byte_end":1124037,"line_start":14,"line_end":14,"column_start":1,"column_end":87}},{"value":"/ again, possibly after modifying it. Create a [`read::Dwarf`](../read/struct.Dwarf.html)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124038,"byte_end":1124129,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/ instance, and then use [`Dwarf::from`](./struct.Dwarf.html#method.from) to convert","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124130,"byte_end":1124216,"line_start":16,"line_end":16,"column_start":1,"column_end":87}},{"value":"/ it to a writable instance.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124217,"byte_end":1124247,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124248,"byte_end":1124251,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Example Usage","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124252,"byte_end":1124272,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124273,"byte_end":1124276,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Write a compilation unit containing only the top level DIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124277,"byte_end":1124340,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124341,"byte_end":1124344,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124345,"byte_end":1124356,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ use gimli::write::{","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124357,"byte_end":1124380,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/     Address, AttributeValue, DwarfUnit, EndianVec, Error, Range, RangeList, Sections,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124381,"byte_end":1124470,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ };","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124471,"byte_end":1124477,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124478,"byte_end":1124481,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn example() -> Result<(), Error> {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124482,"byte_end":1124521,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/     // Choose the encoding parameters.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124522,"byte_end":1124564,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/     let encoding = gimli::Encoding {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124565,"byte_end":1124605,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/         format: gimli::Format::Dwarf32,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124606,"byte_end":1124649,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/         version: 5,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124650,"byte_end":1124673,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/         address_size: 8,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124674,"byte_end":1124702,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/     };","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124703,"byte_end":1124713,"line_start":34,"line_end":34,"column_start":1,"column_end":11}},{"value":"/     // Create a container for a single compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124714,"byte_end":1124774,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/     let mut dwarf = DwarfUnit::new(encoding);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124775,"byte_end":1124824,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/     // Set a range attribute on the root DIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124825,"byte_end":1124874,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"/     let range_list = RangeList(vec![Range::StartLength {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124875,"byte_end":1124935,"line_start":38,"line_end":38,"column_start":1,"column_end":61}},{"value":"/         begin: Address::Constant(0x100),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124936,"byte_end":1124980,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         length: 42,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1124981,"byte_end":1125004,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/     }]);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125005,"byte_end":1125017,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/     let range_list_id = dwarf.unit.ranges.add(range_list);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125018,"byte_end":1125080,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/     let root = dwarf.unit.root();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125081,"byte_end":1125118,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/     dwarf.unit.get_mut(root).set(","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125119,"byte_end":1125156,"line_start":44,"line_end":44,"column_start":1,"column_end":38}},{"value":"/         gimli::DW_AT_ranges,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125157,"byte_end":1125189,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/         AttributeValue::RangeListRef(range_list_id),","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125190,"byte_end":1125246,"line_start":46,"line_end":46,"column_start":1,"column_end":57}},{"value":"/     );","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125247,"byte_end":1125257,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/     // Create a `Vec` for each DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125258,"byte_end":1125307,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/     let mut sections = Sections::new(EndianVec::new(gimli::LittleEndian));","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125308,"byte_end":1125386,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/     // Finally, write the DWARF data to the sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125387,"byte_end":1125444,"line_start":50,"line_end":50,"column_start":1,"column_end":58}},{"value":"/     dwarf.write(&mut sections)?;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125445,"byte_end":1125481,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     sections.for_each(|id, data| {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125482,"byte_end":1125520,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/         // Here you can add the data to the output object file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125521,"byte_end":1125588,"line_start":53,"line_end":53,"column_start":1,"column_end":68}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125589,"byte_end":1125607,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/     })","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125608,"byte_end":1125618,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125619,"byte_end":1125624,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125625,"byte_end":1125642,"line_start":57,"line_end":57,"column_start":1,"column_end":18}},{"value":"/ #     example().unwrap();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125643,"byte_end":1125672,"line_start":58,"line_end":58,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1125673,"byte_end":1125680,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9452},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1138374,"byte_end":1138383,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"EndianVec","qualname":"::write::endian_vec::EndianVec","value":"EndianVec {  }","parent":null,"children":[{"krate":0,"index":9454},{"krate":0,"index":9455}],"decl_id":null,"docs":" A `Vec<u8>` with endianity metadata.","sig":null,"attributes":[{"value":"/ A `Vec<u8>` with endianity metadata.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1138205,"byte_end":1138245,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1138246,"byte_end":1138249,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This implements the `Writer` trait, which is used for all writing of DWARF sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1138250,"byte_end":1138338,"line_start":9,"line_end":9,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2950},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1138602,"byte_end":1138605,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<EndianVec<Endian>>::new","value":"fn new(Endian) -> EndianVec<Endian>","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty `EndianVec` with the given endianity.\n","sig":null,"attributes":[{"value":"/ Construct an empty `EndianVec` with the given endianity.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1138530,"byte_end":1138590,"line_start":23,"line_end":23,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1138787,"byte_end":1138792,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"slice","qualname":"<EndianVec<Endian>>::slice","value":"fn slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the raw slice.\n","sig":null,"attributes":[{"value":"/ Return a reference to the raw slice.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1138735,"byte_end":1138775,"line_start":31,"line_end":31,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1138881,"byte_end":1138889,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<EndianVec<Endian>>::into_vec","value":"fn into_vec(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Convert into a `Vec<u8>`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1138840,"byte_end":1138869,"line_start":36,"line_end":36,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1139035,"byte_end":1139039,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"take","qualname":"<EndianVec<Endian>>::take","value":"fn take(&mut Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Take any written data out of the `EndianVec`, leaving an empty `Vec` in its place.\n","sig":null,"attributes":[{"value":"/ Take any written data out of the `EndianVec`, leaving an empty `Vec` in its place.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1138937,"byte_end":1139023,"line_start":41,"line_end":41,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1139284,"byte_end":1139290,"line_start":56,"line_end":56,"column_start":8,"column_end":14},"name":"endian","qualname":"<EndianVec<Endian> as write::writer::Writer>::endian","value":"fn endian(&Self) -> Self::Endian","parent":{"krate":0,"index":2989},"children":[],"decl_id":{"krate":0,"index":2991},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1139267,"byte_end":1139276,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1139364,"byte_end":1139367,"line_start":61,"line_end":61,"column_start":8,"column_end":11},"name":"len","qualname":"<EndianVec<Endian> as write::writer::Writer>::len","value":"fn len(&Self) -> usize","parent":{"krate":0,"index":2989},"children":[],"decl_id":{"krate":0,"index":2992},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1139347,"byte_end":1139356,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2959},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1139423,"byte_end":1139428,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"write","qualname":"<EndianVec<Endian> as write::writer::Writer>::write","value":"fn write(&mut Self, &[u8]) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":{"krate":0,"index":2993},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1139531,"byte_end":1139539,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"write_at","qualname":"<EndianVec<Endian> as write::writer::Writer>::write_at","value":"fn write_at(&mut Self, usize, &[u8]) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":{"krate":0,"index":2994},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2989},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141276,"byte_end":1141282,"line_start":11,"line_end":11,"column_start":11,"column_end":17},"name":"Writer","qualname":"::write::writer::Writer","value":"Writer","parent":null,"children":[{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3004},{"krate":0,"index":3006},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3011},{"krate":0,"index":3013},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3020},{"krate":0,"index":3022},{"krate":0,"index":3023}],"decl_id":null,"docs":" A trait for writing the data to a DWARF section.","sig":null,"attributes":[{"value":"/ A trait for writing the data to a DWARF section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141095,"byte_end":1141147,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141148,"byte_end":1141151,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All write operations append to the section unless otherwise specified.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141152,"byte_end":1141226,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141227,"byte_end":1141265,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":2990},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141343,"byte_end":1141349,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Endian","qualname":"::write::writer::Writer::Endian","value":"type Endian: Endianity;","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" The endianity of bytes that are written.\n","sig":null,"attributes":[{"value":"/ The endianity of bytes that are written.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141289,"byte_end":1141333,"line_start":12,"line_end":12,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2991},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141426,"byte_end":1141432,"line_start":16,"line_end":16,"column_start":8,"column_end":14},"name":"endian","qualname":"::write::writer::Writer::endian","value":"fn endian(&Self) -> Self::Endian","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Return the endianity of bytes that are written.\n","sig":null,"attributes":[{"value":"/ Return the endianity of bytes that are written.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141367,"byte_end":1141418,"line_start":15,"line_end":15,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2992},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141583,"byte_end":1141586,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"len","qualname":"::write::writer::Writer::len","value":"fn len(&Self) -> usize","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Return the current section length.","sig":null,"attributes":[{"value":"/ Return the current section length.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141462,"byte_end":1141500,"line_start":18,"line_end":18,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141505,"byte_end":1141508,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ This may be used as an offset for future `write_at` calls.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141513,"byte_end":1141575,"line_start":20,"line_end":20,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141635,"byte_end":1141640,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"write","qualname":"::write::writer::Writer::write","value":"fn write(&mut Self, &[u8]) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write a slice.\n","sig":null,"attributes":[{"value":"/ Write a slice.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141609,"byte_end":1141627,"line_start":23,"line_end":23,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2994},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141805,"byte_end":1141813,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"write_at","qualname":"::write::writer::Writer::write_at","value":"fn write_at(&mut Self, usize, &[u8]) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write a slice at a given offset.","sig":null,"attributes":[{"value":"/ Write a slice at a given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141686,"byte_end":1141722,"line_start":26,"line_end":26,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141727,"byte_end":1141730,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The write must not extend past the current section length.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141735,"byte_end":1141797,"line_start":28,"line_end":28,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2995},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1142065,"byte_end":1142078,"line_start":36,"line_end":36,"column_start":8,"column_end":21},"name":"write_address","qualname":"::write::writer::Writer::write_address","value":"fn write_address(&mut Self, Address, u8) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write an address.","sig":null,"attributes":[{"value":"/ Write an address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141874,"byte_end":1141895,"line_start":31,"line_end":31,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141900,"byte_end":1141903,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ If the writer supports relocations, then it must provide its own implementation","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141908,"byte_end":1141991,"line_start":33,"line_end":33,"column_start":5,"column_end":88}},{"value":"/ of this method.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1141996,"byte_end":1142015,"line_start":34,"line_end":34,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1142572,"byte_end":1142588,"line_start":49,"line_end":49,"column_start":8,"column_end":24},"name":"write_eh_pointer","qualname":"::write::writer::Writer::write_eh_pointer","value":"fn write_eh_pointer(&mut Self, Address, constants::DwEhPe, u8) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write an address with a `.eh_frame` pointer encoding.","sig":null,"attributes":[{"value":"/ Write an address with a `.eh_frame` pointer encoding.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1142312,"byte_end":1142369,"line_start":43,"line_end":43,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1142374,"byte_end":1142377,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The given size is only used for `DW_EH_PE_absptr` formats.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1142382,"byte_end":1142444,"line_start":45,"line_end":45,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1142449,"byte_end":1142452,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If the writer supports relocations, then it must provide its own implementation","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1142457,"byte_end":1142540,"line_start":47,"line_end":47,"column_start":5,"column_end":88}},{"value":"/ of this method.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1142545,"byte_end":1142564,"line_start":48,"line_end":48,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1143705,"byte_end":1143726,"line_start":80,"line_end":80,"column_start":8,"column_end":29},"name":"write_eh_pointer_data","qualname":"::write::writer::Writer::write_eh_pointer_data","value":"fn write_eh_pointer_data(&mut Self, u64, constants::DwEhPe, u8) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write a value with a `.eh_frame` pointer format.","sig":null,"attributes":[{"value":"/ Write a value with a `.eh_frame` pointer format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1143483,"byte_end":1143535,"line_start":75,"line_end":75,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1143540,"byte_end":1143543,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The given size is only used for `DW_EH_PE_absptr` formats.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1143548,"byte_end":1143610,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1143615,"byte_end":1143618,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This must not be used directly for values that may require relocation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1143623,"byte_end":1143697,"line_start":79,"line_end":79,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1144830,"byte_end":1144842,"line_start":106,"line_end":106,"column_start":8,"column_end":20},"name":"write_offset","qualname":"::write::writer::Writer::write_offset","value":"fn write_offset(&mut Self, usize, SectionId, u8) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write an offset that is relative to the start of the given section.","sig":null,"attributes":[{"value":"/ Write an offset that is relative to the start of the given section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1144631,"byte_end":1144702,"line_start":102,"line_end":102,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1144707,"byte_end":1144710,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ If the writer supports relocations, then it must provide its own implementation","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1144715,"byte_end":1144798,"line_start":104,"line_end":104,"column_start":5,"column_end":88}},{"value":"/ of this method.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1144803,"byte_end":1144822,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145166,"byte_end":1145181,"line_start":114,"line_end":114,"column_start":8,"column_end":23},"name":"write_offset_at","qualname":"::write::writer::Writer::write_offset_at","value":"fn write_offset_at(&mut Self, usize, usize, SectionId, u8) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write an offset that is relative to the start of the given section.","sig":null,"attributes":[{"value":"/ Write an offset that is relative to the start of the given section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1144967,"byte_end":1145038,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145043,"byte_end":1145046,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ If the writer supports relocations, then it must provide its own implementation","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145051,"byte_end":1145134,"line_start":112,"line_end":112,"column_start":5,"column_end":88}},{"value":"/ of this method.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145139,"byte_end":1145158,"line_start":113,"line_end":113,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145537,"byte_end":1145552,"line_start":128,"line_end":128,"column_start":8,"column_end":23},"name":"write_reference","qualname":"::write::writer::Writer::write_reference","value":"fn write_reference(&mut Self, usize, u8) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write a reference to a symbol.","sig":null,"attributes":[{"value":"/ Write a reference to a symbol.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145379,"byte_end":1145413,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145418,"byte_end":1145421,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If the writer supports symbols, then it must provide its own implementation","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145426,"byte_end":1145505,"line_start":126,"line_end":126,"column_start":5,"column_end":84}},{"value":"/ of this method.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145510,"byte_end":1145529,"line_start":127,"line_end":127,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145678,"byte_end":1145686,"line_start":133,"line_end":133,"column_start":8,"column_end":16},"name":"write_u8","qualname":"::write::writer::Writer::write_u8","value":"fn write_u8(&mut Self, u8) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write a u8.\n","sig":null,"attributes":[{"value":"/ Write a u8.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145655,"byte_end":1145670,"line_start":132,"line_end":132,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145812,"byte_end":1145821,"line_start":139,"line_end":139,"column_start":8,"column_end":17},"name":"write_u16","qualname":"::write::writer::Writer::write_u16","value":"fn write_u16(&mut Self, u16) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write a u16.\n","sig":null,"attributes":[{"value":"/ Write a u16.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145788,"byte_end":1145804,"line_start":138,"line_end":138,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1146003,"byte_end":1146012,"line_start":146,"line_end":146,"column_start":8,"column_end":17},"name":"write_u32","qualname":"::write::writer::Writer::write_u32","value":"fn write_u32(&mut Self, u32) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write a u32.\n","sig":null,"attributes":[{"value":"/ Write a u32.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1145979,"byte_end":1145995,"line_start":145,"line_end":145,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1146194,"byte_end":1146203,"line_start":153,"line_end":153,"column_start":8,"column_end":17},"name":"write_u64","qualname":"::write::writer::Writer::write_u64","value":"fn write_u64(&mut Self, u64) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write a u64.\n","sig":null,"attributes":[{"value":"/ Write a u64.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1146170,"byte_end":1146186,"line_start":152,"line_end":152,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1146404,"byte_end":1146415,"line_start":160,"line_end":160,"column_start":8,"column_end":19},"name":"write_u8_at","qualname":"::write::writer::Writer::write_u8_at","value":"fn write_u8_at(&mut Self, usize, u8) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write a u8 at the given offset.\n","sig":null,"attributes":[{"value":"/ Write a u8 at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1146361,"byte_end":1146396,"line_start":159,"line_end":159,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1146587,"byte_end":1146599,"line_start":166,"line_end":166,"column_start":8,"column_end":20},"name":"write_u16_at","qualname":"::write::writer::Writer::write_u16_at","value":"fn write_u16_at(&mut Self, usize, u16) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write a u16 at the given offset.\n","sig":null,"attributes":[{"value":"/ Write a u16 at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1146543,"byte_end":1146579,"line_start":165,"line_end":165,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1146827,"byte_end":1146839,"line_start":173,"line_end":173,"column_start":8,"column_end":20},"name":"write_u32_at","qualname":"::write::writer::Writer::write_u32_at","value":"fn write_u32_at(&mut Self, usize, u32) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write a u32 at the given offset.\n","sig":null,"attributes":[{"value":"/ Write a u32 at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1146783,"byte_end":1146819,"line_start":172,"line_end":172,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1147067,"byte_end":1147079,"line_start":180,"line_end":180,"column_start":8,"column_end":20},"name":"write_u64_at","qualname":"::write::writer::Writer::write_u64_at","value":"fn write_u64_at(&mut Self, usize, u64) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write a u64 at the given offset.\n","sig":null,"attributes":[{"value":"/ Write a u64 at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1147023,"byte_end":1147059,"line_start":179,"line_end":179,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1147465,"byte_end":1147476,"line_start":190,"line_end":190,"column_start":8,"column_end":19},"name":"write_udata","qualname":"::write::writer::Writer::write_udata","value":"fn write_udata(&mut Self, u64, u8) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write unsigned data of the given size.","sig":null,"attributes":[{"value":"/ Write unsigned data of the given size.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1147263,"byte_end":1147305,"line_start":186,"line_end":186,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1147310,"byte_end":1147313,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the value is too large for the size.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1147318,"byte_end":1147378,"line_start":188,"line_end":188,"column_start":5,"column_end":65}},{"value":"/ This must not be used directly for values that may require relocation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1147383,"byte_end":1147457,"line_start":189,"line_end":189,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1148591,"byte_end":1148602,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"write_sdata","qualname":"::write::writer::Writer::write_sdata","value":"fn write_sdata(&mut Self, i64, u8) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write signed data of the given size.","sig":null,"attributes":[{"value":"/ Write signed data of the given size.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1148391,"byte_end":1148431,"line_start":218,"line_end":218,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1148436,"byte_end":1148439,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the value is too large for the size.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1148444,"byte_end":1148504,"line_start":220,"line_end":220,"column_start":5,"column_end":65}},{"value":"/ This must not be used directly for values that may require relocation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1148509,"byte_end":1148583,"line_start":221,"line_end":221,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1149759,"byte_end":1149773,"line_start":254,"line_end":254,"column_start":8,"column_end":22},"name":"write_udata_at","qualname":"::write::writer::Writer::write_udata_at","value":"fn write_udata_at(&mut Self, usize, u64, u8) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write a word of the given size at the given offset.","sig":null,"attributes":[{"value":"/ Write a word of the given size at the given offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1149544,"byte_end":1149599,"line_start":250,"line_end":250,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1149604,"byte_end":1149607,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the value is too large for the size.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1149612,"byte_end":1149672,"line_start":252,"line_end":252,"column_start":5,"column_end":65}},{"value":"/ This must not be used directly for values that may require relocation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1149677,"byte_end":1149751,"line_start":253,"line_end":253,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1150800,"byte_end":1150813,"line_start":283,"line_end":283,"column_start":8,"column_end":21},"name":"write_uleb128","qualname":"::write::writer::Writer::write_uleb128","value":"fn write_uleb128(&mut Self, u64) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write an unsigned LEB128 encoded integer.\n","sig":null,"attributes":[{"value":"/ Write an unsigned LEB128 encoded integer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1150747,"byte_end":1150792,"line_start":282,"line_end":282,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1151122,"byte_end":1151135,"line_start":291,"line_end":291,"column_start":8,"column_end":21},"name":"write_sleb128","qualname":"::write::writer::Writer::write_sleb128","value":"fn write_sleb128(&mut Self, i64) -> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 encoded integer.\n","sig":null,"attributes":[{"value":"/ Read an unsigned LEB128 encoded integer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1151070,"byte_end":1151114,"line_start":290,"line_end":290,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1151648,"byte_end":1151668,"line_start":303,"line_end":303,"column_start":8,"column_end":28},"name":"write_initial_length","qualname":"::write::writer::Writer::write_initial_length","value":"fn write_initial_length(&mut Self, Format) -> Result<InitialLengthOffset>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write an initial length according to the given DWARF format.","sig":null,"attributes":[{"value":"/ Write an initial length according to the given DWARF format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1151390,"byte_end":1151454,"line_start":298,"line_end":298,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1151459,"byte_end":1151462,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This will only write a length of zero, since the length isn't","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1151467,"byte_end":1151532,"line_start":300,"line_end":300,"column_start":5,"column_end":70}},{"value":"/ known yet, and a subsequent call to `write_initial_length_at`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1151537,"byte_end":1151602,"line_start":301,"line_end":301,"column_start":5,"column_end":70}},{"value":"/ will write the actual length.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1151607,"byte_end":1151640,"line_start":302,"line_end":302,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1152127,"byte_end":1152150,"line_start":315,"line_end":315,"column_start":8,"column_end":31},"name":"write_initial_length_at","qualname":"::write::writer::Writer::write_initial_length_at","value":"fn write_initial_length_at(&mut Self, InitialLengthOffset, u64, Format)\n-> Result<()>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" Write an initial length at the given offset according to the given DWARF format.","sig":null,"attributes":[{"value":"/ Write an initial length at the given offset according to the given DWARF format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1151954,"byte_end":1152038,"line_start":312,"line_end":312,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1152043,"byte_end":1152046,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ `write_initial_length` must have previously returned the offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1152051,"byte_end":1152119,"line_start":314,"line_end":314,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":9462},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1152452,"byte_end":1152471,"line_start":327,"line_end":327,"column_start":12,"column_end":31},"name":"InitialLengthOffset","qualname":"::write::writer::InitialLengthOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" The offset at which an initial length should be written.\n","sig":null,"attributes":[{"value":"/ The offset at which an initial length should be written.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\writer.rs","byte_start":1152350,"byte_end":1152410,"line_start":325,"line_end":325,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":3079},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160027,"byte_end":1160034,"line_start":57,"line_end":57,"column_start":11,"column_end":18},"name":"Section","qualname":"::write::section::Section","value":"Section<W>: DerefMut<Target = W>","parent":null,"children":[{"krate":0,"index":3081},{"krate":0,"index":3082}],"decl_id":null,"docs":" Functionality common to all writable DWARF sections.\n","sig":null,"attributes":[{"value":"/ Functionality common to all writable DWARF sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1159960,"byte_end":1160016,"line_start":56,"line_end":56,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160131,"byte_end":1160133,"line_start":59,"line_end":59,"column_start":8,"column_end":10},"name":"id","qualname":"::write::section::Section::id","value":"fn id(&Self) -> SectionId","parent":{"krate":0,"index":3079},"children":[],"decl_id":null,"docs":" Returns the DWARF section kind for this type.\n","sig":null,"attributes":[{"value":"/ Returns the DWARF section kind for this type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160074,"byte_end":1160123,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160215,"byte_end":1160219,"line_start":62,"line_end":62,"column_start":8,"column_end":12},"name":"name","qualname":"::write::section::Section::name","value":"fn name(&Self) -> &'static str","parent":{"krate":0,"index":3079},"children":[],"decl_id":null,"docs":" Returns the ELF section name for this type.\n","sig":null,"attributes":[{"value":"/ Returns the ELF section name for this type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160160,"byte_end":1160207,"line_start":61,"line_end":61,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":9470},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160356,"byte_end":1160364,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Sections","qualname":"::write::section::Sections","value":"Sections { debug_abbrev, debug_info, debug_line, debug_line_str, debug_ranges, debug_rnglists, debug_loc, debug_loclists, debug_str, debug_frame, eh_frame }","parent":null,"children":[{"krate":0,"index":9472},{"krate":0,"index":9473},{"krate":0,"index":9474},{"krate":0,"index":9475},{"krate":0,"index":9476},{"krate":0,"index":9477},{"krate":0,"index":9478},{"krate":0,"index":9479},{"krate":0,"index":9480},{"krate":0,"index":9481},{"krate":0,"index":9482},{"krate":0,"index":9483},{"krate":0,"index":9484},{"krate":0,"index":9485}],"decl_id":null,"docs":" All of the writable DWARF sections.\n","sig":null,"attributes":[{"value":"/ All of the writable DWARF sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160279,"byte_end":1160318,"line_start":67,"line_end":67,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":9472},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160423,"byte_end":1160435,"line_start":71,"line_end":71,"column_start":9,"column_end":21},"name":"debug_abbrev","qualname":"::write::section::Sections::debug_abbrev","value":"write::abbrev::DebugAbbrev<W>","parent":{"krate":0,"index":9470},"children":[],"decl_id":null,"docs":" The `.debug_abbrev` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_abbrev` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160382,"byte_end":1160414,"line_start":70,"line_end":70,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":9473},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160496,"byte_end":1160506,"line_start":73,"line_end":73,"column_start":9,"column_end":19},"name":"debug_info","qualname":"::write::section::Sections::debug_info","value":"write::unit::DebugInfo<W>","parent":{"krate":0,"index":9470},"children":[],"decl_id":null,"docs":" The `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_info` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160457,"byte_end":1160487,"line_start":72,"line_end":72,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":9474},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160565,"byte_end":1160575,"line_start":75,"line_end":75,"column_start":9,"column_end":19},"name":"debug_line","qualname":"::write::section::Sections::debug_line","value":"write::line::DebugLine<W>","parent":{"krate":0,"index":9470},"children":[],"decl_id":null,"docs":" The `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160526,"byte_end":1160556,"line_start":74,"line_end":74,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":9475},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160638,"byte_end":1160652,"line_start":77,"line_end":77,"column_start":9,"column_end":23},"name":"debug_line_str","qualname":"::write::section::Sections::debug_line_str","value":"write::str::DebugLineStr<W>","parent":{"krate":0,"index":9470},"children":[],"decl_id":null,"docs":" The `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160595,"byte_end":1160629,"line_start":76,"line_end":76,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":9476},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160716,"byte_end":1160728,"line_start":79,"line_end":79,"column_start":9,"column_end":21},"name":"debug_ranges","qualname":"::write::section::Sections::debug_ranges","value":"write::range::DebugRanges<W>","parent":{"krate":0,"index":9470},"children":[],"decl_id":null,"docs":" The `.debug_ranges` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_ranges` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160675,"byte_end":1160707,"line_start":78,"line_end":78,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":9477},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160793,"byte_end":1160807,"line_start":81,"line_end":81,"column_start":9,"column_end":23},"name":"debug_rnglists","qualname":"::write::section::Sections::debug_rnglists","value":"write::range::DebugRngLists<W>","parent":{"krate":0,"index":9470},"children":[],"decl_id":null,"docs":" The `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160750,"byte_end":1160784,"line_start":80,"line_end":80,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":9478},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160869,"byte_end":1160878,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"name":"debug_loc","qualname":"::write::section::Sections::debug_loc","value":"write::loc::DebugLoc<W>","parent":{"krate":0,"index":9470},"children":[],"decl_id":null,"docs":" The `.debug_loc` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_loc` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160831,"byte_end":1160860,"line_start":82,"line_end":82,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":9479},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160940,"byte_end":1160954,"line_start":85,"line_end":85,"column_start":9,"column_end":23},"name":"debug_loclists","qualname":"::write::section::Sections::debug_loclists","value":"write::loc::DebugLocLists<W>","parent":{"krate":0,"index":9470},"children":[],"decl_id":null,"docs":" The `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_loclists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160897,"byte_end":1160931,"line_start":84,"line_end":84,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":9480},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1161016,"byte_end":1161025,"line_start":87,"line_end":87,"column_start":9,"column_end":18},"name":"debug_str","qualname":"::write::section::Sections::debug_str","value":"write::str::DebugStr<W>","parent":{"krate":0,"index":9470},"children":[],"decl_id":null,"docs":" The `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160978,"byte_end":1161007,"line_start":86,"line_end":86,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":9481},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1161084,"byte_end":1161095,"line_start":89,"line_end":89,"column_start":9,"column_end":20},"name":"debug_frame","qualname":"::write::section::Sections::debug_frame","value":"write::cfi::DebugFrame<W>","parent":{"krate":0,"index":9470},"children":[],"decl_id":null,"docs":" The `.debug_frame` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1161044,"byte_end":1161075,"line_start":88,"line_end":88,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":9482},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1161153,"byte_end":1161161,"line_start":91,"line_end":91,"column_start":9,"column_end":17},"name":"eh_frame","qualname":"::write::section::Sections::eh_frame","value":"write::cfi::EhFrame<W>","parent":{"krate":0,"index":9470},"children":[],"decl_id":null,"docs":" The `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ The `.eh_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1161116,"byte_end":1161144,"line_start":90,"line_end":90,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1161653,"byte_end":1161656,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<Sections<W>>::new","value":"fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Sections` using clones of the given `section`.\n","sig":null,"attributes":[{"value":"/ Create a new `Sections` using clones of the given `section`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1161577,"byte_end":1161641,"line_start":101,"line_end":101,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1162546,"byte_end":1162554,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Sections<W>>::for_each","value":"fn for_each<F, E>(&Self, F) -> result::Result<(), E> where\nF: FnMut(SectionId, &W) -> result::Result<(), E>","parent":null,"children":[],"decl_id":null,"docs":" For each section, call `f` once with a shared reference.\n","sig":null,"attributes":[{"value":"/ For each section, call `f` once with a shared reference.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1162474,"byte_end":1162534,"line_start":123,"line_end":123,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1163305,"byte_end":1163317,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"for_each_mut","qualname":"<Sections<W>>::for_each_mut","value":"fn for_each_mut<F, E>(&mut Self, F) -> result::Result<(), E> where\nF: FnMut(SectionId, &mut W) -> result::Result<(), E>","parent":null,"children":[],"decl_id":null,"docs":" For each section, call `f` once with a mutable reference.\n","sig":null,"attributes":[{"value":"/ For each section, call `f` once with a mutable reference.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1163232,"byte_end":1163293,"line_start":148,"line_end":148,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":9550},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\abbrev.rs","byte_start":1167120,"byte_end":1167131,"line_start":103,"line_end":103,"column_start":5,"column_end":16},"name":"DebugAbbrev","qualname":"::write::abbrev::DebugAbbrev","value":"","parent":null,"children":[],"decl_id":null,"docs":"A writable `.debug_abbrev` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9576},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1170433,"byte_end":1170443,"line_start":10,"line_end":10,"column_start":5,"column_end":15},"name":"DebugFrame","qualname":"::write::cfi::DebugFrame","value":"","parent":null,"children":[],"decl_id":null,"docs":"A writable `.debug_frame` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9602},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1170528,"byte_end":1170535,"line_start":15,"line_end":15,"column_start":17,"column_end":24},"name":"EhFrame","qualname":"::write::cfi::EhFrame","value":"","parent":null,"children":[],"decl_id":null,"docs":"A writable `.eh_frame` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9614},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1170600,"byte_end":1170605,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"CieId","qualname":"::write::cfi::CieId","value":"CieId {  }","parent":null,"children":[{"krate":0,"index":9615},{"krate":0,"index":9616}],"decl_id":null,"docs":"An identifier for a CIE in a `FrameTable`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9632},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1170734,"byte_end":1170744,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"FrameTable","qualname":"::write::cfi::FrameTable","value":"FrameTable {  }","parent":null,"children":[{"krate":0,"index":9633},{"krate":0,"index":9634},{"krate":0,"index":9635}],"decl_id":null,"docs":" A table of frame description entries.\n","sig":null,"attributes":[{"value":"/ A table of frame description entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1170655,"byte_end":1170696,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171116,"byte_end":1171123,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"add_cie","qualname":"<FrameTable>::add_cie","value":"fn add_cie(&mut Self, CommonInformationEntry) -> CieId","parent":null,"children":[],"decl_id":null,"docs":" Add a CIE and return its id.","sig":null,"attributes":[{"value":"/ Add a CIE and return its id.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1170989,"byte_end":1171021,"line_start":31,"line_end":31,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171026,"byte_end":1171029,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ If the CIE already exists, then return the id of the existing CIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171034,"byte_end":1171104,"line_start":33,"line_end":33,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171314,"byte_end":1171323,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"cie_count","qualname":"<FrameTable>::cie_count","value":"fn cie_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of CIEs.\n","sig":null,"attributes":[{"value":"/ The number of CIEs.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171279,"byte_end":1171302,"line_start":39,"line_end":39,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171524,"byte_end":1171531,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"add_fde","qualname":"<FrameTable>::add_fde","value":"fn add_fde(&mut Self, CieId, FrameDescriptionEntry)","parent":null,"children":[],"decl_id":null,"docs":" Add a FDE.","sig":null,"attributes":[{"value":"/ Add a FDE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171377,"byte_end":1171391,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171396,"byte_end":1171399,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Does not check for duplicates.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171404,"byte_end":1171438,"line_start":46,"line_end":46,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171443,"byte_end":1171446,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171451,"byte_end":1171463,"line_start":48,"line_end":48,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171468,"byte_end":1171471,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Panics if the CIE id is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171476,"byte_end":1171512,"line_start":50,"line_end":50,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3208},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171720,"byte_end":1171729,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"fde_count","qualname":"<FrameTable>::fde_count","value":"fn fde_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of FDEs.\n","sig":null,"attributes":[{"value":"/ The number of FDEs.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171685,"byte_end":1171708,"line_start":56,"line_end":56,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171865,"byte_end":1171882,"line_start":62,"line_end":62,"column_start":12,"column_end":29},"name":"write_debug_frame","qualname":"<FrameTable>::write_debug_frame","value":"fn write_debug_frame<W>(&Self, &mut DebugFrame<W>) -> Result<()> where\nW: Writer","parent":null,"children":[],"decl_id":null,"docs":" Write the frame table entries to the given `.debug_frame` section.\n","sig":null,"attributes":[{"value":"/ Write the frame table entries to the given `.debug_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171783,"byte_end":1171853,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1172066,"byte_end":1172080,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"write_eh_frame","qualname":"<FrameTable>::write_eh_frame","value":"fn write_eh_frame<W>(&Self, &mut EhFrame<W>) -> Result<()> where W: Writer","parent":null,"children":[],"decl_id":null,"docs":" Write the frame table entries to the given `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ Write the frame table entries to the given `.eh_frame` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1171987,"byte_end":1172054,"line_start":66,"line_end":66,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":9640},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1173112,"byte_end":1173134,"line_start":95,"line_end":95,"column_start":12,"column_end":34},"name":"CommonInformationEntry","qualname":"::write::cfi::CommonInformationEntry","value":"CommonInformationEntry { personality, lsda_encoding, fde_address_encoding, signal_trampoline }","parent":null,"children":[{"krate":0,"index":9641},{"krate":0,"index":9642},{"krate":0,"index":9643},{"krate":0,"index":9644},{"krate":0,"index":9645},{"krate":0,"index":9646},{"krate":0,"index":9647},{"krate":0,"index":9648},{"krate":0,"index":9649}],"decl_id":null,"docs":" A common information entry. This contains information that is shared between FDEs.\n","sig":null,"attributes":[{"value":"/ A common information entry. This contains information that is shared between FDEs.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1172969,"byte_end":1173055,"line_start":93,"line_end":93,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":9645},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1173882,"byte_end":1173893,"line_start":114,"line_end":114,"column_start":9,"column_end":20},"name":"personality","qualname":"::write::cfi::CommonInformationEntry::personality","value":"core::option::Option<(constants::DwEhPe, write::Address)>","parent":{"krate":0,"index":9640},"children":[],"decl_id":null,"docs":" The address of the personality function and its encoding.\n","sig":null,"attributes":[{"value":"/ The address of the personality function and its encoding.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1173812,"byte_end":1173873,"line_start":113,"line_end":113,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":9646},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1174082,"byte_end":1174095,"line_start":119,"line_end":119,"column_start":9,"column_end":22},"name":"lsda_encoding","qualname":"::write::cfi::CommonInformationEntry::lsda_encoding","value":"core::option::Option<constants::DwEhPe>","parent":{"krate":0,"index":9640},"children":[],"decl_id":null,"docs":" The encoding to use for the LSDA address in FDEs.","sig":null,"attributes":[{"value":"/ The encoding to use for the LSDA address in FDEs.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1173938,"byte_end":1173991,"line_start":116,"line_end":116,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1173996,"byte_end":1173999,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ If set then all FDEs which use this CIE must have a LSDA address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1174004,"byte_end":1174073,"line_start":118,"line_end":118,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":9647},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1174184,"byte_end":1174204,"line_start":122,"line_end":122,"column_start":9,"column_end":29},"name":"fde_address_encoding","qualname":"::write::cfi::CommonInformationEntry::fde_address_encoding","value":"constants::DwEhPe","parent":{"krate":0,"index":9640},"children":[],"decl_id":null,"docs":" The encoding to use for addresses in FDEs.\n","sig":null,"attributes":[{"value":"/ The encoding to use for addresses in FDEs.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1174129,"byte_end":1174175,"line_start":121,"line_end":121,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":9648},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1174271,"byte_end":1174288,"line_start":125,"line_end":125,"column_start":9,"column_end":26},"name":"signal_trampoline","qualname":"::write::cfi::CommonInformationEntry::signal_trampoline","value":"bool","parent":{"krate":0,"index":9640},"children":[],"decl_id":null,"docs":" True for signal trampolines.\n","sig":null,"attributes":[{"value":"/ True for signal trampolines.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1174230,"byte_end":1174262,"line_start":124,"line_end":124,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1174576,"byte_end":1174579,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<CommonInformationEntry>::new","value":"fn new(Encoding, u8, i8, Register) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new common information entry.","sig":null,"attributes":[{"value":"/ Create a new common information entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1174441,"byte_end":1174483,"line_start":132,"line_end":132,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1174488,"byte_end":1174491,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The encoding version must be a CFI version, not a DWARF version.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1174496,"byte_end":1174564,"line_start":134,"line_end":134,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1175166,"byte_end":1175181,"line_start":155,"line_end":155,"column_start":12,"column_end":27},"name":"add_instruction","qualname":"<CommonInformationEntry>::add_instruction","value":"fn add_instruction(&mut Self, CallFrameInstruction)","parent":null,"children":[],"decl_id":null,"docs":" Add an initial instruction.\n","sig":null,"attributes":[{"value":"/ Add an initial instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1175123,"byte_end":1175154,"line_start":154,"line_end":154,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9664},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1179075,"byte_end":1179096,"line_start":272,"line_end":272,"column_start":12,"column_end":33},"name":"FrameDescriptionEntry","qualname":"::write::cfi::FrameDescriptionEntry","value":"FrameDescriptionEntry { lsda }","parent":null,"children":[{"krate":0,"index":9665},{"krate":0,"index":9666},{"krate":0,"index":9667},{"krate":0,"index":9668}],"decl_id":null,"docs":" A frame description entry. There should be one FDE per function.\n","sig":null,"attributes":[{"value":"/ A frame description entry. There should be one FDE per function.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1178956,"byte_end":1179024,"line_start":270,"line_end":270,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":9667},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1179271,"byte_end":1179275,"line_start":280,"line_end":280,"column_start":9,"column_end":13},"name":"lsda","qualname":"::write::cfi::FrameDescriptionEntry::lsda","value":"core::option::Option<write::Address>","parent":{"krate":0,"index":9664},"children":[],"decl_id":null,"docs":" The address of the LSDA.\n","sig":null,"attributes":[{"value":"/ The address of the LSDA.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1179234,"byte_end":1179262,"line_start":279,"line_end":279,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3222},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1179514,"byte_end":1179517,"line_start":288,"line_end":288,"column_start":12,"column_end":15},"name":"new","qualname":"<FrameDescriptionEntry>::new","value":"fn new(Address, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new frame description entry for a function.\n","sig":null,"attributes":[{"value":"/ Create a new frame description entry for a function.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1179446,"byte_end":1179502,"line_start":287,"line_end":287,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1179846,"byte_end":1179861,"line_start":300,"line_end":300,"column_start":12,"column_end":27},"name":"add_instruction","qualname":"<FrameDescriptionEntry>::add_instruction","value":"fn add_instruction(&mut Self, u32, CallFrameInstruction)","parent":null,"children":[],"decl_id":null,"docs":" Add an instruction.","sig":null,"attributes":[{"value":"/ Add an instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1179715,"byte_end":1179738,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1179743,"byte_end":1179746,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Instructions must be added in increasing order of offset, or writing will fail.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1179751,"byte_end":1179834,"line_start":299,"line_end":299,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9682},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182696,"byte_end":1182699,"line_start":382,"line_end":382,"column_start":5,"column_end":8},"name":"Cfa","qualname":"::write::cfi::CallFrameInstruction::Cfa","value":"CallFrameInstruction::Cfa(Register, i32)","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" Define the CFA rule to use the provided register and offset.\n","sig":null,"attributes":[{"value":"/ Define the CFA rule to use the provided register and offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182627,"byte_end":1182691,"line_start":381,"line_end":381,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":9684},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182700,"byte_end":1182708,"line_start":382,"line_end":382,"column_start":9,"column_end":17},"name":"0","qualname":"::write::cfi::CallFrameInstruction::Cfa::0","value":"common::Register","parent":{"krate":0,"index":9682},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9685},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182710,"byte_end":1182713,"line_start":382,"line_end":382,"column_start":19,"column_end":22},"name":"1","qualname":"::write::cfi::CallFrameInstruction::Cfa::1","value":"i32","parent":{"krate":0,"index":9682},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9686},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182803,"byte_end":1182814,"line_start":384,"line_end":384,"column_start":5,"column_end":16},"name":"CfaRegister","qualname":"::write::cfi::CallFrameInstruction::CfaRegister","value":"CallFrameInstruction::CfaRegister(Register)","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" Update the CFA rule to use the provided register. The offset is unchanged.\n","sig":null,"attributes":[{"value":"/ Update the CFA rule to use the provided register. The offset is unchanged.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182720,"byte_end":1182798,"line_start":383,"line_end":383,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":9688},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182815,"byte_end":1182823,"line_start":384,"line_end":384,"column_start":17,"column_end":25},"name":"0","qualname":"::write::cfi::CallFrameInstruction::CfaRegister::0","value":"common::Register","parent":{"krate":0,"index":9686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9689},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182913,"byte_end":1182922,"line_start":386,"line_end":386,"column_start":5,"column_end":14},"name":"CfaOffset","qualname":"::write::cfi::CallFrameInstruction::CfaOffset","value":"CallFrameInstruction::CfaOffset(i32)","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" Update the CFA rule to use the provided offset. The register is unchanged.\n","sig":null,"attributes":[{"value":"/ Update the CFA rule to use the provided offset. The register is unchanged.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182830,"byte_end":1182908,"line_start":385,"line_end":385,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":9691},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182923,"byte_end":1182926,"line_start":386,"line_end":386,"column_start":15,"column_end":18},"name":"0","qualname":"::write::cfi::CallFrameInstruction::CfaOffset::0","value":"i32","parent":{"krate":0,"index":9689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9692},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182993,"byte_end":1183006,"line_start":388,"line_end":388,"column_start":5,"column_end":18},"name":"CfaExpression","qualname":"::write::cfi::CallFrameInstruction::CfaExpression","value":"CallFrameInstruction::CfaExpression(Expression)","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" Define the CFA rule to use the provided expression.\n","sig":null,"attributes":[{"value":"/ Define the CFA rule to use the provided expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182933,"byte_end":1182988,"line_start":387,"line_end":387,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":9694},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183007,"byte_end":1183017,"line_start":388,"line_end":388,"column_start":19,"column_end":29},"name":"0","qualname":"::write::cfi::CallFrameInstruction::CfaExpression::0","value":"write::op::Expression","parent":{"krate":0,"index":9692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9695},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183076,"byte_end":1183083,"line_start":391,"line_end":391,"column_start":5,"column_end":12},"name":"Restore","qualname":"::write::cfi::CallFrameInstruction::Restore","value":"CallFrameInstruction::Restore(Register)","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" Restore the initial rule for the register.\n","sig":null,"attributes":[{"value":"/ Restore the initial rule for the register.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183025,"byte_end":1183071,"line_start":390,"line_end":390,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":9697},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183084,"byte_end":1183092,"line_start":391,"line_end":391,"column_start":13,"column_end":21},"name":"0","qualname":"::write::cfi::CallFrameInstruction::Restore::0","value":"common::Register","parent":{"krate":0,"index":9695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9698},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183162,"byte_end":1183171,"line_start":393,"line_end":393,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::write::cfi::CallFrameInstruction::Undefined","value":"CallFrameInstruction::Undefined(Register)","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" The previous value of the register is not recoverable.\n","sig":null,"attributes":[{"value":"/ The previous value of the register is not recoverable.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183099,"byte_end":1183157,"line_start":392,"line_end":392,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":9700},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183172,"byte_end":1183180,"line_start":393,"line_end":393,"column_start":15,"column_end":23},"name":"0","qualname":"::write::cfi::CallFrameInstruction::Undefined::0","value":"common::Register","parent":{"krate":0,"index":9698},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9701},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183231,"byte_end":1183240,"line_start":395,"line_end":395,"column_start":5,"column_end":14},"name":"SameValue","qualname":"::write::cfi::CallFrameInstruction::SameValue","value":"CallFrameInstruction::SameValue(Register)","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" The register has not been modified.\n","sig":null,"attributes":[{"value":"/ The register has not been modified.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183187,"byte_end":1183226,"line_start":394,"line_end":394,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":9703},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183241,"byte_end":1183249,"line_start":395,"line_end":395,"column_start":15,"column_end":23},"name":"0","qualname":"::write::cfi::CallFrameInstruction::SameValue::0","value":"common::Register","parent":{"krate":0,"index":9701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9704},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183333,"byte_end":1183339,"line_start":397,"line_end":397,"column_start":5,"column_end":11},"name":"Offset","qualname":"::write::cfi::CallFrameInstruction::Offset","value":"CallFrameInstruction::Offset(Register, i32)","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" The previous value of the register is saved at address CFA + offset.\n","sig":null,"attributes":[{"value":"/ The previous value of the register is saved at address CFA + offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183256,"byte_end":1183328,"line_start":396,"line_end":396,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":9706},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183340,"byte_end":1183348,"line_start":397,"line_end":397,"column_start":12,"column_end":20},"name":"0","qualname":"::write::cfi::CallFrameInstruction::Offset::0","value":"common::Register","parent":{"krate":0,"index":9704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9707},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183350,"byte_end":1183353,"line_start":397,"line_end":397,"column_start":22,"column_end":25},"name":"1","qualname":"::write::cfi::CallFrameInstruction::Offset::1","value":"i32","parent":{"krate":0,"index":9704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9708},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183420,"byte_end":1183429,"line_start":399,"line_end":399,"column_start":5,"column_end":14},"name":"ValOffset","qualname":"::write::cfi::CallFrameInstruction::ValOffset","value":"CallFrameInstruction::ValOffset(Register, i32)","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" The previous value of the register is CFA + offset.\n","sig":null,"attributes":[{"value":"/ The previous value of the register is CFA + offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183360,"byte_end":1183415,"line_start":398,"line_end":398,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":9710},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183430,"byte_end":1183438,"line_start":399,"line_end":399,"column_start":15,"column_end":23},"name":"0","qualname":"::write::cfi::CallFrameInstruction::ValOffset::0","value":"common::Register","parent":{"krate":0,"index":9708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9711},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183440,"byte_end":1183443,"line_start":399,"line_end":399,"column_start":25,"column_end":28},"name":"1","qualname":"::write::cfi::CallFrameInstruction::ValOffset::1","value":"i32","parent":{"krate":0,"index":9708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9712},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183524,"byte_end":1183532,"line_start":401,"line_end":401,"column_start":5,"column_end":13},"name":"Register","qualname":"::write::cfi::CallFrameInstruction::Register","value":"CallFrameInstruction::Register(Register, Register)","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" The previous value of the register is stored in another register.\n","sig":null,"attributes":[{"value":"/ The previous value of the register is stored in another register.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183450,"byte_end":1183519,"line_start":400,"line_end":400,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":9714},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183533,"byte_end":1183541,"line_start":401,"line_end":401,"column_start":14,"column_end":22},"name":"0","qualname":"::write::cfi::CallFrameInstruction::Register::0","value":"common::Register","parent":{"krate":0,"index":9712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9715},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183543,"byte_end":1183551,"line_start":401,"line_end":401,"column_start":24,"column_end":32},"name":"1","qualname":"::write::cfi::CallFrameInstruction::Register::1","value":"common::Register","parent":{"krate":0,"index":9712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9716},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183646,"byte_end":1183656,"line_start":403,"line_end":403,"column_start":5,"column_end":15},"name":"Expression","qualname":"::write::cfi::CallFrameInstruction::Expression","value":"CallFrameInstruction::Expression(Register, Expression)","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" The previous value of the register is saved at address given by the expression.\n","sig":null,"attributes":[{"value":"/ The previous value of the register is saved at address given by the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183558,"byte_end":1183641,"line_start":402,"line_end":402,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":9718},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183657,"byte_end":1183665,"line_start":403,"line_end":403,"column_start":16,"column_end":24},"name":"0","qualname":"::write::cfi::CallFrameInstruction::Expression::0","value":"common::Register","parent":{"krate":0,"index":9716},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9719},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183667,"byte_end":1183677,"line_start":403,"line_end":403,"column_start":26,"column_end":36},"name":"1","qualname":"::write::cfi::CallFrameInstruction::Expression::1","value":"write::op::Expression","parent":{"krate":0,"index":9716},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9720},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183755,"byte_end":1183768,"line_start":405,"line_end":405,"column_start":5,"column_end":18},"name":"ValExpression","qualname":"::write::cfi::CallFrameInstruction::ValExpression","value":"CallFrameInstruction::ValExpression(Register, Expression)","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" The previous value of the register is given by the expression.\n","sig":null,"attributes":[{"value":"/ The previous value of the register is given by the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183684,"byte_end":1183750,"line_start":404,"line_end":404,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":9722},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183769,"byte_end":1183777,"line_start":405,"line_end":405,"column_start":19,"column_end":27},"name":"0","qualname":"::write::cfi::CallFrameInstruction::ValExpression::0","value":"common::Register","parent":{"krate":0,"index":9720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9723},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183779,"byte_end":1183789,"line_start":405,"line_end":405,"column_start":29,"column_end":39},"name":"1","qualname":"::write::cfi::CallFrameInstruction::ValExpression::1","value":"write::op::Expression","parent":{"krate":0,"index":9720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9724},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183843,"byte_end":1183856,"line_start":408,"line_end":408,"column_start":5,"column_end":18},"name":"RememberState","qualname":"::write::cfi::CallFrameInstruction::RememberState","value":"CallFrameInstruction::RememberState","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" Push all register rules onto a stack.\n","sig":null,"attributes":[{"value":"/ Push all register rules onto a stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183797,"byte_end":1183838,"line_start":407,"line_end":407,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9726},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183908,"byte_end":1183920,"line_start":410,"line_end":410,"column_start":5,"column_end":17},"name":"RestoreState","qualname":"::write::cfi::CallFrameInstruction::RestoreState","value":"CallFrameInstruction::RestoreState","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" Pop all register rules off the stack.\n","sig":null,"attributes":[{"value":"/ Pop all register rules off the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183862,"byte_end":1183903,"line_start":409,"line_end":409,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9728},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183998,"byte_end":1184006,"line_start":412,"line_end":412,"column_start":5,"column_end":13},"name":"ArgsSize","qualname":"::write::cfi::CallFrameInstruction::ArgsSize","value":"CallFrameInstruction::ArgsSize(u32)","parent":{"krate":0,"index":9681},"children":[],"decl_id":null,"docs":" The size of the arguments that have been pushed onto the stack.\n","sig":null,"attributes":[{"value":"/ The size of the arguments that have been pushed onto the stack.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1183926,"byte_end":1183993,"line_start":411,"line_end":411,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":9730},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1184007,"byte_end":1184010,"line_start":412,"line_end":412,"column_start":14,"column_end":17},"name":"0","qualname":"::write::cfi::CallFrameInstruction::ArgsSize::0","value":"u32","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9681},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182600,"byte_end":1182620,"line_start":380,"line_end":380,"column_start":10,"column_end":30},"name":"CallFrameInstruction","qualname":"::write::cfi::CallFrameInstruction","value":"enum CallFrameInstruction {\n    Cfa(Register, i32),\n    CfaRegister(Register),\n    CfaOffset(i32),\n    CfaExpression(Expression),\n    Restore(Register),\n    Undefined(Register),\n    SameValue(Register),\n    Offset(Register, i32),\n    ValOffset(Register, i32),\n    Register(Register, Register),\n    Expression(Register, Expression),\n    ValExpression(Register, Expression),\n    RememberState,\n    RestoreState,\n    ArgsSize(u32),\n}","parent":null,"children":[{"krate":0,"index":9682},{"krate":0,"index":9686},{"krate":0,"index":9689},{"krate":0,"index":9692},{"krate":0,"index":9695},{"krate":0,"index":9698},{"krate":0,"index":9701},{"krate":0,"index":9704},{"krate":0,"index":9708},{"krate":0,"index":9712},{"krate":0,"index":9716},{"krate":0,"index":9720},{"krate":0,"index":9724},{"krate":0,"index":9726},{"krate":0,"index":9728}],"decl_id":null,"docs":" An instruction in a frame description entry.","sig":null,"attributes":[{"value":"/ An instruction in a frame description entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182417,"byte_end":1182465,"line_start":376,"line_end":376,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182466,"byte_end":1182469,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ This may be a CFA definition, a register rule, or some other directive.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1182470,"byte_end":1182545,"line_start":378,"line_end":378,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1191813,"byte_end":1191817,"line_start":602,"line_end":602,"column_start":16,"column_end":20},"name":"from","qualname":"<FrameTable>::from","value":"fn from<R, Section>(&Section, &dyn Fn(u64) -> Option<Address>)\n-> ConvertResult<FrameTable> where R: Reader<Offset = usize>,\nSection: read::UnwindSection<R>, Section::Offset: read::UnwindOffset<usize>","parent":null,"children":[],"decl_id":null,"docs":" Create a frame table by reading the data in the given section.","sig":null,"attributes":[{"value":"/ Create a frame table by reading the data in the given section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1191309,"byte_end":1191375,"line_start":595,"line_end":595,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1191384,"byte_end":1191387,"line_start":596,"line_end":596,"column_start":9,"column_end":12}},{"value":"/ `convert_address` is a function to convert read addresses into the `Address`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1191396,"byte_end":1191476,"line_start":597,"line_end":597,"column_start":9,"column_end":89}},{"value":"/ type. For non-relocatable addresses, this function may simply return","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1191485,"byte_end":1191557,"line_start":598,"line_end":598,"column_start":9,"column_end":81}},{"value":"/ `Address::Constant(address)`. For relocatable addresses, it is the caller's","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1191566,"byte_end":1191645,"line_start":599,"line_end":599,"column_start":9,"column_end":88}},{"value":"/ responsibility to determine the symbol and addend corresponding to the address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1191654,"byte_end":1191736,"line_start":600,"line_end":600,"column_start":9,"column_end":91}},{"value":"/ and return `Address::Symbol { symbol, addend }`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1191745,"byte_end":1191797,"line_start":601,"line_end":601,"column_start":9,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":9745},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210325,"byte_end":1210330,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Dwarf","qualname":"::write::dwarf::Dwarf","value":"Dwarf { units, line_programs, line_strings, strings }","parent":null,"children":[{"krate":0,"index":9746},{"krate":0,"index":9747},{"krate":0,"index":9748},{"krate":0,"index":9749}],"decl_id":null,"docs":" Writable DWARF information for more than one unit.\n","sig":null,"attributes":[{"value":"/ Writable DWARF information for more than one unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210233,"byte_end":1210287,"line_start":9,"line_end":9,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":9746},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210500,"byte_end":1210505,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"units","qualname":"::write::dwarf::Dwarf::units","value":"write::unit::UnitTable","parent":{"krate":0,"index":9745},"children":[],"decl_id":null,"docs":" A table of units. These are primarily stored in the `.debug_info` section,\n but they also contain information that is stored in other sections.\n","sig":null,"attributes":[{"value":"/ A table of units. These are primarily stored in the `.debug_info` section,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210337,"byte_end":1210415,"line_start":12,"line_end":12,"column_start":5,"column_end":83}},{"value":"/ but they also contain information that is stored in other sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210420,"byte_end":1210491,"line_start":13,"line_end":13,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":9747},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210701,"byte_end":1210714,"line_start":20,"line_end":20,"column_start":9,"column_end":22},"name":"line_programs","qualname":"::write::dwarf::Dwarf::line_programs","value":"alloc::vec::Vec<write::line::LineProgram>","parent":{"krate":0,"index":9745},"children":[],"decl_id":null,"docs":" Extra line number programs that are not associated with a unit.","sig":null,"attributes":[{"value":"/ Extra line number programs that are not associated with a unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210523,"byte_end":1210590,"line_start":16,"line_end":16,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210595,"byte_end":1210598,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ These should only be used when generating DWARF5 line-only debug","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210603,"byte_end":1210671,"line_start":18,"line_end":18,"column_start":5,"column_end":73}},{"value":"/ information.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210676,"byte_end":1210692,"line_start":19,"line_end":19,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":9748},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210824,"byte_end":1210836,"line_start":23,"line_end":23,"column_start":9,"column_end":21},"name":"line_strings","qualname":"::write::dwarf::Dwarf::line_strings","value":"write::str::LineStringTable","parent":{"krate":0,"index":9745},"children":[],"decl_id":null,"docs":" A table of strings that will be stored in the `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ A table of strings that will be stored in the `.debug_line_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210739,"byte_end":1210815,"line_start":22,"line_end":22,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":9749},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210940,"byte_end":1210947,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"name":"strings","qualname":"::write::dwarf::Dwarf::strings","value":"write::str::StringTable","parent":{"krate":0,"index":9745},"children":[],"decl_id":null,"docs":" A table of strings that will be stored in the `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ A table of strings that will be stored in the `.debug_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210860,"byte_end":1210931,"line_start":25,"line_end":25,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1211042,"byte_end":1211045,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Dwarf>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Dwarf` instance.\n","sig":null,"attributes":[{"value":"/ Create a new `Dwarf` instance.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210982,"byte_end":1211016,"line_start":30,"line_end":30,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1211021,"byte_end":1211030,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3312},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1211159,"byte_end":1211164,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"write","qualname":"<Dwarf>::write","value":"fn write<W>(&mut Self, &mut Sections<W>) -> Result<()> where W: Writer","parent":null,"children":[],"decl_id":null,"docs":" Write the DWARF information to the given sections.\n","sig":null,"attributes":[{"value":"/ Write the DWARF information to the given sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1211093,"byte_end":1211147,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":9754},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1211794,"byte_end":1211803,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"DwarfUnit","qualname":"::write::dwarf::DwarfUnit","value":"DwarfUnit { unit, line_strings, strings }","parent":null,"children":[{"krate":0,"index":9755},{"krate":0,"index":9756},{"krate":0,"index":9757}],"decl_id":null,"docs":" Writable DWARF information for a single unit.\n","sig":null,"attributes":[{"value":"/ Writable DWARF information for a single unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1211716,"byte_end":1211765,"line_start":53,"line_end":53,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":9755},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1211957,"byte_end":1211961,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"name":"unit","qualname":"::write::dwarf::DwarfUnit::unit","value":"write::unit::Unit","parent":{"krate":0,"index":9754},"children":[],"decl_id":null,"docs":" A unit. This is primarily stored in the `.debug_info` section,\n but also contains information that is stored in other sections.\n","sig":null,"attributes":[{"value":"/ A unit. This is primarily stored in the `.debug_info` section,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1211810,"byte_end":1211876,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/ but also contains information that is stored in other sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1211881,"byte_end":1211948,"line_start":57,"line_end":57,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":9756},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1212059,"byte_end":1212071,"line_start":61,"line_end":61,"column_start":9,"column_end":21},"name":"line_strings","qualname":"::write::dwarf::DwarfUnit::line_strings","value":"write::str::LineStringTable","parent":{"krate":0,"index":9754},"children":[],"decl_id":null,"docs":" A table of strings that will be stored in the `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ A table of strings that will be stored in the `.debug_line_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1211974,"byte_end":1212050,"line_start":60,"line_end":60,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":9757},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1212175,"byte_end":1212182,"line_start":64,"line_end":64,"column_start":9,"column_end":16},"name":"strings","qualname":"::write::dwarf::DwarfUnit::strings","value":"write::str::StringTable","parent":{"krate":0,"index":9754},"children":[],"decl_id":null,"docs":" A table of strings that will be stored in the `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ A table of strings that will be stored in the `.debug_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1212095,"byte_end":1212166,"line_start":63,"line_end":63,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1212438,"byte_end":1212441,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<DwarfUnit>::new","value":"fn new(Encoding) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DwarfUnit`.","sig":null,"attributes":[{"value":"/ Create a new `DwarfUnit`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1212221,"byte_end":1212250,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1212255,"byte_end":1212258,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note: you should set `self.unit.line_program` after creation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1212263,"byte_end":1212328,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ This cannot be done earlier because it may need to reference","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1212333,"byte_end":1212397,"line_start":71,"line_end":71,"column_start":5,"column_end":69}},{"value":"/ `self.line_strings`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1212402,"byte_end":1212426,"line_start":72,"line_end":72,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1212757,"byte_end":1212762,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"name":"write","qualname":"<DwarfUnit>::write","value":"fn write<W>(&mut Self, &mut Sections<W>) -> Result<()> where W: Writer","parent":null,"children":[],"decl_id":null,"docs":" Write the DWARf information to the given sections.\n","sig":null,"attributes":[{"value":"/ Write the DWARf information to the given sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1212691,"byte_end":1212745,"line_start":82,"line_end":82,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1214244,"byte_end":1214248,"line_start":121,"line_end":121,"column_start":16,"column_end":20},"name":"from","qualname":"<Dwarf>::from","value":"fn from<R>(&read::Dwarf<R>, &dyn Fn(u64) -> Option<Address>)\n-> ConvertResult<Dwarf> where R: Reader<Offset = usize>","parent":null,"children":[],"decl_id":null,"docs":" Create a `write::Dwarf` by converting a `read::Dwarf`.","sig":null,"attributes":[{"value":"/ Create a `write::Dwarf` by converting a `read::Dwarf`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1213748,"byte_end":1213806,"line_start":114,"line_end":114,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1213815,"byte_end":1213818,"line_start":115,"line_end":115,"column_start":9,"column_end":12}},{"value":"/ `convert_address` is a function to convert read addresses into the `Address`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1213827,"byte_end":1213907,"line_start":116,"line_end":116,"column_start":9,"column_end":89}},{"value":"/ type. For non-relocatable addresses, this function may simply return","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1213916,"byte_end":1213988,"line_start":117,"line_end":117,"column_start":9,"column_end":81}},{"value":"/ `Address::Constant(address)`. For relocatable addresses, it is the caller's","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1213997,"byte_end":1214076,"line_start":118,"line_end":118,"column_start":9,"column_end":88}},{"value":"/ responsibility to determine the symbol and addend corresponding to the address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1214085,"byte_end":1214167,"line_start":119,"line_end":119,"column_start":9,"column_end":91}},{"value":"/ and return `Address::Symbol { symbol, addend }`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1214176,"byte_end":1214228,"line_start":120,"line_end":120,"column_start":9,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":9760},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1215561,"byte_end":1215572,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"LineProgram","qualname":"::write::line::LineProgram","value":"LineProgram { file_has_timestamp, file_has_size, file_has_md5 }","parent":null,"children":[{"krate":0,"index":9761},{"krate":0,"index":9762},{"krate":0,"index":9763},{"krate":0,"index":9764},{"krate":0,"index":9765},{"krate":0,"index":9766},{"krate":0,"index":9767},{"krate":0,"index":9768},{"krate":0,"index":9769},{"krate":0,"index":9770},{"krate":0,"index":9771},{"krate":0,"index":9772},{"krate":0,"index":9773}],"decl_id":null,"docs":" A line number program.\n","sig":null,"attributes":[{"value":"/ A line number program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1215499,"byte_end":1215525,"line_start":19,"line_end":19,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":9767},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1216907,"byte_end":1216925,"line_start":55,"line_end":55,"column_start":9,"column_end":27},"name":"file_has_timestamp","qualname":"::write::line::LineProgram::file_has_timestamp","value":"bool","parent":{"krate":0,"index":9760},"children":[],"decl_id":null,"docs":" True if the file entries may have valid timestamps.","sig":null,"attributes":[{"value":"/ True if the file entries may have valid timestamps.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1216649,"byte_end":1216704,"line_start":50,"line_end":50,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1216709,"byte_end":1216712,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Entries may still have a timestamp of 0 even if this is set.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1216717,"byte_end":1216781,"line_start":52,"line_end":52,"column_start":5,"column_end":69}},{"value":"/ For version <= 4, this is ignored.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1216786,"byte_end":1216824,"line_start":53,"line_end":53,"column_start":5,"column_end":43}},{"value":"/ For version 5, this controls whether to emit `DW_LNCT_timestamp`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1216829,"byte_end":1216898,"line_start":54,"line_end":54,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":9768},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217181,"byte_end":1217194,"line_start":62,"line_end":62,"column_start":9,"column_end":22},"name":"file_has_size","qualname":"::write::line::LineProgram::file_has_size","value":"bool","parent":{"krate":0,"index":9760},"children":[],"decl_id":null,"docs":" True if the file entries may have valid sizes.","sig":null,"attributes":[{"value":"/ True if the file entries may have valid sizes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1216938,"byte_end":1216988,"line_start":57,"line_end":57,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1216993,"byte_end":1216996,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Entries may still have a size of 0 even if this is set.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217001,"byte_end":1217060,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/ For version <= 4, this is ignored.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217065,"byte_end":1217103,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/ For version 5, this controls whether to emit `DW_LNCT_size`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217108,"byte_end":1217172,"line_start":61,"line_end":61,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":9769},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217389,"byte_end":1217401,"line_start":68,"line_end":68,"column_start":9,"column_end":21},"name":"file_has_md5","qualname":"::write::line::LineProgram::file_has_md5","value":"bool","parent":{"krate":0,"index":9760},"children":[],"decl_id":null,"docs":" True if the file entries have valid MD5 checksums.","sig":null,"attributes":[{"value":"/ True if the file entries have valid MD5 checksums.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217207,"byte_end":1217261,"line_start":64,"line_end":64,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217266,"byte_end":1217269,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For version <= 4, this is ignored.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217274,"byte_end":1217312,"line_start":66,"line_end":66,"column_start":5,"column_end":43}},{"value":"/ For version 5, this controls whether to emit `DW_LNCT_MD5`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217317,"byte_end":1217380,"line_start":67,"line_end":67,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3411},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1218426,"byte_end":1218429,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<LineProgram>::new","value":"fn new(Encoding, LineEncoding, LineString, LineString, Option<FileInfo>)\n-> LineProgram","parent":null,"children":[],"decl_id":null,"docs":" Create a new `LineProgram`.","sig":null,"attributes":[{"value":"/ Create a new `LineProgram`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217610,"byte_end":1217641,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217646,"byte_end":1217649,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ `comp_dir` defines the working directory of the compilation unit,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217654,"byte_end":1217723,"line_start":80,"line_end":80,"column_start":5,"column_end":74}},{"value":"/ and must be the same as the `DW_AT_comp_dir` attribute","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217728,"byte_end":1217786,"line_start":81,"line_end":81,"column_start":5,"column_end":63}},{"value":"/ of the compilation unit DIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217791,"byte_end":1217823,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217828,"byte_end":1217831,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ `comp_file` and `comp_file_info` define the primary source file","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217836,"byte_end":1217903,"line_start":84,"line_end":84,"column_start":5,"column_end":72}},{"value":"/ of the compilation unit and must be the same as the `DW_AT_name`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217908,"byte_end":1217976,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/ attribute of the compilation unit DIE.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217981,"byte_end":1218023,"line_start":86,"line_end":86,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1218028,"byte_end":1218031,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1218036,"byte_end":1218048,"line_start":88,"line_end":88,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1218053,"byte_end":1218056,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Panics if `line_encoding.line_base` > 0.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1218061,"byte_end":1218105,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1218110,"byte_end":1218113,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Panics if `line_encoding.line_base` + `line_encoding.line_range` <= 0.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1218118,"byte_end":1218192,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1218197,"byte_end":1218200,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Panics if `comp_dir` is empty or contains a null byte.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1218205,"byte_end":1218263,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1218268,"byte_end":1218271,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Panics if `comp_file` is empty or contains a null byte.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1218276,"byte_end":1218335,"line_start":96,"line_end":96,"column_start":5,"column_end":64}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1218340,"byte_end":1218376,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1218381,"byte_end":1218414,"line_start":98,"line_end":98,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3412},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1219972,"byte_end":1219976,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"none","qualname":"<LineProgram>::none","value":"fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `LineProgram` with no fields set.","sig":null,"attributes":[{"value":"/ Create a new `LineProgram` with no fields set.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1219691,"byte_end":1219741,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1219746,"byte_end":1219749,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This can be used when the `LineProgram` will not be used.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1219754,"byte_end":1219815,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1219820,"byte_end":1219823,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ You should not attempt to add files or line instructions to","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1219828,"byte_end":1219891,"line_start":136,"line_end":136,"column_start":5,"column_end":68}},{"value":"/ this line program, or write it to the `.debug_line` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1219896,"byte_end":1219960,"line_start":137,"line_end":137,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3413},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1220837,"byte_end":1220844,"line_start":163,"line_end":163,"column_start":12,"column_end":19},"name":"is_none","qualname":"<LineProgram>::is_none","value":"fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this line program was created with `LineProgram::none()`.\n","sig":null,"attributes":[{"value":"/ Return true if this line program was created with `LineProgram::none()`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1220735,"byte_end":1220811,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1220816,"byte_end":1220825,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1220974,"byte_end":1220982,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"encoding","qualname":"<LineProgram>::encoding","value":"fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this line program.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this line program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1220891,"byte_end":1220948,"line_start":167,"line_end":167,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1220953,"byte_end":1220962,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221114,"byte_end":1221121,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"version","qualname":"<LineProgram>::version","value":"fn version(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Return the DWARF version for this line program.\n","sig":null,"attributes":[{"value":"/ Return the DWARF version for this line program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221037,"byte_end":1221088,"line_start":173,"line_end":173,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221093,"byte_end":1221102,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221264,"byte_end":1221276,"line_start":181,"line_end":181,"column_start":12,"column_end":24},"name":"address_size","qualname":"<LineProgram>::address_size","value":"fn address_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the address size in bytes for this line program.\n","sig":null,"attributes":[{"value":"/ Return the address size in bytes for this line program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221179,"byte_end":1221238,"line_start":179,"line_end":179,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221243,"byte_end":1221252,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221414,"byte_end":1221420,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"format","qualname":"<LineProgram>::format","value":"fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Return the DWARF format for this line program.\n","sig":null,"attributes":[{"value":"/ Return the DWARF format for this line program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221338,"byte_end":1221388,"line_start":185,"line_end":185,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221393,"byte_end":1221402,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3418},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221574,"byte_end":1221591,"line_start":193,"line_end":193,"column_start":12,"column_end":29},"name":"default_directory","qualname":"<LineProgram>::default_directory","value":"fn default_directory(&Self) -> DirectoryId","parent":null,"children":[],"decl_id":null,"docs":" Return the id for the working directory of the compilation unit.\n","sig":null,"attributes":[{"value":"/ Return the id for the working directory of the compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221480,"byte_end":1221548,"line_start":191,"line_end":191,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221553,"byte_end":1221562,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3419},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1222032,"byte_end":1222045,"line_start":207,"line_end":207,"column_start":12,"column_end":25},"name":"add_directory","qualname":"<LineProgram>::add_directory","value":"fn add_directory(&mut Self, LineString) -> DirectoryId","parent":null,"children":[],"decl_id":null,"docs":" Add a directory entry and return its id.","sig":null,"attributes":[{"value":"/ Add a directory entry and return its id.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221650,"byte_end":1221694,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221699,"byte_end":1221702,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ If the directory already exists, then return the id of the existing entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221707,"byte_end":1221785,"line_start":199,"line_end":199,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221790,"byte_end":1221793,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ If the path is relative, then the directory is located relative to the working","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221798,"byte_end":1221880,"line_start":201,"line_end":201,"column_start":5,"column_end":87}},{"value":"/ directory of the compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221885,"byte_end":1221923,"line_start":202,"line_end":202,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221928,"byte_end":1221931,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221936,"byte_end":1221948,"line_start":204,"line_end":204,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221953,"byte_end":1221956,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Panics if `directory` is empty or contains a null byte.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1221961,"byte_end":1222020,"line_start":206,"line_end":206,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1222706,"byte_end":1222719,"line_start":225,"line_end":225,"column_start":12,"column_end":25},"name":"get_directory","qualname":"<LineProgram>::get_directory","value":"fn get_directory(&Self, DirectoryId) -> &LineString","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a directory entry.","sig":null,"attributes":[{"value":"/ Get a reference to a directory entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1222585,"byte_end":1222626,"line_start":220,"line_end":220,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1222631,"byte_end":1222634,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1222639,"byte_end":1222651,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1222656,"byte_end":1222659,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Panics if `id` is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1222664,"byte_end":1222694,"line_start":224,"line_end":224,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3421},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1223510,"byte_end":1223518,"line_start":246,"line_end":246,"column_start":12,"column_end":20},"name":"add_file","qualname":"<LineProgram>::add_file","value":"fn add_file(&mut Self, LineString, DirectoryId, Option<FileInfo>) -> FileId","parent":null,"children":[],"decl_id":null,"docs":" Add a file entry and return its id.","sig":null,"attributes":[{"value":"/ Add a file entry and return its id.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1222822,"byte_end":1222861,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1222866,"byte_end":1222869,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ If the file already exists, then return the id of the existing entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1222874,"byte_end":1222947,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1222952,"byte_end":1222955,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ If the file path is relative, then the file is located relative","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1222960,"byte_end":1223027,"line_start":233,"line_end":233,"column_start":5,"column_end":72}},{"value":"/ to the directory. Otherwise the directory is meaningless, but it","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1223032,"byte_end":1223100,"line_start":234,"line_end":234,"column_start":5,"column_end":73}},{"value":"/ is still used as a key for file entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1223105,"byte_end":1223149,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1223154,"byte_end":1223157,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ If `info` is `None`, then new entries are assigned","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1223162,"byte_end":1223216,"line_start":237,"line_end":237,"column_start":5,"column_end":59}},{"value":"/ default information, and existing entries are unmodified.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1223221,"byte_end":1223282,"line_start":238,"line_end":238,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1223287,"byte_end":1223290,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ If `info` is not `None`, then it is always assigned to the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1223295,"byte_end":1223357,"line_start":240,"line_end":240,"column_start":5,"column_end":67}},{"value":"/ entry, even if the entry already exists.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1223362,"byte_end":1223406,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1223411,"byte_end":1223414,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1223419,"byte_end":1223431,"line_start":243,"line_end":243,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1223436,"byte_end":1223439,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Panics if 'file' is empty or contains a null byte.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1223444,"byte_end":1223498,"line_start":245,"line_end":245,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3422},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1224290,"byte_end":1224298,"line_start":275,"line_end":275,"column_start":12,"column_end":20},"name":"get_file","qualname":"<LineProgram>::get_file","value":"fn get_file(&Self, FileId) -> (&LineString, DirectoryId)","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a file entry.","sig":null,"attributes":[{"value":"/ Get a reference to a file entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1224174,"byte_end":1224210,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1224215,"byte_end":1224218,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1224223,"byte_end":1224235,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1224240,"byte_end":1224243,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Panics if `id` is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1224248,"byte_end":1224278,"line_start":274,"line_end":274,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3424},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1224758,"byte_end":1224771,"line_start":291,"line_end":291,"column_start":12,"column_end":25},"name":"get_file_info","qualname":"<LineProgram>::get_file_info","value":"fn get_file_info(&Self, FileId) -> &FileInfo","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the info for a file entry.","sig":null,"attributes":[{"value":"/ Get a reference to the info for a file entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1224629,"byte_end":1224678,"line_start":286,"line_end":286,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1224683,"byte_end":1224686,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1224691,"byte_end":1224703,"line_start":288,"line_end":288,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1224708,"byte_end":1224711,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Panics if `id` is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1224716,"byte_end":1224746,"line_start":290,"line_end":290,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225116,"byte_end":1225133,"line_start":303,"line_end":303,"column_start":12,"column_end":29},"name":"get_file_info_mut","qualname":"<LineProgram>::get_file_info_mut","value":"fn get_file_info_mut(&mut Self, FileId) -> &mut FileInfo","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the info for a file entry.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the info for a file entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1224979,"byte_end":1225036,"line_start":298,"line_end":298,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225041,"byte_end":1225044,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225049,"byte_end":1225061,"line_start":300,"line_end":300,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225066,"byte_end":1225069,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Panics if `id` is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225074,"byte_end":1225104,"line_start":302,"line_end":302,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3428},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225568,"byte_end":1225582,"line_start":319,"line_end":319,"column_start":12,"column_end":26},"name":"begin_sequence","qualname":"<LineProgram>::begin_sequence","value":"fn begin_sequence(&mut Self, Option<Address>)","parent":null,"children":[],"decl_id":null,"docs":" Begin a new sequence and set its base address.","sig":null,"attributes":[{"value":"/ Begin a new sequence and set its base address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225425,"byte_end":1225475,"line_start":314,"line_end":314,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225480,"byte_end":1225483,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225488,"byte_end":1225500,"line_start":316,"line_end":316,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225505,"byte_end":1225508,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Panics if a sequence has already begun.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225513,"byte_end":1225556,"line_start":318,"line_end":318,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3429},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1226070,"byte_end":1226082,"line_start":334,"line_end":334,"column_start":12,"column_end":24},"name":"end_sequence","qualname":"<LineProgram>::end_sequence","value":"fn end_sequence(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" End the sequence, and reset the row to its default values.","sig":null,"attributes":[{"value":"/ End the sequence, and reset the row to its default values.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225827,"byte_end":1225889,"line_start":327,"line_end":327,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225894,"byte_end":1225897,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Only the `address_offset` and op_index` fields of the current row are used.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225902,"byte_end":1225981,"line_start":329,"line_end":329,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225986,"byte_end":1225989,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1225994,"byte_end":1226006,"line_start":331,"line_end":331,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1226011,"byte_end":1226014,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Panics if a sequence has not begun.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1226019,"byte_end":1226058,"line_start":333,"line_end":333,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3430},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1226682,"byte_end":1226693,"line_start":350,"line_end":350,"column_start":12,"column_end":23},"name":"in_sequence","qualname":"<LineProgram>::in_sequence","value":"fn in_sequence(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if a sequence has begun.\n","sig":null,"attributes":[{"value":"/ Return true if a sequence has begun.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1226616,"byte_end":1226656,"line_start":348,"line_end":348,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1226661,"byte_end":1226670,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3431},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1226829,"byte_end":1226832,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"row","qualname":"<LineProgram>::row","value":"fn row(&mut Self) -> &mut LineRow","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the data for the current row.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the data for the current row.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1226747,"byte_end":1226803,"line_start":354,"line_end":354,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1226808,"byte_end":1226817,"line_start":355,"line_end":355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3432},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1227270,"byte_end":1227282,"line_start":369,"line_end":369,"column_start":12,"column_end":24},"name":"generate_row","qualname":"<LineProgram>::generate_row","value":"fn generate_row(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Generates the line number information instructions for the current row.","sig":null,"attributes":[{"value":"/ Generates the line number information instructions for the current row.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1226895,"byte_end":1226970,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1226975,"byte_end":1226978,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ After the instructions are generated, it sets `discriminator` to 0, and sets","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1226983,"byte_end":1227063,"line_start":362,"line_end":362,"column_start":5,"column_end":85}},{"value":"/ `basic_block`, `prologue_end`, and `epilogue_begin` to false.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1227068,"byte_end":1227133,"line_start":363,"line_end":363,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1227138,"byte_end":1227141,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1227146,"byte_end":1227158,"line_start":365,"line_end":365,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1227163,"byte_end":1227166,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ Panics if a sequence has not begun.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1227171,"byte_end":1227210,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/ Panics if the address_offset decreases.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1227215,"byte_end":1227258,"line_start":368,"line_end":368,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1231952,"byte_end":1231960,"line_start":487,"line_end":487,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LineProgram>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the line number program has no instructions.","sig":null,"attributes":[{"value":"/ Returns true if the line number program has no instructions.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1231800,"byte_end":1231864,"line_start":483,"line_end":483,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1231869,"byte_end":1231872,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ Does not check the file or directory entries.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1231877,"byte_end":1231926,"line_start":485,"line_end":485,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1231931,"byte_end":1231940,"line_start":486,"line_end":486,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1232162,"byte_end":1232167,"line_start":496,"line_end":496,"column_start":12,"column_end":17},"name":"write","qualname":"<LineProgram>::write","value":"fn write<W>(&Self, &mut DebugLine<W>, Encoding, &DebugLineStrOffsets,\n&DebugStrOffsets) -> Result<DebugLineOffset> where W: Writer","parent":null,"children":[],"decl_id":null,"docs":" Write the line number program to the given section.","sig":null,"attributes":[{"value":"/ Write the line number program to the given section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1232026,"byte_end":1232081,"line_start":491,"line_end":491,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1232086,"byte_end":1232089,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1232094,"byte_end":1232106,"line_start":493,"line_end":493,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1232111,"byte_end":1232114,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.is_none()`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1232119,"byte_end":1232150,"line_start":495,"line_end":495,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9778},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238270,"byte_end":1238277,"line_start":665,"line_end":665,"column_start":12,"column_end":19},"name":"LineRow","qualname":"::write::line::LineRow","value":"LineRow { address_offset, op_index, file, line, column, discriminator, is_statement, basic_block, prologue_end, epilogue_begin, isa }","parent":null,"children":[{"krate":0,"index":9779},{"krate":0,"index":9780},{"krate":0,"index":9781},{"krate":0,"index":9782},{"krate":0,"index":9783},{"krate":0,"index":9784},{"krate":0,"index":9785},{"krate":0,"index":9786},{"krate":0,"index":9787},{"krate":0,"index":9788},{"krate":0,"index":9789}],"decl_id":null,"docs":" A row in the line number table that corresponds to a machine instruction.\n","sig":null,"attributes":[{"value":"/ A row in the line number table that corresponds to a machine instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238151,"byte_end":1238228,"line_start":663,"line_end":663,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":9779},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238366,"byte_end":1238380,"line_start":667,"line_end":667,"column_start":9,"column_end":23},"name":"address_offset","qualname":"::write::line::LineRow::address_offset","value":"u64","parent":{"krate":0,"index":9778},"children":[],"decl_id":null,"docs":" The offset of the instruction from the start address of the sequence.\n","sig":null,"attributes":[{"value":"/ The offset of the instruction from the start address of the sequence.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238284,"byte_end":1238357,"line_start":666,"line_end":666,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":9780},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238555,"byte_end":1238563,"line_start":672,"line_end":672,"column_start":9,"column_end":17},"name":"op_index","qualname":"::write::line::LineRow::op_index","value":"u64","parent":{"krate":0,"index":9778},"children":[],"decl_id":null,"docs":" The index of an operation within a VLIW instruction.","sig":null,"attributes":[{"value":"/ The index of an operation within a VLIW instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238391,"byte_end":1238447,"line_start":668,"line_end":668,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238452,"byte_end":1238455,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ The index of the first operation is 0.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238460,"byte_end":1238502,"line_start":670,"line_end":670,"column_start":5,"column_end":47}},{"value":"/ Set to 0 for non-VLIW instructions.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238507,"byte_end":1238546,"line_start":671,"line_end":671,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":9781},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238637,"byte_end":1238641,"line_start":675,"line_end":675,"column_start":9,"column_end":13},"name":"file","qualname":"::write::line::LineRow::file","value":"write::line::id::FileId","parent":{"krate":0,"index":9778},"children":[],"decl_id":null,"docs":" The source file corresponding to the instruction.\n","sig":null,"attributes":[{"value":"/ The source file corresponding to the instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238575,"byte_end":1238628,"line_start":674,"line_end":674,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":9782},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238795,"byte_end":1238799,"line_start":679,"line_end":679,"column_start":9,"column_end":13},"name":"line","qualname":"::write::line::LineRow::line","value":"u64","parent":{"krate":0,"index":9778},"children":[],"decl_id":null,"docs":" The line number within the source file.","sig":null,"attributes":[{"value":"/ The line number within the source file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238655,"byte_end":1238698,"line_start":676,"line_end":676,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238703,"byte_end":1238706,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Lines are numbered beginning at 1. Set to 0 if there is no source line.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238711,"byte_end":1238786,"line_start":678,"line_end":678,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":9783},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238959,"byte_end":1238965,"line_start":683,"line_end":683,"column_start":9,"column_end":15},"name":"column","qualname":"::write::line::LineRow::column","value":"u64","parent":{"krate":0,"index":9778},"children":[],"decl_id":null,"docs":" The column number within the source line.","sig":null,"attributes":[{"value":"/ The column number within the source line.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238810,"byte_end":1238855,"line_start":680,"line_end":680,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238860,"byte_end":1238863,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ Columns are numbered beginning at 1. Set to 0 for the \"left edge\" of the line.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238868,"byte_end":1238950,"line_start":682,"line_end":682,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":9784},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239128,"byte_end":1239141,"line_start":686,"line_end":686,"column_start":9,"column_end":22},"name":"discriminator","qualname":"::write::line::LineRow::discriminator","value":"u64","parent":{"krate":0,"index":9778},"children":[],"decl_id":null,"docs":" An additional discriminator used to distinguish between source locations.\n This value is assigned arbitrarily by the DWARF producer.\n","sig":null,"attributes":[{"value":"/ An additional discriminator used to distinguish between source locations.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1238976,"byte_end":1239053,"line_start":684,"line_end":684,"column_start":5,"column_end":82}},{"value":"/ This value is assigned arbitrarily by the DWARF producer.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239058,"byte_end":1239119,"line_start":685,"line_end":685,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":9785},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239241,"byte_end":1239253,"line_start":689,"line_end":689,"column_start":9,"column_end":21},"name":"is_statement","qualname":"::write::line::LineRow::is_statement","value":"bool","parent":{"krate":0,"index":9778},"children":[],"decl_id":null,"docs":" Set to true if the instruction is a recommended breakpoint for a statement.\n","sig":null,"attributes":[{"value":"/ Set to true if the instruction is a recommended breakpoint for a statement.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239153,"byte_end":1239232,"line_start":688,"line_end":688,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":9786},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239343,"byte_end":1239354,"line_start":691,"line_end":691,"column_start":9,"column_end":20},"name":"basic_block","qualname":"::write::line::LineRow::basic_block","value":"bool","parent":{"krate":0,"index":9778},"children":[],"decl_id":null,"docs":" Set to true if the instruction is the beginning of a basic block.\n","sig":null,"attributes":[{"value":"/ Set to true if the instruction is the beginning of a basic block.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239265,"byte_end":1239334,"line_start":690,"line_end":690,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":9787},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239473,"byte_end":1239485,"line_start":694,"line_end":694,"column_start":9,"column_end":21},"name":"prologue_end","qualname":"::write::line::LineRow::prologue_end","value":"bool","parent":{"krate":0,"index":9778},"children":[],"decl_id":null,"docs":" Set to true if the instruction is a recommended breakpoint at the entry of a\n function.\n","sig":null,"attributes":[{"value":"/ Set to true if the instruction is a recommended breakpoint at the entry of a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239366,"byte_end":1239446,"line_start":692,"line_end":692,"column_start":5,"column_end":85}},{"value":"/ function.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239451,"byte_end":1239464,"line_start":693,"line_end":693,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":9788},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239609,"byte_end":1239623,"line_start":697,"line_end":697,"column_start":9,"column_end":23},"name":"epilogue_begin","qualname":"::write::line::LineRow::epilogue_begin","value":"bool","parent":{"krate":0,"index":9778},"children":[],"decl_id":null,"docs":" Set to true if the instruction is a recommended breakpoint prior to the exit of\n a function.\n","sig":null,"attributes":[{"value":"/ Set to true if the instruction is a recommended breakpoint prior to the exit of","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239497,"byte_end":1239580,"line_start":695,"line_end":695,"column_start":5,"column_end":88}},{"value":"/ a function.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239585,"byte_end":1239600,"line_start":696,"line_end":696,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":9789},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239797,"byte_end":1239800,"line_start":702,"line_end":702,"column_start":9,"column_end":12},"name":"isa","qualname":"::write::line::LineRow::isa","value":"u64","parent":{"krate":0,"index":9778},"children":[],"decl_id":null,"docs":" The instruction set architecture of the instruction.","sig":null,"attributes":[{"value":"/ The instruction set architecture of the instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239636,"byte_end":1239692,"line_start":699,"line_end":699,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239697,"byte_end":1239700,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ Set to 0 for the default ISA. Other values are defined by the architecture ABI.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239705,"byte_end":1239788,"line_start":701,"line_end":701,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9847},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243623,"byte_end":1243629,"line_start":817,"line_end":817,"column_start":5,"column_end":11},"name":"String","qualname":"::write::line::LineString::String","value":"LineString::String(Vec<u8>)","parent":{"krate":0,"index":9846},"children":[],"decl_id":null,"docs":" A slice of bytes representing a string. Must not include null bytes.\n Not guaranteed to be UTF-8 or anything like that.\n","sig":null,"attributes":[{"value":"/ A slice of bytes representing a string. Must not include null bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243488,"byte_end":1243560,"line_start":815,"line_end":815,"column_start":5,"column_end":77}},{"value":"/ Not guaranteed to be UTF-8 or anything like that.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243565,"byte_end":1243618,"line_start":816,"line_end":816,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":9849},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243630,"byte_end":1243637,"line_start":817,"line_end":817,"column_start":12,"column_end":19},"name":"0","qualname":"::write::line::LineString::String::0","value":"alloc::vec::Vec<u8>","parent":{"krate":0,"index":9847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9850},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243706,"byte_end":1243715,"line_start":820,"line_end":820,"column_start":5,"column_end":14},"name":"StringRef","qualname":"::write::line::LineString::StringRef","value":"LineString::StringRef(StringId)","parent":{"krate":0,"index":9846},"children":[],"decl_id":null,"docs":" A reference to a string in the `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ A reference to a string in the `.debug_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243645,"byte_end":1243701,"line_start":819,"line_end":819,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":9852},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243716,"byte_end":1243724,"line_start":820,"line_end":820,"column_start":15,"column_end":23},"name":"0","qualname":"::write::line::LineString::StringRef::0","value":"write::str::StringId","parent":{"krate":0,"index":9850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9853},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243798,"byte_end":1243811,"line_start":823,"line_end":823,"column_start":5,"column_end":18},"name":"LineStringRef","qualname":"::write::line::LineString::LineStringRef","value":"LineString::LineStringRef(LineStringId)","parent":{"krate":0,"index":9846},"children":[],"decl_id":null,"docs":" A reference to a string in the `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ A reference to a string in the `.debug_line_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243732,"byte_end":1243793,"line_start":822,"line_end":822,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":9855},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243812,"byte_end":1243824,"line_start":823,"line_end":823,"column_start":19,"column_end":31},"name":"0","qualname":"::write::line::LineString::LineStringRef::0","value":"write::str::LineStringId","parent":{"krate":0,"index":9853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9846},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243471,"byte_end":1243481,"line_start":814,"line_end":814,"column_start":10,"column_end":20},"name":"LineString","qualname":"::write::line::LineString","value":"enum LineString {\n    String(Vec<u8>),\n    StringRef(StringId),\n    LineStringRef(LineStringId),\n}","parent":null,"children":[{"krate":0,"index":9847},{"krate":0,"index":9850},{"krate":0,"index":9853}],"decl_id":null,"docs":" A string value for use in defining paths in line number programs.\n","sig":null,"attributes":[{"value":"/ A string value for use in defining paths in line number programs.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243347,"byte_end":1243416,"line_start":812,"line_end":812,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3446},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243935,"byte_end":1243938,"line_start":828,"line_end":828,"column_start":12,"column_end":15},"name":"new","qualname":"<LineString>::new","value":"fn new<T>(T, Encoding, &mut LineStringTable) -> Self where T: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Create a `LineString` using the normal form for the given encoding.\n","sig":null,"attributes":[{"value":"/ Create a `LineString` using the normal form for the given encoding.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243852,"byte_end":1243923,"line_start":827,"line_end":827,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":9870},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1246107,"byte_end":1246118,"line_start":897,"line_end":897,"column_start":12,"column_end":23},"name":"DirectoryId","qualname":"::write::line::DirectoryId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for a directory in a `LineProgram`.","sig":null,"attributes":[{"value":"/ An identifier for a directory in a `LineProgram`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1245924,"byte_end":1245977,"line_start":893,"line_end":893,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1245978,"byte_end":1245981,"line_start":894,"line_end":894,"column_start":1,"column_end":4}},{"value":"/ Defaults to the working directory of the compilation unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1245982,"byte_end":1246044,"line_start":895,"line_end":895,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":9888},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1246300,"byte_end":1246306,"line_start":903,"line_end":903,"column_start":16,"column_end":22},"name":"FileId","qualname":"::write::line::id::FileId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for a file in a `LineProgram`.\n","sig":null,"attributes":[{"value":"/ An identifier for a file in a `LineProgram`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1246181,"byte_end":1246229,"line_start":901,"line_end":901,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":9906},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1247361,"byte_end":1247369,"line_start":943,"line_end":943,"column_start":12,"column_end":20},"name":"FileInfo","qualname":"::write::line::FileInfo","value":"FileInfo { timestamp, size, md5 }","parent":null,"children":[{"krate":0,"index":9907},{"krate":0,"index":9908},{"krate":0,"index":9909}],"decl_id":null,"docs":" Extra information for file in a `LineProgram`.\n","sig":null,"attributes":[{"value":"/ Extra information for file in a `LineProgram`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1247245,"byte_end":1247295,"line_start":941,"line_end":941,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":9907},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1247494,"byte_end":1247503,"line_start":946,"line_end":946,"column_start":9,"column_end":18},"name":"timestamp","qualname":"::write::line::FileInfo::timestamp","value":"u64","parent":{"krate":0,"index":9906},"children":[],"decl_id":null,"docs":" The implementation defined timestamp of the last modification of the file,\n or 0 if not available.\n","sig":null,"attributes":[{"value":"/ The implementation defined timestamp of the last modification of the file,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1247376,"byte_end":1247454,"line_start":944,"line_end":944,"column_start":5,"column_end":83}},{"value":"/ or 0 if not available.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1247459,"byte_end":1247485,"line_start":945,"line_end":945,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":9908},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1247581,"byte_end":1247585,"line_start":949,"line_end":949,"column_start":9,"column_end":13},"name":"size","qualname":"::write::line::FileInfo::size","value":"u64","parent":{"krate":0,"index":9906},"children":[],"decl_id":null,"docs":" The size of the file in bytes, or 0 if not available.\n","sig":null,"attributes":[{"value":"/ The size of the file in bytes, or 0 if not available.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1247515,"byte_end":1247572,"line_start":948,"line_end":948,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":9909},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1247737,"byte_end":1247740,"line_start":954,"line_end":954,"column_start":9,"column_end":12},"name":"md5","qualname":"::write::line::FileInfo::md5","value":"[u8; 16]","parent":{"krate":0,"index":9906},"children":[],"decl_id":null,"docs":" A 16-byte MD5 digest of the file contents.","sig":null,"attributes":[{"value":"/ A 16-byte MD5 digest of the file contents.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1247597,"byte_end":1247643,"line_start":951,"line_end":951,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1247648,"byte_end":1247651,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ Only used if version >= 5 and `LineProgram::file_has_md5` is `true`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1247656,"byte_end":1247728,"line_start":953,"line_end":953,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":9943},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1247776,"byte_end":1247785,"line_start":958,"line_end":958,"column_start":5,"column_end":14},"name":"DebugLine","qualname":"::write::line::DebugLine","value":"","parent":null,"children":[],"decl_id":null,"docs":"A writable `.debug_line` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3479},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1248215,"byte_end":1248219,"line_start":973,"line_end":973,"column_start":16,"column_end":20},"name":"from","qualname":"<LineProgram>::from","value":"fn from<R>(read::IncompleteLineProgram<R>, &read::Dwarf<R>,\n&mut write::LineStringTable, &mut write::StringTable,\n&dyn Fn(u64) -> Option<Address>) -> ConvertResult<(LineProgram, Vec<FileId>)>\nwhere R: Reader<Offset = usize>","parent":null,"children":[],"decl_id":null,"docs":" Create a line number program by reading the data from the given program.","sig":null,"attributes":[{"value":"/ Create a line number program by reading the data from the given program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1248037,"byte_end":1248113,"line_start":970,"line_end":970,"column_start":9,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1248122,"byte_end":1248125,"line_start":971,"line_end":971,"column_start":9,"column_end":12}},{"value":"/ Return the program and a mapping from file index to `FileId`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1248134,"byte_end":1248199,"line_start":972,"line_end":972,"column_start":9,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":9969},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1291392,"byte_end":1291400,"line_start":12,"line_end":12,"column_start":5,"column_end":13},"name":"DebugLoc","qualname":"::write::loc::DebugLoc","value":"","parent":null,"children":[],"decl_id":null,"docs":"A writable `.debug_loc` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9995},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1291490,"byte_end":1291503,"line_start":17,"line_end":17,"column_start":5,"column_end":18},"name":"DebugLocLists","qualname":"::write::loc::DebugLocLists","value":"","parent":null,"children":[],"decl_id":null,"docs":"A writable `.debug_loclists` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10009},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1291599,"byte_end":1291618,"line_start":23,"line_end":23,"column_start":5,"column_end":24},"name":"LocationListOffsets","qualname":"::write::loc::LocationListOffsets","value":"LocationListOffsets {  }","parent":null,"children":[{"krate":0,"index":10010},{"krate":0,"index":10011}],"decl_id":null,"docs":"The section offsets of a series of location lists within the `.debug_loc` or `.debug_loclists` sections.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10016},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1291790,"byte_end":1291804,"line_start":28,"line_end":28,"column_start":5,"column_end":19},"name":"LocationListId","qualname":"::write::loc::LocationListId","value":"LocationListId {  }","parent":null,"children":[{"krate":0,"index":10017},{"krate":0,"index":10018}],"decl_id":null,"docs":"An identifier for a location list in a `LocationListTable`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10034},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1292011,"byte_end":1292028,"line_start":34,"line_end":34,"column_start":12,"column_end":29},"name":"LocationListTable","qualname":"::write::loc::LocationListTable","value":"LocationListTable {  }","parent":null,"children":[{"krate":0,"index":10035},{"krate":0,"index":10036}],"decl_id":null,"docs":" A table of location lists that will be stored in a `.debug_loc` or `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ A table of location lists that will be stored in a `.debug_loc` or `.debug_loclists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1291876,"byte_end":1291973,"line_start":32,"line_end":32,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":3541},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1292172,"byte_end":1292175,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"add","qualname":"<LocationListTable>::add","value":"fn add(&mut Self, LocationList) -> LocationListId","parent":null,"children":[],"decl_id":null,"docs":" Add a location list to the table.\n","sig":null,"attributes":[{"value":"/ Add a location list to the table.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1292123,"byte_end":1292160,"line_start":40,"line_end":40,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":10041},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300123,"byte_end":1300135,"line_start":236,"line_end":236,"column_start":12,"column_end":24},"name":"LocationList","qualname":"::write::loc::LocationList","value":"","parent":null,"children":[],"decl_id":null,"docs":" A locations list that will be stored in a `.debug_loc` or `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ A locations list that will be stored in a `.debug_loc` or `.debug_loclists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1299978,"byte_end":1300066,"line_start":234,"line_end":234,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":10043},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300136,"byte_end":1300153,"line_start":236,"line_end":236,"column_start":25,"column_end":42},"name":"0","qualname":"::write::loc::LocationList::0","value":"alloc::vec::Vec<write::loc::Location>","parent":{"krate":0,"index":10041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10059},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300277,"byte_end":1300288,"line_start":242,"line_end":242,"column_start":5,"column_end":16},"name":"BaseAddress","qualname":"::write::loc::Location::BaseAddress","value":"Location::BaseAddress { address }","parent":{"krate":0,"index":10058},"children":[],"decl_id":null,"docs":" DW_LLE_base_address\n","sig":null,"attributes":[{"value":"/ DW_LLE_base_address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300249,"byte_end":1300272,"line_start":241,"line_end":241,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10060},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300325,"byte_end":1300332,"line_start":244,"line_end":244,"column_start":9,"column_end":16},"name":"address","qualname":"::write::loc::Location::BaseAddress::address","value":"write::Address","parent":{"krate":0,"index":10059},"children":[],"decl_id":null,"docs":" Base address.\n","sig":null,"attributes":[{"value":"/ Base address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300299,"byte_end":1300316,"line_start":243,"line_end":243,"column_start":9,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":10061},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300381,"byte_end":1300391,"line_start":247,"line_end":247,"column_start":5,"column_end":15},"name":"OffsetPair","qualname":"::write::loc::Location::OffsetPair","value":"Location::OffsetPair { begin, end, data }","parent":{"krate":0,"index":10058},"children":[],"decl_id":null,"docs":" DW_LLE_offset_pair\n","sig":null,"attributes":[{"value":"/ DW_LLE_offset_pair","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300354,"byte_end":1300376,"line_start":246,"line_end":246,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":10062},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300455,"byte_end":1300460,"line_start":249,"line_end":249,"column_start":9,"column_end":14},"name":"begin","qualname":"::write::loc::Location::OffsetPair::begin","value":"u64","parent":{"krate":0,"index":10061},"children":[],"decl_id":null,"docs":" Start of range relative to base address.\n","sig":null,"attributes":[{"value":"/ Start of range relative to base address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300402,"byte_end":1300446,"line_start":248,"line_end":248,"column_start":9,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":10063},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300526,"byte_end":1300529,"line_start":251,"line_end":251,"column_start":9,"column_end":12},"name":"end","qualname":"::write::loc::Location::OffsetPair::end","value":"u64","parent":{"krate":0,"index":10061},"children":[],"decl_id":null,"docs":" End of range relative to base address.\n","sig":null,"attributes":[{"value":"/ End of range relative to base address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300475,"byte_end":1300517,"line_start":250,"line_end":250,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":10064},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300578,"byte_end":1300582,"line_start":253,"line_end":253,"column_start":9,"column_end":13},"name":"data","qualname":"::write::loc::Location::OffsetPair::data","value":"write::op::Expression","parent":{"krate":0,"index":10061},"children":[],"decl_id":null,"docs":" Location description.\n","sig":null,"attributes":[{"value":"/ Location description.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300544,"byte_end":1300569,"line_start":252,"line_end":252,"column_start":9,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":10065},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300632,"byte_end":1300640,"line_start":256,"line_end":256,"column_start":5,"column_end":13},"name":"StartEnd","qualname":"::write::loc::Location::StartEnd","value":"Location::StartEnd { begin, end, data }","parent":{"krate":0,"index":10058},"children":[],"decl_id":null,"docs":" DW_LLE_start_end\n","sig":null,"attributes":[{"value":"/ DW_LLE_start_end","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300607,"byte_end":1300627,"line_start":255,"line_end":255,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":10066},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300679,"byte_end":1300684,"line_start":258,"line_end":258,"column_start":9,"column_end":14},"name":"begin","qualname":"::write::loc::Location::StartEnd::begin","value":"write::Address","parent":{"krate":0,"index":10065},"children":[],"decl_id":null,"docs":" Start of range.\n","sig":null,"attributes":[{"value":"/ Start of range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300651,"byte_end":1300670,"line_start":257,"line_end":257,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10067},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300729,"byte_end":1300732,"line_start":260,"line_end":260,"column_start":9,"column_end":12},"name":"end","qualname":"::write::loc::Location::StartEnd::end","value":"write::Address","parent":{"krate":0,"index":10065},"children":[],"decl_id":null,"docs":" End of range.\n","sig":null,"attributes":[{"value":"/ End of range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300703,"byte_end":1300720,"line_start":259,"line_end":259,"column_start":9,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":10068},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300785,"byte_end":1300789,"line_start":262,"line_end":262,"column_start":9,"column_end":13},"name":"data","qualname":"::write::loc::Location::StartEnd::data","value":"write::op::Expression","parent":{"krate":0,"index":10065},"children":[],"decl_id":null,"docs":" Location description.\n","sig":null,"attributes":[{"value":"/ Location description.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300751,"byte_end":1300776,"line_start":261,"line_end":261,"column_start":9,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":10069},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300842,"byte_end":1300853,"line_start":265,"line_end":265,"column_start":5,"column_end":16},"name":"StartLength","qualname":"::write::loc::Location::StartLength","value":"Location::StartLength { begin, length, data }","parent":{"krate":0,"index":10058},"children":[],"decl_id":null,"docs":" DW_LLE_start_length\n","sig":null,"attributes":[{"value":"/ DW_LLE_start_length","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300814,"byte_end":1300837,"line_start":264,"line_end":264,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10070},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300892,"byte_end":1300897,"line_start":267,"line_end":267,"column_start":9,"column_end":14},"name":"begin","qualname":"::write::loc::Location::StartLength::begin","value":"write::Address","parent":{"krate":0,"index":10069},"children":[],"decl_id":null,"docs":" Start of range.\n","sig":null,"attributes":[{"value":"/ Start of range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300864,"byte_end":1300883,"line_start":266,"line_end":266,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10071},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300945,"byte_end":1300951,"line_start":269,"line_end":269,"column_start":9,"column_end":15},"name":"length","qualname":"::write::loc::Location::StartLength::length","value":"u64","parent":{"krate":0,"index":10069},"children":[],"decl_id":null,"docs":" Length of range.\n","sig":null,"attributes":[{"value":"/ Length of range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300916,"byte_end":1300936,"line_start":268,"line_end":268,"column_start":9,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":10072},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1301000,"byte_end":1301004,"line_start":271,"line_end":271,"column_start":9,"column_end":13},"name":"data","qualname":"::write::loc::Location::StartLength::data","value":"write::op::Expression","parent":{"krate":0,"index":10069},"children":[],"decl_id":null,"docs":" Location description.\n","sig":null,"attributes":[{"value":"/ Location description.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300966,"byte_end":1300991,"line_start":270,"line_end":270,"column_start":9,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":10073},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1301061,"byte_end":1301076,"line_start":274,"line_end":274,"column_start":5,"column_end":20},"name":"DefaultLocation","qualname":"::write::loc::Location::DefaultLocation","value":"Location::DefaultLocation { data }","parent":{"krate":0,"index":10058},"children":[],"decl_id":null,"docs":" DW_LLE_default_location\n","sig":null,"attributes":[{"value":"/ DW_LLE_default_location","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1301029,"byte_end":1301056,"line_start":273,"line_end":273,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":10074},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1301121,"byte_end":1301125,"line_start":276,"line_end":276,"column_start":9,"column_end":13},"name":"data","qualname":"::write::loc::Location::DefaultLocation::data","value":"write::op::Expression","parent":{"krate":0,"index":10073},"children":[],"decl_id":null,"docs":" Location description.\n","sig":null,"attributes":[{"value":"/ Location description.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1301087,"byte_end":1301112,"line_start":275,"line_end":275,"column_start":9,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":10058},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300234,"byte_end":1300242,"line_start":240,"line_end":240,"column_start":10,"column_end":18},"name":"Location","qualname":"::write::loc::Location","value":"enum Location {\n    BaseAddress {\n            address: Address,\n        },\n    OffsetPair {\n            begin: u64,\n            end: u64,\n            data: Expression,\n        },\n    StartEnd {\n            begin: Address,\n            end: Address,\n            data: Expression,\n        },\n    StartLength {\n            begin: Address,\n            length: u64,\n            data: Expression,\n        },\n    DefaultLocation {\n            data: Expression,\n        },\n}","parent":null,"children":[{"krate":0,"index":10059},{"krate":0,"index":10061},{"krate":0,"index":10065},{"krate":0,"index":10069},{"krate":0,"index":10073}],"decl_id":null,"docs":" A single location.\n","sig":null,"attributes":[{"value":"/ A single location.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1300157,"byte_end":1300179,"line_start":238,"line_end":238,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":10089},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313463,"byte_end":1313473,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"Expression","qualname":"::write::op::Expression","value":"Expression {  }","parent":null,"children":[{"krate":0,"index":10090}],"decl_id":null,"docs":" The bytecode for a DWARF expression or location description.\n","sig":null,"attributes":[{"value":"/ The bytecode for a DWARF expression or location description.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313333,"byte_end":1313397,"line_start":11,"line_end":11,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313590,"byte_end":1313593,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Expression>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty expression.\n","sig":null,"attributes":[{"value":"/ Create an empty expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313533,"byte_end":1313564,"line_start":18,"line_end":18,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313569,"byte_end":1313578,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313806,"byte_end":1313809,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"raw","qualname":"<Expression>::raw","value":"fn raw(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an expression from raw bytecode.","sig":null,"attributes":[{"value":"/ Create an expression from raw bytecode.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313641,"byte_end":1313684,"line_start":24,"line_end":24,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313689,"byte_end":1313692,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This does not support operations that require references, such as `DW_OP_addr`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313697,"byte_end":1313780,"line_start":26,"line_end":26,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313785,"byte_end":1313794,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1314076,"byte_end":1314078,"line_start":37,"line_end":37,"column_start":12,"column_end":14},"name":"op","qualname":"<Expression>::op","value":"fn op(&mut Self, DwOp)","parent":null,"children":[],"decl_id":null,"docs":" Add an operation to the expression.","sig":null,"attributes":[{"value":"/ Add an operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313937,"byte_end":1313976,"line_start":34,"line_end":34,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313981,"byte_end":1313984,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This should only be used for operations that have no explicit operands.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313989,"byte_end":1314064,"line_start":36,"line_end":36,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1314237,"byte_end":1314244,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"op_addr","qualname":"<Expression>::op_addr","value":"fn op_addr(&mut Self, Address)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_addr` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_addr` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1314174,"byte_end":1314225,"line_start":41,"line_end":41,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1314482,"byte_end":1314491,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"op_constu","qualname":"<Expression>::op_constu","value":"fn op_constu(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_constu` operation to the expression.","sig":null,"attributes":[{"value":"/ Add a `DW_OP_constu` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1314346,"byte_end":1314399,"line_start":46,"line_end":46,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1314404,"byte_end":1314407,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This may be emitted as a smaller equivalent operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1314412,"byte_end":1314470,"line_start":48,"line_end":48,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1314730,"byte_end":1314739,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"op_consts","qualname":"<Expression>::op_consts","value":"fn op_consts(&mut Self, i64)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_consts` operation to the expression.","sig":null,"attributes":[{"value":"/ Add a `DW_OP_consts` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1314594,"byte_end":1314647,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1314652,"byte_end":1314655,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This may be emitted as a smaller equivalent operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1314660,"byte_end":1314718,"line_start":55,"line_end":55,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1314935,"byte_end":1314948,"line_start":61,"line_end":61,"column_start":12,"column_end":25},"name":"op_const_type","qualname":"<Expression>::op_const_type","value":"fn op_const_type(&mut Self, UnitEntryId, Box<[u8]>)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_const_type` or `DW_OP_GNU_const_type` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_const_type` or `DW_OP_GNU_const_type` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1314840,"byte_end":1314923,"line_start":60,"line_end":60,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1315142,"byte_end":1315150,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"op_fbreg","qualname":"<Expression>::op_fbreg","value":"fn op_fbreg(&mut Self, i64)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_fbreg` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_fbreg` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1315078,"byte_end":1315130,"line_start":65,"line_end":65,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3637},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1315385,"byte_end":1315392,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"op_breg","qualname":"<Expression>::op_breg","value":"fn op_breg(&mut Self, Register, i64)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_bregx` operation to the expression.","sig":null,"attributes":[{"value":"/ Add a `DW_OP_bregx` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1315250,"byte_end":1315302,"line_start":70,"line_end":70,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1315307,"byte_end":1315310,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This may be emitted as a smaller equivalent operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1315315,"byte_end":1315373,"line_start":72,"line_end":72,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3638},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1315706,"byte_end":1315720,"line_start":81,"line_end":81,"column_start":12,"column_end":26},"name":"op_regval_type","qualname":"<Expression>::op_regval_type","value":"fn op_regval_type(&mut Self, Register, UnitEntryId)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_regval_type` or `DW_OP_GNU_regval_type` operation to the expression.","sig":null,"attributes":[{"value":"/ Add a `DW_OP_regval_type` or `DW_OP_GNU_regval_type` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1315538,"byte_end":1315623,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1315628,"byte_end":1315631,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This may be emitted as a smaller equivalent operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1315636,"byte_end":1315694,"line_start":80,"line_end":80,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1316011,"byte_end":1316018,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"op_pick","qualname":"<Expression>::op_pick","value":"fn op_pick(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_pick` operation to the expression.","sig":null,"attributes":[{"value":"/ Add a `DW_OP_pick` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1315868,"byte_end":1315919,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1315924,"byte_end":1315927,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This may be emitted as a `DW_OP_dup` or `DW_OP_over` operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1315932,"byte_end":1315999,"line_start":88,"line_end":88,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3640},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1316172,"byte_end":1316180,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"op_deref","qualname":"<Expression>::op_deref","value":"fn op_deref(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_deref` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_deref` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1316108,"byte_end":1316160,"line_start":93,"line_end":93,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1316335,"byte_end":1316344,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"op_xderef","qualname":"<Expression>::op_xderef","value":"fn op_xderef(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_xderef` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_xderef` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1316270,"byte_end":1316323,"line_start":98,"line_end":98,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1316502,"byte_end":1316515,"line_start":104,"line_end":104,"column_start":12,"column_end":25},"name":"op_deref_size","qualname":"<Expression>::op_deref_size","value":"fn op_deref_size(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_deref_size` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_deref_size` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1316433,"byte_end":1316490,"line_start":103,"line_end":103,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1316708,"byte_end":1316722,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"op_xderef_size","qualname":"<Expression>::op_xderef_size","value":"fn op_xderef_size(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_xderef_size` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_xderef_size` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1316638,"byte_end":1316696,"line_start":109,"line_end":109,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1316939,"byte_end":1316952,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"op_deref_type","qualname":"<Expression>::op_deref_type","value":"fn op_deref_type(&mut Self, u8, UnitEntryId)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_deref_type` or `DW_OP_GNU_deref_type` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_deref_type` or `DW_OP_GNU_deref_type` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1316844,"byte_end":1316927,"line_start":115,"line_end":115,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1317202,"byte_end":1317216,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"op_xderef_type","qualname":"<Expression>::op_xderef_type","value":"fn op_xderef_type(&mut Self, u8, UnitEntryId)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_xderef_type` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_xderef_type` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1317132,"byte_end":1317190,"line_start":124,"line_end":124,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1317465,"byte_end":1317479,"line_start":134,"line_end":134,"column_start":12,"column_end":26},"name":"op_plus_uconst","qualname":"<Expression>::op_plus_uconst","value":"fn op_plus_uconst(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_plus_uconst` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_plus_uconst` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1317395,"byte_end":1317453,"line_start":133,"line_end":133,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1317784,"byte_end":1317791,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"op_skip","qualname":"<Expression>::op_skip","value":"fn op_skip(&mut Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_skip` operation to the expression.","sig":null,"attributes":[{"value":"/ Add a `DW_OP_skip` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1317578,"byte_end":1317629,"line_start":138,"line_end":138,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1317634,"byte_end":1317637,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Returns the index of the operation. The caller must call `set_target` with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1317642,"byte_end":1317720,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/ this index to set the target of the branch.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1317725,"byte_end":1317772,"line_start":141,"line_end":141,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1318134,"byte_end":1318140,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"op_bra","qualname":"<Expression>::op_bra","value":"fn op_bra(&mut Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_bra` operation to the expression.","sig":null,"attributes":[{"value":"/ Add a `DW_OP_bra` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1317929,"byte_end":1317979,"line_start":148,"line_end":148,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1317984,"byte_end":1317987,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Returns the index of the operation. The caller must call `set_target` with","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1317992,"byte_end":1318070,"line_start":150,"line_end":150,"column_start":5,"column_end":83}},{"value":"/ this index to set the target of the branch.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1318075,"byte_end":1318122,"line_start":151,"line_end":151,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1318423,"byte_end":1318433,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"next_index","qualname":"<Expression>::next_index","value":"fn next_index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index that will be assigned to the next operation.","sig":null,"attributes":[{"value":"/ Return the index that will be assigned to the next operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1318280,"byte_end":1318345,"line_start":158,"line_end":158,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1318350,"byte_end":1318353,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This can be passed to `set_target`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1318358,"byte_end":1318397,"line_start":160,"line_end":160,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1318402,"byte_end":1318411,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1318568,"byte_end":1318578,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"set_target","qualname":"<Expression>::set_target","value":"fn set_target(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set the target of a `DW_OP_skip` or `DW_OP_bra` operation .\n","sig":null,"attributes":[{"value":"/ Set the target of a `DW_OP_skip` or `DW_OP_bra` operation .","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1318493,"byte_end":1318556,"line_start":166,"line_end":166,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1319034,"byte_end":1319041,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"op_call","qualname":"<Expression>::op_call","value":"fn op_call(&mut Self, UnitEntryId)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_call4` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_call4` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1318970,"byte_end":1319022,"line_start":178,"line_end":178,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1319207,"byte_end":1319218,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"op_call_ref","qualname":"<Expression>::op_call_ref","value":"fn op_call_ref(&mut Self, Reference)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_call_ref` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_call_ref` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1319140,"byte_end":1319195,"line_start":183,"line_end":183,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3653},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1319491,"byte_end":1319501,"line_start":191,"line_end":191,"column_start":12,"column_end":22},"name":"op_convert","qualname":"<Expression>::op_convert","value":"fn op_convert(&mut Self, Option<UnitEntryId>)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_convert` or `DW_OP_GNU_convert` operation to the expression.","sig":null,"attributes":[{"value":"/ Add a `DW_OP_convert` or `DW_OP_GNU_convert` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1319318,"byte_end":1319395,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1319400,"byte_end":1319403,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ `base` is the DIE of the base type, or `None` for the generic type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1319408,"byte_end":1319479,"line_start":190,"line_end":190,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1319790,"byte_end":1319804,"line_start":198,"line_end":198,"column_start":12,"column_end":26},"name":"op_reinterpret","qualname":"<Expression>::op_reinterpret","value":"fn op_reinterpret(&mut Self, Option<UnitEntryId>)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_reinterpret` or `DW_OP_GNU_reinterpret` operation to the expression.","sig":null,"attributes":[{"value":"/ Add a `DW_OP_reinterpret` or `DW_OP_GNU_reinterpret` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1319609,"byte_end":1319694,"line_start":195,"line_end":195,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1319699,"byte_end":1319702,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ `base` is the DIE of the base type, or `None` for the generic type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1319707,"byte_end":1319778,"line_start":197,"line_end":197,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1320013,"byte_end":1320027,"line_start":203,"line_end":203,"column_start":12,"column_end":26},"name":"op_entry_value","qualname":"<Expression>::op_entry_value","value":"fn op_entry_value(&mut Self, Expression)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_entry_value` or `DW_OP_GNU_entry_value` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_entry_value` or `DW_OP_GNU_entry_value` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1319916,"byte_end":1320001,"line_start":202,"line_end":202,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1320275,"byte_end":1320281,"line_start":210,"line_end":210,"column_start":12,"column_end":18},"name":"op_reg","qualname":"<Expression>::op_reg","value":"fn op_reg(&mut Self, Register)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_regx` operation to the expression.","sig":null,"attributes":[{"value":"/ Add a `DW_OP_regx` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1320141,"byte_end":1320192,"line_start":207,"line_end":207,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1320197,"byte_end":1320200,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This may be emitted as a smaller equivalent operation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1320205,"byte_end":1320263,"line_start":209,"line_end":209,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1320460,"byte_end":1320477,"line_start":215,"line_end":215,"column_start":12,"column_end":29},"name":"op_implicit_value","qualname":"<Expression>::op_implicit_value","value":"fn op_implicit_value(&mut Self, Box<[u8]>)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_implicit_value` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_implicit_value` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1320387,"byte_end":1320448,"line_start":214,"line_end":214,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1320688,"byte_end":1320707,"line_start":220,"line_end":220,"column_start":12,"column_end":31},"name":"op_implicit_pointer","qualname":"<Expression>::op_implicit_pointer","value":"fn op_implicit_pointer(&mut Self, Reference, i64)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_implicit_pointer` or `DW_OP_GNU_implicit_pointer` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_implicit_pointer` or `DW_OP_GNU_implicit_pointer` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1320581,"byte_end":1320676,"line_start":219,"line_end":219,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3659},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1320926,"byte_end":1320934,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"op_piece","qualname":"<Expression>::op_piece","value":"fn op_piece(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_piece` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_piece` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1320862,"byte_end":1320914,"line_start":225,"line_end":225,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3660},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1321113,"byte_end":1321125,"line_start":231,"line_end":231,"column_start":12,"column_end":24},"name":"op_bit_piece","qualname":"<Expression>::op_bit_piece","value":"fn op_bit_piece(&mut Self, u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_bit_piece` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_bit_piece` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1321045,"byte_end":1321101,"line_start":230,"line_end":230,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1321375,"byte_end":1321395,"line_start":239,"line_end":239,"column_start":12,"column_end":32},"name":"op_gnu_parameter_ref","qualname":"<Expression>::op_gnu_parameter_ref","value":"fn op_gnu_parameter_ref(&mut Self, UnitEntryId)","parent":null,"children":[],"decl_id":null,"docs":" Add a `DW_OP_GNU_parameter_ref` operation to the expression.\n","sig":null,"attributes":[{"value":"/ Add a `DW_OP_GNU_parameter_ref` operation to the expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1321299,"byte_end":1321363,"line_start":238,"line_end":238,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1343207,"byte_end":1343211,"line_start":800,"line_end":800,"column_start":16,"column_end":20},"name":"from","qualname":"<Expression>::from","value":"fn from<R>(read::Expression<R>, Encoding, Option<&read::Dwarf<R>>,\nOption<&read::Unit<R>>,\nOption<&HashMap<UnitSectionOffset, (UnitId, UnitEntryId)>>,\n&dyn Fn(u64) -> Option<Address>) -> ConvertResult<Expression> where\nR: Reader<Offset = usize>","parent":null,"children":[],"decl_id":null,"docs":" Create an expression from the input expression.\n","sig":null,"attributes":[{"value":"/ Create an expression from the input expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1343140,"byte_end":1343191,"line_start":799,"line_end":799,"column_start":9,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10221},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1381896,"byte_end":1381907,"line_start":9,"line_end":9,"column_start":5,"column_end":16},"name":"DebugRanges","qualname":"::write::range::DebugRanges","value":"","parent":null,"children":[],"decl_id":null,"docs":"A writable `.debug_ranges` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10247},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1381997,"byte_end":1382010,"line_start":14,"line_end":14,"column_start":5,"column_end":18},"name":"DebugRngLists","qualname":"::write::range::DebugRngLists","value":"","parent":null,"children":[],"decl_id":null,"docs":"A writable `.debug_rnglists` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10261},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1382103,"byte_end":1382119,"line_start":20,"line_end":20,"column_start":5,"column_end":21},"name":"RangeListOffsets","qualname":"::write::range::RangeListOffsets","value":"RangeListOffsets {  }","parent":null,"children":[{"krate":0,"index":10262},{"krate":0,"index":10263}],"decl_id":null,"docs":"The section offsets of a series of range lists within the `.debug_ranges` or `.debug_rnglists` sections.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10268},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1382285,"byte_end":1382296,"line_start":25,"line_end":25,"column_start":5,"column_end":16},"name":"RangeListId","qualname":"::write::range::RangeListId","value":"RangeListId {  }","parent":null,"children":[{"krate":0,"index":10269},{"krate":0,"index":10270}],"decl_id":null,"docs":"An identifier for a range list in a `RangeListTable`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10286},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1382497,"byte_end":1382511,"line_start":31,"line_end":31,"column_start":12,"column_end":26},"name":"RangeListTable","qualname":"::write::range::RangeListTable","value":"RangeListTable {  }","parent":null,"children":[{"krate":0,"index":10287},{"krate":0,"index":10288}],"decl_id":null,"docs":" A table of range lists that will be stored in a `.debug_ranges` or `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ A table of range lists that will be stored in a `.debug_ranges` or `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1382362,"byte_end":1382459,"line_start":29,"line_end":29,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1382643,"byte_end":1382646,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"add","qualname":"<RangeListTable>::add","value":"fn add(&mut Self, RangeList) -> RangeListId","parent":null,"children":[],"decl_id":null,"docs":" Add a range list to the table.\n","sig":null,"attributes":[{"value":"/ Add a range list to the table.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1382597,"byte_end":1382631,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":10293},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388500,"byte_end":1388509,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"RangeList","qualname":"::write::range::RangeList","value":"","parent":null,"children":[],"decl_id":null,"docs":" A range list that will be stored in a `.debug_ranges` or `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ A range list that will be stored in a `.debug_ranges` or `.debug_rnglists` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388356,"byte_end":1388443,"line_start":178,"line_end":178,"column_start":1,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":10295},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388510,"byte_end":1388524,"line_start":180,"line_end":180,"column_start":22,"column_end":36},"name":"0","qualname":"::write::range::RangeList::0","value":"alloc::vec::Vec<write::range::Range>","parent":{"krate":0,"index":10293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10311},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388642,"byte_end":1388653,"line_start":186,"line_end":186,"column_start":5,"column_end":16},"name":"BaseAddress","qualname":"::write::range::Range::BaseAddress","value":"Range::BaseAddress { address }","parent":{"krate":0,"index":10310},"children":[],"decl_id":null,"docs":" DW_RLE_base_address\n","sig":null,"attributes":[{"value":"/ DW_RLE_base_address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388614,"byte_end":1388637,"line_start":185,"line_end":185,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10312},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388690,"byte_end":1388697,"line_start":188,"line_end":188,"column_start":9,"column_end":16},"name":"address","qualname":"::write::range::Range::BaseAddress::address","value":"write::Address","parent":{"krate":0,"index":10311},"children":[],"decl_id":null,"docs":" Base address.\n","sig":null,"attributes":[{"value":"/ Base address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388664,"byte_end":1388681,"line_start":187,"line_end":187,"column_start":9,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":10313},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388746,"byte_end":1388756,"line_start":191,"line_end":191,"column_start":5,"column_end":15},"name":"OffsetPair","qualname":"::write::range::Range::OffsetPair","value":"Range::OffsetPair { begin, end }","parent":{"krate":0,"index":10310},"children":[],"decl_id":null,"docs":" DW_RLE_offset_pair\n","sig":null,"attributes":[{"value":"/ DW_RLE_offset_pair","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388719,"byte_end":1388741,"line_start":190,"line_end":190,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":10314},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388820,"byte_end":1388825,"line_start":193,"line_end":193,"column_start":9,"column_end":14},"name":"begin","qualname":"::write::range::Range::OffsetPair::begin","value":"u64","parent":{"krate":0,"index":10313},"children":[],"decl_id":null,"docs":" Start of range relative to base address.\n","sig":null,"attributes":[{"value":"/ Start of range relative to base address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388767,"byte_end":1388811,"line_start":192,"line_end":192,"column_start":9,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":10315},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388891,"byte_end":1388894,"line_start":195,"line_end":195,"column_start":9,"column_end":12},"name":"end","qualname":"::write::range::Range::OffsetPair::end","value":"u64","parent":{"krate":0,"index":10313},"children":[],"decl_id":null,"docs":" End of range relative to base address.\n","sig":null,"attributes":[{"value":"/ End of range relative to base address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388840,"byte_end":1388882,"line_start":194,"line_end":194,"column_start":9,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":10316},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388937,"byte_end":1388945,"line_start":198,"line_end":198,"column_start":5,"column_end":13},"name":"StartEnd","qualname":"::write::range::Range::StartEnd","value":"Range::StartEnd { begin, end }","parent":{"krate":0,"index":10310},"children":[],"decl_id":null,"docs":" DW_RLE_start_end\n","sig":null,"attributes":[{"value":"/ DW_RLE_start_end","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388912,"byte_end":1388932,"line_start":197,"line_end":197,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":10317},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388984,"byte_end":1388989,"line_start":200,"line_end":200,"column_start":9,"column_end":14},"name":"begin","qualname":"::write::range::Range::StartEnd::begin","value":"write::Address","parent":{"krate":0,"index":10316},"children":[],"decl_id":null,"docs":" Start of range.\n","sig":null,"attributes":[{"value":"/ Start of range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388956,"byte_end":1388975,"line_start":199,"line_end":199,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10318},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1389034,"byte_end":1389037,"line_start":202,"line_end":202,"column_start":9,"column_end":12},"name":"end","qualname":"::write::range::Range::StartEnd::end","value":"write::Address","parent":{"krate":0,"index":10316},"children":[],"decl_id":null,"docs":" End of range.\n","sig":null,"attributes":[{"value":"/ End of range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1389008,"byte_end":1389025,"line_start":201,"line_end":201,"column_start":9,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":10319},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1389087,"byte_end":1389098,"line_start":205,"line_end":205,"column_start":5,"column_end":16},"name":"StartLength","qualname":"::write::range::Range::StartLength","value":"Range::StartLength { begin, length }","parent":{"krate":0,"index":10310},"children":[],"decl_id":null,"docs":" DW_RLE_start_length\n","sig":null,"attributes":[{"value":"/ DW_RLE_start_length","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1389059,"byte_end":1389082,"line_start":204,"line_end":204,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10320},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1389137,"byte_end":1389142,"line_start":207,"line_end":207,"column_start":9,"column_end":14},"name":"begin","qualname":"::write::range::Range::StartLength::begin","value":"write::Address","parent":{"krate":0,"index":10319},"children":[],"decl_id":null,"docs":" Start of range.\n","sig":null,"attributes":[{"value":"/ Start of range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1389109,"byte_end":1389128,"line_start":206,"line_end":206,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10321},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1389190,"byte_end":1389196,"line_start":209,"line_end":209,"column_start":9,"column_end":15},"name":"length","qualname":"::write::range::Range::StartLength::length","value":"u64","parent":{"krate":0,"index":10319},"children":[],"decl_id":null,"docs":" Length of range.\n","sig":null,"attributes":[{"value":"/ Length of range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1389161,"byte_end":1389181,"line_start":208,"line_end":208,"column_start":9,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":10310},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388602,"byte_end":1388607,"line_start":184,"line_end":184,"column_start":10,"column_end":15},"name":"Range","qualname":"::write::range::Range","value":"enum Range {\n    BaseAddress {\n            address: Address,\n        },\n    OffsetPair {\n            begin: u64,\n            end: u64,\n        },\n    StartEnd {\n            begin: Address,\n            end: Address,\n        },\n    StartLength {\n            begin: Address,\n            length: u64,\n        },\n}","parent":null,"children":[{"krate":0,"index":10311},{"krate":0,"index":10313},{"krate":0,"index":10316},{"krate":0,"index":10319}],"decl_id":null,"docs":" A single range.\n","sig":null,"attributes":[{"value":"/ A single range.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1388528,"byte_end":1388547,"line_start":182,"line_end":182,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10338},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\str.rs","byte_start":1401475,"byte_end":1401483,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"StringId","qualname":"::write::str::StringId","value":"StringId {  }","parent":null,"children":[{"krate":0,"index":10339},{"krate":0,"index":10340}],"decl_id":null,"docs":"An identifier for a string in a `StringTable`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10363},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\str.rs","byte_start":1401563,"byte_end":1401574,"line_start":91,"line_end":91,"column_start":5,"column_end":16},"name":"StringTable","qualname":"::write::str::StringTable","value":"StringTable {  }","parent":null,"children":[{"krate":0,"index":10364},{"krate":0,"index":10365}],"decl_id":null,"docs":"A table of strings that will be stored in a `.debug_str` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10386},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\str.rs","byte_start":1401717,"byte_end":1401725,"line_start":98,"line_end":98,"column_start":17,"column_end":25},"name":"DebugStr","qualname":"::write::str::DebugStr","value":"","parent":null,"children":[],"decl_id":null,"docs":"A writable `.debug_str` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10400},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\str.rs","byte_start":1401802,"byte_end":1401817,"line_start":101,"line_end":101,"column_start":5,"column_end":20},"name":"DebugStrOffsets","qualname":"::write::str::DebugStrOffsets","value":"DebugStrOffsets {  }","parent":null,"children":[{"krate":0,"index":10401},{"krate":0,"index":10402}],"decl_id":null,"docs":"The section offsets of all strings within a `.debug_str` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10407},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\str.rs","byte_start":1401939,"byte_end":1401951,"line_start":106,"line_end":106,"column_start":5,"column_end":17},"name":"LineStringId","qualname":"::write::str::LineStringId","value":"LineStringId {  }","parent":null,"children":[{"krate":0,"index":10408},{"krate":0,"index":10409}],"decl_id":null,"docs":"An identifier for a string in a `LineStringTable`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10432},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\str.rs","byte_start":1402040,"byte_end":1402055,"line_start":111,"line_end":111,"column_start":5,"column_end":20},"name":"LineStringTable","qualname":"::write::str::LineStringTable","value":"LineStringTable {  }","parent":null,"children":[{"krate":0,"index":10433},{"krate":0,"index":10434}],"decl_id":null,"docs":"A table of strings that will be stored in a `.debug_line_str` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10455},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\str.rs","byte_start":1402220,"byte_end":1402232,"line_start":119,"line_end":119,"column_start":5,"column_end":17},"name":"DebugLineStr","qualname":"::write::str::DebugLineStr","value":"","parent":null,"children":[],"decl_id":null,"docs":"A writable `.debug_line_str` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10469},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\str.rs","byte_start":1402327,"byte_end":1402346,"line_start":125,"line_end":125,"column_start":5,"column_end":24},"name":"DebugLineStrOffsets","qualname":"::write::str::DebugLineStrOffsets","value":"DebugLineStrOffsets {  }","parent":null,"children":[{"krate":0,"index":10470},{"krate":0,"index":10471}],"decl_id":null,"docs":"The section offsets of all strings within a `.debug_line_str` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10476},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1404802,"byte_end":1404808,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"UnitId","qualname":"::write::unit::UnitId","value":"UnitId {  }","parent":null,"children":[{"krate":0,"index":10477},{"krate":0,"index":10478}],"decl_id":null,"docs":"An identifier for a unit in a `UnitTable`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10496},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1404869,"byte_end":1404880,"line_start":20,"line_end":20,"column_start":12,"column_end":23},"name":"UnitEntryId","qualname":"::write::unit::UnitEntryId","value":"UnitEntryId {  }","parent":null,"children":[{"krate":0,"index":10497},{"krate":0,"index":10498}],"decl_id":null,"docs":"An identifier for an entry in a `Unit`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10514},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405035,"byte_end":1405044,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"UnitTable","qualname":"::write::unit::UnitTable","value":"UnitTable {  }","parent":null,"children":[{"krate":0,"index":10515},{"krate":0,"index":10516}],"decl_id":null,"docs":" A table of units that will be stored in the `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ A table of units that will be stored in the `.debug_info` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1404927,"byte_end":1404997,"line_start":22,"line_end":22,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3957},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405289,"byte_end":1405292,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"add","qualname":"<UnitTable>::add","value":"fn add(&mut Self, Unit) -> UnitId","parent":null,"children":[],"decl_id":null,"docs":" Create a new unit and add it to the table.","sig":null,"attributes":[{"value":"/ Create a new unit and add it to the table.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405114,"byte_end":1405160,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405165,"byte_end":1405168,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ `address_size` must be in bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405173,"byte_end":1405209,"line_start":32,"line_end":32,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405214,"byte_end":1405217,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Returns the `UnitId` of the new unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405222,"byte_end":1405263,"line_start":34,"line_end":34,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405268,"byte_end":1405277,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3958},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405500,"byte_end":1405505,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"count","qualname":"<UnitTable>::count","value":"fn count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of units.\n","sig":null,"attributes":[{"value":"/ Return the number of units.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405443,"byte_end":1405474,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405479,"byte_end":1405488,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3959},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405690,"byte_end":1405692,"line_start":54,"line_end":54,"column_start":12,"column_end":14},"name":"id","qualname":"<UnitTable>::id","value":"fn id(&Self, usize) -> UnitId","parent":null,"children":[],"decl_id":null,"docs":" Return the id of a unit.","sig":null,"attributes":[{"value":"/ Return the id of a unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405560,"byte_end":1405588,"line_start":48,"line_end":48,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405593,"byte_end":1405596,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405601,"byte_end":1405613,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405618,"byte_end":1405621,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Panics if `index >= self.count()`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405626,"byte_end":1405664,"line_start":52,"line_end":52,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405669,"byte_end":1405678,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3960},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405941,"byte_end":1405944,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"get","qualname":"<UnitTable>::get","value":"fn get(&Self, UnitId) -> &Unit","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a unit.","sig":null,"attributes":[{"value":"/ Get a reference to a unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405817,"byte_end":1405847,"line_start":59,"line_end":59,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405852,"byte_end":1405855,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405860,"byte_end":1405872,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405877,"byte_end":1405880,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Panics if `id` is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405885,"byte_end":1405915,"line_start":63,"line_end":63,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405920,"byte_end":1405929,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3961},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1406200,"byte_end":1406207,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<UnitTable>::get_mut","value":"fn get_mut(&mut Self, UnitId) -> &mut Unit","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a unit.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1406068,"byte_end":1406106,"line_start":70,"line_end":70,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1406111,"byte_end":1406114,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1406119,"byte_end":1406131,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1406136,"byte_end":1406139,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Panics if `id` is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1406144,"byte_end":1406174,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1406179,"byte_end":1406188,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3962},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1406505,"byte_end":1406510,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"write","qualname":"<UnitTable>::write","value":"fn write<W>(&mut Self, &mut Sections<W>, &DebugLineStrOffsets,\n&DebugStrOffsets) -> Result<DebugInfoOffsets> where W: Writer","parent":null,"children":[],"decl_id":null,"docs":" Write the units to the given sections.","sig":null,"attributes":[{"value":"/ Write the units to the given sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1406343,"byte_end":1406385,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1406390,"byte_end":1406393,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `strings` must contain the `.debug_str` offsets of the corresponding","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1406398,"byte_end":1406470,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ `StringTable`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1406475,"byte_end":1406493,"line_start":84,"line_end":84,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":10521},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1408223,"byte_end":1408227,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"Unit","qualname":"::write::unit::Unit","value":"Unit { line_program, ranges, locations }","parent":null,"children":[{"krate":0,"index":10522},{"krate":0,"index":10523},{"krate":0,"index":10524},{"krate":0,"index":10525},{"krate":0,"index":10526},{"krate":0,"index":10527},{"krate":0,"index":10528}],"decl_id":null,"docs":" A unit's debugging information.\n","sig":null,"attributes":[{"value":"/ A unit's debugging information.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1408159,"byte_end":1408194,"line_start":144,"line_end":144,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":10524},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1408377,"byte_end":1408389,"line_start":151,"line_end":151,"column_start":9,"column_end":21},"name":"line_program","qualname":"::write::unit::Unit::line_program","value":"write::line::LineProgram","parent":{"krate":0,"index":10521},"children":[],"decl_id":null,"docs":" The line number program for this unit.\n","sig":null,"attributes":[{"value":"/ The line number program for this unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1408326,"byte_end":1408368,"line_start":150,"line_end":150,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":10525},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1408462,"byte_end":1408468,"line_start":153,"line_end":153,"column_start":9,"column_end":15},"name":"ranges","qualname":"::write::unit::Unit::ranges","value":"write::range::RangeListTable","parent":{"krate":0,"index":10521},"children":[],"decl_id":null,"docs":" A table of range lists used by this unit.\n","sig":null,"attributes":[{"value":"/ A table of range lists used by this unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1408408,"byte_end":1408453,"line_start":152,"line_end":152,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":10526},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1408547,"byte_end":1408556,"line_start":155,"line_end":155,"column_start":9,"column_end":18},"name":"locations","qualname":"::write::unit::Unit::locations","value":"write::loc::LocationListTable","parent":{"krate":0,"index":10521},"children":[],"decl_id":null,"docs":" A table of location lists used by this unit.\n","sig":null,"attributes":[{"value":"/ A table of location lists used by this unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1408490,"byte_end":1408538,"line_start":154,"line_end":154,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3967},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1409117,"byte_end":1409120,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<Unit>::new","value":"fn new(Encoding, LineProgram) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Unit`.\n","sig":null,"attributes":[{"value":"/ Create a new `Unit`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1409081,"byte_end":1409105,"line_start":170,"line_end":170,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3968},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1409792,"byte_end":1409800,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Unit>::encoding","value":"fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this unit.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1409717,"byte_end":1409766,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1409771,"byte_end":1409780,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3969},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1409924,"byte_end":1409931,"line_start":201,"line_end":201,"column_start":12,"column_end":19},"name":"version","qualname":"<Unit>::version","value":"fn version(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Return the DWARF version for this unit.\n","sig":null,"attributes":[{"value":"/ Return the DWARF version for this unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1409855,"byte_end":1409898,"line_start":199,"line_end":199,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1409903,"byte_end":1409912,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3970},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410066,"byte_end":1410078,"line_start":207,"line_end":207,"column_start":12,"column_end":24},"name":"address_size","qualname":"<Unit>::address_size","value":"fn address_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the address size in bytes for this unit.\n","sig":null,"attributes":[{"value":"/ Return the address size in bytes for this unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1409989,"byte_end":1410040,"line_start":205,"line_end":205,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410045,"byte_end":1410054,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3971},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410208,"byte_end":1410214,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"format","qualname":"<Unit>::format","value":"fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Return the DWARF format for this unit.\n","sig":null,"attributes":[{"value":"/ Return the DWARF format for this unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410140,"byte_end":1410182,"line_start":211,"line_end":211,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410187,"byte_end":1410196,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3972},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410444,"byte_end":1410449,"line_start":221,"line_end":221,"column_start":12,"column_end":17},"name":"count","qualname":"<Unit>::count","value":"fn count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of `DebuggingInformationEntry`s created for this unit.","sig":null,"attributes":[{"value":"/ Return the number of `DebuggingInformationEntry`s created for this unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410274,"byte_end":1410350,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410355,"byte_end":1410358,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ This includes entries that no longer have a parent.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410363,"byte_end":1410418,"line_start":219,"line_end":219,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410423,"byte_end":1410432,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3973},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410568,"byte_end":1410572,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"root","qualname":"<Unit>::root","value":"fn root(&Self) -> UnitEntryId","parent":null,"children":[],"decl_id":null,"docs":" Return the id of the root entry.\n","sig":null,"attributes":[{"value":"/ Return the id of the root entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410506,"byte_end":1410542,"line_start":225,"line_end":225,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410547,"byte_end":1410556,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410856,"byte_end":1410859,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"add","qualname":"<Unit>::add","value":"fn add(&mut Self, UnitEntryId, constants::DwTag) -> UnitEntryId","parent":null,"children":[],"decl_id":null,"docs":" Add a new `DebuggingInformationEntry` to this unit and return its id.","sig":null,"attributes":[{"value":"/ Add a new `DebuggingInformationEntry` to this unit and return its id.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410626,"byte_end":1410699,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410704,"byte_end":1410707,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The `parent` must be within the same unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410712,"byte_end":1410758,"line_start":233,"line_end":233,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410763,"byte_end":1410766,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410771,"byte_end":1410783,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410788,"byte_end":1410791,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Panics if `parent` is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410796,"byte_end":1410830,"line_start":237,"line_end":237,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1410835,"byte_end":1410844,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411216,"byte_end":1411219,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"get","qualname":"<Unit>::get","value":"fn get(&Self, UnitEntryId) -> &DebuggingInformationEntry","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to an entry.","sig":null,"attributes":[{"value":"/ Get a reference to an entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411090,"byte_end":1411122,"line_start":244,"line_end":244,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411127,"byte_end":1411130,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411135,"byte_end":1411147,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411152,"byte_end":1411155,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Panics if `id` is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411160,"byte_end":1411190,"line_start":248,"line_end":248,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411195,"byte_end":1411204,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3976},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411505,"byte_end":1411512,"line_start":261,"line_end":261,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Unit>::get_mut","value":"fn get_mut(&mut Self, UnitEntryId) -> &mut DebuggingInformationEntry","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an entry.","sig":null,"attributes":[{"value":"/ Get a mutable reference to an entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411371,"byte_end":1411411,"line_start":255,"line_end":255,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411416,"byte_end":1411419,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411424,"byte_end":1411436,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411441,"byte_end":1411444,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Panics if `id` is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411449,"byte_end":1411479,"line_start":259,"line_end":259,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1411484,"byte_end":1411493,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":10531},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1416736,"byte_end":1416761,"line_start":417,"line_end":417,"column_start":12,"column_end":37},"name":"DebuggingInformationEntry","qualname":"::write::unit::DebuggingInformationEntry","value":"DebuggingInformationEntry {  }","parent":null,"children":[{"krate":0,"index":10532},{"krate":0,"index":10533},{"krate":0,"index":10534},{"krate":0,"index":10535},{"krate":0,"index":10536},{"krate":0,"index":10537}],"decl_id":null,"docs":" A Debugging Information Entry (DIE).","sig":null,"attributes":[{"value":"/ A Debugging Information Entry (DIE).","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1416439,"byte_end":1416479,"line_start":410,"line_end":410,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1416480,"byte_end":1416483,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ DIEs have a set of attributes and optionally have children DIEs as well.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1416484,"byte_end":1416560,"line_start":412,"line_end":412,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1416561,"byte_end":1416564,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ DIEs form a tree without any cycles. This is enforced by specifying the","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1416565,"byte_end":1416640,"line_start":414,"line_end":414,"column_start":1,"column_end":76}},{"value":"/ parent when creating a DIE, and disallowing changes of parent.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1416641,"byte_end":1416707,"line_start":415,"line_end":415,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3983},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1417881,"byte_end":1417883,"line_start":459,"line_end":459,"column_start":12,"column_end":14},"name":"id","qualname":"<DebuggingInformationEntry>::id","value":"fn id(&Self) -> UnitEntryId","parent":null,"children":[],"decl_id":null,"docs":" Return the id of this entry.\n","sig":null,"attributes":[{"value":"/ Return the id of this entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1417823,"byte_end":1417855,"line_start":457,"line_end":457,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1417860,"byte_end":1417869,"line_start":458,"line_end":458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3984},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1417997,"byte_end":1418003,"line_start":465,"line_end":465,"column_start":12,"column_end":18},"name":"parent","qualname":"<DebuggingInformationEntry>::parent","value":"fn parent(&Self) -> Option<UnitEntryId>","parent":null,"children":[],"decl_id":null,"docs":" Return the parent of this entry.\n","sig":null,"attributes":[{"value":"/ Return the parent of this entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1417935,"byte_end":1417971,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1417976,"byte_end":1417985,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3985},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418126,"byte_end":1418129,"line_start":471,"line_end":471,"column_start":12,"column_end":15},"name":"tag","qualname":"<DebuggingInformationEntry>::tag","value":"fn tag(&Self) -> constants::DwTag","parent":null,"children":[],"decl_id":null,"docs":" Return the tag of this entry.\n","sig":null,"attributes":[{"value":"/ Return the tag of this entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418067,"byte_end":1418100,"line_start":469,"line_end":469,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418105,"byte_end":1418114,"line_start":470,"line_end":470,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3986},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418278,"byte_end":1418285,"line_start":477,"line_end":477,"column_start":12,"column_end":19},"name":"sibling","qualname":"<DebuggingInformationEntry>::sibling","value":"fn sibling(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if a `DW_AT_sibling` attribute will be emitted.\n","sig":null,"attributes":[{"value":"/ Return `true` if a `DW_AT_sibling` attribute will be emitted.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418187,"byte_end":1418252,"line_start":475,"line_end":475,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418257,"byte_end":1418266,"line_start":476,"line_end":476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3987},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418497,"byte_end":1418508,"line_start":485,"line_end":485,"column_start":12,"column_end":23},"name":"set_sibling","qualname":"<DebuggingInformationEntry>::set_sibling","value":"fn set_sibling(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set whether a `DW_AT_sibling` attribute will be emitted.","sig":null,"attributes":[{"value":"/ Set whether a `DW_AT_sibling` attribute will be emitted.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418335,"byte_end":1418395,"line_start":481,"line_end":481,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418400,"byte_end":1418403,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ The attribute will only be emitted if the DIE has children.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418408,"byte_end":1418471,"line_start":483,"line_end":483,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418476,"byte_end":1418485,"line_start":484,"line_end":484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3988},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418652,"byte_end":1418657,"line_start":491,"line_end":491,"column_start":12,"column_end":17},"name":"attrs","qualname":"<DebuggingInformationEntry>::attrs","value":"fn attrs(&Self) -> slice::Iter<, Attribute>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the attributes of this entry.\n","sig":null,"attributes":[{"value":"/ Iterate over the attributes of this entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418580,"byte_end":1418626,"line_start":489,"line_end":489,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418631,"byte_end":1418640,"line_start":490,"line_end":490,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3989},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418819,"byte_end":1418828,"line_start":497,"line_end":497,"column_start":12,"column_end":21},"name":"attrs_mut","qualname":"<DebuggingInformationEntry>::attrs_mut","value":"fn attrs_mut(&mut Self) -> slice::IterMut<, Attribute>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the attributes of this entry for modification.\n","sig":null,"attributes":[{"value":"/ Iterate over the attributes of this entry for modification.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418730,"byte_end":1418793,"line_start":495,"line_end":495,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418798,"byte_end":1418807,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3990},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418945,"byte_end":1418948,"line_start":502,"line_end":502,"column_start":12,"column_end":15},"name":"get","qualname":"<DebuggingInformationEntry>::get","value":"fn get(&Self, constants::DwAt) -> Option<&AttributeValue>","parent":null,"children":[],"decl_id":null,"docs":" Get an attribute.\n","sig":null,"attributes":[{"value":"/ Get an attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1418912,"byte_end":1418933,"line_start":501,"line_end":501,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3993},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1419189,"byte_end":1419196,"line_start":510,"line_end":510,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DebuggingInformationEntry>::get_mut","value":"fn get_mut(&mut Self, constants::DwAt) -> Option<&mut AttributeValue>","parent":null,"children":[],"decl_id":null,"docs":" Get an attribute for modification.\n","sig":null,"attributes":[{"value":"/ Get an attribute for modification.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1419139,"byte_end":1419177,"line_start":509,"line_end":509,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3996},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1419609,"byte_end":1419612,"line_start":524,"line_end":524,"column_start":12,"column_end":15},"name":"set","qualname":"<DebuggingInformationEntry>::set","value":"fn set(&mut Self, constants::DwAt, AttributeValue)","parent":null,"children":[],"decl_id":null,"docs":" Set an attribute.","sig":null,"attributes":[{"value":"/ Set an attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1419403,"byte_end":1419424,"line_start":517,"line_end":517,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1419429,"byte_end":1419432,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ Replaces any existing attribute with the same name.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1419437,"byte_end":1419492,"line_start":519,"line_end":519,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1419497,"byte_end":1419500,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1419505,"byte_end":1419517,"line_start":521,"line_end":521,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1419522,"byte_end":1419525,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ Panics if `name` is `DW_AT_sibling`. Use `set_sibling` instead.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1419530,"byte_end":1419597,"line_start":523,"line_end":523,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3998},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1420036,"byte_end":1420042,"line_start":536,"line_end":536,"column_start":12,"column_end":18},"name":"delete","qualname":"<DebuggingInformationEntry>::delete","value":"fn delete(&mut Self, constants::DwAt)","parent":null,"children":[],"decl_id":null,"docs":" Delete an attribute.","sig":null,"attributes":[{"value":"/ Delete an attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1419932,"byte_end":1419956,"line_start":533,"line_end":533,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1419961,"byte_end":1419964,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ Replaces any existing attribute with the same name.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1419969,"byte_end":1420024,"line_start":535,"line_end":535,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4000},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1420279,"byte_end":1420287,"line_start":544,"line_end":544,"column_start":12,"column_end":20},"name":"children","qualname":"<DebuggingInformationEntry>::children","value":"fn children(&Self) -> slice::Iter<, UnitEntryId>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the children of this entry.","sig":null,"attributes":[{"value":"/ Iterate over the children of this entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1420137,"byte_end":1420181,"line_start":540,"line_end":540,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1420186,"byte_end":1420189,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Note: use `Unit::add` to add a new child to this entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1420194,"byte_end":1420253,"line_start":542,"line_end":542,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1420258,"byte_end":1420267,"line_start":543,"line_end":543,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":10540},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424443,"byte_end":1424452,"line_start":676,"line_end":676,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::write::unit::Attribute","value":"Attribute {  }","parent":null,"children":[{"krate":0,"index":10541},{"krate":0,"index":10542}],"decl_id":null,"docs":" An attribute in a `DebuggingInformationEntry`, consisting of a name and\n associated value.\n","sig":null,"attributes":[{"value":"/ An attribute in a `DebuggingInformationEntry`, consisting of a name and","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424295,"byte_end":1424370,"line_start":673,"line_end":673,"column_start":1,"column_end":76}},{"value":"/ associated value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424371,"byte_end":1424392,"line_start":674,"line_end":674,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4007},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424594,"byte_end":1424598,"line_start":684,"line_end":684,"column_start":12,"column_end":16},"name":"name","qualname":"<Attribute>::name","value":"fn name(&Self) -> constants::DwAt","parent":null,"children":[],"decl_id":null,"docs":" Get the name of this attribute.\n","sig":null,"attributes":[{"value":"/ Get the name of this attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424533,"byte_end":1424568,"line_start":682,"line_end":682,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424573,"byte_end":1424582,"line_start":683,"line_end":683,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4008},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424718,"byte_end":1424721,"line_start":690,"line_end":690,"column_start":12,"column_end":15},"name":"get","qualname":"<Attribute>::get","value":"fn get(&Self) -> &AttributeValue","parent":null,"children":[],"decl_id":null,"docs":" Get the value of this attribute.\n","sig":null,"attributes":[{"value":"/ Get the value of this attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424656,"byte_end":1424692,"line_start":688,"line_end":688,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424697,"byte_end":1424706,"line_start":689,"line_end":689,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4009},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424843,"byte_end":1424846,"line_start":696,"line_end":696,"column_start":12,"column_end":15},"name":"set","qualname":"<Attribute>::set","value":"fn set(&mut Self, AttributeValue)","parent":null,"children":[],"decl_id":null,"docs":" Set the value of this attribute.\n","sig":null,"attributes":[{"value":"/ Set the value of this attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424781,"byte_end":1424817,"line_start":694,"line_end":694,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424822,"byte_end":1424831,"line_start":695,"line_end":695,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10555},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425397,"byte_end":1425404,"line_start":713,"line_end":713,"column_start":5,"column_end":12},"name":"Address","qualname":"::write::unit::AttributeValue::Address","value":"AttributeValue::Address(Address)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" \"Refers to some location in the address space of the described program.\"\n","sig":null,"attributes":[{"value":"/ \"Refers to some location in the address space of the described program.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425316,"byte_end":1425392,"line_start":712,"line_end":712,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":10557},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425405,"byte_end":1425412,"line_start":713,"line_end":713,"column_start":13,"column_end":20},"name":"0","qualname":"::write::unit::AttributeValue::Address::0","value":"write::Address","parent":{"krate":0,"index":10555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10558},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425469,"byte_end":1425474,"line_start":716,"line_end":716,"column_start":5,"column_end":10},"name":"Block","qualname":"::write::unit::AttributeValue::Block","value":"AttributeValue::Block(Vec<u8>)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A slice of an arbitrary number of bytes.\n","sig":null,"attributes":[{"value":"/ A slice of an arbitrary number of bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425420,"byte_end":1425464,"line_start":715,"line_end":715,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":10560},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425475,"byte_end":1425482,"line_start":716,"line_end":716,"column_start":11,"column_end":18},"name":"0","qualname":"::write::unit::AttributeValue::Block::0","value":"alloc::vec::Vec<u8>","parent":{"krate":0,"index":10558},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10561},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425758,"byte_end":1425763,"line_start":723,"line_end":723,"column_start":5,"column_end":10},"name":"Data1","qualname":"::write::unit::AttributeValue::Data1","value":"AttributeValue::Data1(u8)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A one byte constant data value. How to interpret the byte depends on context.","sig":null,"attributes":[{"value":"/ A one byte constant data value. How to interpret the byte depends on context.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425490,"byte_end":1425571,"line_start":718,"line_end":718,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425576,"byte_end":1425579,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425584,"byte_end":1425654,"line_start":720,"line_end":720,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425659,"byte_end":1425729,"line_start":721,"line_end":721,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425734,"byte_end":1425753,"line_start":722,"line_end":722,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":10563},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425764,"byte_end":1425766,"line_start":723,"line_end":723,"column_start":11,"column_end":13},"name":"0","qualname":"::write::unit::AttributeValue::Data1::0","value":"u8","parent":{"krate":0,"index":10561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10564},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426125,"byte_end":1426130,"line_start":732,"line_end":732,"column_start":5,"column_end":10},"name":"Data2","qualname":"::write::unit::AttributeValue::Data2","value":"AttributeValue::Data2(u16)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A two byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[{"value":"/ A two byte constant data value. How to interpret the bytes depends on context.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425774,"byte_end":1425856,"line_start":725,"line_end":725,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425861,"byte_end":1425864,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ This value will be converted to the target endian before writing.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425869,"byte_end":1425938,"line_start":727,"line_end":727,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425943,"byte_end":1425946,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425951,"byte_end":1426021,"line_start":729,"line_end":729,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426026,"byte_end":1426096,"line_start":730,"line_end":730,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426101,"byte_end":1426120,"line_start":731,"line_end":731,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":10566},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426131,"byte_end":1426134,"line_start":732,"line_end":732,"column_start":11,"column_end":14},"name":"0","qualname":"::write::unit::AttributeValue::Data2::0","value":"u16","parent":{"krate":0,"index":10564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10567},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426494,"byte_end":1426499,"line_start":741,"line_end":741,"column_start":5,"column_end":10},"name":"Data4","qualname":"::write::unit::AttributeValue::Data4","value":"AttributeValue::Data4(u32)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A four byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[{"value":"/ A four byte constant data value. How to interpret the bytes depends on context.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426142,"byte_end":1426225,"line_start":734,"line_end":734,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426230,"byte_end":1426233,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ This value will be converted to the target endian before writing.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426238,"byte_end":1426307,"line_start":736,"line_end":736,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426312,"byte_end":1426315,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426320,"byte_end":1426390,"line_start":738,"line_end":738,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426395,"byte_end":1426465,"line_start":739,"line_end":739,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426470,"byte_end":1426489,"line_start":740,"line_end":740,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":10569},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426500,"byte_end":1426503,"line_start":741,"line_end":741,"column_start":11,"column_end":14},"name":"0","qualname":"::write::unit::AttributeValue::Data4::0","value":"u32","parent":{"krate":0,"index":10567},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10570},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426865,"byte_end":1426870,"line_start":750,"line_end":750,"column_start":5,"column_end":10},"name":"Data8","qualname":"::write::unit::AttributeValue::Data8","value":"AttributeValue::Data8(u64)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" An eight byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[{"value":"/ An eight byte constant data value. How to interpret the bytes depends on context.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426511,"byte_end":1426596,"line_start":743,"line_end":743,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426601,"byte_end":1426604,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ This value will be converted to the target endian before writing.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426609,"byte_end":1426678,"line_start":745,"line_end":745,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426683,"byte_end":1426686,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426691,"byte_end":1426761,"line_start":747,"line_end":747,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426766,"byte_end":1426836,"line_start":748,"line_end":748,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426841,"byte_end":1426860,"line_start":749,"line_end":749,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":10572},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426871,"byte_end":1426874,"line_start":750,"line_end":750,"column_start":11,"column_end":14},"name":"0","qualname":"::write::unit::AttributeValue::Data8::0","value":"u64","parent":{"krate":0,"index":10570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10573},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426917,"byte_end":1426922,"line_start":753,"line_end":753,"column_start":5,"column_end":10},"name":"Sdata","qualname":"::write::unit::AttributeValue::Sdata","value":"AttributeValue::Sdata(i64)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A signed integer constant.\n","sig":null,"attributes":[{"value":"/ A signed integer constant.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426882,"byte_end":1426912,"line_start":752,"line_end":752,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":10575},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426923,"byte_end":1426926,"line_start":753,"line_end":753,"column_start":11,"column_end":14},"name":"0","qualname":"::write::unit::AttributeValue::Sdata::0","value":"i64","parent":{"krate":0,"index":10573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10576},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426972,"byte_end":1426977,"line_start":756,"line_end":756,"column_start":5,"column_end":10},"name":"Udata","qualname":"::write::unit::AttributeValue::Udata","value":"AttributeValue::Udata(u64)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" An unsigned integer constant.\n","sig":null,"attributes":[{"value":"/ An unsigned integer constant.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426934,"byte_end":1426967,"line_start":755,"line_end":755,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":10578},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426978,"byte_end":1426981,"line_start":756,"line_end":756,"column_start":11,"column_end":14},"name":"0","qualname":"::write::unit::AttributeValue::Udata::0","value":"u64","parent":{"krate":0,"index":10576},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10579},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427117,"byte_end":1427124,"line_start":760,"line_end":760,"column_start":5,"column_end":12},"name":"Exprloc","qualname":"::write::unit::AttributeValue::Exprloc","value":"AttributeValue::Exprloc(Expression)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" \"The information bytes contain a DWARF expression (see Section 2.5) or\n location description (see Section 2.6).\"\n","sig":null,"attributes":[{"value":"/ \"The information bytes contain a DWARF expression (see Section 2.5) or","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1426989,"byte_end":1427063,"line_start":758,"line_end":758,"column_start":5,"column_end":79}},{"value":"/ location description (see Section 2.6).\"","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427068,"byte_end":1427112,"line_start":759,"line_end":759,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":10581},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427125,"byte_end":1427135,"line_start":760,"line_end":760,"column_start":13,"column_end":23},"name":"0","qualname":"::write::unit::AttributeValue::Exprloc::0","value":"write::op::Expression","parent":{"krate":0,"index":10579},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10582},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427214,"byte_end":1427218,"line_start":763,"line_end":763,"column_start":5,"column_end":9},"name":"Flag","qualname":"::write::unit::AttributeValue::Flag","value":"AttributeValue::Flag(bool)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A boolean that indicates presence or absence of the attribute.\n","sig":null,"attributes":[{"value":"/ A boolean that indicates presence or absence of the attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427143,"byte_end":1427209,"line_start":762,"line_end":762,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":10584},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427219,"byte_end":1427223,"line_start":763,"line_end":763,"column_start":10,"column_end":14},"name":"0","qualname":"::write::unit::AttributeValue::Flag::0","value":"bool","parent":{"krate":0,"index":10582},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10585},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427276,"byte_end":1427287,"line_start":766,"line_end":766,"column_start":5,"column_end":16},"name":"FlagPresent","qualname":"::write::unit::AttributeValue::FlagPresent","value":"AttributeValue::FlagPresent","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" An attribute that is always present.\n","sig":null,"attributes":[{"value":"/ An attribute that is always present.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427231,"byte_end":1427271,"line_start":765,"line_end":765,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10587},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427361,"byte_end":1427368,"line_start":769,"line_end":769,"column_start":5,"column_end":12},"name":"UnitRef","qualname":"::write::unit::AttributeValue::UnitRef","value":"AttributeValue::UnitRef(UnitEntryId)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A reference to a `DebuggingInformationEntry` in this unit.\n","sig":null,"attributes":[{"value":"/ A reference to a `DebuggingInformationEntry` in this unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427294,"byte_end":1427356,"line_start":768,"line_end":768,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":10589},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427369,"byte_end":1427380,"line_start":769,"line_end":769,"column_start":13,"column_end":24},"name":"0","qualname":"::write::unit::AttributeValue::UnitRef::0","value":"write::unit::UnitEntryId","parent":{"krate":0,"index":10587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10590},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427474,"byte_end":1427486,"line_start":772,"line_end":772,"column_start":5,"column_end":17},"name":"DebugInfoRef","qualname":"::write::unit::AttributeValue::DebugInfoRef","value":"AttributeValue::DebugInfoRef(Reference)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A reference to a `DebuggingInformationEntry` in a potentially different unit.\n","sig":null,"attributes":[{"value":"/ A reference to a `DebuggingInformationEntry` in a potentially different unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427388,"byte_end":1427469,"line_start":771,"line_end":771,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":10592},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427487,"byte_end":1427496,"line_start":772,"line_end":772,"column_start":18,"column_end":27},"name":"0","qualname":"::write::unit::AttributeValue::DebugInfoRef::0","value":"write::Reference","parent":{"krate":0,"index":10590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10593},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427792,"byte_end":1427807,"line_start":779,"line_end":779,"column_start":5,"column_end":20},"name":"DebugInfoRefSup","qualname":"::write::unit::AttributeValue::DebugInfoRefSup","value":"AttributeValue::DebugInfoRefSup(DebugInfoOffset)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" An offset into the `.debug_info` section of the supplementary object file.","sig":null,"attributes":[{"value":"/ An offset into the `.debug_info` section of the supplementary object file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427504,"byte_end":1427582,"line_start":774,"line_end":774,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427587,"byte_end":1427590,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ The API does not currently assist with generating this offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427595,"byte_end":1427661,"line_start":776,"line_end":776,"column_start":5,"column_end":71}},{"value":"/ This variant will be removed from the API once support for writing","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427666,"byte_end":1427736,"line_start":777,"line_end":777,"column_start":5,"column_end":75}},{"value":"/ supplementary object files is implemented.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427741,"byte_end":1427787,"line_start":778,"line_end":778,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":10595},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427808,"byte_end":1427823,"line_start":779,"line_end":779,"column_start":21,"column_end":36},"name":"0","qualname":"::write::unit::AttributeValue::DebugInfoRefSup::0","value":"common::DebugInfoOffset","parent":{"krate":0,"index":10593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10596},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427877,"byte_end":1427891,"line_start":782,"line_end":782,"column_start":5,"column_end":19},"name":"LineProgramRef","qualname":"::write::unit::AttributeValue::LineProgramRef","value":"AttributeValue::LineProgramRef","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A reference to a line number program.\n","sig":null,"attributes":[{"value":"/ A reference to a line number program.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427831,"byte_end":1427872,"line_start":781,"line_end":781,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10598},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427938,"byte_end":1427953,"line_start":785,"line_end":785,"column_start":5,"column_end":20},"name":"LocationListRef","qualname":"::write::unit::AttributeValue::LocationListRef","value":"AttributeValue::LocationListRef(LocationListId)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A reference to a location list.\n","sig":null,"attributes":[{"value":"/ A reference to a location list.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427898,"byte_end":1427933,"line_start":784,"line_end":784,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":10600},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427954,"byte_end":1427968,"line_start":785,"line_end":785,"column_start":21,"column_end":35},"name":"0","qualname":"::write::unit::AttributeValue::LocationListRef::0","value":"write::loc::LocationListId","parent":{"krate":0,"index":10598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10601},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428233,"byte_end":1428248,"line_start":792,"line_end":792,"column_start":5,"column_end":20},"name":"DebugMacinfoRef","qualname":"::write::unit::AttributeValue::DebugMacinfoRef","value":"AttributeValue::DebugMacinfoRef(DebugMacinfoOffset)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" An offset into the `.debug_macinfo` section.","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macinfo` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1427976,"byte_end":1428024,"line_start":787,"line_end":787,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428029,"byte_end":1428032,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ The API does not currently assist with generating this offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428037,"byte_end":1428103,"line_start":789,"line_end":789,"column_start":5,"column_end":71}},{"value":"/ This variant will be removed from the API once support for writing","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428108,"byte_end":1428178,"line_start":790,"line_end":790,"column_start":5,"column_end":75}},{"value":"/ `.debug_macinfo` sections is implemented.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428183,"byte_end":1428228,"line_start":791,"line_end":791,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":10603},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428249,"byte_end":1428267,"line_start":792,"line_end":792,"column_start":21,"column_end":39},"name":"0","qualname":"::write::unit::AttributeValue::DebugMacinfoRef::0","value":"common::DebugMacinfoOffset","parent":{"krate":0,"index":10601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10604},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428528,"byte_end":1428541,"line_start":799,"line_end":799,"column_start":5,"column_end":18},"name":"DebugMacroRef","qualname":"::write::unit::AttributeValue::DebugMacroRef","value":"AttributeValue::DebugMacroRef(DebugMacroOffset)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" An offset into the `.debug_macro` section.","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macro` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428275,"byte_end":1428321,"line_start":794,"line_end":794,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428326,"byte_end":1428329,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ The API does not currently assist with generating this offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428334,"byte_end":1428400,"line_start":796,"line_end":796,"column_start":5,"column_end":71}},{"value":"/ This variant will be removed from the API once support for writing","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428405,"byte_end":1428475,"line_start":797,"line_end":797,"column_start":5,"column_end":75}},{"value":"/ `.debug_macro` sections is implemented.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428480,"byte_end":1428523,"line_start":798,"line_end":798,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":10606},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428542,"byte_end":1428558,"line_start":799,"line_end":799,"column_start":19,"column_end":35},"name":"0","qualname":"::write::unit::AttributeValue::DebugMacroRef::0","value":"common::DebugMacroOffset","parent":{"krate":0,"index":10604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10607},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428603,"byte_end":1428615,"line_start":802,"line_end":802,"column_start":5,"column_end":17},"name":"RangeListRef","qualname":"::write::unit::AttributeValue::RangeListRef","value":"AttributeValue::RangeListRef(RangeListId)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A reference to a range list.\n","sig":null,"attributes":[{"value":"/ A reference to a range list.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428566,"byte_end":1428598,"line_start":801,"line_end":801,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":10609},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428616,"byte_end":1428627,"line_start":802,"line_end":802,"column_start":18,"column_end":29},"name":"0","qualname":"::write::unit::AttributeValue::RangeListRef::0","value":"write::range::RangeListId","parent":{"krate":0,"index":10607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10610},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428866,"byte_end":1428879,"line_start":809,"line_end":809,"column_start":5,"column_end":18},"name":"DebugTypesRef","qualname":"::write::unit::AttributeValue::DebugTypesRef","value":"AttributeValue::DebugTypesRef(DebugTypeSignature)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A type signature.","sig":null,"attributes":[{"value":"/ A type signature.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428635,"byte_end":1428656,"line_start":804,"line_end":804,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428661,"byte_end":1428664,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ The API does not currently assist with generating this signature.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428669,"byte_end":1428738,"line_start":806,"line_end":806,"column_start":5,"column_end":74}},{"value":"/ This variant will be removed from the API once support for writing","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428743,"byte_end":1428813,"line_start":807,"line_end":807,"column_start":5,"column_end":75}},{"value":"/ `.debug_types` sections is implemented.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428818,"byte_end":1428861,"line_start":808,"line_end":808,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":10612},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428880,"byte_end":1428898,"line_start":809,"line_end":809,"column_start":19,"column_end":37},"name":"0","qualname":"::write::unit::AttributeValue::DebugTypesRef::0","value":"common::DebugTypeSignature","parent":{"krate":0,"index":10610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10613},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428967,"byte_end":1428976,"line_start":812,"line_end":812,"column_start":5,"column_end":14},"name":"StringRef","qualname":"::write::unit::AttributeValue::StringRef","value":"AttributeValue::StringRef(StringId)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A reference to a string in the `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ A reference to a string in the `.debug_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428906,"byte_end":1428962,"line_start":811,"line_end":811,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":10615},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428977,"byte_end":1428985,"line_start":812,"line_end":812,"column_start":15,"column_end":23},"name":"0","qualname":"::write::unit::AttributeValue::StringRef::0","value":"write::str::StringId","parent":{"krate":0,"index":10613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10616},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429280,"byte_end":1429294,"line_start":819,"line_end":819,"column_start":5,"column_end":19},"name":"DebugStrRefSup","qualname":"::write::unit::AttributeValue::DebugStrRefSup","value":"AttributeValue::DebugStrRefSup(DebugStrOffset)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" An offset into the `.debug_str` section of the supplementary object file.","sig":null,"attributes":[{"value":"/ An offset into the `.debug_str` section of the supplementary object file.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1428993,"byte_end":1429070,"line_start":814,"line_end":814,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429075,"byte_end":1429078,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ The API does not currently assist with generating this offset.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429083,"byte_end":1429149,"line_start":816,"line_end":816,"column_start":5,"column_end":71}},{"value":"/ This variant will be removed from the API once support for writing","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429154,"byte_end":1429224,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ supplementary object files is implemented.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429229,"byte_end":1429275,"line_start":818,"line_end":818,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":10618},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429295,"byte_end":1429309,"line_start":819,"line_end":819,"column_start":20,"column_end":34},"name":"0","qualname":"::write::unit::AttributeValue::DebugStrRefSup::0","value":"common::DebugStrOffset","parent":{"krate":0,"index":10616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10619},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429383,"byte_end":1429396,"line_start":822,"line_end":822,"column_start":5,"column_end":18},"name":"LineStringRef","qualname":"::write::unit::AttributeValue::LineStringRef","value":"AttributeValue::LineStringRef(LineStringId)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A reference to a string in the `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ A reference to a string in the `.debug_line_str` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429317,"byte_end":1429378,"line_start":821,"line_end":821,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":10621},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429397,"byte_end":1429409,"line_start":822,"line_end":822,"column_start":19,"column_end":31},"name":"0","qualname":"::write::unit::AttributeValue::LineStringRef::0","value":"write::str::LineStringId","parent":{"krate":0,"index":10619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10622},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429552,"byte_end":1429558,"line_start":826,"line_end":826,"column_start":5,"column_end":11},"name":"String","qualname":"::write::unit::AttributeValue::String","value":"AttributeValue::String(Vec<u8>)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" A slice of bytes representing a string. Must not include null bytes.\n Not guaranteed to be UTF-8 or anything like that.\n","sig":null,"attributes":[{"value":"/ A slice of bytes representing a string. Must not include null bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429417,"byte_end":1429489,"line_start":824,"line_end":824,"column_start":5,"column_end":77}},{"value":"/ Not guaranteed to be UTF-8 or anything like that.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429494,"byte_end":1429547,"line_start":825,"line_end":825,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":10624},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429559,"byte_end":1429566,"line_start":826,"line_end":826,"column_start":12,"column_end":19},"name":"0","qualname":"::write::unit::AttributeValue::String::0","value":"alloc::vec::Vec<u8>","parent":{"krate":0,"index":10622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10625},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429625,"byte_end":1429633,"line_start":829,"line_end":829,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::write::unit::AttributeValue::Encoding","value":"AttributeValue::Encoding(constants::DwAte)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_encoding` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_encoding` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429574,"byte_end":1429620,"line_start":828,"line_end":828,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":10627},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429634,"byte_end":1429650,"line_start":829,"line_end":829,"column_start":14,"column_end":30},"name":"0","qualname":"::write::unit::AttributeValue::Encoding::0","value":"constants::DwAte","parent":{"krate":0,"index":10625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10628},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429713,"byte_end":1429724,"line_start":832,"line_end":832,"column_start":5,"column_end":16},"name":"DecimalSign","qualname":"::write::unit::AttributeValue::DecimalSign","value":"AttributeValue::DecimalSign(constants::DwDs)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_decimal_sign` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_decimal_sign` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429658,"byte_end":1429708,"line_start":831,"line_end":831,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":10630},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429725,"byte_end":1429740,"line_start":832,"line_end":832,"column_start":17,"column_end":32},"name":"0","qualname":"::write::unit::AttributeValue::DecimalSign::0","value":"constants::DwDs","parent":{"krate":0,"index":10628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10631},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429800,"byte_end":1429809,"line_start":835,"line_end":835,"column_start":5,"column_end":14},"name":"Endianity","qualname":"::write::unit::AttributeValue::Endianity","value":"AttributeValue::Endianity(constants::DwEnd)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_endianity` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_endianity` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429748,"byte_end":1429795,"line_start":834,"line_end":834,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10633},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429810,"byte_end":1429826,"line_start":835,"line_end":835,"column_start":15,"column_end":31},"name":"0","qualname":"::write::unit::AttributeValue::Endianity::0","value":"constants::DwEnd","parent":{"krate":0,"index":10631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10634},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429890,"byte_end":1429903,"line_start":838,"line_end":838,"column_start":5,"column_end":18},"name":"Accessibility","qualname":"::write::unit::AttributeValue::Accessibility","value":"AttributeValue::Accessibility(constants::DwAccess)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_accessibility` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_accessibility` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429834,"byte_end":1429885,"line_start":837,"line_end":837,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":10636},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429904,"byte_end":1429923,"line_start":838,"line_end":838,"column_start":19,"column_end":38},"name":"0","qualname":"::write::unit::AttributeValue::Accessibility::0","value":"constants::DwAccess","parent":{"krate":0,"index":10634},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10637},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429984,"byte_end":1429994,"line_start":841,"line_end":841,"column_start":5,"column_end":15},"name":"Visibility","qualname":"::write::unit::AttributeValue::Visibility","value":"AttributeValue::Visibility(constants::DwVis)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_visibility` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_visibility` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429931,"byte_end":1429979,"line_start":840,"line_end":840,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":10639},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1429995,"byte_end":1430011,"line_start":841,"line_end":841,"column_start":16,"column_end":32},"name":"0","qualname":"::write::unit::AttributeValue::Visibility::0","value":"constants::DwVis","parent":{"krate":0,"index":10637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10640},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430072,"byte_end":1430082,"line_start":844,"line_end":844,"column_start":5,"column_end":15},"name":"Virtuality","qualname":"::write::unit::AttributeValue::Virtuality","value":"AttributeValue::Virtuality(constants::DwVirtuality)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_virtuality` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_virtuality` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430019,"byte_end":1430067,"line_start":843,"line_end":843,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":10642},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430083,"byte_end":1430106,"line_start":844,"line_end":844,"column_start":16,"column_end":39},"name":"0","qualname":"::write::unit::AttributeValue::Virtuality::0","value":"constants::DwVirtuality","parent":{"krate":0,"index":10640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10643},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430165,"byte_end":1430173,"line_start":847,"line_end":847,"column_start":5,"column_end":13},"name":"Language","qualname":"::write::unit::AttributeValue::Language","value":"AttributeValue::Language(constants::DwLang)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_language` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_language` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430114,"byte_end":1430160,"line_start":846,"line_end":846,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":10645},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430174,"byte_end":1430191,"line_start":847,"line_end":847,"column_start":14,"column_end":31},"name":"0","qualname":"::write::unit::AttributeValue::Language::0","value":"constants::DwLang","parent":{"krate":0,"index":10643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10646},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430255,"byte_end":1430267,"line_start":850,"line_end":850,"column_start":5,"column_end":17},"name":"AddressClass","qualname":"::write::unit::AttributeValue::AddressClass","value":"AttributeValue::AddressClass(constants::DwAddr)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_address_class` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_address_class` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430199,"byte_end":1430250,"line_start":849,"line_end":849,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":10648},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430268,"byte_end":1430285,"line_start":850,"line_end":850,"column_start":18,"column_end":35},"name":"0","qualname":"::write::unit::AttributeValue::AddressClass::0","value":"constants::DwAddr","parent":{"krate":0,"index":10646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10649},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430351,"byte_end":1430365,"line_start":853,"line_end":853,"column_start":5,"column_end":19},"name":"IdentifierCase","qualname":"::write::unit::AttributeValue::IdentifierCase","value":"AttributeValue::IdentifierCase(constants::DwId)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_identifier_case` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_identifier_case` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430293,"byte_end":1430346,"line_start":852,"line_end":852,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":10651},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430366,"byte_end":1430381,"line_start":853,"line_end":853,"column_start":20,"column_end":35},"name":"0","qualname":"::write::unit::AttributeValue::IdentifierCase::0","value":"constants::DwId","parent":{"krate":0,"index":10649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10652},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430450,"byte_end":1430467,"line_start":856,"line_end":856,"column_start":5,"column_end":22},"name":"CallingConvention","qualname":"::write::unit::AttributeValue::CallingConvention","value":"AttributeValue::CallingConvention(constants::DwCc)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_calling_convention` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_calling_convention` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430389,"byte_end":1430445,"line_start":855,"line_end":855,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":10654},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430468,"byte_end":1430483,"line_start":856,"line_end":856,"column_start":23,"column_end":38},"name":"0","qualname":"::write::unit::AttributeValue::CallingConvention::0","value":"constants::DwCc","parent":{"krate":0,"index":10652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10655},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430540,"byte_end":1430546,"line_start":859,"line_end":859,"column_start":5,"column_end":11},"name":"Inline","qualname":"::write::unit::AttributeValue::Inline","value":"AttributeValue::Inline(constants::DwInl)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_inline` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_inline` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430491,"byte_end":1430535,"line_start":858,"line_end":858,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":10657},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430547,"byte_end":1430563,"line_start":859,"line_end":859,"column_start":12,"column_end":28},"name":"0","qualname":"::write::unit::AttributeValue::Inline::0","value":"constants::DwInl","parent":{"krate":0,"index":10655},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10658},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430622,"byte_end":1430630,"line_start":862,"line_end":862,"column_start":5,"column_end":13},"name":"Ordering","qualname":"::write::unit::AttributeValue::Ordering","value":"AttributeValue::Ordering(constants::DwOrd)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_ordering` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_ordering` attribute.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430571,"byte_end":1430617,"line_start":861,"line_end":861,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":10660},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430631,"byte_end":1430647,"line_start":862,"line_end":862,"column_start":14,"column_end":30},"name":"0","qualname":"::write::unit::AttributeValue::Ordering::0","value":"constants::DwOrd","parent":{"krate":0,"index":10658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10661},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430781,"byte_end":1430790,"line_start":866,"line_end":866,"column_start":5,"column_end":14},"name":"FileIndex","qualname":"::write::unit::AttributeValue::FileIndex","value":"AttributeValue::FileIndex(Option<FileId>)","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" An index into the filename entries from the line number information\n table for the unit containing this value.\n","sig":null,"attributes":[{"value":"/ An index into the filename entries from the line number information","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430655,"byte_end":1430726,"line_start":864,"line_end":864,"column_start":5,"column_end":76}},{"value":"/ table for the unit containing this value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430731,"byte_end":1430776,"line_start":865,"line_end":865,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":10663},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430791,"byte_end":1430805,"line_start":866,"line_end":866,"column_start":15,"column_end":29},"name":"0","qualname":"::write::unit::AttributeValue::FileIndex::0","value":"core::option::Option<write::line::id::FileId>","parent":{"krate":0,"index":10661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10554},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425295,"byte_end":1425309,"line_start":711,"line_end":711,"column_start":10,"column_end":24},"name":"AttributeValue","qualname":"::write::unit::AttributeValue","value":"enum AttributeValue {\n    Address(Address),\n    Block(Vec<u8>),\n    Data1(u8),\n    Data2(u16),\n    Data4(u32),\n    Data8(u64),\n    Sdata(i64),\n    Udata(u64),\n    Exprloc(Expression),\n    Flag(bool),\n    FlagPresent,\n    UnitRef(UnitEntryId),\n    DebugInfoRef(Reference),\n    DebugInfoRefSup(DebugInfoOffset),\n    LineProgramRef,\n    LocationListRef(LocationListId),\n    DebugMacinfoRef(DebugMacinfoOffset),\n    DebugMacroRef(DebugMacroOffset),\n    RangeListRef(RangeListId),\n    DebugTypesRef(DebugTypeSignature),\n    StringRef(StringId),\n    DebugStrRefSup(DebugStrOffset),\n    LineStringRef(LineStringId),\n    String(Vec<u8>),\n    Encoding(constants::DwAte),\n    DecimalSign(constants::DwDs),\n    Endianity(constants::DwEnd),\n    Accessibility(constants::DwAccess),\n    Visibility(constants::DwVis),\n    Virtuality(constants::DwVirtuality),\n    Language(constants::DwLang),\n    AddressClass(constants::DwAddr),\n    IdentifierCase(constants::DwId),\n    CallingConvention(constants::DwCc),\n    Inline(constants::DwInl),\n    Ordering(constants::DwOrd),\n    FileIndex(Option<FileId>),\n}","parent":null,"children":[{"krate":0,"index":10555},{"krate":0,"index":10558},{"krate":0,"index":10561},{"krate":0,"index":10564},{"krate":0,"index":10567},{"krate":0,"index":10570},{"krate":0,"index":10573},{"krate":0,"index":10576},{"krate":0,"index":10579},{"krate":0,"index":10582},{"krate":0,"index":10585},{"krate":0,"index":10587},{"krate":0,"index":10590},{"krate":0,"index":10593},{"krate":0,"index":10596},{"krate":0,"index":10598},{"krate":0,"index":10601},{"krate":0,"index":10604},{"krate":0,"index":10607},{"krate":0,"index":10610},{"krate":0,"index":10613},{"krate":0,"index":10616},{"krate":0,"index":10619},{"krate":0,"index":10622},{"krate":0,"index":10625},{"krate":0,"index":10628},{"krate":0,"index":10631},{"krate":0,"index":10634},{"krate":0,"index":10637},{"krate":0,"index":10640},{"krate":0,"index":10643},{"krate":0,"index":10646},{"krate":0,"index":10649},{"krate":0,"index":10652},{"krate":0,"index":10655},{"krate":0,"index":10658},{"krate":0,"index":10661}],"decl_id":null,"docs":" The value of an attribute in a `DebuggingInformationEntry`.\n","sig":null,"attributes":[{"value":"/ The value of an attribute in a `DebuggingInformationEntry`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1425183,"byte_end":1425246,"line_start":709,"line_end":709,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4012},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430908,"byte_end":1430912,"line_start":871,"line_end":871,"column_start":12,"column_end":16},"name":"form","qualname":"<AttributeValue>::form","value":"fn form(&Self, Encoding) -> Result<constants::DwForm>","parent":null,"children":[],"decl_id":null,"docs":" Return the form that will be used to encode this value.\n","sig":null,"attributes":[{"value":"/ Return the form that will be used to encode this value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430837,"byte_end":1430896,"line_start":870,"line_end":870,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":10691},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1451833,"byte_end":1451842,"line_start":1367,"line_end":1367,"column_start":5,"column_end":14},"name":"DebugInfo","qualname":"::write::unit::DebugInfo","value":"","parent":null,"children":[],"decl_id":null,"docs":"A writable `.debug_info` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10701},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1452018,"byte_end":1452034,"line_start":1374,"line_end":1374,"column_start":12,"column_end":28},"name":"DebugInfoOffsets","qualname":"::write::unit::DebugInfoOffsets","value":"DebugInfoOffsets {  }","parent":null,"children":[{"krate":0,"index":10702},{"krate":0,"index":10703}],"decl_id":null,"docs":" The section offsets of all elements within a `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The section offsets of all elements within a `.debug_info` section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1451909,"byte_end":1451980,"line_start":1372,"line_end":1372,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4019},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1452384,"byte_end":1452388,"line_start":1388,"line_end":1388,"column_start":12,"column_end":16},"name":"unit","qualname":"<DebugInfoOffsets>::unit","value":"fn unit(&Self, UnitId) -> DebugInfoOffset","parent":null,"children":[],"decl_id":null,"docs":" Get the `.debug_info` section offset for the given unit.\n","sig":null,"attributes":[{"value":"/ Get the `.debug_info` section offset for the given unit.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1452298,"byte_end":1452358,"line_start":1386,"line_end":1386,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1452363,"byte_end":1452372,"line_start":1387,"line_end":1387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4020},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1452619,"byte_end":1452624,"line_start":1395,"line_end":1395,"column_start":12,"column_end":17},"name":"entry","qualname":"<DebugInfoOffsets>::entry","value":"fn entry(&Self, UnitId, UnitEntryId) -> DebugInfoOffset","parent":null,"children":[],"decl_id":null,"docs":" Get the `.debug_info` section offset for the given entry.\n","sig":null,"attributes":[{"value":"/ Get the `.debug_info` section offset for the given entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1452532,"byte_end":1452593,"line_start":1393,"line_end":1393,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1452598,"byte_end":1452607,"line_start":1394,"line_end":1394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4081},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1456546,"byte_end":1456550,"line_start":1513,"line_end":1513,"column_start":16,"column_end":20},"name":"from","qualname":"<UnitTable>::from","value":"fn from<R>(&read::Dwarf<R>, &mut write::LineStringTable,\n&mut write::StringTable, &dyn Fn(u64) -> Option<Address>)\n-> ConvertResult<UnitTable> where R: Reader<Offset = usize>","parent":null,"children":[],"decl_id":null,"docs":" Create a unit table by reading the data in the given sections.","sig":null,"attributes":[{"value":"/ Create a unit table by reading the data in the given sections.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1455902,"byte_end":1455968,"line_start":1503,"line_end":1503,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1455977,"byte_end":1455980,"line_start":1504,"line_end":1504,"column_start":9,"column_end":12}},{"value":"/ This also updates the given tables with the values that are referenced from","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1455989,"byte_end":1456068,"line_start":1505,"line_end":1505,"column_start":9,"column_end":88}},{"value":"/ attributes in this section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1456077,"byte_end":1456108,"line_start":1506,"line_end":1506,"column_start":9,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1456117,"byte_end":1456120,"line_start":1507,"line_end":1507,"column_start":9,"column_end":12}},{"value":"/ `convert_address` is a function to convert read addresses into the `Address`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1456129,"byte_end":1456209,"line_start":1508,"line_end":1508,"column_start":9,"column_end":89}},{"value":"/ type. For non-relocatable addresses, this function may simply return","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1456218,"byte_end":1456290,"line_start":1509,"line_end":1509,"column_start":9,"column_end":81}},{"value":"/ `Address::Constant(address)`. For relocatable addresses, it is the caller's","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1456299,"byte_end":1456378,"line_start":1510,"line_end":1510,"column_start":9,"column_end":88}},{"value":"/ responsibility to determine the symbol and addend corresponding to the address","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1456387,"byte_end":1456469,"line_start":1511,"line_end":1511,"column_start":9,"column_end":91}},{"value":"/ and return `Address::Symbol { symbol, addend }`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1456478,"byte_end":1456530,"line_start":1512,"line_end":1512,"column_start":9,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10733},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127826,"byte_end":1127843,"line_start":166,"line_end":166,"column_start":5,"column_end":22},"name":"OffsetOutOfBounds","qualname":"::write::Error::OffsetOutOfBounds","value":"Error::OffsetOutOfBounds","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" The given offset is out of bounds.\n","sig":null,"attributes":[{"value":"/ The given offset is out of bounds.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127783,"byte_end":1127821,"line_start":165,"line_end":165,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10735},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127892,"byte_end":1127909,"line_start":168,"line_end":168,"column_start":5,"column_end":22},"name":"LengthOutOfBounds","qualname":"::write::Error::LengthOutOfBounds","value":"Error::LengthOutOfBounds","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" The given length is out of bounds.\n","sig":null,"attributes":[{"value":"/ The given length is out of bounds.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127849,"byte_end":1127887,"line_start":167,"line_end":167,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10737},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127970,"byte_end":1127991,"line_start":170,"line_end":170,"column_start":5,"column_end":26},"name":"InvalidAttributeValue","qualname":"::write::Error::InvalidAttributeValue","value":"Error::InvalidAttributeValue","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" The attribute value is an invalid for writing.\n","sig":null,"attributes":[{"value":"/ The attribute value is an invalid for writing.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127915,"byte_end":1127965,"line_start":169,"line_end":169,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10739},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128051,"byte_end":1128064,"line_start":172,"line_end":172,"column_start":5,"column_end":18},"name":"ValueTooLarge","qualname":"::write::Error::ValueTooLarge","value":"Error::ValueTooLarge","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" The value is too large for the encoding form.\n","sig":null,"attributes":[{"value":"/ The value is too large for the encoding form.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127997,"byte_end":1128046,"line_start":171,"line_end":171,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10741},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128101,"byte_end":1128120,"line_start":174,"line_end":174,"column_start":5,"column_end":24},"name":"UnsupportedWordSize","qualname":"::write::Error::UnsupportedWordSize","value":"Error::UnsupportedWordSize(u8)","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" Unsupported word size.\n","sig":null,"attributes":[{"value":"/ Unsupported word size.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128070,"byte_end":1128096,"line_start":173,"line_end":173,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":10743},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128121,"byte_end":1128123,"line_start":174,"line_end":174,"column_start":25,"column_end":27},"name":"0","qualname":"::write::Error::UnsupportedWordSize::0","value":"u8","parent":{"krate":0,"index":10741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10744},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128165,"byte_end":1128183,"line_start":176,"line_end":176,"column_start":5,"column_end":23},"name":"UnsupportedVersion","qualname":"::write::Error::UnsupportedVersion","value":"Error::UnsupportedVersion(u16)","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" Unsupported DWARF version.\n","sig":null,"attributes":[{"value":"/ Unsupported DWARF version.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128130,"byte_end":1128160,"line_start":175,"line_end":175,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":10746},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128184,"byte_end":1128187,"line_start":176,"line_end":176,"column_start":24,"column_end":27},"name":"0","qualname":"::write::Error::UnsupportedVersion::0","value":"u16","parent":{"krate":0,"index":10744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10747},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128263,"byte_end":1128284,"line_start":178,"line_end":178,"column_start":5,"column_end":26},"name":"InitialLengthOverflow","qualname":"::write::Error::InitialLengthOverflow","value":"Error::InitialLengthOverflow","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" The unit length is too large for the requested DWARF format.\n","sig":null,"attributes":[{"value":"/ The unit length is too large for the requested DWARF format.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128194,"byte_end":1128258,"line_start":177,"line_end":177,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10749},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128322,"byte_end":1128336,"line_start":180,"line_end":180,"column_start":5,"column_end":19},"name":"InvalidAddress","qualname":"::write::Error::InvalidAddress","value":"Error::InvalidAddress","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" The address is invalid.\n","sig":null,"attributes":[{"value":"/ The address is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128290,"byte_end":1128317,"line_start":179,"line_end":179,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10751},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128376,"byte_end":1128392,"line_start":182,"line_end":182,"column_start":5,"column_end":21},"name":"InvalidReference","qualname":"::write::Error::InvalidReference","value":"Error::InvalidReference","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" The reference is invalid.\n","sig":null,"attributes":[{"value":"/ The reference is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128342,"byte_end":1128371,"line_start":181,"line_end":181,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10753},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128462,"byte_end":1128473,"line_start":184,"line_end":184,"column_start":5,"column_end":16},"name":"NeedVersion","qualname":"::write::Error::NeedVersion","value":"Error::NeedVersion(u16)","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" A requested feature requires a different DWARF version.\n","sig":null,"attributes":[{"value":"/ A requested feature requires a different DWARF version.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128398,"byte_end":1128457,"line_start":183,"line_end":183,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":10755},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128474,"byte_end":1128477,"line_start":184,"line_end":184,"column_start":17,"column_end":20},"name":"0","qualname":"::write::Error::NeedVersion::0","value":"u16","parent":{"krate":0,"index":10753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10756},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128546,"byte_end":1128568,"line_start":186,"line_end":186,"column_start":5,"column_end":27},"name":"LineStringFormMismatch","qualname":"::write::Error::LineStringFormMismatch","value":"Error::LineStringFormMismatch","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" Strings in line number program have mismatched forms.\n","sig":null,"attributes":[{"value":"/ Strings in line number program have mismatched forms.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128484,"byte_end":1128541,"line_start":185,"line_end":185,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10758},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128623,"byte_end":1128635,"line_start":188,"line_end":188,"column_start":5,"column_end":17},"name":"InvalidRange","qualname":"::write::Error::InvalidRange","value":"Error::InvalidRange","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" The range is empty or otherwise invalid.\n","sig":null,"attributes":[{"value":"/ The range is empty or otherwise invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128574,"byte_end":1128618,"line_start":187,"line_end":187,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10760},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128722,"byte_end":1128753,"line_start":190,"line_end":190,"column_start":5,"column_end":36},"name":"IncompatibleLineProgramEncoding","qualname":"::write::Error::IncompatibleLineProgramEncoding","value":"Error::IncompatibleLineProgramEncoding","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" The line number program encoding is incompatible with the unit encoding.\n","sig":null,"attributes":[{"value":"/ The line number program encoding is incompatible with the unit encoding.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128641,"byte_end":1128717,"line_start":189,"line_end":189,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10762},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128821,"byte_end":1128843,"line_start":192,"line_end":192,"column_start":5,"column_end":27},"name":"InvalidFrameCodeOffset","qualname":"::write::Error::InvalidFrameCodeOffset","value":"Error::InvalidFrameCodeOffset(u32)","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" Could not encode code offset for a frame instruction.\n","sig":null,"attributes":[{"value":"/ Could not encode code offset for a frame instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128759,"byte_end":1128816,"line_start":191,"line_end":191,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":10764},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128844,"byte_end":1128847,"line_start":192,"line_end":192,"column_start":28,"column_end":31},"name":"0","qualname":"::write::Error::InvalidFrameCodeOffset::0","value":"u32","parent":{"krate":0,"index":10762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10765},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128916,"byte_end":1128938,"line_start":194,"line_end":194,"column_start":5,"column_end":27},"name":"InvalidFrameDataOffset","qualname":"::write::Error::InvalidFrameDataOffset","value":"Error::InvalidFrameDataOffset(i32)","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" Could not encode data offset for a frame instruction.\n","sig":null,"attributes":[{"value":"/ Could not encode data offset for a frame instruction.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128854,"byte_end":1128911,"line_start":193,"line_end":193,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":10767},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128939,"byte_end":1128942,"line_start":194,"line_end":194,"column_start":28,"column_end":31},"name":"0","qualname":"::write::Error::InvalidFrameDataOffset::0","value":"i32","parent":{"krate":0,"index":10765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10768},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128996,"byte_end":1129022,"line_start":196,"line_end":196,"column_start":5,"column_end":31},"name":"UnsupportedPointerEncoding","qualname":"::write::Error::UnsupportedPointerEncoding","value":"Error::UnsupportedPointerEncoding(constants::DwEhPe)","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" Unsupported eh_frame pointer encoding.\n","sig":null,"attributes":[{"value":"/ Unsupported eh_frame pointer encoding.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1128949,"byte_end":1128991,"line_start":195,"line_end":195,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":10770},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1129023,"byte_end":1129040,"line_start":196,"line_end":196,"column_start":32,"column_end":49},"name":"0","qualname":"::write::Error::UnsupportedPointerEncoding::0","value":"constants::DwEhPe","parent":{"krate":0,"index":10768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10771},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1129096,"byte_end":1129129,"line_start":198,"line_end":198,"column_start":5,"column_end":38},"name":"UnsupportedCfiExpressionReference","qualname":"::write::Error::UnsupportedCfiExpressionReference","value":"Error::UnsupportedCfiExpressionReference","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" Unsupported reference in CFI expression.\n","sig":null,"attributes":[{"value":"/ Unsupported reference in CFI expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1129047,"byte_end":1129091,"line_start":197,"line_end":197,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10773},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1129188,"byte_end":1129225,"line_start":200,"line_end":200,"column_start":5,"column_end":42},"name":"UnsupportedExpressionForwardReference","qualname":"::write::Error::UnsupportedExpressionForwardReference","value":"Error::UnsupportedExpressionForwardReference","parent":{"krate":0,"index":10732},"children":[],"decl_id":null,"docs":" Unsupported forward reference in expression.\n","sig":null,"attributes":[{"value":"/ Unsupported forward reference in expression.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1129135,"byte_end":1129183,"line_start":199,"line_end":199,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":10732},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127771,"byte_end":1127776,"line_start":164,"line_end":164,"column_start":10,"column_end":15},"name":"Error","qualname":"::write::Error","value":"enum Error {\n    OffsetOutOfBounds,\n    LengthOutOfBounds,\n    InvalidAttributeValue,\n    ValueTooLarge,\n    UnsupportedWordSize(u8),\n    UnsupportedVersion(u16),\n    InitialLengthOverflow,\n    InvalidAddress,\n    InvalidReference,\n    NeedVersion(u16),\n    LineStringFormMismatch,\n    InvalidRange,\n    IncompatibleLineProgramEncoding,\n    InvalidFrameCodeOffset(u32),\n    InvalidFrameDataOffset(i32),\n    UnsupportedPointerEncoding(constants::DwEhPe),\n    UnsupportedCfiExpressionReference,\n    UnsupportedExpressionForwardReference,\n}","parent":null,"children":[{"krate":0,"index":10733},{"krate":0,"index":10735},{"krate":0,"index":10737},{"krate":0,"index":10739},{"krate":0,"index":10741},{"krate":0,"index":10744},{"krate":0,"index":10747},{"krate":0,"index":10749},{"krate":0,"index":10751},{"krate":0,"index":10753},{"krate":0,"index":10756},{"krate":0,"index":10758},{"krate":0,"index":10760},{"krate":0,"index":10762},{"krate":0,"index":10765},{"krate":0,"index":10768},{"krate":0,"index":10771},{"krate":0,"index":10773}],"decl_id":null,"docs":" An error that occurred when writing.\n","sig":null,"attributes":[{"value":"/ An error that occurred when writing.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1127676,"byte_end":1127716,"line_start":162,"line_end":162,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4102},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1129267,"byte_end":1129270,"line_start":204,"line_end":204,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> result::Result<(), fmt::Error>","parent":{"krate":1,"index":9914},"children":[],"decl_id":{"krate":1,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4104},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1131840,"byte_end":1131846,"line_start":261,"line_end":261,"column_start":10,"column_end":16},"name":"Result","qualname":"::write::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a write.\n","sig":null,"attributes":[{"value":"/ The result of a write.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1131804,"byte_end":1131830,"line_start":260,"line_end":260,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10788},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132027,"byte_end":1132035,"line_start":267,"line_end":267,"column_start":5,"column_end":13},"name":"Constant","qualname":"::write::Address::Constant","value":"Address::Constant(u64)","parent":{"krate":0,"index":10787},"children":[],"decl_id":null,"docs":" A fixed address that does not require relocation.\n","sig":null,"attributes":[{"value":"/ A fixed address that does not require relocation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1131969,"byte_end":1132022,"line_start":266,"line_end":266,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":10790},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132036,"byte_end":1132039,"line_start":267,"line_end":267,"column_start":14,"column_end":17},"name":"0","qualname":"::write::Address::Constant::0","value":"u64","parent":{"krate":0,"index":10788},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10791},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132118,"byte_end":1132124,"line_start":269,"line_end":269,"column_start":5,"column_end":11},"name":"Symbol","qualname":"::write::Address::Symbol","value":"Address::Symbol { symbol, addend }","parent":{"krate":0,"index":10787},"children":[],"decl_id":null,"docs":" An address that is relative to a symbol which may be relocated.\n","sig":null,"attributes":[{"value":"/ An address that is relative to a symbol which may be relocated.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132046,"byte_end":1132113,"line_start":268,"line_end":268,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":10792},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132331,"byte_end":1132337,"line_start":274,"line_end":274,"column_start":9,"column_end":15},"name":"symbol","qualname":"::write::Address::Symbol::symbol","value":"usize","parent":{"krate":0,"index":10791},"children":[],"decl_id":null,"docs":" The symbol that the address is relative to.","sig":null,"attributes":[{"value":"/ The symbol that the address is relative to.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132135,"byte_end":1132182,"line_start":270,"line_end":270,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132191,"byte_end":1132194,"line_start":271,"line_end":271,"column_start":9,"column_end":12}},{"value":"/ The meaning of this value is decided by the writer, but","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132203,"byte_end":1132262,"line_start":272,"line_end":272,"column_start":9,"column_end":68}},{"value":"/ will typically be an index into a symbol table.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132271,"byte_end":1132322,"line_start":273,"line_end":273,"column_start":9,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":10793},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132499,"byte_end":1132505,"line_start":278,"line_end":278,"column_start":9,"column_end":15},"name":"addend","qualname":"::write::Address::Symbol::addend","value":"i64","parent":{"krate":0,"index":10791},"children":[],"decl_id":null,"docs":" The offset of the address relative to the symbol.","sig":null,"attributes":[{"value":"/ The offset of the address relative to the symbol.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132354,"byte_end":1132407,"line_start":275,"line_end":275,"column_start":9,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132416,"byte_end":1132419,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ This will typically be used as the addend in a relocation.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132428,"byte_end":1132490,"line_start":277,"line_end":277,"column_start":9,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":10787},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1131955,"byte_end":1131962,"line_start":265,"line_end":265,"column_start":10,"column_end":17},"name":"Address","qualname":"::write::Address","value":"enum Address {\n    Constant(u64),\n    Symbol {\n            symbol: usize,\n            addend: i64,\n        },\n}","parent":null,"children":[{"krate":0,"index":10788},{"krate":0,"index":10791}],"decl_id":null,"docs":" An address.\n","sig":null,"attributes":[{"value":"/ An address.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1131879,"byte_end":1131894,"line_start":263,"line_end":263,"column_start":1,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10810},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132796,"byte_end":1132802,"line_start":289,"line_end":289,"column_start":5,"column_end":11},"name":"Symbol","qualname":"::write::Reference::Symbol","value":"Reference::Symbol(usize)","parent":{"krate":0,"index":10809},"children":[],"decl_id":null,"docs":" An external symbol.","sig":null,"attributes":[{"value":"/ An external symbol.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132640,"byte_end":1132663,"line_start":285,"line_end":285,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132668,"byte_end":1132671,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ The meaning of this value is decided by the writer, but","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132676,"byte_end":1132735,"line_start":287,"line_end":287,"column_start":5,"column_end":64}},{"value":"/ will typically be an index into a symbol table.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132740,"byte_end":1132791,"line_start":288,"line_end":288,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":10812},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132803,"byte_end":1132808,"line_start":289,"line_end":289,"column_start":12,"column_end":17},"name":"0","qualname":"::write::Reference::Symbol::0","value":"usize","parent":{"krate":0,"index":10810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10813},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132935,"byte_end":1132940,"line_start":293,"line_end":293,"column_start":5,"column_end":10},"name":"Entry","qualname":"::write::Reference::Entry","value":"Reference::Entry(UnitId, UnitEntryId)","parent":{"krate":0,"index":10809},"children":[],"decl_id":null,"docs":" An entry in the same section.","sig":null,"attributes":[{"value":"/ An entry in the same section.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132815,"byte_end":1132848,"line_start":290,"line_end":290,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132853,"byte_end":1132856,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This only supports references in units that are emitted together.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132861,"byte_end":1132930,"line_start":292,"line_end":292,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":10815},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132941,"byte_end":1132947,"line_start":293,"line_end":293,"column_start":11,"column_end":17},"name":"0","qualname":"::write::Reference::Entry::0","value":"write::unit::UnitId","parent":{"krate":0,"index":10813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10816},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132949,"byte_end":1132960,"line_start":293,"line_end":293,"column_start":19,"column_end":30},"name":"1","qualname":"::write::Reference::Entry::1","value":"write::unit::UnitEntryId","parent":{"krate":0,"index":10813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10809},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132624,"byte_end":1132633,"line_start":284,"line_end":284,"column_start":10,"column_end":19},"name":"Reference","qualname":"::write::Reference","value":"enum Reference { Symbol(usize), Entry(UnitId, UnitEntryId), }","parent":null,"children":[{"krate":0,"index":10810},{"krate":0,"index":10813}],"decl_id":null,"docs":" A reference to a `.debug_info` entry.\n","sig":null,"attributes":[{"value":"/ A reference to a `.debug_info` entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1132522,"byte_end":1132563,"line_start":282,"line_end":282,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10851},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1133751,"byte_end":1133755,"line_start":324,"line_end":324,"column_start":9,"column_end":13},"name":"Read","qualname":"::write::convert::ConvertError::Read","value":"ConvertError::Read(read::Error)","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" An error occurred when reading.\n","sig":null,"attributes":[{"value":"/ An error occurred when reading.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1133707,"byte_end":1133742,"line_start":323,"line_end":323,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":10853},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1133756,"byte_end":1133767,"line_start":324,"line_end":324,"column_start":14,"column_end":25},"name":"0","qualname":"::write::convert::ConvertError::Read::0","value":"read::Error","parent":{"krate":0,"index":10851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10854},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1133846,"byte_end":1133871,"line_start":326,"line_end":326,"column_start":9,"column_end":34},"name":"UnsupportedAttributeValue","qualname":"::write::convert::ConvertError::UnsupportedAttributeValue","value":"ConvertError::UnsupportedAttributeValue","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" Writing of this attribute value is not implemented yet.\n","sig":null,"attributes":[{"value":"/ Writing of this attribute value is not implemented yet.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1133778,"byte_end":1133837,"line_start":325,"line_end":325,"column_start":9,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10856},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1133951,"byte_end":1133972,"line_start":328,"line_end":328,"column_start":9,"column_end":30},"name":"InvalidAttributeValue","qualname":"::write::convert::ConvertError::InvalidAttributeValue","value":"ConvertError::InvalidAttributeValue","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" This attribute value is an invalid name/form combination.\n","sig":null,"attributes":[{"value":"/ This attribute value is an invalid name/form combination.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1133881,"byte_end":1133942,"line_start":327,"line_end":327,"column_start":9,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10858},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134053,"byte_end":1134075,"line_start":330,"line_end":330,"column_start":9,"column_end":31},"name":"InvalidDebugInfoOffset","qualname":"::write::convert::ConvertError::InvalidDebugInfoOffset","value":"ConvertError::InvalidDebugInfoOffset","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" A `.debug_info` reference does not refer to a valid entry.\n","sig":null,"attributes":[{"value":"/ A `.debug_info` reference does not refer to a valid entry.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1133982,"byte_end":1134044,"line_start":329,"line_end":329,"column_start":9,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10860},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134132,"byte_end":1134146,"line_start":332,"line_end":332,"column_start":9,"column_end":23},"name":"InvalidAddress","qualname":"::write::convert::ConvertError::InvalidAddress","value":"ConvertError::InvalidAddress","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" An address could not be converted.\n","sig":null,"attributes":[{"value":"/ An address could not be converted.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134085,"byte_end":1134123,"line_start":331,"line_end":331,"column_start":9,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10862},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134229,"byte_end":1134255,"line_start":334,"line_end":334,"column_start":9,"column_end":35},"name":"UnsupportedLineInstruction","qualname":"::write::convert::ConvertError::UnsupportedLineInstruction","value":"ConvertError::UnsupportedLineInstruction","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" Writing this line number instruction is not implemented yet.\n","sig":null,"attributes":[{"value":"/ Writing this line number instruction is not implemented yet.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134156,"byte_end":1134220,"line_start":333,"line_end":333,"column_start":9,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10864},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134334,"byte_end":1134359,"line_start":336,"line_end":336,"column_start":9,"column_end":34},"name":"UnsupportedLineStringForm","qualname":"::write::convert::ConvertError::UnsupportedLineStringForm","value":"ConvertError::UnsupportedLineStringForm","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" Writing this form of line string is not implemented yet.\n","sig":null,"attributes":[{"value":"/ Writing this form of line string is not implemented yet.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134265,"byte_end":1134325,"line_start":335,"line_end":335,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10866},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134420,"byte_end":1134436,"line_start":338,"line_end":338,"column_start":9,"column_end":25},"name":"InvalidFileIndex","qualname":"::write::convert::ConvertError::InvalidFileIndex","value":"ConvertError::InvalidFileIndex","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" A `.debug_line` file index is invalid.\n","sig":null,"attributes":[{"value":"/ A `.debug_line` file index is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134369,"byte_end":1134411,"line_start":337,"line_end":337,"column_start":9,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10868},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134502,"byte_end":1134523,"line_start":340,"line_end":340,"column_start":9,"column_end":30},"name":"InvalidDirectoryIndex","qualname":"::write::convert::ConvertError::InvalidDirectoryIndex","value":"ConvertError::InvalidDirectoryIndex","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" A `.debug_line` directory index is invalid.\n","sig":null,"attributes":[{"value":"/ A `.debug_line` directory index is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134446,"byte_end":1134493,"line_start":339,"line_end":339,"column_start":9,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10870},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134583,"byte_end":1134598,"line_start":342,"line_end":342,"column_start":9,"column_end":24},"name":"InvalidLineBase","qualname":"::write::convert::ConvertError::InvalidLineBase","value":"ConvertError::InvalidLineBase","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" A `.debug_line` line base is invalid.\n","sig":null,"attributes":[{"value":"/ A `.debug_line` line base is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134533,"byte_end":1134574,"line_start":341,"line_end":341,"column_start":9,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10872},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134658,"byte_end":1134672,"line_start":344,"line_end":344,"column_start":9,"column_end":23},"name":"InvalidLineRef","qualname":"::write::convert::ConvertError::InvalidLineRef","value":"ConvertError::InvalidLineRef","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" A `.debug_line` reference is invalid.\n","sig":null,"attributes":[{"value":"/ A `.debug_line` reference is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134608,"byte_end":1134649,"line_start":343,"line_end":343,"column_start":9,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10874},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134743,"byte_end":1134757,"line_start":346,"line_end":346,"column_start":9,"column_end":23},"name":"InvalidUnitRef","qualname":"::write::convert::ConvertError::InvalidUnitRef","value":"ConvertError::InvalidUnitRef","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" A `.debug_info` unit entry reference is invalid.\n","sig":null,"attributes":[{"value":"/ A `.debug_info` unit entry reference is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134682,"byte_end":1134734,"line_start":345,"line_end":345,"column_start":9,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10876},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134817,"byte_end":1134836,"line_start":348,"line_end":348,"column_start":9,"column_end":28},"name":"InvalidDebugInfoRef","qualname":"::write::convert::ConvertError::InvalidDebugInfoRef","value":"ConvertError::InvalidDebugInfoRef","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" A `.debug_info` reference is invalid.\n","sig":null,"attributes":[{"value":"/ A `.debug_info` reference is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134767,"byte_end":1134808,"line_start":347,"line_end":347,"column_start":9,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10878},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134900,"byte_end":1134927,"line_start":350,"line_end":350,"column_start":9,"column_end":36},"name":"InvalidRangeRelativeAddress","qualname":"::write::convert::ConvertError::InvalidRangeRelativeAddress","value":"ConvertError::InvalidRangeRelativeAddress","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" Invalid relative address in a range list.\n","sig":null,"attributes":[{"value":"/ Invalid relative address in a range list.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134846,"byte_end":1134891,"line_start":349,"line_end":349,"column_start":9,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10880},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1135002,"byte_end":1135027,"line_start":352,"line_end":352,"column_start":9,"column_end":34},"name":"UnsupportedCfiInstruction","qualname":"::write::convert::ConvertError::UnsupportedCfiInstruction","value":"ConvertError::UnsupportedCfiInstruction","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" Writing this CFI instruction is not implemented yet.\n","sig":null,"attributes":[{"value":"/ Writing this CFI instruction is not implemented yet.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1134937,"byte_end":1134993,"line_start":351,"line_end":351,"column_start":9,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10882},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1135099,"byte_end":1135125,"line_start":354,"line_end":354,"column_start":9,"column_end":35},"name":"UnsupportedIndirectAddress","qualname":"::write::convert::ConvertError::UnsupportedIndirectAddress","value":"ConvertError::UnsupportedIndirectAddress","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" Writing indirect pointers is not implemented yet.\n","sig":null,"attributes":[{"value":"/ Writing indirect pointers is not implemented yet.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1135037,"byte_end":1135090,"line_start":353,"line_end":353,"column_start":9,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10884},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1135205,"byte_end":1135225,"line_start":356,"line_end":356,"column_start":9,"column_end":29},"name":"UnsupportedOperation","qualname":"::write::convert::ConvertError::UnsupportedOperation","value":"ConvertError::UnsupportedOperation","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" Writing this expression operation is not implemented yet.\n","sig":null,"attributes":[{"value":"/ Writing this expression operation is not implemented yet.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1135135,"byte_end":1135196,"line_start":355,"line_end":355,"column_start":9,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10886},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1135283,"byte_end":1135302,"line_start":358,"line_end":358,"column_start":9,"column_end":28},"name":"InvalidBranchTarget","qualname":"::write::convert::ConvertError::InvalidBranchTarget","value":"ConvertError::InvalidBranchTarget","parent":{"krate":0,"index":10850},"children":[],"decl_id":null,"docs":" Operation branch target is invalid.\n","sig":null,"attributes":[{"value":"/ Operation branch target is invalid.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1135235,"byte_end":1135274,"line_start":357,"line_end":357,"column_start":9,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":10850},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1133684,"byte_end":1133696,"line_start":322,"line_end":322,"column_start":14,"column_end":26},"name":"ConvertError","qualname":"::write::convert::ConvertError","value":"enum ConvertError {\n    Read(read::Error),\n    UnsupportedAttributeValue,\n    InvalidAttributeValue,\n    InvalidDebugInfoOffset,\n    InvalidAddress,\n    UnsupportedLineInstruction,\n    UnsupportedLineStringForm,\n    InvalidFileIndex,\n    InvalidDirectoryIndex,\n    InvalidLineBase,\n    InvalidLineRef,\n    InvalidUnitRef,\n    InvalidDebugInfoRef,\n    InvalidRangeRelativeAddress,\n    UnsupportedCfiInstruction,\n    UnsupportedIndirectAddress,\n    UnsupportedOperation,\n    InvalidBranchTarget,\n}","parent":null,"children":[{"krate":0,"index":10851},{"krate":0,"index":10854},{"krate":0,"index":10856},{"krate":0,"index":10858},{"krate":0,"index":10860},{"krate":0,"index":10862},{"krate":0,"index":10864},{"krate":0,"index":10866},{"krate":0,"index":10868},{"krate":0,"index":10870},{"krate":0,"index":10872},{"krate":0,"index":10874},{"krate":0,"index":10876},{"krate":0,"index":10878},{"krate":0,"index":10880},{"krate":0,"index":10882},{"krate":0,"index":10884},{"krate":0,"index":10886}],"decl_id":null,"docs":" An error that occurred when converting a read value into a write value.\n","sig":null,"attributes":[{"value":"/ An error that occurred when converting a read value into a write value.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1133546,"byte_end":1133621,"line_start":320,"line_end":320,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4119},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1135363,"byte_end":1135366,"line_start":362,"line_end":362,"column_start":12,"column_end":15},"name":"fmt","qualname":"<ConvertError as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> result::Result<(), fmt::Error>","parent":{"krate":1,"index":9914},"children":[],"decl_id":{"krate":1,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4123},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1137855,"byte_end":1137859,"line_start":413,"line_end":413,"column_start":12,"column_end":16},"name":"from","qualname":"<ConvertError as core::convert::From>::from","value":"fn from(read::Error) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4124},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1137986,"byte_end":1137999,"line_start":419,"line_end":419,"column_start":14,"column_end":27},"name":"ConvertResult","qualname":"::write::convert::ConvertResult","value":"result::Result<T, ConvertError>","parent":null,"children":[],"decl_id":null,"docs":" The result of a conversion.\n","sig":null,"attributes":[{"value":"/ The result of a conversion.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1137941,"byte_end":1137972,"line_start":418,"line_end":418,"column_start":5,"column_end":36}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2352,"byte_end":2358,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4101,"byte_end":4113,"line_start":70,"line_end":70,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8041,"byte_end":8057,"line_start":172,"line_end":172,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8302,"byte_end":8315,"line_start":183,"line_end":183,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9967,"byte_end":9976,"line_start":244,"line_end":244,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40621,"byte_end":40627,"line_start":836,"line_end":836,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52401,"byte_end":52407,"line_start":1287,"line_end":1287,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59549,"byte_end":59562,"line_start":183,"line_end":183,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59828,"byte_end":59841,"line_start":197,"line_end":197,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60066,"byte_end":60078,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60179,"byte_end":60191,"line_start":215,"line_end":215,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60386,"byte_end":60395,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60490,"byte_end":60499,"line_start":233,"line_end":233,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109242,"byte_end":109251,"line_start":10,"line_end":10,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110549,"byte_end":110558,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":111371,"byte_end":111380,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":111529,"byte_end":111538,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114623,"byte_end":114633,"line_start":34,"line_end":34,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115193,"byte_end":115203,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116033,"byte_end":116043,"line_start":76,"line_end":76,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116201,"byte_end":116211,"line_start":86,"line_end":86,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":117084,"byte_end":117094,"line_start":116,"line_end":116,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":117391,"byte_end":117401,"line_start":126,"line_end":126,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":119140,"byte_end":119150,"line_start":175,"line_end":175,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":119302,"byte_end":119312,"line_start":185,"line_end":185,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":119405,"byte_end":119421,"line_start":191,"line_end":191,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":120734,"byte_end":120744,"line_start":222,"line_end":222,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127101,"byte_end":127108,"line_start":407,"line_end":407,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127350,"byte_end":127357,"line_start":416,"line_end":416,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128191,"byte_end":128198,"line_start":440,"line_end":440,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128353,"byte_end":128360,"line_start":450,"line_end":450,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129137,"byte_end":129153,"line_start":481,"line_end":481,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129277,"byte_end":129290,"line_start":491,"line_end":491,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136903,"byte_end":136913,"line_start":693,"line_end":693,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":137856,"byte_end":137866,"line_start":733,"line_end":733,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":137967,"byte_end":137974,"line_start":737,"line_end":737,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":138783,"byte_end":138790,"line_start":773,"line_end":773,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140938,"byte_end":140951,"line_start":831,"line_end":831,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143646,"byte_end":143660,"line_start":913,"line_end":913,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":144379,"byte_end":144393,"line_start":939,"line_end":939,"column_start":66,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":149339,"byte_end":149351,"line_start":1062,"line_end":1062,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":151884,"byte_end":151900,"line_start":1135,"line_end":1135,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":155415,"byte_end":155437,"line_start":1220,"line_end":1220,"column_start":17,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":158011,"byte_end":158033,"line_start":1304,"line_end":1304,"column_start":17,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":162620,"byte_end":162648,"line_start":1443,"line_end":1443,"column_start":26,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":165456,"byte_end":165477,"line_start":1525,"line_end":1525,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":169510,"byte_end":169531,"line_start":1646,"line_end":1646,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173973,"byte_end":173999,"line_start":1768,"line_end":1768,"column_start":17,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":174215,"byte_end":174241,"line_start":1775,"line_end":1775,"column_start":29,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":174465,"byte_end":174491,"line_start":1785,"line_end":1785,"column_start":17,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":176156,"byte_end":176169,"line_start":1831,"line_end":1831,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":179263,"byte_end":179276,"line_start":1944,"line_end":1944,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":182638,"byte_end":182649,"line_start":2023,"line_end":2023,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":193879,"byte_end":193894,"line_start":2318,"line_end":2318,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":194107,"byte_end":194122,"line_start":2326,"line_end":2326,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":194310,"byte_end":194325,"line_start":2335,"line_end":2335,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":194585,"byte_end":194600,"line_start":2345,"line_end":2345,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":194824,"byte_end":194839,"line_start":2355,"line_end":2355,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":198273,"byte_end":198288,"line_start":2454,"line_end":2454,"column_start":63,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":198861,"byte_end":198876,"line_start":2474,"line_end":2474,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":199377,"byte_end":199392,"line_start":2497,"line_end":2497,"column_start":16,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":199644,"byte_end":199660,"line_start":2505,"line_end":2505,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":200191,"byte_end":200205,"line_start":2524,"line_end":2524,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":200468,"byte_end":200482,"line_start":2536,"line_end":2536,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206936,"byte_end":206943,"line_start":2662,"line_end":2662,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207106,"byte_end":207113,"line_start":2671,"line_end":2671,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208915,"byte_end":208927,"line_start":2723,"line_end":2723,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220791,"byte_end":220811,"line_start":3022,"line_end":3022,"column_start":17,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":228928,"byte_end":228952,"line_start":3234,"line_end":3234,"column_start":21,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":229534,"byte_end":229558,"line_start":3253,"line_end":3253,"column_start":61,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230608,"byte_end":230615,"line_start":3291,"line_end":3291,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230714,"byte_end":230721,"line_start":3298,"line_end":3298,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230870,"byte_end":230877,"line_start":3307,"line_end":3307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370551,"byte_end":370556,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374367,"byte_end":374372,"line_start":137,"line_end":137,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":388312,"byte_end":388316,"line_start":517,"line_end":517,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393932,"byte_end":393949,"line_start":668,"line_end":668,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":395041,"byte_end":395051,"line_start":698,"line_end":698,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":396134,"byte_end":396143,"line_start":730,"line_end":730,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":396249,"byte_end":396258,"line_start":736,"line_end":736,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":396636,"byte_end":396645,"line_start":747,"line_end":747,"column_start":57,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399126,"byte_end":399137,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":401961,"byte_end":401972,"line_start":108,"line_end":108,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403879,"byte_end":403890,"line_start":167,"line_end":167,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404094,"byte_end":404105,"line_start":177,"line_end":177,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404304,"byte_end":404315,"line_start":187,"line_end":187,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404498,"byte_end":404509,"line_start":197,"line_end":197,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404653,"byte_end":404664,"line_start":206,"line_end":206,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411691,"byte_end":411703,"line_start":129,"line_end":129,"column_start":62,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411972,"byte_end":411984,"line_start":140,"line_end":140,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":413081,"byte_end":413089,"line_start":169,"line_end":169,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":413177,"byte_end":413185,"line_start":171,"line_end":171,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":413257,"byte_end":413265,"line_start":173,"line_end":173,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":414452,"byte_end":414464,"line_start":222,"line_end":222,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415250,"byte_end":415262,"line_start":249,"line_end":249,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417678,"byte_end":417690,"line_start":328,"line_end":328,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417934,"byte_end":417946,"line_start":339,"line_end":339,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418185,"byte_end":418197,"line_start":350,"line_end":350,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418408,"byte_end":418420,"line_start":361,"line_end":361,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":440663,"byte_end":440674,"line_start":22,"line_end":22,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441503,"byte_end":441514,"line_start":45,"line_end":45,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441988,"byte_end":441999,"line_start":60,"line_end":60,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442831,"byte_end":442842,"line_start":84,"line_end":84,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":443006,"byte_end":443017,"line_start":94,"line_end":94,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":443459,"byte_end":443472,"line_start":113,"line_end":113,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":446168,"byte_end":446180,"line_start":189,"line_end":189,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":449187,"byte_end":449197,"line_start":296,"line_end":296,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":450100,"byte_end":450110,"line_start":327,"line_end":327,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":450229,"byte_end":450239,"line_start":333,"line_end":333,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":450338,"byte_end":450348,"line_start":339,"line_end":339,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":450368,"byte_end":450378,"line_start":341,"line_end":341,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":450667,"byte_end":450677,"line_start":351,"line_end":351,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":450976,"byte_end":450986,"line_start":364,"line_end":364,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":451363,"byte_end":451385,"line_start":379,"line_end":379,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472260,"byte_end":472271,"line_start":28,"line_end":28,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472883,"byte_end":472894,"line_start":54,"line_end":54,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":473039,"byte_end":473050,"line_start":60,"line_end":60,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":473499,"byte_end":473511,"line_start":76,"line_end":76,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":476825,"byte_end":476837,"line_start":169,"line_end":169,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477650,"byte_end":477662,"line_start":193,"line_end":193,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478341,"byte_end":478353,"line_start":213,"line_end":213,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478515,"byte_end":478527,"line_start":223,"line_end":223,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478929,"byte_end":478944,"line_start":236,"line_end":236,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":479533,"byte_end":479548,"line_start":249,"line_end":249,"column_start":57,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485454,"byte_end":485463,"line_start":20,"line_end":20,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486272,"byte_end":486281,"line_start":43,"line_end":43,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":487920,"byte_end":487929,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488753,"byte_end":488762,"line_start":107,"line_end":107,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488922,"byte_end":488931,"line_start":117,"line_end":117,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489838,"byte_end":489859,"line_start":141,"line_end":141,"column_start":44,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":491554,"byte_end":491562,"line_start":194,"line_end":194,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":500273,"byte_end":500288,"line_start":404,"line_end":404,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":504938,"byte_end":504953,"line_start":522,"line_end":522,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508112,"byte_end":508128,"line_start":588,"line_end":588,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508426,"byte_end":508442,"line_start":597,"line_end":597,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":510123,"byte_end":510130,"line_start":651,"line_end":651,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525030,"byte_end":525047,"line_start":1076,"line_end":1076,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1679},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537040,"byte_end":537061,"line_start":1438,"line_end":1438,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540352,"byte_end":540371,"line_start":1531,"line_end":1531,"column_start":17,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541946,"byte_end":541955,"line_start":1584,"line_end":1584,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":545240,"byte_end":545255,"line_start":1682,"line_end":1682,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":591699,"byte_end":591707,"line_start":18,"line_end":18,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592493,"byte_end":592501,"line_start":41,"line_end":41,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1803},{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592649,"byte_end":592657,"line_start":51,"line_end":51,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592945,"byte_end":592958,"line_start":64,"line_end":64,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593784,"byte_end":593797,"line_start":87,"line_end":87,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593950,"byte_end":593963,"line_start":97,"line_end":97,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":594173,"byte_end":594187,"line_start":109,"line_end":109,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":594451,"byte_end":594465,"line_start":122,"line_end":122,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":595759,"byte_end":595772,"line_start":168,"line_end":168,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596098,"byte_end":596111,"line_start":179,"line_end":179,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1830}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597054,"byte_end":597067,"line_start":206,"line_end":206,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":602276,"byte_end":602291,"line_start":378,"line_end":378,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":605173,"byte_end":605187,"line_start":440,"line_end":440,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1849},{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":605985,"byte_end":605999,"line_start":468,"line_end":468,"column_start":57,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":606646,"byte_end":606657,"line_start":490,"line_end":490,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":609809,"byte_end":609820,"line_start":581,"line_end":581,"column_start":57,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\lookup.rs","byte_start":640043,"byte_end":640054,"line_start":41,"line_end":41,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\lookup.rs","byte_start":640274,"byte_end":640285,"line_start":54,"line_end":54,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1910},{"krate":0,"index":1911}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\lookup.rs","byte_start":640851,"byte_end":640866,"line_start":81,"line_end":81,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\lookup.rs","byte_start":643160,"byte_end":643174,"line_start":155,"line_end":155,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654955,"byte_end":654963,"line_start":302,"line_end":302,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":656927,"byte_end":656936,"line_start":360,"line_end":360,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678127,"byte_end":678137,"line_start":865,"line_end":865,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1986}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":679471,"byte_end":679484,"line_start":905,"line_end":905,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":682775,"byte_end":682785,"line_start":998,"line_end":998,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":781539,"byte_end":781552,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":782143,"byte_end":782156,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":782680,"byte_end":782693,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783532,"byte_end":783545,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784245,"byte_end":784258,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2073},{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784421,"byte_end":784434,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784863,"byte_end":784880,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":785476,"byte_end":785493,"line_start":134,"line_end":134,"column_start":57,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":786140,"byte_end":786153,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":786780,"byte_end":786793,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787313,"byte_end":787326,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788149,"byte_end":788162,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788862,"byte_end":788875,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2144},{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789038,"byte_end":789051,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789480,"byte_end":789497,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2151}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":790093,"byte_end":790110,"line_start":134,"line_end":134,"column_start":57,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":790791,"byte_end":790802,"line_start":17,"line_end":17,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2218}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791612,"byte_end":791623,"line_start":40,"line_end":40,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2222}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791774,"byte_end":791785,"line_start":50,"line_end":50,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792068,"byte_end":792081,"line_start":63,"line_end":63,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792919,"byte_end":792932,"line_start":87,"line_end":87,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2232},{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":793085,"byte_end":793098,"line_start":97,"line_end":97,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":793308,"byte_end":793322,"line_start":109,"line_end":109,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":793586,"byte_end":793600,"line_start":122,"line_end":122,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":794900,"byte_end":794910,"line_start":168,"line_end":168,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795239,"byte_end":795249,"line_start":179,"line_end":179,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":796186,"byte_end":796196,"line_start":206,"line_end":206,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800872,"byte_end":800887,"line_start":358,"line_end":358,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2262}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":803276,"byte_end":803290,"line_start":409,"line_end":409,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":804089,"byte_end":804103,"line_start":437,"line_end":437,"column_start":57,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":804750,"byte_end":804761,"line_start":459,"line_end":459,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":807318,"byte_end":807329,"line_start":532,"line_end":532,"column_start":57,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":807790,"byte_end":807798,"line_start":551,"line_end":551,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":809014,"byte_end":809019,"line_start":590,"line_end":590,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832319,"byte_end":832327,"line_start":15,"line_end":15,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2333}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833126,"byte_end":833134,"line_start":38,"line_end":38,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2336}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833901,"byte_end":833909,"line_start":58,"line_end":58,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2339}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834729,"byte_end":834737,"line_start":82,"line_end":82,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2345},{"krate":0,"index":2346}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834895,"byte_end":834903,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2349}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835165,"byte_end":835180,"line_start":104,"line_end":104,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836536,"byte_end":836551,"line_start":136,"line_end":136,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2355}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837382,"byte_end":837397,"line_start":160,"line_end":160,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2361},{"krate":0,"index":2362}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837552,"byte_end":837567,"line_start":170,"line_end":170,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2365}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837858,"byte_end":837870,"line_start":183,"line_end":183,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2368}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838176,"byte_end":838188,"line_start":192,"line_end":192,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2371}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":839010,"byte_end":839022,"line_start":216,"line_end":216,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2378}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":839174,"byte_end":839186,"line_start":226,"line_end":226,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":841624,"byte_end":841640,"line_start":21,"line_end":21,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2516}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":842284,"byte_end":842299,"line_start":40,"line_end":40,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":843117,"byte_end":843127,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2524},{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844057,"byte_end":844066,"line_start":90,"line_end":90,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2531}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844875,"byte_end":844884,"line_start":113,"line_end":113,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2534},{"krate":0,"index":2535}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846142,"byte_end":846151,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846975,"byte_end":846984,"line_start":176,"line_end":176,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2544},{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":847144,"byte_end":847153,"line_start":186,"line_end":186,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2548}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":847585,"byte_end":847611,"line_start":202,"line_end":202,"column_start":17,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2551}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":848324,"byte_end":848350,"line_start":224,"line_end":224,"column_start":57,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":848895,"byte_end":848916,"line_start":244,"line_end":244,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2575},{"krate":0,"index":2578},{"krate":0,"index":2581},{"krate":0,"index":2584},{"krate":0,"index":2587},{"krate":0,"index":2588}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":856685,"byte_end":856695,"line_start":488,"line_end":488,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":857617,"byte_end":857627,"line_start":521,"line_end":521,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2630}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":865248,"byte_end":865273,"line_start":747,"line_end":747,"column_start":33,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880833,"byte_end":880842,"line_start":1200,"line_end":1200,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902788,"byte_end":902802,"line_start":1873,"line_end":1873,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919645,"byte_end":919654,"line_start":2280,"line_end":2280,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2713}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":921239,"byte_end":921248,"line_start":2322,"line_end":2322,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923960,"byte_end":923970,"line_start":2397,"line_end":2397,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926696,"byte_end":926709,"line_start":2473,"line_end":2473,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939706,"byte_end":939717,"line_start":2859,"line_end":2859,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2746}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":943894,"byte_end":943909,"line_start":2984,"line_end":2984,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":945119,"byte_end":945134,"line_start":3020,"line_end":3020,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2760},{"krate":0,"index":2761}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946534,"byte_end":946544,"line_start":3065,"line_end":3065,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2770}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947355,"byte_end":947365,"line_start":3088,"line_end":3088,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948193,"byte_end":948203,"line_start":3112,"line_end":3112,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2779},{"krate":0,"index":2780}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948365,"byte_end":948375,"line_start":3122,"line_end":3122,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2783}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948516,"byte_end":948526,"line_start":3130,"line_end":3130,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2786}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949687,"byte_end":949706,"line_start":3167,"line_end":3167,"column_start":17,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":950411,"byte_end":950430,"line_start":3189,"line_end":3189,"column_start":57,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":951025,"byte_end":951039,"line_start":3211,"line_end":3211,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052694,"byte_end":1052703,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1055479,"byte_end":1055484,"line_start":151,"line_end":151,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93869,"byte_end":93874,"line_start":388,"line_end":388,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":94035,"byte_end":94040,"line_start":395,"line_end":395,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102039,"byte_end":102044,"line_start":534,"line_end":534,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102098,"byte_end":102103,"line_start":537,"line_end":537,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2899}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":103517,"byte_end":103525,"line_start":591,"line_end":591,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2913}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1138477,"byte_end":1138486,"line_start":19,"line_end":19,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1139187,"byte_end":1139196,"line_start":49,"line_end":49,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1161559,"byte_end":1161567,"line_start":100,"line_end":100,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3085}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1162456,"byte_end":1162464,"line_start":122,"line_end":122,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3088},{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\abbrev.rs","byte_start":1164574,"byte_end":1164591,"line_start":19,"line_end":19,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3134},{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\abbrev.rs","byte_start":1165532,"byte_end":1165544,"line_start":47,"line_end":47,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3138},{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\abbrev.rs","byte_start":1166604,"byte_end":1166626,"line_start":87,"line_end":87,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3142},{"krate":0,"index":3143}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1170972,"byte_end":1170982,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3211},{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1174412,"byte_end":1174434,"line_start":131,"line_end":131,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1179418,"byte_end":1179439,"line_start":286,"line_end":286,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3222},{"krate":0,"index":3223},{"krate":0,"index":3224}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1184021,"byte_end":1184041,"line_start":415,"line_end":415,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3227}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1191288,"byte_end":1191298,"line_start":594,"line_end":594,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3259}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1193557,"byte_end":1193579,"line_start":645,"line_end":645,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3263}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1195622,"byte_end":1195643,"line_start":696,"line_end":696,"column_start":10,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3267}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1197368,"byte_end":1197388,"line_start":741,"line_end":741,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210970,"byte_end":1210975,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3311},{"krate":0,"index":3312}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1212205,"byte_end":1212214,"line_start":67,"line_end":67,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3315},{"krate":0,"index":3316}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1213732,"byte_end":1213737,"line_start":113,"line_end":113,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3335}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217592,"byte_end":1217603,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3411},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3424},{"krate":0,"index":3426},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3435}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239815,"byte_end":1239822,"line_start":705,"line_end":705,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3439}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1240974,"byte_end":1240989,"line_start":755,"line_end":755,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3441}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243835,"byte_end":1243845,"line_start":826,"line_end":826,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3446},{"krate":0,"index":3448},{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1246325,"byte_end":1246331,"line_start":905,"line_end":905,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1248015,"byte_end":1248026,"line_start":969,"line_end":969,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3479}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1255914,"byte_end":1255924,"line_start":1127,"line_end":1127,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3482}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1292099,"byte_end":1292116,"line_start":39,"line_end":39,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3544},{"krate":0,"index":3546}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1301758,"byte_end":1301770,"line_start":304,"line_end":304,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3570}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313516,"byte_end":1313526,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3640},{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3643},{"krate":0,"index":3644},{"krate":0,"index":3645},{"krate":0,"index":3646},{"krate":0,"index":3647},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3657},{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3663}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1330115,"byte_end":1330124,"line_start":477,"line_end":477,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3666},{"krate":0,"index":3668}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1343119,"byte_end":1343129,"line_start":798,"line_end":798,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3700}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1382576,"byte_end":1382590,"line_start":36,"line_end":36,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3757},{"krate":0,"index":3759}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1389391,"byte_end":1389400,"line_start":220,"line_end":220,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3781}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405098,"byte_end":1405107,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3957},{"krate":0,"index":3958},{"krate":0,"index":3959},{"krate":0,"index":3960},{"krate":0,"index":3961},{"krate":0,"index":3962}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1409070,"byte_end":1409074,"line_start":169,"line_end":169,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3967},{"krate":0,"index":3968},{"krate":0,"index":3969},{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3972},{"krate":0,"index":3973},{"krate":0,"index":3974},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3977},{"krate":0,"index":3978},{"krate":0,"index":3980}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1416972,"byte_end":1416997,"line_start":427,"line_end":427,"column_start":6,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3982},{"krate":0,"index":3983},{"krate":0,"index":3984},{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3987},{"krate":0,"index":3988},{"krate":0,"index":3989},{"krate":0,"index":3990},{"krate":0,"index":3993},{"krate":0,"index":3996},{"krate":0,"index":3998},{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4003},{"krate":0,"index":4004}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424517,"byte_end":1424526,"line_start":681,"line_end":681,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430816,"byte_end":1430830,"line_start":869,"line_end":869,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4015}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1452095,"byte_end":1452111,"line_start":1379,"line_end":1379,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4019},{"krate":0,"index":4020}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1453024,"byte_end":1453035,"line_start":1409,"line_end":1409,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4024}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1454133,"byte_end":1454144,"line_start":1449,"line_end":1449,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4026}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1455882,"byte_end":1455891,"line_start":1502,"line_end":1502,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4081}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1457945,"byte_end":1457949,"line_start":1552,"line_end":1552,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4084},{"krate":0,"index":4086}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1461767,"byte_end":1461792,"line_start":1658,"line_end":1658,"column_start":10,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4089},{"krate":0,"index":4091}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1464118,"byte_end":1464127,"line_start":1715,"line_end":1715,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4094}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1464611,"byte_end":1464625,"line_start":1729,"line_end":1729,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4098}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1129252,"byte_end":1129257,"line_start":203,"line_end":203,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4102}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1131794,"byte_end":1131799,"line_start":258,"line_end":258,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1133203,"byte_end":1133209,"line_start":305,"line_end":305,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4107}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1135337,"byte_end":1135349,"line_start":361,"line_end":361,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4119}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1137781,"byte_end":1137793,"line_start":410,"line_end":410,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1137829,"byte_end":1137841,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1759,"byte_end":1768,"line_start":56,"line_end":56,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1942,"byte_end":1948,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":106}},{"kind":"Mod","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":1984,"byte_end":1988,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":155}},{"kind":"Mod","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\lib.rs","byte_start":2099,"byte_end":2104,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2915}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":2352,"byte_end":2358,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":4101,"byte_end":4113,"line_start":70,"line_end":70,"column_start":18,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4167},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8041,"byte_end":8057,"line_start":172,"line_end":172,"column_start":21,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4682},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":8302,"byte_end":8315,"line_start":183,"line_end":183,"column_start":21,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4709},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\common.rs","byte_start":9967,"byte_end":9976,"line_start":244,"line_end":244,"column_start":6,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":40621,"byte_end":40627,"line_start":836,"line_end":836,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":5912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\constants.rs","byte_start":52401,"byte_end":52407,"line_start":1287,"line_end":1287,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":6568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55230,"byte_end":55235,"line_start":7,"line_end":7,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":9907},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55238,"byte_end":55245,"line_start":7,"line_end":7,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":3128},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55248,"byte_end":55253,"line_start":7,"line_end":7,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":2772},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55256,"byte_end":55260,"line_start":7,"line_end":7,"column_start":48,"column_end":52},"kind":"SuperTrait","from":{"krate":1,"index":3160},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55263,"byte_end":55272,"line_start":7,"line_end":7,"column_start":55,"column_end":64},"kind":"SuperTrait","from":{"krate":1,"index":2802},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":55275,"byte_end":55277,"line_start":7,"line_end":7,"column_start":67,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":2807},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59549,"byte_end":59562,"line_start":183,"line_end":183,"column_start":18,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":6590},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":59828,"byte_end":59841,"line_start":197,"line_end":197,"column_start":20,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":6590},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60066,"byte_end":60078,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":6609},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60179,"byte_end":60191,"line_start":215,"line_end":215,"column_start":20,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":6609},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60386,"byte_end":60395,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6625},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\endianity.rs","byte_start":60490,"byte_end":60499,"line_start":233,"line_end":233,"column_start":20,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":6625},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":109242,"byte_end":109251,"line_start":10,"line_end":10,"column_start":17,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":6641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":110549,"byte_end":110558,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":6641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":111371,"byte_end":111380,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":6641},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\addr.rs","byte_start":111529,"byte_end":111538,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":6641},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":114623,"byte_end":114633,"line_start":34,"line_end":34,"column_start":17,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":6655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":115193,"byte_end":115203,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":6655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116033,"byte_end":116043,"line_start":76,"line_end":76,"column_start":32,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":6655},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":116201,"byte_end":116211,"line_start":86,"line_end":86,"column_start":29,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":6655},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":117084,"byte_end":117094,"line_start":116,"line_end":116,"column_start":22,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":6679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":117391,"byte_end":117401,"line_start":126,"line_end":126,"column_start":17,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":6679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":119140,"byte_end":119150,"line_start":175,"line_end":175,"column_start":32,"column_end":42},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":6679},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":119302,"byte_end":119312,"line_start":185,"line_end":185,"column_start":29,"column_end":39},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":6679},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":119405,"byte_end":119421,"line_start":191,"line_end":191,"column_start":17,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":6702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":120734,"byte_end":120744,"line_start":222,"line_end":222,"column_start":26,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":6716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127101,"byte_end":127108,"line_start":407,"line_end":407,"column_start":17,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":6728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":127350,"byte_end":127357,"line_start":416,"line_end":416,"column_start":22,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":6728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128191,"byte_end":128198,"line_start":440,"line_end":440,"column_start":32,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":6728},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128353,"byte_end":128360,"line_start":450,"line_end":450,"column_start":29,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6728},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128976,"byte_end":128980,"line_start":473,"line_end":473,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":3160},"to":{"krate":0,"index":364}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128983,"byte_end":128988,"line_start":473,"line_end":473,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":9907},"to":{"krate":0,"index":364}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128991,"byte_end":128993,"line_start":473,"line_end":473,"column_start":51,"column_end":53},"kind":"SuperTrait","from":{"krate":1,"index":2807},"to":{"krate":0,"index":364}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":128996,"byte_end":129000,"line_start":473,"line_end":473,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":1,"index":3056},"to":{"krate":0,"index":364}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129137,"byte_end":129153,"line_start":481,"line_end":481,"column_start":29,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4682},"to":{"krate":0,"index":364}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":129277,"byte_end":129290,"line_start":491,"line_end":491,"column_start":29,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4709},"to":{"krate":0,"index":364}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131237,"byte_end":131242,"line_start":541,"line_end":541,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":2772},"to":{"krate":0,"index":383}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131245,"byte_end":131250,"line_start":541,"line_end":541,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":9907},"to":{"krate":0,"index":383}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":131253,"byte_end":131274,"line_start":541,"line_end":541,"column_start":53,"column_end":74},"kind":"SuperTrait","from":{"krate":0,"index":373},"to":{"krate":0,"index":383}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":136903,"byte_end":136913,"line_start":693,"line_end":693,"column_start":46,"column_end":56},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6655},"to":{"krate":0,"index":373}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":137856,"byte_end":137866,"line_start":733,"line_end":733,"column_start":38,"column_end":48},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6655},"to":{"krate":0,"index":383}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":137967,"byte_end":137974,"line_start":737,"line_end":737,"column_start":46,"column_end":53},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6728},"to":{"krate":0,"index":373}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":138783,"byte_end":138790,"line_start":773,"line_end":773,"column_start":38,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6728},"to":{"krate":0,"index":383}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":140938,"byte_end":140951,"line_start":831,"line_end":831,"column_start":6,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":143646,"byte_end":143660,"line_start":913,"line_end":913,"column_start":26,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":144379,"byte_end":144393,"line_start":939,"line_end":939,"column_start":66,"column_end":80},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6800},"to":{"krate":25,"index":59}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":149339,"byte_end":149351,"line_start":1062,"line_end":1062,"column_start":6,"column_end":18},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":151884,"byte_end":151900,"line_start":1135,"line_end":1135,"column_start":6,"column_end":22},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":155415,"byte_end":155437,"line_start":1220,"line_end":1220,"column_start":17,"column_end":39},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":158011,"byte_end":158033,"line_start":1304,"line_end":1304,"column_start":17,"column_end":39},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":162620,"byte_end":162648,"line_start":1443,"line_end":1443,"column_start":26,"column_end":54},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":6927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":165456,"byte_end":165477,"line_start":1525,"line_end":1525,"column_start":17,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":6967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":169510,"byte_end":169531,"line_start":1646,"line_end":1646,"column_start":17,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":173973,"byte_end":173999,"line_start":1768,"line_end":1768,"column_start":17,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":7002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":174215,"byte_end":174241,"line_start":1775,"line_end":1775,"column_start":29,"column_end":55},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":7002},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":174465,"byte_end":174491,"line_start":1785,"line_end":1785,"column_start":17,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":7002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":176156,"byte_end":176169,"line_start":1831,"line_end":1831,"column_start":17,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":7012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":179263,"byte_end":179276,"line_start":1944,"line_end":1944,"column_start":43,"column_end":56},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":7012},"to":{"krate":1,"index":2802}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":182638,"byte_end":182649,"line_start":2023,"line_end":2023,"column_start":21,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":7031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":193879,"byte_end":193894,"line_start":2318,"line_end":2318,"column_start":35,"column_end":50},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":564},"to":{"krate":1,"index":9907}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":194107,"byte_end":194122,"line_start":2326,"line_end":2326,"column_start":29,"column_end":44},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":564},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":194310,"byte_end":194325,"line_start":2335,"line_end":2335,"column_start":35,"column_end":50},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":564},"to":{"krate":1,"index":2772}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":194585,"byte_end":194600,"line_start":2345,"line_end":2345,"column_start":26,"column_end":41},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":564},"to":{"krate":1,"index":3393}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":194824,"byte_end":194839,"line_start":2355,"line_end":2355,"column_start":17,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":198273,"byte_end":198288,"line_start":2454,"line_end":2454,"column_start":63,"column_end":78},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":564},"to":{"krate":1,"index":7994}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":198861,"byte_end":198876,"line_start":2474,"line_end":2474,"column_start":23,"column_end":38},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":564},"to":{"krate":1,"index":2802}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":199377,"byte_end":199392,"line_start":2497,"line_end":2497,"column_start":16,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":564},"to":{"krate":1,"index":2807}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":199644,"byte_end":199660,"line_start":2505,"line_end":2505,"column_start":37,"column_end":53},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":7045},"to":{"krate":1,"index":8193}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":200191,"byte_end":200205,"line_start":2524,"line_end":2524,"column_start":29,"column_end":43},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":7058},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":200468,"byte_end":200482,"line_start":2536,"line_end":2536,"column_start":17,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":7058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":206936,"byte_end":206943,"line_start":2662,"line_end":2662,"column_start":29,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":7082},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":207106,"byte_end":207113,"line_start":2671,"line_end":2671,"column_start":17,"column_end":24},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":7082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":208915,"byte_end":208927,"line_start":2723,"line_end":2723,"column_start":17,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":7107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":220791,"byte_end":220811,"line_start":3022,"line_end":3022,"column_start":17,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":7147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":228928,"byte_end":228952,"line_start":3234,"line_end":3234,"column_start":21,"column_end":45},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":7219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":229534,"byte_end":229558,"line_start":3253,"line_end":3253,"column_start":61,"column_end":85},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":7219},"to":{"krate":25,"index":59}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230608,"byte_end":230615,"line_start":3291,"line_end":3291,"column_start":18,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":7233},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230714,"byte_end":230721,"line_start":3298,"line_end":3298,"column_start":20,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":7233},"to":{"krate":1,"index":3053}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\cfi.rs","byte_start":230870,"byte_end":230877,"line_start":3307,"line_end":3307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":7233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":370551,"byte_end":370556,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":7267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":374367,"byte_end":374372,"line_start":137,"line_end":137,"column_start":17,"column_end":22},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":7267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":388312,"byte_end":388316,"line_start":517,"line_end":517,"column_start":17,"column_end":21},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":7286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":393932,"byte_end":393949,"line_start":668,"line_end":668,"column_start":23,"column_end":40},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":395041,"byte_end":395051,"line_start":698,"line_end":698,"column_start":23,"column_end":33},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":8716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":396134,"byte_end":396143,"line_start":730,"line_end":730,"column_start":29,"column_end":38},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":7304},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":396249,"byte_end":396258,"line_start":736,"line_end":736,"column_start":17,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":7304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\dwarf.rs","byte_start":396636,"byte_end":396645,"line_start":747,"line_end":747,"column_start":57,"column_end":66},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":7304},"to":{"krate":25,"index":59}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":399126,"byte_end":399137,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":7322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":401961,"byte_end":401972,"line_start":108,"line_end":108,"column_start":22,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":7322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":403879,"byte_end":403890,"line_start":167,"line_end":167,"column_start":39,"column_end":50},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":7322},"to":{"krate":1,"index":3454}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404094,"byte_end":404105,"line_start":177,"line_end":177,"column_start":50,"column_end":61},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":7322},"to":{"krate":1,"index":3454}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404304,"byte_end":404315,"line_start":187,"line_end":187,"column_start":32,"column_end":43},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":7322},"to":{"krate":1,"index":3369}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404498,"byte_end":404509,"line_start":197,"line_end":197,"column_start":45,"column_end":56},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":7322},"to":{"krate":1,"index":3053}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_slice.rs","byte_start":404653,"byte_end":404664,"line_start":206,"line_end":206,"column_start":33,"column_end":44},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":7322},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411691,"byte_end":411703,"line_start":129,"line_end":129,"column_start":62,"column_end":74},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":7362},"to":{"krate":1,"index":2802}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":411972,"byte_end":411984,"line_start":140,"line_end":140,"column_start":24,"column_end":36},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":7362},"to":{"krate":1,"index":2807}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":413081,"byte_end":413089,"line_start":169,"line_end":169,"column_start":25,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":7383},"to":{"krate":1,"index":3150}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":413177,"byte_end":413185,"line_start":171,"line_end":171,"column_start":25,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":7383},"to":{"krate":1,"index":3162}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":413257,"byte_end":413265,"line_start":173,"line_end":173,"column_start":9,"column_end":17},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":7383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":414452,"byte_end":414464,"line_start":222,"line_end":222,"column_start":17,"column_end":29},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":7362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":415250,"byte_end":415262,"line_start":249,"line_end":249,"column_start":17,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":7362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417678,"byte_end":417690,"line_start":328,"line_end":328,"column_start":34,"column_end":46},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":7362},"to":{"krate":1,"index":3454}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":417934,"byte_end":417946,"line_start":339,"line_end":339,"column_start":45,"column_end":57},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":7362},"to":{"krate":1,"index":3454}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418185,"byte_end":418197,"line_start":350,"line_end":350,"column_start":27,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":7362},"to":{"krate":1,"index":3369}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\endian_reader.rs","byte_start":418408,"byte_end":418420,"line_start":361,"line_end":361,"column_start":28,"column_end":40},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":7362},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426676,"byte_end":426681,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":9907},"to":{"krate":0,"index":1170}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426684,"byte_end":426688,"line_start":23,"line_end":23,"column_start":13,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":3160},"to":{"krate":0,"index":1170}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426691,"byte_end":426693,"line_start":23,"line_end":23,"column_start":20,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2807},"to":{"krate":0,"index":1170}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426696,"byte_end":426699,"line_start":23,"line_end":23,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2838},"to":{"krate":0,"index":1170}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426702,"byte_end":426706,"line_start":23,"line_end":23,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":10120},"to":{"krate":0,"index":1170}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426709,"byte_end":426712,"line_start":23,"line_end":23,"column_start":38,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":3218},"to":{"krate":0,"index":1170}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426730,"byte_end":426739,"line_start":23,"line_end":23,"column_start":59,"column_end":68},"kind":"SuperTrait","from":{"krate":1,"index":3249},"to":{"krate":0,"index":1170}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":426742,"byte_end":426745,"line_start":23,"line_end":23,"column_start":71,"column_end":74},"kind":"SuperTrait","from":{"krate":1,"index":3223},"to":{"krate":0,"index":1170}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431625,"byte_end":431630,"line_start":207,"line_end":207,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":9907},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\reader.rs","byte_start":431633,"byte_end":431638,"line_start":207,"line_end":207,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":2772},"to":{"krate":0,"index":1206}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":440663,"byte_end":440674,"line_start":22,"line_end":22,"column_start":22,"column_end":33},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":7426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441503,"byte_end":441514,"line_start":45,"line_end":45,"column_start":17,"column_end":28},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":7426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":441988,"byte_end":441999,"line_start":60,"line_end":60,"column_start":9,"column_end":20},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":7426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":442831,"byte_end":442842,"line_start":84,"line_end":84,"column_start":24,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":7426},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":443006,"byte_end":443017,"line_start":94,"line_end":94,"column_start":21,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":7426},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":443459,"byte_end":443472,"line_start":113,"line_end":113,"column_start":6,"column_end":19},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":7440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":446168,"byte_end":446180,"line_start":189,"line_end":189,"column_start":6,"column_end":18},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":7449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":449187,"byte_end":449197,"line_start":296,"line_end":296,"column_start":6,"column_end":16},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":7465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":450100,"byte_end":450110,"line_start":327,"line_end":327,"column_start":16,"column_end":26},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":7465},"to":{"krate":1,"index":9907}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":450229,"byte_end":450239,"line_start":333,"line_end":333,"column_start":20,"column_end":30},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":7465},"to":{"krate":1,"index":2802}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":450338,"byte_end":450348,"line_start":339,"line_end":339,"column_start":13,"column_end":23},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":7465},"to":{"krate":1,"index":2807}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":450368,"byte_end":450378,"line_start":341,"line_end":341,"column_start":16,"column_end":26},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":7465},"to":{"krate":1,"index":3369}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":450667,"byte_end":450677,"line_start":351,"line_end":351,"column_start":47,"column_end":57},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":7465},"to":{"krate":1,"index":7994}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":450976,"byte_end":450986,"line_start":364,"line_end":364,"column_start":44,"column_end":54},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":7465},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\abbrev.rs","byte_start":451363,"byte_end":451385,"line_start":379,"line_end":379,"column_start":6,"column_end":28},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":7475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472260,"byte_end":472271,"line_start":28,"line_end":28,"column_start":15,"column_end":26},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":7514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":472883,"byte_end":472894,"line_start":54,"line_end":54,"column_start":36,"column_end":47},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":7514},"to":{"krate":1,"index":2848}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":473039,"byte_end":473050,"line_start":60,"line_end":60,"column_start":29,"column_end":40},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":7514},"to":{"krate":1,"index":2838}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":473499,"byte_end":473511,"line_start":76,"line_end":76,"column_start":37,"column_end":49},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":7537},"to":{"krate":0,"index":1897}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":476825,"byte_end":476837,"line_start":169,"line_end":169,"column_start":22,"column_end":34},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":7546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":477650,"byte_end":477662,"line_start":193,"line_end":193,"column_start":17,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":7546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478341,"byte_end":478353,"line_start":213,"line_end":213,"column_start":32,"column_end":44},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":7546},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478515,"byte_end":478527,"line_start":223,"line_end":223,"column_start":29,"column_end":41},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":7546},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":478929,"byte_end":478944,"line_start":236,"line_end":236,"column_start":17,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":7556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\aranges.rs","byte_start":479533,"byte_end":479548,"line_start":249,"line_end":249,"column_start":57,"column_end":72},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":7556},"to":{"krate":25,"index":59}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":485454,"byte_end":485463,"line_start":20,"line_end":20,"column_start":22,"column_end":31},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":7566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":486272,"byte_end":486281,"line_start":43,"line_end":43,"column_start":17,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":7566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":487920,"byte_end":487929,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":7566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488753,"byte_end":488762,"line_start":107,"line_end":107,"column_start":24,"column_end":33},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":7566},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":488922,"byte_end":488931,"line_start":117,"line_end":117,"column_start":21,"column_end":30},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":7566},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":489838,"byte_end":489859,"line_start":141,"line_end":141,"column_start":44,"column_end":65},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":7792},"to":{"krate":0,"index":1562}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":491554,"byte_end":491562,"line_start":194,"line_end":194,"column_start":26,"column_end":34},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":7580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":500273,"byte_end":500288,"line_start":404,"line_end":404,"column_start":17,"column_end":32},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":7597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":504938,"byte_end":504953,"line_start":522,"line_end":522,"column_start":34,"column_end":49},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":7597},"to":{"krate":1,"index":9914}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508112,"byte_end":508128,"line_start":588,"line_end":588,"column_start":17,"column_end":33},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":7685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":508426,"byte_end":508442,"line_start":597,"line_end":597,"column_start":17,"column_end":33},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":7685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":510123,"byte_end":510130,"line_start":651,"line_end":651,"column_start":6,"column_end":13},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":7694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":525030,"byte_end":525047,"line_start":1076,"line_end":1076,"column_start":17,"column_end":34},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":7752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":537040,"byte_end":537061,"line_start":1438,"line_end":1438,"column_start":17,"column_end":38},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":7792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":540352,"byte_end":540371,"line_start":1531,"line_end":1531,"column_start":17,"column_end":36},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":7819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":541946,"byte_end":541955,"line_start":1584,"line_end":1584,"column_start":17,"column_end":26},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":7846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\line.rs","byte_start":545240,"byte_end":545255,"line_start":1682,"line_end":1682,"column_start":6,"column_end":21},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":7882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":591699,"byte_end":591707,"line_start":18,"line_end":18,"column_start":22,"column_end":30},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":7897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592493,"byte_end":592501,"line_start":41,"line_end":41,"column_start":24,"column_end":32},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":7897},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592649,"byte_end":592657,"line_start":51,"line_end":51,"column_start":21,"column_end":29},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":7897},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":592945,"byte_end":592958,"line_start":64,"line_end":64,"column_start":22,"column_end":35},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":7911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593784,"byte_end":593797,"line_start":87,"line_end":87,"column_start":24,"column_end":37},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":7911},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":593950,"byte_end":593963,"line_start":97,"line_end":97,"column_start":21,"column_end":34},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":7911},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":594173,"byte_end":594187,"line_start":109,"line_end":109,"column_start":18,"column_end":32},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":7925},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":594451,"byte_end":594465,"line_start":122,"line_end":122,"column_start":6,"column_end":20},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":7925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":595759,"byte_end":595772,"line_start":168,"line_end":168,"column_start":9,"column_end":22},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":7933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":596098,"byte_end":596111,"line_start":179,"line_end":179,"column_start":9,"column_end":22},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":7933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":597054,"byte_end":597067,"line_start":206,"line_end":206,"column_start":17,"column_end":30},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":7933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":602276,"byte_end":602291,"line_start":378,"line_end":378,"column_start":17,"column_end":32},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":7955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":605173,"byte_end":605187,"line_start":440,"line_end":440,"column_start":17,"column_end":31},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":7948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":605985,"byte_end":605999,"line_start":468,"line_end":468,"column_start":57,"column_end":71},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":7948},"to":{"krate":25,"index":59}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":606646,"byte_end":606657,"line_start":490,"line_end":490,"column_start":17,"column_end":28},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":7993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\loclists.rs","byte_start":609809,"byte_end":609820,"line_start":581,"line_end":581,"column_start":57,"column_end":68},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":7993},"to":{"krate":25,"index":59}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\lookup.rs","byte_start":640043,"byte_end":640054,"line_start":41,"line_end":41,"column_start":29,"column_end":40},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":8029},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\lookup.rs","byte_start":640274,"byte_end":640285,"line_start":54,"line_end":54,"column_start":17,"column_end":28},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":8029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\lookup.rs","byte_start":640851,"byte_end":640866,"line_start":81,"line_end":81,"column_start":17,"column_end":32},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":8042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\lookup.rs","byte_start":643160,"byte_end":643174,"line_start":155,"line_end":155,"column_start":36,"column_end":50},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":8079},"to":{"krate":0,"index":1897}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":654955,"byte_end":654963,"line_start":302,"line_end":302,"column_start":17,"column_end":25},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":8269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":656927,"byte_end":656936,"line_start":360,"line_end":360,"column_start":17,"column_end":26},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":8118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":678127,"byte_end":678137,"line_start":865,"line_end":865,"column_start":17,"column_end":27},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":8424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":679471,"byte_end":679484,"line_start":905,"line_end":905,"column_start":17,"column_end":30},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":8451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\op.rs","byte_start":682775,"byte_end":682785,"line_start":998,"line_end":998,"column_start":17,"column_end":27},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":8463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":781539,"byte_end":781552,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":8479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":782143,"byte_end":782156,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":8479},"to":{"krate":0,"index":1916}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":782680,"byte_end":782693,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":8490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":783532,"byte_end":783545,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":8490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784245,"byte_end":784258,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":8490},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784421,"byte_end":784434,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":8490},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":784863,"byte_end":784880,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":8500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubnames.rs","byte_start":785476,"byte_end":785493,"line_start":134,"line_end":134,"column_start":57,"column_end":74},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":8500},"to":{"krate":25,"index":59}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":786140,"byte_end":786153,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":8510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":786780,"byte_end":786793,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":8510},"to":{"krate":0,"index":1916}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":787313,"byte_end":787326,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":8521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788149,"byte_end":788162,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":8521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":788862,"byte_end":788875,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":8521},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789038,"byte_end":789051,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":8521},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":789480,"byte_end":789497,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":8531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\pubtypes.rs","byte_start":790093,"byte_end":790110,"line_start":134,"line_end":134,"column_start":57,"column_end":74},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":8531},"to":{"krate":25,"index":59}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":790791,"byte_end":790802,"line_start":17,"line_end":17,"column_start":22,"column_end":33},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":8541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791612,"byte_end":791623,"line_start":40,"line_end":40,"column_start":24,"column_end":35},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":8541},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":791774,"byte_end":791785,"line_start":50,"line_end":50,"column_start":21,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":8541},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792068,"byte_end":792081,"line_start":63,"line_end":63,"column_start":22,"column_end":35},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":8555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":792919,"byte_end":792932,"line_start":87,"line_end":87,"column_start":24,"column_end":37},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":8555},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":793085,"byte_end":793098,"line_start":97,"line_end":97,"column_start":21,"column_end":34},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":8555},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":793308,"byte_end":793322,"line_start":109,"line_end":109,"column_start":18,"column_end":32},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":8569},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":793586,"byte_end":793600,"line_start":122,"line_end":122,"column_start":6,"column_end":20},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":8569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":794900,"byte_end":794910,"line_start":168,"line_end":168,"column_start":9,"column_end":19},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":8577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":795239,"byte_end":795249,"line_start":179,"line_end":179,"column_start":9,"column_end":19},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":8577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":796186,"byte_end":796196,"line_start":206,"line_end":206,"column_start":17,"column_end":27},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":8577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":800872,"byte_end":800887,"line_start":358,"line_end":358,"column_start":23,"column_end":38},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":8599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":803276,"byte_end":803290,"line_start":409,"line_end":409,"column_start":17,"column_end":31},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":8592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":804089,"byte_end":804103,"line_start":437,"line_end":437,"column_start":57,"column_end":71},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":8592},"to":{"krate":25,"index":59}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":804750,"byte_end":804761,"line_start":459,"line_end":459,"column_start":17,"column_end":28},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":8629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":807318,"byte_end":807329,"line_start":532,"line_end":532,"column_start":57,"column_end":68},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":8629},"to":{"krate":25,"index":59}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":807790,"byte_end":807798,"line_start":551,"line_end":551,"column_start":6,"column_end":14},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":8638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\rnglists.rs","byte_start":809014,"byte_end":809019,"line_start":590,"line_end":590,"column_start":6,"column_end":11},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":8656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":832319,"byte_end":832327,"line_start":15,"line_end":15,"column_start":22,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":8674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833126,"byte_end":833134,"line_start":38,"line_end":38,"column_start":17,"column_end":25},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":8674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":833901,"byte_end":833909,"line_start":58,"line_end":58,"column_start":9,"column_end":17},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":8674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834729,"byte_end":834737,"line_start":82,"line_end":82,"column_start":24,"column_end":32},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":8674},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":834895,"byte_end":834903,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":8674},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":835165,"byte_end":835180,"line_start":104,"line_end":104,"column_start":17,"column_end":32},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":8688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":836536,"byte_end":836551,"line_start":136,"line_end":136,"column_start":9,"column_end":24},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":8688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837382,"byte_end":837397,"line_start":160,"line_end":160,"column_start":24,"column_end":39},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":8688},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837552,"byte_end":837567,"line_start":170,"line_end":170,"column_start":21,"column_end":36},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":8688},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":837858,"byte_end":837870,"line_start":183,"line_end":183,"column_start":17,"column_end":29},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":8702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":838176,"byte_end":838188,"line_start":192,"line_end":192,"column_start":9,"column_end":21},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":8702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":839010,"byte_end":839022,"line_start":216,"line_end":216,"column_start":24,"column_end":36},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":8702},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\str.rs","byte_start":839174,"byte_end":839186,"line_start":226,"line_end":226,"column_start":21,"column_end":33},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":8702},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":841624,"byte_end":841640,"line_start":21,"line_end":21,"column_start":23,"column_end":39},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":842284,"byte_end":842299,"line_start":40,"line_end":40,"column_start":23,"column_end":38},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":843117,"byte_end":843127,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":8716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844057,"byte_end":844066,"line_start":90,"line_end":90,"column_start":22,"column_end":31},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":8749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":844875,"byte_end":844884,"line_start":113,"line_end":113,"column_start":17,"column_end":26},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":8749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846142,"byte_end":846151,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":8749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":846975,"byte_end":846984,"line_start":176,"line_end":176,"column_start":24,"column_end":33},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":8749},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":847144,"byte_end":847153,"line_start":186,"line_end":186,"column_start":21,"column_end":30},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":8749},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":847585,"byte_end":847611,"line_start":202,"line_end":202,"column_start":17,"column_end":43},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":8763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":848324,"byte_end":848350,"line_start":224,"line_end":224,"column_start":57,"column_end":83},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":8763},"to":{"krate":25,"index":59}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":848895,"byte_end":848916,"line_start":244,"line_end":244,"column_start":17,"column_end":38},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":8773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":856685,"byte_end":856695,"line_start":488,"line_end":488,"column_start":17,"column_end":27},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":8804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":857617,"byte_end":857627,"line_start":521,"line_end":521,"column_start":17,"column_end":27},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":8804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":865248,"byte_end":865273,"line_start":747,"line_end":747,"column_start":33,"column_end":58},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":8837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":880833,"byte_end":880842,"line_start":1200,"line_end":1200,"column_start":17,"column_end":26},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":9023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":902788,"byte_end":902802,"line_start":1873,"line_end":1873,"column_start":17,"column_end":31},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":8859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":919645,"byte_end":919654,"line_start":2280,"line_end":2280,"column_start":41,"column_end":50},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":9046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":921239,"byte_end":921248,"line_start":2322,"line_end":2322,"column_start":9,"column_end":18},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":9046},"to":{"krate":25,"index":59}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":923960,"byte_end":923970,"line_start":2397,"line_end":2397,"column_start":33,"column_end":43},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":9071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":926696,"byte_end":926709,"line_start":2473,"line_end":2473,"column_start":33,"column_end":46},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":9089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":939706,"byte_end":939717,"line_start":2859,"line_end":2859,"column_start":33,"column_end":44},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":9108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":943894,"byte_end":943909,"line_start":2984,"line_end":2984,"column_start":40,"column_end":55},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":9128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":945119,"byte_end":945134,"line_start":3020,"line_end":3020,"column_start":40,"column_end":55},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":9141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":946534,"byte_end":946544,"line_start":3065,"line_end":3065,"column_start":22,"column_end":32},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":9155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":947355,"byte_end":947365,"line_start":3088,"line_end":3088,"column_start":9,"column_end":19},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":9155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948193,"byte_end":948203,"line_start":3112,"line_end":3112,"column_start":24,"column_end":34},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":9155},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948365,"byte_end":948375,"line_start":3122,"line_end":3122,"column_start":21,"column_end":31},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":9155},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":948516,"byte_end":948526,"line_start":3130,"line_end":3130,"column_start":17,"column_end":27},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":9155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":949687,"byte_end":949706,"line_start":3167,"line_end":3167,"column_start":17,"column_end":36},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":9169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":950411,"byte_end":950430,"line_start":3189,"line_end":3189,"column_start":57,"column_end":76},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":9169},"to":{"krate":25,"index":59}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\unit.rs","byte_start":951025,"byte_end":951039,"line_start":3211,"line_end":3211,"column_start":17,"column_end":31},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":9179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1052694,"byte_end":1052703,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":9212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\value.rs","byte_start":1055479,"byte_end":1055484,"line_start":151,"line_end":151,"column_start":6,"column_end":11},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":9246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":93869,"byte_end":93874,"line_start":388,"line_end":388,"column_start":23,"column_end":28},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":9289},"to":{"krate":1,"index":9914}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":94035,"byte_end":94040,"line_start":395,"line_end":395,"column_start":6,"column_end":11},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":9289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102039,"byte_end":102044,"line_start":534,"line_end":534,"column_start":23,"column_end":28},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":9289},"to":{"krate":5,"index":2518}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102098,"byte_end":102103,"line_start":537,"line_end":537,"column_start":26,"column_end":31},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":9289},"to":{"krate":1,"index":3056}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":102677,"byte_end":102681,"line_start":558,"line_end":558,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":3056},"to":{"krate":0,"index":2902}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\read\\mod.rs","byte_start":103517,"byte_end":103525,"line_start":591,"line_end":591,"column_start":6,"column_end":14},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1138477,"byte_end":1138486,"line_start":19,"line_end":19,"column_start":14,"column_end":23},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":9452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\endian_vec.rs","byte_start":1139187,"byte_end":1139196,"line_start":49,"line_end":49,"column_start":25,"column_end":34},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":9452},"to":{"krate":0,"index":2989}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1160047,"byte_end":1160055,"line_start":57,"line_end":57,"column_start":31,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":3382},"to":{"krate":0,"index":3079}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1161559,"byte_end":1161567,"line_start":100,"line_end":100,"column_start":25,"column_end":33},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":9470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\section.rs","byte_start":1162456,"byte_end":1162464,"line_start":122,"line_end":122,"column_start":17,"column_end":25},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":9470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\abbrev.rs","byte_start":1164574,"byte_end":1164591,"line_start":19,"line_end":19,"column_start":6,"column_end":23},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":9492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\abbrev.rs","byte_start":1165532,"byte_end":1165544,"line_start":47,"line_end":47,"column_start":6,"column_end":18},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":9498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\abbrev.rs","byte_start":1166604,"byte_end":1166626,"line_start":87,"line_end":87,"column_start":6,"column_end":28},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":9516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1170972,"byte_end":1170982,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":9632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1174412,"byte_end":1174434,"line_start":131,"line_end":131,"column_start":6,"column_end":28},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":9640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1179418,"byte_end":1179439,"line_start":286,"line_end":286,"column_start":6,"column_end":27},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":9664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1184021,"byte_end":1184041,"line_start":415,"line_end":415,"column_start":6,"column_end":26},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":9681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1191288,"byte_end":1191298,"line_start":594,"line_end":594,"column_start":10,"column_end":20},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":9632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1193557,"byte_end":1193579,"line_start":645,"line_end":645,"column_start":10,"column_end":32},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":9640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1195622,"byte_end":1195643,"line_start":696,"line_end":696,"column_start":10,"column_end":31},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":9664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\cfi.rs","byte_start":1197368,"byte_end":1197388,"line_start":741,"line_end":741,"column_start":10,"column_end":30},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":9681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1210970,"byte_end":1210975,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":9745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1212205,"byte_end":1212214,"line_start":67,"line_end":67,"column_start":6,"column_end":15},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":9754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\dwarf.rs","byte_start":1213732,"byte_end":1213737,"line_start":113,"line_end":113,"column_start":10,"column_end":15},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":9745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1217592,"byte_end":1217603,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":9760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1239815,"byte_end":1239822,"line_start":705,"line_end":705,"column_start":6,"column_end":13},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":9778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1240974,"byte_end":1240989,"line_start":755,"line_end":755,"column_start":6,"column_end":21},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":9795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1243835,"byte_end":1243845,"line_start":826,"line_end":826,"column_start":6,"column_end":16},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":9846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1246325,"byte_end":1246331,"line_start":905,"line_end":905,"column_start":10,"column_end":16},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":9888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1248015,"byte_end":1248026,"line_start":969,"line_end":969,"column_start":10,"column_end":21},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":9760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\line.rs","byte_start":1255914,"byte_end":1255924,"line_start":1127,"line_end":1127,"column_start":10,"column_end":20},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":9846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1292099,"byte_end":1292116,"line_start":39,"line_end":39,"column_start":6,"column_end":23},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":10034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\loc.rs","byte_start":1301758,"byte_end":1301770,"line_start":304,"line_end":304,"column_start":10,"column_end":22},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":10041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1313516,"byte_end":1313526,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":10089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1330115,"byte_end":1330124,"line_start":477,"line_end":477,"column_start":6,"column_end":15},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":10107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\op.rs","byte_start":1343119,"byte_end":1343129,"line_start":798,"line_end":798,"column_start":10,"column_end":20},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":10089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1382576,"byte_end":1382590,"line_start":36,"line_end":36,"column_start":6,"column_end":20},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":10286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\range.rs","byte_start":1389391,"byte_end":1389400,"line_start":220,"line_end":220,"column_start":10,"column_end":19},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":10293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1405098,"byte_end":1405107,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":10514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1409070,"byte_end":1409074,"line_start":169,"line_end":169,"column_start":6,"column_end":10},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":10521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1416972,"byte_end":1416997,"line_start":427,"line_end":427,"column_start":6,"column_end":31},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":10531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1424517,"byte_end":1424526,"line_start":681,"line_end":681,"column_start":6,"column_end":15},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":10540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1430816,"byte_end":1430830,"line_start":869,"line_end":869,"column_start":6,"column_end":20},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":10554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1452095,"byte_end":1452111,"line_start":1379,"line_end":1379,"column_start":6,"column_end":22},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":10701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1453024,"byte_end":1453035,"line_start":1409,"line_end":1409,"column_start":6,"column_end":17},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":10708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1454133,"byte_end":1454144,"line_start":1449,"line_end":1449,"column_start":6,"column_end":17},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":10714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1455882,"byte_end":1455891,"line_start":1502,"line_end":1502,"column_start":10,"column_end":19},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":10514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1457945,"byte_end":1457949,"line_start":1552,"line_end":1552,"column_start":10,"column_end":14},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":10521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1461767,"byte_end":1461792,"line_start":1658,"line_end":1658,"column_start":10,"column_end":35},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":10531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1464118,"byte_end":1464127,"line_start":1715,"line_end":1715,"column_start":10,"column_end":19},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":10540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\unit.rs","byte_start":1464611,"byte_end":1464625,"line_start":1729,"line_end":1729,"column_start":10,"column_end":24},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":10554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1129252,"byte_end":1129257,"line_start":203,"line_end":203,"column_start":23,"column_end":28},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":10732},"to":{"krate":1,"index":9914}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1131794,"byte_end":1131799,"line_start":258,"line_end":258,"column_start":23,"column_end":28},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":10732},"to":{"krate":5,"index":2518}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1133203,"byte_end":1133209,"line_start":305,"line_end":305,"column_start":18,"column_end":24},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":10832},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1135337,"byte_end":1135349,"line_start":361,"line_end":361,"column_start":27,"column_end":39},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":10850},"to":{"krate":1,"index":9914}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1137781,"byte_end":1137793,"line_start":410,"line_end":410,"column_start":27,"column_end":39},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":10850},"to":{"krate":5,"index":2518}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gimli-0.21.0\\src\\write\\mod.rs","byte_start":1137829,"byte_end":1137841,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":10850},"to":{"krate":1,"index":3056}}]}