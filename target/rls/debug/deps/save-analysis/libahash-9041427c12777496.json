{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7","program":"C:\\Users\\EdsoLabs\\.rustup\\toolchains\\stable-x86_64-pc-windows-gnu\\bin\\rls.exe","arguments":["--crate-name","ahash","--edition=2018","C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9041427c12777496","-C","extra-filename=-9041427c12777496","--out-dir","d:\\Work\\add_node_and_voting\\target\\rls\\debug\\deps","-L","dependency=d:\\Work\\add_node_and_voting\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\EdsoLabs\\.rustup/toolchains/stable-x86_64-pc-windows-gnu"],"output":"d:\\Work\\add_node_and_voting\\target\\rls\\debug\\deps\\libahash-9041427c12777496.rmeta"},"prelude":{"crate_id":{"name":"ahash","disambiguator":[617385726949427762,0]},"crate_root":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src","external_crates":[{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","num":1,"id":{"name":"core","disambiguator":[3349811929551758155,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[1702804679386379989,0]}},{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[15672416423928090423,0]}}],"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":0,"byte_end":6476,"line_start":1,"line_end":203,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":1560,"byte_end":1567,"line_start":42,"line_end":42,"column_start":31,"column_end":38},"alias_span":null,"name":"AHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":1598,"byte_end":1609,"line_start":43,"line_end":43,"column_start":30,"column_end":41},"alias_span":null,"name":"RandomState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":1639,"byte_end":1649,"line_start":45,"line_end":45,"column_start":28,"column_end":38},"alias_span":null,"name":"CallHasher","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":0,"byte_end":6476,"line_start":1,"line_end":203,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":44},{"krate":0,"index":69},{"krate":0,"index":84},{"krate":0,"index":122},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":156}],"decl_id":null,"docs":" # aHash","sig":null,"attributes":[{"value":"/ # aHash","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":0,"byte_end":11,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":12,"byte_end":15,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This hashing algorithm is intended to be a high performance, (hardware specific), keyed hash function.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":16,"byte_end":122,"line_start":3,"line_end":3,"column_start":1,"column_end":107}},{"value":"/ This can be seen as a DOS resistant alternative to `FxHash`, or a fast equivalent to `SipHash`.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":123,"byte_end":222,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ It provides a high speed hash algorithm, but where the result is not predictable without knowing a Key.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":223,"byte_end":330,"line_start":5,"line_end":5,"column_start":1,"column_end":108}},{"value":"/ This allows it to be used in a `HashMap` without allowing for the possibility that an malicious user can","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":331,"byte_end":439,"line_start":6,"line_end":6,"column_start":1,"column_end":109}},{"value":"/ induce a collision.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":440,"byte_end":463,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":464,"byte_end":467,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # How aHash works","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":468,"byte_end":489,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":490,"byte_end":493,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ aHash uses the hardware AES instruction on x86 processors to provide a keyed hash function.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":494,"byte_end":589,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ aHash is not a cryptographically secure hash.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":590,"byte_end":639,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"deny(clippy :: correctness, clippy :: complexity, clippy :: perf)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":640,"byte_end":703,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"allow(clippy :: pedantic, clippy :: cast_lossless, clippy ::\nunreadable_literal)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":704,"byte_end":782,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"no_std","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":833,"byte_end":839,"line_start":15,"line_end":15,"column_start":51,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":12216,"byte_end":12223,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"AHasher","qualname":"::fallback_hash::AHasher","value":"AHasher {  }","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703}],"decl_id":null,"docs":" A `Hasher` for hashing an arbitrary stream of bytes.","sig":null,"attributes":[{"value":"/ A `Hasher` for hashing an arbitrary stream of bytes.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":11722,"byte_end":11778,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":11779,"byte_end":11782,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Instances of [`AHasher`] represent state that is updated while hashing data.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":11783,"byte_end":11863,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":11864,"byte_end":11867,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Each method updates the internal state based on the new data provided. Once","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":11868,"byte_end":11947,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ all of the data has been provided, the resulting hash can be obtained by calling","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":11948,"byte_end":12032,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ `finish()`","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":12033,"byte_end":12047,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":12048,"byte_end":12051,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [Clone] is also provided in case you wish to calculate hashes for two different items that","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":12052,"byte_end":12146,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/ start with the same data.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":12147,"byte_end":12176,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":12177,"byte_end":12180,"line_start":21,"line_end":21,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":12453,"byte_end":12466,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<AHasher>::new_with_keys","value":"fn new_with_keys(u128, u128) -> AHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hasher keyed to the provided key.\n","sig":null,"attributes":[{"value":"/ Creates a new hasher keyed to the provided key.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":12305,"byte_end":12356,"line_start":30,"line_end":30,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":12361,"byte_end":12370,"line_start":31,"line_end":31,"column_start":5,"column_end":14}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":12375,"byte_end":12394,"line_start":32,"line_end":32,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17419,"byte_end":17427,"line_start":123,"line_end":123,"column_start":8,"column_end":16},"name":"write_u8","qualname":"<AHasher as core::hash::Hasher>::write_u8","value":"fn write_u8(&mut Self, u8)","parent":{"krate":1,"index":10130},"children":[],"decl_id":{"krate":1,"index":10133},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17402,"byte_end":17411,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17507,"byte_end":17516,"line_start":128,"line_end":128,"column_start":8,"column_end":17},"name":"write_u16","qualname":"<AHasher as core::hash::Hasher>::write_u16","value":"fn write_u16(&mut Self, u16)","parent":{"krate":1,"index":10130},"children":[],"decl_id":{"krate":1,"index":10134},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17490,"byte_end":17499,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17597,"byte_end":17606,"line_start":133,"line_end":133,"column_start":8,"column_end":17},"name":"write_u32","qualname":"<AHasher as core::hash::Hasher>::write_u32","value":"fn write_u32(&mut Self, u32)","parent":{"krate":1,"index":10130},"children":[],"decl_id":{"krate":1,"index":10135},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17580,"byte_end":17589,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17687,"byte_end":17696,"line_start":138,"line_end":138,"column_start":8,"column_end":17},"name":"write_u64","qualname":"<AHasher as core::hash::Hasher>::write_u64","value":"fn write_u64(&mut Self, u64)","parent":{"krate":1,"index":10130},"children":[],"decl_id":{"krate":1,"index":10136},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17670,"byte_end":17679,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17777,"byte_end":17787,"line_start":143,"line_end":143,"column_start":8,"column_end":18},"name":"write_u128","qualname":"<AHasher as core::hash::Hasher>::write_u128","value":"fn write_u128(&mut Self, u128)","parent":{"krate":1,"index":10130},"children":[],"decl_id":{"krate":1,"index":10137},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17760,"byte_end":17769,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17940,"byte_end":17951,"line_start":150,"line_end":150,"column_start":8,"column_end":19},"name":"write_usize","qualname":"<AHasher as core::hash::Hasher>::write_usize","value":"fn write_usize(&mut Self, usize)","parent":{"krate":1,"index":10130},"children":[],"decl_id":{"krate":1,"index":10138},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17923,"byte_end":17932,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":18074,"byte_end":18079,"line_start":156,"line_end":156,"column_start":8,"column_end":13},"name":"write","qualname":"<AHasher as core::hash::Hasher>::write","value":"fn write(&mut Self, &[u8])","parent":{"krate":1,"index":10130},"children":[],"decl_id":{"krate":1,"index":10132},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":18020,"byte_end":18029,"line_start":154,"line_end":154,"column_start":5,"column_end":14}},{"value":"allow(clippy :: collapsible_if)","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":18034,"byte_end":18066,"line_start":155,"line_end":155,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":19503,"byte_end":19509,"line_start":191,"line_end":191,"column_start":8,"column_end":14},"name":"finish","qualname":"<AHasher as core::hash::Hasher>::finish","value":"fn finish(&Self) -> u64","parent":{"krate":1,"index":10130},"children":[],"decl_id":{"krate":1,"index":10131},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":19486,"byte_end":19495,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":31207,"byte_end":31218,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"RandomState","qualname":"::random_state::RandomState","value":"RandomState {  }","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713}],"decl_id":null,"docs":" Provides a [Hasher] factory. This is typically used (e.g. by [HashMap]) to create\n [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","sig":null,"attributes":[{"value":"/ Provides a [Hasher] factory. This is typically used (e.g. by [HashMap]) to create","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":30867,"byte_end":30952,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":30953,"byte_end":31031,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":31032,"byte_end":31035,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [build_hasher]: ahash::","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":31036,"byte_end":31063,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/ [Hasher]: std::hash::Hasher","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":31064,"byte_end":31095,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ [BuildHasher]: std::hash::BuildHasher","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":31096,"byte_end":31137,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ [HashMap]: std::collections::HashMap","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":31138,"byte_end":31178,"line_start":35,"line_end":35,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":31361,"byte_end":31364,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RandomState as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9907},"children":[],"decl_id":{"krate":1,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":31506,"byte_end":31509,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<RandomState>::new","value":"fn new() -> RandomState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":31485,"byte_end":31494,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":32303,"byte_end":32313,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"name":"with_seeds","qualname":"<RandomState>::with_seeds","value":"const fn with_seeds(u64, u64) -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Allows for explicitly setting the seeds to used.\n","sig":null,"attributes":[{"value":"/ Allows for explicitly setting the seeds to used.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":32233,"byte_end":32285,"line_start":67,"line_end":67,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33318,"byte_end":33325,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"default","qualname":"<RandomState as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33301,"byte_end":33310,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34736,"byte_end":34748,"line_start":135,"line_end":135,"column_start":8,"column_end":20},"name":"build_hasher","qualname":"<RandomState as core::hash::BuildHasher>::build_hasher","value":"fn build_hasher(&Self) -> AHasher","parent":{"krate":1,"index":10165},"children":[],"decl_id":{"krate":1,"index":10167},"docs":" Constructs a new [AHasher] with keys based on compile time generated constants** and the location\n this object was constructed at in memory. This means that two different [BuildHasher]s will will generate\n [AHasher]s that will return different hashcodes, but [Hasher]s created from the same [BuildHasher]\n will generate the same hashes for the same input data.","sig":null,"attributes":[{"value":"/ Constructs a new [AHasher] with keys based on compile time generated constants** and the location","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33434,"byte_end":33535,"line_start":104,"line_end":104,"column_start":5,"column_end":106}},{"value":"/ this object was constructed at in memory. This means that two different [BuildHasher]s will will generate","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33540,"byte_end":33649,"line_start":105,"line_end":105,"column_start":5,"column_end":114}},{"value":"/ [AHasher]s that will return different hashcodes, but [Hasher]s created from the same [BuildHasher]","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33654,"byte_end":33756,"line_start":106,"line_end":106,"column_start":5,"column_end":107}},{"value":"/ will generate the same hashes for the same input data.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33761,"byte_end":33819,"line_start":107,"line_end":107,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33824,"byte_end":33827,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ** - only if the `compile-time-rng` feature is enabled.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33832,"byte_end":33891,"line_start":109,"line_end":109,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33896,"byte_end":33899,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33904,"byte_end":33918,"line_start":111,"line_end":111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33923,"byte_end":33926,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33931,"byte_end":33938,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use ahash::{AHasher, RandomState};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33943,"byte_end":33981,"line_start":114,"line_end":114,"column_start":5,"column_end":43}},{"value":"/ use std::hash::{Hasher, BuildHasher};","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33986,"byte_end":34027,"line_start":115,"line_end":115,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34032,"byte_end":34035,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let build_hasher = RandomState::new();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34040,"byte_end":34082,"line_start":117,"line_end":117,"column_start":5,"column_end":47}},{"value":"/ let mut hasher_1 = build_hasher.build_hasher();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34087,"byte_end":34138,"line_start":118,"line_end":118,"column_start":5,"column_end":56}},{"value":"/ let mut hasher_2 = build_hasher.build_hasher();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34143,"byte_end":34194,"line_start":119,"line_end":119,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34199,"byte_end":34202,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ hasher_1.write_u32(1234);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34207,"byte_end":34236,"line_start":121,"line_end":121,"column_start":5,"column_end":34}},{"value":"/ hasher_2.write_u32(1234);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34241,"byte_end":34270,"line_start":122,"line_end":122,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34275,"byte_end":34278,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(hasher_1.finish(), hasher_2.finish());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34283,"byte_end":34336,"line_start":124,"line_end":124,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34341,"byte_end":34344,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let other_build_hasher = RandomState::new();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34349,"byte_end":34397,"line_start":126,"line_end":126,"column_start":5,"column_end":53}},{"value":"/ let mut different_hasher = other_build_hasher.build_hasher();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34402,"byte_end":34467,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ different_hasher.write_u32(1234);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34472,"byte_end":34509,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/ assert_ne!(different_hasher.finish(), hasher_1.finish());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34514,"byte_end":34575,"line_start":129,"line_end":129,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34580,"byte_end":34587,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ [Hasher]: std::hash::Hasher","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34592,"byte_end":34623,"line_start":131,"line_end":131,"column_start":5,"column_end":36}},{"value":"/ [BuildHasher]: std::hash::BuildHasher","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34628,"byte_end":34669,"line_start":132,"line_end":132,"column_start":5,"column_end":46}},{"value":"/ [HashMap]: std::collections::HashMap","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34674,"byte_end":34714,"line_start":133,"line_end":133,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":34719,"byte_end":34728,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35848,"byte_end":35858,"line_start":20,"line_end":20,"column_start":11,"column_end":21},"name":"CallHasher","qualname":"::specialize::CallHasher","value":"CallHasher: Hash","parent":null,"children":[{"krate":0,"index":130}],"decl_id":null,"docs":" Provides a way to get an optimized hasher for a given data type.\n Rather than using a Hasher generically which can hash any value, this provides a way to get a specialized hash\n for a specific type. So this may be faster for primitive types. It does however consume the hasher in the process.\n #Example\n ```\n use std::hash::BuildHasher;\n use ahash::RandomState;\n use ahash::CallHasher;","sig":null,"attributes":[{"value":"/ Provides a way to get an optimized hasher for a given data type.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35282,"byte_end":35350,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ Rather than using a Hasher generically which can hash any value, this provides a way to get a specialized hash","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35351,"byte_end":35465,"line_start":7,"line_end":7,"column_start":1,"column_end":115}},{"value":"/ for a specific type. So this may be faster for primitive types. It does however consume the hasher in the process.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35466,"byte_end":35584,"line_start":8,"line_end":8,"column_start":1,"column_end":119}},{"value":"/ #Example","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35585,"byte_end":35597,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35598,"byte_end":35605,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ use std::hash::BuildHasher;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35606,"byte_end":35637,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/ use ahash::RandomState;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35638,"byte_end":35665,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/ use ahash::CallHasher;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35666,"byte_end":35692,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35693,"byte_end":35696,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let hash_builder = RandomState::new();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35697,"byte_end":35739,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ //...","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35740,"byte_end":35749,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ let value = 17;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35750,"byte_end":35769,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/ let hash = value.get_hash(hash_builder.build_hasher());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35770,"byte_end":35829,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35830,"byte_end":35837,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35874,"byte_end":35882,"line_start":21,"line_end":21,"column_start":8,"column_end":16},"name":"get_hash","qualname":"::specialize::CallHasher::get_hash","value":"fn get_hash<H>(&Self, H) -> u64 where H: Hasher","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":36026,"byte_end":36034,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"get_hash","qualname":"<T as specialize::CallHasher>::get_hash","value":"fn get_hash<H>(&Self, H) -> u64 where H: Hasher","parent":{"krate":0,"index":129},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":36009,"byte_end":36018,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4490,"byte_end":4497,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"default","qualname":"<AHasher as core::default::Default>::default","value":"fn default() -> AHasher","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":" Constructs a new [AHasher] with compile time generated constants for keys if the \n `compile-time-rng`feature is enabled. Otherwise the keys will be fixed constants.\n This means the keys will be the same from one instance to another,\n but different from build to the next. So if it is possible for a potential\n attacker to have access to the compiled binary it would be better\n to specify keys generated at runtime.","sig":null,"attributes":[{"value":"/ Constructs a new [AHasher] with compile time generated constants for keys if the ","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":3607,"byte_end":3692,"line_start":103,"line_end":103,"column_start":5,"column_end":90}},{"value":"/ `compile-time-rng`feature is enabled. Otherwise the keys will be fixed constants.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":3697,"byte_end":3782,"line_start":104,"line_end":104,"column_start":5,"column_end":90}},{"value":"/ This means the keys will be the same from one instance to another,","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":3787,"byte_end":3857,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ but different from build to the next. So if it is possible for a potential","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":3862,"byte_end":3940,"line_start":106,"line_end":106,"column_start":5,"column_end":83}},{"value":"/ attacker to have access to the compiled binary it would be better","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":3945,"byte_end":4014,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/ to specify keys generated at runtime.","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4019,"byte_end":4060,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4065,"byte_end":4068,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4073,"byte_end":4087,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4092,"byte_end":4095,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4100,"byte_end":4107,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use ahash::AHasher;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4112,"byte_end":4135,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/ use std::hash::Hasher;","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4140,"byte_end":4166,"line_start":114,"line_end":114,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4171,"byte_end":4174,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut hasher_1 = AHasher::default();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4179,"byte_end":4221,"line_start":116,"line_end":116,"column_start":5,"column_end":47}},{"value":"/ let mut hasher_2 = AHasher::default();","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4226,"byte_end":4268,"line_start":117,"line_end":117,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4273,"byte_end":4276,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ hasher_1.write_u32(1234);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4281,"byte_end":4310,"line_start":119,"line_end":119,"column_start":5,"column_end":34}},{"value":"/ hasher_2.write_u32(1234);","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4315,"byte_end":4344,"line_start":120,"line_end":120,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4349,"byte_end":4352,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(hasher_1.finish(), hasher_2.finish());","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4357,"byte_end":4410,"line_start":122,"line_end":122,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4415,"byte_end":4422,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4427,"byte_end":4436,"line_start":124,"line_end":124,"column_start":5,"column_end":14}},{"value":"cfg(not(feature = \"compile-time-rng\"))","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4441,"byte_end":4482,"line_start":125,"line_end":125,"column_start":5,"column_end":46}}]}],"impls":[{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":12291,"byte_end":12298,"line_start":29,"line_end":29,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17388,"byte_end":17395,"line_start":121,"line_end":121,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":31340,"byte_end":31351,"line_start":44,"line_end":44,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":31467,"byte_end":31478,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33283,"byte_end":33294,"line_start":94,"line_end":94,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33388,"byte_end":33399,"line_start":101,"line_end":101,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35982,"byte_end":35983,"line_start":25,"line_end":25,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":2603,"byte_end":2610,"line_start":74,"line_end":74,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":5001,"byte_end":5002,"line_start":142,"line_end":142,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":12291,"byte_end":12298,"line_start":29,"line_end":29,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\fallback_hash.rs","byte_start":17388,"byte_end":17395,"line_start":121,"line_end":121,"column_start":17,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":700},"to":{"krate":1,"index":10130}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":31340,"byte_end":31351,"line_start":44,"line_end":44,"column_start":21,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":709},"to":{"krate":1,"index":9907}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":31467,"byte_end":31478,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33283,"byte_end":33294,"line_start":94,"line_end":94,"column_start":18,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":709},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\random_state.rs","byte_start":33388,"byte_end":33399,"line_start":101,"line_end":101,"column_start":22,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":709},"to":{"krate":1,"index":10165}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35860,"byte_end":35864,"line_start":20,"line_end":20,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":10120},"to":{"krate":0,"index":129}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src\\specialize.rs","byte_start":35982,"byte_end":35983,"line_start":25,"line_end":25,"column_start":24,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":133},"to":{"krate":0,"index":129}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":2603,"byte_end":2610,"line_start":74,"line_end":74,"column_start":18,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":700},"to":{"krate":1,"index":3128}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":4843,"byte_end":4849,"line_start":134,"line_end":134,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":10130},"to":{"krate":0,"index":153}},{"span":{"file_name":"C:\\Users\\EdsoLabs\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.7\\src/lib.rs","byte_start":5001,"byte_end":5002,"line_start":142,"line_end":142,"column_start":31,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":157},"to":{"krate":0,"index":153}}]}